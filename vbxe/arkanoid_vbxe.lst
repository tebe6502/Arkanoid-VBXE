mads 2.1.8 build 10 (6 Jul 25)
D:\!Delphi\Arkanoid\vbxe\arkanoid_vbxe.a65 -hm -xli:d:\!Delphi\MadPascal\base 
Source: arkanoid_vbxe.a65
     1 				; ------------------------------------------------------------
     2 				; Mad Pascal Compiler version 1.7.3 [2025/08/06] for MOS 6502 CPU
     3 				; ------------------------------------------------------------
     4
     5 = 0010			STACKWIDTH	= 16
     6 = 1000			CODEORIGIN	= $1000
     7
     8 = 0001			TRUE		= 1
     9 = 0000			FALSE		= 0
    10 = 009B			EOL		= $9B
    11 = 0400			__BUFFER	= $0400
    12 = 0400			@BUF		= __BUFFER
    13
    14 				; ------------------------------------------------------------
    15
    16 					org $80
    17
    18 				zpage
    19
    20 				.if .def(@vbxe_detect)
    21 = 0080			fxptr	.ds 2						; VBXE pointer
    22 				.fi
    23
    24 				.if .def(@AllocMem)||.def(MAIN.SYSTEM.GETMEM)||.def(MAIN.SYSTEM.FREEMEM)
    25 				psptr	.ds 2						; PROGRAMSTACK Pointer
    26 				.fi
    27
    28 = 0082			bp	.ds 2
    29 = 0084			bp2	.ds 2
    30 = 0083			bp3	= bp+1
    31
    32 = 0086			eax	.ds 4						;8 bytes (aex + edx) -> divREAL
    33 = 008A			edx	.ds 4
    34 = 008E			ecx	.ds 4
    35
    36 				TMP
    37 				ztmp
    38 = 0092			ztmp8	.ds 1
    39 = 0093			ztmp9	.ds 1
    40 = 0094			ztmp10	.ds 1
    41 = 0095			ztmp11	.ds 1
    42
    43 = 0096			STACKORIGIN	.ds STACKWIDTH*4
    44 				zpend
    45
    46 				; ------------------------------------------------------------
    47
    48 = 0086			ax	= eax
    49 = 0086			al	= eax
    50 = 0087			ah	= eax+1
    51
    52 = 008E			cx	= ecx
    53 = 008E			cl	= ecx
    54 = 008F			ch	= ecx+1
    55
    56 = 008A			dx	= edx
    57 = 008A			dl	= edx
    58 = 008B			dh	= edx+1
    59
    60 					org eax
    61
    62 = 0086			FP1MAN0	.ds 1
    63 = 0087			FP1MAN1	.ds 1
    64 = 0088			FP1MAN2	.ds 1
    65 = 0089			FP1MAN3	.ds 1
    66
    67 					org edx
    68
    69 = 008A			FP2MAN0	.ds 1
    70 = 008B			FP2MAN1	.ds 1
    71 = 008C			FP2MAN2	.ds 1
    72 = 008D			FP2MAN3	.ds 1
    73
    74 					org ecx
    75
    76 = 008E			FPMAN0	.ds 1
    77 = 008F			FPMAN1	.ds 1
    78 = 0090			FPMAN2	.ds 1
    79 = 0091			FPMAN3	.ds 1
    80
    81 					org ztmp8
    82
    83 = 0092			FP1SGN	.ds 1
    84 = 0093			FP1EXP	.ds 1
    85
    86 					org ztmp10
    87
    88 = 0094			FP2SGN	.ds 1
    89 = 0095			FP2EXP	.ds 1
    90
    91 					org bp2
    92
    93 = 0084			FPSGN	.ds 1
    94 = 0085			FPEXP	.ds 1
    95
    96 					.ifdef MAIN.@DEFINES.BASICOFF
    97 					org CODEORIGIN
    98 					icl 'atari\basicoff.asm'
    99 					ini CODEORIGIN
   100 					.fi
   101
   102 					.ifdef MAIN.@DEFINES.S_VBXE
   103 					opt h-
   104 					ins 'atari\s_vbxe\sdxld2.obx'
   105 					opt h+
   106 					.fi
   107
   108 				; ------------------------------------------------------------
   109
   110 					org CODEORIGIN
   111
   112 1000				STATICDATA
Macro: STATICDATA [Source: arkanoid_vbxe.a65]
     1 FFFF> 1000-9923> 0B 47 + .by  $0B $47 $61 $6D $65 $20 $50 $61  $75 $73 $65 $64 $00 $00 $00 $00  $00 $00 $AA $00 $00 $AA $00 $00
     2 1018 00 55 AA 00 AA 00 + .by  $00 $55 $AA $00 $AA $00 $00 $00  $AA $00 $AA $00 $AA $AA $00 $00  $AA $AA $AA $00 $55 $55 $55 $00
     3 1030 55 55 FF 00 55 FF + .by  $55 $55 $FF $00 $55 $FF $55 $00  $55 $FF $FF $00 $FF $55 $55 $00  $FF $55 $FF $00 $FF $FF $55 $00
     4 1048 FF FF FF 00 FF D4 + .by  $FF $FF $FF $00 $FF $D4 $D3 $D2  $D1 $D0 $CF $CE $CD $CC $CB $00  $00 $0A $00 $14 $00 $1E $00 $28
     5 1060 00 32 00 64 00 C8 + .by  $00 $32 $00 $64 $00 $C8 $00 $FA  $00 $F4 $01 $E8 $03 $00 $02 $13  $24 $35 $12 $23 $34 $45 $D4 $D3
     6 1078 D2 D1 D0 CF CE CD + .by  $D2 $D1 $D0 $CF $CE $CD $CC $CB  $00 $3C $5D $80 $7D $60 $37 $67  $6A $4F $5F $61 $7F $6F $00 $00
     7 1090 00 E8 03 2C 01 64 + .by  $00 $E8 $03 $2C $01 $64 $00 $3C  $00 $23 $00 $00 $10 $14 $03 $12  $14 $14 $03
Source: arkanoid_vbxe.a65
   113
   114 				; ------------------------------------------------------------
   115
   116 10A3			RTLIB
   117 10A3				icl 'rtl6502_a8.asm'
Source: rtl6502_a8.asm
    64 					opt l+
   118
   119 				.print 'ZPAGE: ',zpage,'..',zpend-1
   119 				ZPAGE: $0080..$00D5
   120
   121 				.print 'RTBUF: ',@buf,'..',@buf+255
   121 				RTBUF: $0400..$04FF
   122
   123 				.print 'RTLIB: ',RTLIB,'..',*-1
   123 				RTLIB: $10A3..$1B32
   124
   125 				; ------------------------------------------------------------
   126
   127 1B33			START
   128 1B33 BA				tsx
   129 1B34 8E BD 98			stx MAIN.@halt+1
   130
   131 					.ifdef MAIN.@DEFINES.ROMOFF
   132 					icl 'atari\romoff.asm'
   133 					.fi
   134
   135 = 0BEE			VLEN	= VARDATASIZE-VARINITSIZE
   136 = 9A7E			VADR	= DATAORIGIN+VARINITSIZE
   137
   138 					ift (VADR > $BFFF) && .not(.def MAIN.@DEFINES.ROMOFF)
   139 					ert 'Invalid memory address range ',VADR
   140 					eif
   141
   142 					ift (VLEN > 0) && (VLEN <= 256)
   143 					ldx #256-VLEN
   144 					lda #$00
   145 					sta:rne VADR+VLEN-256,x+
   146 					eli VLEN>256
   147 1B37				m@init
Macro: M@INIT [Source: macros.asm]
     2 1B37 A0 7E			ldy <VADR
     3 1B39 A2 9A			ldx >VADR
     5 1B3B A9 00			lda #$00
     6 1B3D F0 07			beq skp_
     8 1B3F 99 00 10		clr	sta adr: $1000,y
    10 1B42 C8				iny
    11 1B43 D0 04			bne skp
    12 1B45 E8				inx
    13 1B46 8E 41 1B		skp_	stx adr+1
    15 1B49 E0 A6		skp	cpx >VADR+VLEN
    16 1B4B D0 F2			bne clr
    17 1B4D C0 6C			cpy <VADR+VLEN
    18 1B4F D0 EE			bne clr
   148 					eif
   149
   150 				.ifdef psptr
   151 					mwa #PROGRAMSTACK psptr
   152 				.fi
   153
   154 1B51 A2 00			ldx #$00					; X = 0
   155 1B53 86 82			stx bp						; BP = 0
   156
   157 1B55 8E 08 D2			stx audctl					; reset POKEY
   158 1B58 8E 18 D2			stx audctl+$10
   159 1B5B A9 03			lda #3
   160 1B5D 8D 0F D2			sta skctl
   161 1B60 8D 1F D2			sta skctl+$10
   162
   163 1B63 CA				dex						; X = 255
   164
   165 1B64				UNITINITIALIZATION
Macro: UNITINITIALIZATION [Source: arkanoid_vbxe.a65]
     3 1B64 20 80 24			jsr MAIN.SYSTEM.@UnitInit
    23 1B67 20 89 24			jsr MAIN.VBXE.@UnitInit
   166
   167 1B6A			.local	MAIN						; PROCEDURE
   168
   169 1B6A 4C B9 98			jmp l_0010
   170
   171 				; ------------------------------------------------------------
   172
   173 1B6D			.local	SYSTEM						; UNIT
   174
   175 1B6D			.local	ABS						; FUNCTION | ASSEMBLER | OVERLOAD | REGISTER
   176 1B6D			.local	@010184000
   177
   178 				; -------------------  ASM Block 00000008  -------------------
   179
   180 1B6D A5 8B			lda :edx+1
   181 1B6F 10 0D			bpl @+
   182
   183 1B71 A9 00			lda #$00
   184 1B73 38 E5 8A			sub :edx
   185 1B76 85 8A			sta :edx
   186 1B78 A9 00			lda #$00
   187 1B7A E5 8B			sbc :edx+1
   188 1B7C 85 8B			sta :edx+1
   189 				@
   190 1B7E 85 93			sta Result+1
   191
   192 1B80 A5 8A 85 92			mva :edx Result
   193
   194 1B84			@exit
   195
   196 				; ------------------------------------------------------------
   197
   198 = 008A			X	= :EDX
   199 = 0092			RESULT	= :STACKORIGIN-4
   200
   201 1B84 60				rts						; ret
   202 				.endl
   203 				.endl							; overload
   204
   205 1B85			.local	ABS						; FUNCTION | ASSEMBLER | OVERLOAD | REGISTER
   206 1B85			.local	@010185000
   207
   208 				; -------------------  ASM Block 00000009  -------------------
   209
   210 1B85 A5 8D			lda :edx+3
   211 1B87 10 03			spl
   212 1B89 20 21 11			jsr @negEDX
   213
   214 1B8C 85 95			sta Result+3
   215
   216 1B8E A5 8A 85 92			mva :edx Result
   217 1B92 A5 8B 85 93			mva :edx+1 Result+1
   218 1B96 A5 8C 85 94			mva :edx+2 Result+2
   219
   220 1B9A			@exit
   221
   222 				; ------------------------------------------------------------
   223
   224 = 008A			X	= :EDX
   225 = 0092			RESULT	= :STACKORIGIN-4
   226
   227 1B9A 60				rts						; ret
   228 				.endl
   229 				.endl							; overload
   230
   231 1B9B			.local	SQRT						; FUNCTION | OVERLOAD
   232 1B9B			.local	@010185000
   233
   234 				; optimize OK (SYSTEM), line = 801
   235
   236 1B9B AD 2A 9A			lda X+3
   237 1B9E 30 0B			bmi @+
   238 1BA0 0D 29 9A			ora X+2
   239 1BA3 0D 28 9A			ora X+1
   240 1BA6 0D 27 9A			ora X
   241 1BA9 D0 11			jne l_0029
   242 				@
   243 1BAB A9 00			lda #$00
   244 1BAD 8D 2B 9A			sta RESULT
   245 1BB0 8D 2C 9A			sta RESULT+1
   246 1BB3 8D 2D 9A			sta RESULT+2
   247 1BB6 8D 2E 9A			sta RESULT+3
   248 1BB9 4C 2F 1E			jmp @exit
   249 1BBC			l_0029
   250
   251 				; optimize OK (SYSTEM), line = 803
   252
   253 1BBC A9 31			lda <C
   254 1BBE 8D 2F 9A			sta SP
   255 1BC1 A9 9A			lda >C
   256 1BC3 8D 30 9A			sta SP+1
   257
   258 				; optimize OK (SYSTEM), line = 805
   259
   260 1BC6 AD 27 9A			lda X
   261 1BC9 85 8E			sta :FPMAN0
   262 1BCB AD 28 9A			lda X+1
   263 1BCE 85 8F			sta :FPMAN1
   264 1BD0 AD 29 9A			lda X+2
   265 1BD3 85 90			sta :FPMAN2
   266 1BD5 AD 2A 9A			lda X+3
   267 1BD8 85 91			sta :FPMAN3
   268 1BDA 20 12 19			jsr @I2F
   269 1BDD A5 8E			lda :FPMAN0
   270 1BDF 8D 31 9A			sta C
   271 1BE2 A5 8F			lda :FPMAN1
   272 1BE4 8D 32 9A			sta C+1
   273 1BE7 A5 90			lda :FPMAN2
   274 1BE9 8D 33 9A			sta C+2
   275 1BEC A5 91			lda :FPMAN3
   276 1BEE 8D 34 9A			sta C+3
   277
   278 				; optimize OK (SYSTEM), line = 807
   279
   280 1BF1 C9 3F			cmp #$3F
   281 1BF3 D0 13			bne @+
   282 1BF5 AD 33 9A			lda C+2
   283 1BF8 C9 80			cmp #$80
   284 1BFA D0 0C			bne @+
   285 1BFC AD 32 9A			lda C+1
   286 1BFF C9 00			cmp #$00
   287 1C01 D0 05			bne @+
   288 1C03 AD 31 9A			lda C
   289 1C06 C9 01			cmp #$01
   290 				@
   291 1C08 90 3A			jcc l_0048
   292 1C0A AD 31 9A			lda C
   293 1C0D 85 9F			sta :STACKORIGIN+9
   294 1C0F AD 32 9A			lda C+1
   295 1C12 85 AF			sta :STACKORIGIN+STACKWIDTH+9
   296 1C14 AD 33 9A			lda C+2
   297 1C17 38 E9 80			sub #$80
   298 1C1A 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
   299 1C1C AD 34 9A			lda C+3
   300 1C1F E9 3F			sbc #$3F
   301 1C21 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
   302 1C23 46 CF			lsr :STACKORIGIN+STACKWIDTH*3+9
   303 1C25 66 BF			ror :STACKORIGIN+STACKWIDTH*2+9
   304 1C27 66 AF			ror :STACKORIGIN+STACKWIDTH+9
   305 1C29 66 9F			ror :STACKORIGIN+9
   306 1C2B A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
   307 1C2D 18 69 80			add #$80
   308 1C30 8D 33 9A			sta C+2
   309 1C33 A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
   310 1C35 69 3F			adc #$3F
   311 1C37 8D 34 9A			sta C+3
   312 1C3A A5 9F			lda :STACKORIGIN+9
   313 1C3C 8D 31 9A			sta C
   314 1C3F A5 AF			lda :STACKORIGIN+STACKWIDTH+9
   315 1C41 8D 32 9A			sta C+1
   316 1C44			l_0048
   317
   318 				; optimize OK (SYSTEM), line = 809
   319
   320 1C44 AC 2F 9A 84 84 AC + 	mwy SP :bp2
   321 1C4E A0 00			ldy #$00
   322 1C50 B1 84			lda (:bp2),y
   323 1C52 8D 2B 9A			sta RESULT
   324 1C55 C8				iny
   325 1C56 B1 84			lda (:bp2),y
   326 1C58 8D 2C 9A			sta RESULT+1
   327 1C5B C8				iny
   328 1C5C B1 84			lda (:bp2),y
   329 1C5E 8D 2D 9A			sta RESULT+2
   330 1C61 C8				iny
   331 1C62 B1 84			lda (:bp2),y
   332 1C64 8D 2E 9A			sta RESULT+3
   333
   334 				; optimize OK (SYSTEM), line = 811
   335
   336 1C67 AD 27 9A			lda X
   337 1C6A 85 8E			sta :FPMAN0
   338 1C6C AD 28 9A			lda X+1
   339 1C6F 85 8F			sta :FPMAN1
   340 1C71 AD 29 9A			lda X+2
   341 1C74 85 90			sta :FPMAN2
   342 1C76 AD 2A 9A			lda X+3
   343 1C79 85 91			sta :FPMAN3
   344 1C7B 20 12 19			jsr @I2F
   345 1C7E A5 8E			lda :FPMAN0
   346 1C80 85 86			sta :FP1MAN0
   347 1C82 A5 8F			lda :FPMAN1
   348 1C84 85 87			sta :FP1MAN1
   349 1C86 A5 90			lda :FPMAN2
   350 1C88 85 88			sta :FP1MAN2
   351 1C8A A5 91			lda :FPMAN3
   352 1C8C 85 89			sta :FP1MAN3
   353 1C8E AD 2B 9A			lda RESULT
   354 1C91 85 8A			sta :FP2MAN0
   355 1C93 AD 2C 9A			lda RESULT+1
   356 1C96 85 8B			sta :FP2MAN1
   357 1C98 AD 2D 9A			lda RESULT+2
   358 1C9B 85 8C			sta :FP2MAN2
   359 1C9D AD 2E 9A			lda RESULT+3
   360 1CA0 85 8D			sta :FP2MAN3
   361 1CA2 20 25 18			jsr @FDIV
   362 1CA5 A5 8E			lda :FPMAN0
   363 1CA7 85 8A			sta :FP2MAN0
   364 1CA9 A5 8F			lda :FPMAN1
   365 1CAB 85 8B			sta :FP2MAN1
   366 1CAD A5 90			lda :FPMAN2
   367 1CAF 85 8C			sta :FP2MAN2
   368 1CB1 A5 91			lda :FPMAN3
   369 1CB3 85 8D			sta :FP2MAN3
   370 1CB5 AD 2B 9A			lda RESULT
   371 1CB8 85 86			sta :FP1MAN0
   372 1CBA AD 2C 9A			lda RESULT+1
   373 1CBD 85 87			sta :FP1MAN1
   374 1CBF AD 2D 9A			lda RESULT+2
   375 1CC2 85 88			sta :FP1MAN2
   376 1CC4 AD 2E 9A			lda RESULT+3
   377 1CC7 85 89			sta :FP1MAN3
   378 1CC9 20 18 16			jsr @FADD
   379 1CCC A5 8E			lda :FPMAN0
   380 1CCE 85 86			sta :FP1MAN0
   381 1CD0 A5 8F			lda :FPMAN1
   382 1CD2 85 87			sta :FP1MAN1
   383 1CD4 A5 90			lda :FPMAN2
   384 1CD6 85 88			sta :FP1MAN2
   385 1CD8 A5 91			lda :FPMAN3
   386 1CDA 85 89			sta :FP1MAN3
   387 1CDC A9 00			lda #$00
   388 1CDE 85 8A			sta :FP2MAN0
   389 1CE0 85 8B			sta :FP2MAN1
   390 1CE2 85 8C			sta :FP2MAN2
   391 1CE4 A9 3F			lda #$3F
   392 1CE6 85 8D			sta :FP2MAN3
   393 1CE8 20 84 17			jsr @FMUL
   394 1CEB A5 8E			lda :FPMAN0
   395 1CED 8D 2B 9A			sta RESULT
   396 1CF0 A5 8F			lda :FPMAN1
   397 1CF2 8D 2C 9A			sta RESULT+1
   398 1CF5 A5 90			lda :FPMAN2
   399 1CF7 8D 2D 9A			sta RESULT+2
   400 1CFA A5 91			lda :FPMAN3
   401 1CFC 8D 2E 9A			sta RESULT+3
   402
   403 				; optimize OK (SYSTEM), line = 812
   404
   405 1CFF AD 27 9A			lda X
   406 1D02 85 8E			sta :FPMAN0
   407 1D04 AD 28 9A			lda X+1
   408 1D07 85 8F			sta :FPMAN1
   409 1D09 AD 29 9A			lda X+2
   410 1D0C 85 90			sta :FPMAN2
   411 1D0E AD 2A 9A			lda X+3
   412 1D11 85 91			sta :FPMAN3
   413 1D13 20 12 19			jsr @I2F
   414 1D16 A5 8E			lda :FPMAN0
   415 1D18 85 86			sta :FP1MAN0
   416 1D1A A5 8F			lda :FPMAN1
   417 1D1C 85 87			sta :FP1MAN1
   418 1D1E A5 90			lda :FPMAN2
   419 1D20 85 88			sta :FP1MAN2
   420 1D22 A5 91			lda :FPMAN3
   421 1D24 85 89			sta :FP1MAN3
   422 1D26 AD 2B 9A			lda RESULT
   423 1D29 85 8A			sta :FP2MAN0
   424 1D2B AD 2C 9A			lda RESULT+1
   425 1D2E 85 8B			sta :FP2MAN1
   426 1D30 AD 2D 9A			lda RESULT+2
   427 1D33 85 8C			sta :FP2MAN2
   428 1D35 AD 2E 9A			lda RESULT+3
   429 1D38 85 8D			sta :FP2MAN3
   430 1D3A 20 25 18			jsr @FDIV
   431 1D3D A5 8E			lda :FPMAN0
   432 1D3F 85 8A			sta :FP2MAN0
   433 1D41 A5 8F			lda :FPMAN1
   434 1D43 85 8B			sta :FP2MAN1
   435 1D45 A5 90			lda :FPMAN2
   436 1D47 85 8C			sta :FP2MAN2
   437 1D49 A5 91			lda :FPMAN3
   438 1D4B 85 8D			sta :FP2MAN3
   439 1D4D AD 2B 9A			lda RESULT
   440 1D50 85 86			sta :FP1MAN0
   441 1D52 AD 2C 9A			lda RESULT+1
   442 1D55 85 87			sta :FP1MAN1
   443 1D57 AD 2D 9A			lda RESULT+2
   444 1D5A 85 88			sta :FP1MAN2
   445 1D5C AD 2E 9A			lda RESULT+3
   446 1D5F 85 89			sta :FP1MAN3
   447 1D61 20 18 16			jsr @FADD
   448 1D64 A5 8E			lda :FPMAN0
   449 1D66 85 86			sta :FP1MAN0
   450 1D68 A5 8F			lda :FPMAN1
   451 1D6A 85 87			sta :FP1MAN1
   452 1D6C A5 90			lda :FPMAN2
   453 1D6E 85 88			sta :FP1MAN2
   454 1D70 A5 91			lda :FPMAN3
   455 1D72 85 89			sta :FP1MAN3
   456 1D74 A9 00			lda #$00
   457 1D76 85 8A			sta :FP2MAN0
   458 1D78 85 8B			sta :FP2MAN1
   459 1D7A 85 8C			sta :FP2MAN2
   460 1D7C A9 3F			lda #$3F
   461 1D7E 85 8D			sta :FP2MAN3
   462 1D80 20 84 17			jsr @FMUL
   463 1D83 A5 8E			lda :FPMAN0
   464 1D85 8D 2B 9A			sta RESULT
   465 1D88 A5 8F			lda :FPMAN1
   466 1D8A 8D 2C 9A			sta RESULT+1
   467 1D8D A5 90			lda :FPMAN2
   468 1D8F 8D 2D 9A			sta RESULT+2
   469 1D92 A5 91			lda :FPMAN3
   470 1D94 8D 2E 9A			sta RESULT+3
   471
   472 				; optimize OK (SYSTEM), line = 813
   473
   474 1D97 AD 27 9A			lda X
   475 1D9A 85 8E			sta :FPMAN0
   476 1D9C AD 28 9A			lda X+1
   477 1D9F 85 8F			sta :FPMAN1
   478 1DA1 AD 29 9A			lda X+2
   479 1DA4 85 90			sta :FPMAN2
   480 1DA6 AD 2A 9A			lda X+3
   481 1DA9 85 91			sta :FPMAN3
   482 1DAB 20 12 19			jsr @I2F
   483 1DAE A5 8E			lda :FPMAN0
   484 1DB0 85 86			sta :FP1MAN0
   485 1DB2 A5 8F			lda :FPMAN1
   486 1DB4 85 87			sta :FP1MAN1
   487 1DB6 A5 90			lda :FPMAN2
   488 1DB8 85 88			sta :FP1MAN2
   489 1DBA A5 91			lda :FPMAN3
   490 1DBC 85 89			sta :FP1MAN3
   491 1DBE AD 2B 9A			lda RESULT
   492 1DC1 85 8A			sta :FP2MAN0
   493 1DC3 AD 2C 9A			lda RESULT+1
   494 1DC6 85 8B			sta :FP2MAN1
   495 1DC8 AD 2D 9A			lda RESULT+2
   496 1DCB 85 8C			sta :FP2MAN2
   497 1DCD AD 2E 9A			lda RESULT+3
   498 1DD0 85 8D			sta :FP2MAN3
   499 1DD2 20 25 18			jsr @FDIV
   500 1DD5 A5 8E			lda :FPMAN0
   501 1DD7 85 8A			sta :FP2MAN0
   502 1DD9 A5 8F			lda :FPMAN1
   503 1DDB 85 8B			sta :FP2MAN1
   504 1DDD A5 90			lda :FPMAN2
   505 1DDF 85 8C			sta :FP2MAN2
   506 1DE1 A5 91			lda :FPMAN3
   507 1DE3 85 8D			sta :FP2MAN3
   508 1DE5 AD 2B 9A			lda RESULT
   509 1DE8 85 86			sta :FP1MAN0
   510 1DEA AD 2C 9A			lda RESULT+1
   511 1DED 85 87			sta :FP1MAN1
   512 1DEF AD 2D 9A			lda RESULT+2
   513 1DF2 85 88			sta :FP1MAN2
   514 1DF4 AD 2E 9A			lda RESULT+3
   515 1DF7 85 89			sta :FP1MAN3
   516 1DF9 20 18 16			jsr @FADD
   517 1DFC A5 8E			lda :FPMAN0
   518 1DFE 85 86			sta :FP1MAN0
   519 1E00 A5 8F			lda :FPMAN1
   520 1E02 85 87			sta :FP1MAN1
   521 1E04 A5 90			lda :FPMAN2
   522 1E06 85 88			sta :FP1MAN2
   523 1E08 A5 91			lda :FPMAN3
   524 1E0A 85 89			sta :FP1MAN3
   525 1E0C A9 00			lda #$00
   526 1E0E 85 8A			sta :FP2MAN0
   527 1E10 85 8B			sta :FP2MAN1
   528 1E12 85 8C			sta :FP2MAN2
   529 1E14 A9 3F			lda #$3F
   530 1E16 85 8D			sta :FP2MAN3
   531 1E18 20 84 17			jsr @FMUL
   532 1E1B A5 8E			lda :FPMAN0
   533 1E1D 8D 2B 9A			sta RESULT
   534 1E20 A5 8F			lda :FPMAN1
   535 1E22 8D 2C 9A			sta RESULT+1
   536 1E25 A5 90			lda :FPMAN2
   537 1E27 8D 2D 9A			sta RESULT+2
   538 1E2A A5 91			lda :FPMAN3
   539 1E2C 8D 2E 9A			sta RESULT+3
   540 1E2F			@exit
   541
   542 				; ------------------------------------------------------------
   543
   544 = 9A27			X	= DATAORIGIN+$000B
   545 = 9A2B			RESULT	= DATAORIGIN+$000F
   546 = 9A2F			SP	= DATAORIGIN+$0013
   547 = 9A31			C	= DATAORIGIN+$0015
   548
   549 = 9A27			@VarData	= X
   550 = 000A			@VarDataSize	= 10
   551
   552 1E2F 60				rts						; ret
   553 				.endl
   554 				.endl							; overload
   555
   556 1E30			.local	ARCTAN						; FUNCTION | OVERLOAD
   557 1E30			.local	@01018E000
   558
   559 				; optimize OK (SYSTEM), line = 862
   560
   561 1E30 A9 00			lda #$00
   562 1E32 8D 45 9A			sta SIGN
   563
   564 				; optimize OK (SYSTEM), line = 863
   565
   566 1E35 AD 35 9A			lda VALUE
   567 1E38 8D 3D 9A			sta X
   568 1E3B AD 36 9A			lda VALUE+1
   569 1E3E 8D 3E 9A			sta X+1
   570 1E41 AD 37 9A			lda VALUE+2
   571 1E44 8D 3F 9A			sta X+2
   572 1E47 AD 38 9A			lda VALUE+3
   573 1E4A 8D 40 9A			sta X+3
   574
   575 				; optimize OK (SYSTEM), line = 864
   576
   577 1E4D A9 00			lda #$00
   578 1E4F 8D 41 9A			sta Y
   579 1E52 8D 42 9A			sta Y+1
   580 1E55 8D 43 9A			sta Y+2
   581 1E58 8D 44 9A			sta Y+3
   582
   583 				; optimize OK (SYSTEM), line = 866
   584
   585 1E5B AD 38 9A			lda VALUE+3
   586 1E5E 0D 37 9A			ora VALUE+2
   587 1E61 0D 36 9A			ora VALUE+1
   588 1E64 0D 35 9A			ora VALUE
   589 1E67 D0 11			jne l_00AF
   590
   591 				; optimize OK (SYSTEM), line = 867
   592
   593 1E69 A9 00			lda #$00
   594 1E6B 8D 39 9A			sta RESULT
   595 1E6E 8D 3A 9A			sta RESULT+1
   596 1E71 8D 3B 9A			sta RESULT+2
   597 1E74 8D 3C 9A			sta RESULT+3
   598 1E77 4C 41 21			jmp @exit
   599 1E7A			l_00AF
   600
   601 				; optimize OK (SYSTEM), line = 870
   602
   603 1E7A AD 40 9A			lda X+3
   604 1E7D 10 26			jpl l_00CD
   605
   606 				; optimize OK (SYSTEM), line = 871
   607
   608 1E7F A9 01			lda #$01
   609 1E81 8D 45 9A			sta SIGN
   610
   611 				; optimize OK (SYSTEM), line = 872
   612
   613 1E84 A9 00			lda #$00
   614 1E86 38 ED 3D 9A			sub X
   615 1E8A 8D 3D 9A			sta X
   616 1E8D A9 00			lda #$00
   617 1E8F ED 3E 9A			sbc X+1
   618 1E92 8D 3E 9A			sta X+1
   619 1E95 A9 00			lda #$00
   620 1E97 ED 3F 9A			sbc X+2
   621 1E9A 8D 3F 9A			sta X+2
   622 1E9D A9 00			lda #$00
   623 1E9F ED 40 9A			sbc X+3
   624 1EA2 8D 40 9A			sta X+3
   625 1EA5			l_00CD
   626 1EA5			l_00BD
   627
   628 				; optimize OK (SYSTEM), line = 875
   629
   630 1EA5 AD 3D 9A			lda X
   631 1EA8 85 86			sta @REAL_DIV.A
   632 1EAA AD 3E 9A			lda X+1
   633 1EAD 38 E9 01			sub #$01
   634 1EB0 85 87			sta @REAL_DIV.A+1
   635 1EB2 AD 3F 9A			lda X+2
   636 1EB5 E9 00			sbc #$00
   637 1EB7 85 88			sta @REAL_DIV.A+2
   638 1EB9 AD 40 9A			lda X+3
   639 1EBC E9 00			sbc #$00
   640 1EBE 85 89			sta @REAL_DIV.A+3
   641 1EC0 AD 3D 9A			lda X
   642 1EC3 85 8E			sta @REAL_DIV.B
   643 1EC5 AD 3E 9A			lda X+1
   644 1EC8 18 69 01			add #$01
   645 1ECB 85 8F			sta @REAL_DIV.B+1
   646 1ECD AD 3F 9A			lda X+2
   647 1ED0 69 00			adc #$00
   648 1ED2 85 90			sta @REAL_DIV.B+2
   649 1ED4 AD 40 9A			lda X+3
   650 1ED7 69 00			adc #$00
   651 1ED9 85 91			sta @REAL_DIV.B+3
   652 1EDB 20 F2 14			jsr @REAL_DIV
   653 1EDE A5 86			lda :eax
   654 1EE0 8D 3D 9A			sta X
   655 1EE3 A5 87			lda :eax+1
   656 1EE5 8D 3E 9A			sta X+1
   657 1EE8 A5 88			lda :eax+2
   658 1EEA 8D 3F 9A			sta X+2
   659 1EED A5 89			lda :eax+3
   660 1EEF 8D 40 9A			sta X+3
   661
   662 				; optimize OK (SYSTEM), line = 876
   663
   664 1EF2 AD 3D 9A			lda X
   665 1EF5 85 8E			sta @REAL_MUL.B
   666 1EF7 AD 3E 9A			lda X+1
   667 1EFA 85 8F			sta @REAL_MUL.B+1
   668 1EFC AD 3F 9A			lda X+2
   669 1EFF 85 90			sta @REAL_MUL.B+2
   670 1F01 AD 40 9A			lda X+3
   671 1F04 85 91			sta @REAL_MUL.B+3
   672 1F06 AD 3D 9A			lda X
   673 1F09 85 86			sta @REAL_MUL.A
   674 1F0B AD 3E 9A			lda X+1
   675 1F0E 85 87			sta @REAL_MUL.A+1
   676 1F10 AD 3F 9A			lda X+2
   677 1F13 85 88			sta @REAL_MUL.A+2
   678 1F15 AD 40 9A			lda X+3
   679 1F18 85 89			sta @REAL_MUL.A+3
   680 1F1A 20 33 14			jsr @REAL_MUL
   681 1F1D A5 86			lda :eax
   682 1F1F 8D 41 9A			sta Y
   683 1F22 A5 87			lda :eax+1
   684 1F24 8D 42 9A			sta Y+1
   685 1F27 A5 88			lda :eax+2
   686 1F29 8D 43 9A			sta Y+2
   687 1F2C A5 89			lda :eax+3
   688 1F2E 8D 44 9A			sta Y+3
   689
   690 				; optimize OK (SYSTEM), line = 877
   691
   692 1F31 AD 41 9A			lda Y
   693 1F34 85 8E			sta @REAL_MUL.B
   694 1F36 AD 42 9A			lda Y+1
   695 1F39 85 8F			sta @REAL_MUL.B+1
   696 1F3B AD 43 9A			lda Y+2
   697 1F3E 85 90			sta @REAL_MUL.B+2
   698 1F40 AD 44 9A			lda Y+3
   699 1F43 85 91			sta @REAL_MUL.B+3
   700 1F45 A9 01			lda #$01
   701 1F47 85 86			sta @REAL_MUL.A
   702 1F49 A9 00			lda #$00
   703 1F4B 85 87			sta @REAL_MUL.A+1
   704 1F4D 85 88			sta @REAL_MUL.A+2
   705 1F4F 85 89			sta @REAL_MUL.A+3
   706 1F51 20 33 14			jsr @REAL_MUL
   707 1F54 A5 86			lda :eax
   708 1F56 38 E9 04			sub #$04
   709 1F59 85 86			sta @REAL_MUL.A
   710 1F5B A5 87			lda :eax+1
   711 1F5D E9 00			sbc #$00
   712 1F5F 85 87			sta @REAL_MUL.A+1
   713 1F61 A5 88			lda :eax+2
   714 1F63 E9 00			sbc #$00
   715 1F65 85 88			sta @REAL_MUL.A+2
   716 1F67 A5 89			lda :eax+3
   717 1F69 E9 00			sbc #$00
   718 1F6B 85 89			sta @REAL_MUL.A+3
   719 1F6D AD 41 9A			lda Y
   720 1F70 85 8E			sta @REAL_MUL.B
   721 1F72 AD 42 9A			lda Y+1
   722 1F75 85 8F			sta @REAL_MUL.B+1
   723 1F77 AD 43 9A			lda Y+2
   724 1F7A 85 90			sta @REAL_MUL.B+2
   725 1F7C AD 44 9A			lda Y+3
   726 1F7F 85 91			sta @REAL_MUL.B+3
   727 1F81 20 33 14			jsr @REAL_MUL
   728 1F84 A5 86			lda :eax
   729 1F86 18 69 0B			add #$0B
   730 1F89 85 86			sta @REAL_MUL.A
   731 1F8B A5 87			lda :eax+1
   732 1F8D 69 00			adc #$00
   733 1F8F 85 87			sta @REAL_MUL.A+1
   734 1F91 A5 88			lda :eax+2
   735 1F93 69 00			adc #$00
   736 1F95 85 88			sta @REAL_MUL.A+2
   737 1F97 A5 89			lda :eax+3
   738 1F99 69 00			adc #$00
   739 1F9B 85 89			sta @REAL_MUL.A+3
   740 1F9D AD 41 9A			lda Y
   741 1FA0 85 8E			sta @REAL_MUL.B
   742 1FA2 AD 42 9A			lda Y+1
   743 1FA5 85 8F			sta @REAL_MUL.B+1
   744 1FA7 AD 43 9A			lda Y+2
   745 1FAA 85 90			sta @REAL_MUL.B+2
   746 1FAC AD 44 9A			lda Y+3
   747 1FAF 85 91			sta @REAL_MUL.B+3
   748 1FB1 20 33 14			jsr @REAL_MUL
   749 1FB4 A5 86			lda :eax
   750 1FB6 38 E9 13			sub #$13
   751 1FB9 85 86			sta @REAL_MUL.A
   752 1FBB A5 87			lda :eax+1
   753 1FBD E9 00			sbc #$00
   754 1FBF 85 87			sta @REAL_MUL.A+1
   755 1FC1 A5 88			lda :eax+2
   756 1FC3 E9 00			sbc #$00
   757 1FC5 85 88			sta @REAL_MUL.A+2
   758 1FC7 A5 89			lda :eax+3
   759 1FC9 E9 00			sbc #$00
   760 1FCB 85 89			sta @REAL_MUL.A+3
   761 1FCD AD 41 9A			lda Y
   762 1FD0 85 8E			sta @REAL_MUL.B
   763 1FD2 AD 42 9A			lda Y+1
   764 1FD5 85 8F			sta @REAL_MUL.B+1
   765 1FD7 AD 43 9A			lda Y+2
   766 1FDA 85 90			sta @REAL_MUL.B+2
   767 1FDC AD 44 9A			lda Y+3
   768 1FDF 85 91			sta @REAL_MUL.B+3
   769 1FE1 20 33 14			jsr @REAL_MUL
   770 1FE4 A5 86			lda :eax
   771 1FE6 18 69 1B			add #$1B
   772 1FE9 85 86			sta @REAL_MUL.A
   773 1FEB A5 87			lda :eax+1
   774 1FED 69 00			adc #$00
   775 1FEF 85 87			sta @REAL_MUL.A+1
   776 1FF1 A5 88			lda :eax+2
   777 1FF3 69 00			adc #$00
   778 1FF5 85 88			sta @REAL_MUL.A+2
   779 1FF7 A5 89			lda :eax+3
   780 1FF9 69 00			adc #$00
   781 1FFB 85 89			sta @REAL_MUL.A+3
   782 1FFD AD 41 9A			lda Y
   783 2000 85 8E			sta @REAL_MUL.B
   784 2002 AD 42 9A			lda Y+1
   785 2005 85 8F			sta @REAL_MUL.B+1
   786 2007 AD 43 9A			lda Y+2
   787 200A 85 90			sta @REAL_MUL.B+2
   788 200C AD 44 9A			lda Y+3
   789 200F 85 91			sta @REAL_MUL.B+3
   790 2011 20 33 14			jsr @REAL_MUL
   791 2014 A5 86			lda :eax
   792 2016 38 E9 24			sub #$24
   793 2019 85 86			sta @REAL_MUL.A
   794 201B A5 87			lda :eax+1
   795 201D E9 00			sbc #$00
   796 201F 85 87			sta @REAL_MUL.A+1
   797 2021 A5 88			lda :eax+2
   798 2023 E9 00			sbc #$00
   799 2025 85 88			sta @REAL_MUL.A+2
   800 2027 A5 89			lda :eax+3
   801 2029 E9 00			sbc #$00
   802 202B 85 89			sta @REAL_MUL.A+3
   803 202D AD 41 9A			lda Y
   804 2030 85 8E			sta @REAL_MUL.B
   805 2032 AD 42 9A			lda Y+1
   806 2035 85 8F			sta @REAL_MUL.B+1
   807 2037 AD 43 9A			lda Y+2
   808 203A 85 90			sta @REAL_MUL.B+2
   809 203C AD 44 9A			lda Y+3
   810 203F 85 91			sta @REAL_MUL.B+3
   811 2041 20 33 14			jsr @REAL_MUL
   812 2044 A5 86			lda :eax
   813 2046 18 69 33			add #$33
   814 2049 85 86			sta @REAL_MUL.A
   815 204B A5 87			lda :eax+1
   816 204D 69 00			adc #$00
   817 204F 85 87			sta @REAL_MUL.A+1
   818 2051 A5 88			lda :eax+2
   819 2053 69 00			adc #$00
   820 2055 85 88			sta @REAL_MUL.A+2
   821 2057 A5 89			lda :eax+3
   822 2059 69 00			adc #$00
   823 205B 85 89			sta @REAL_MUL.A+3
   824 205D AD 41 9A			lda Y
   825 2060 85 8E			sta @REAL_MUL.B
   826 2062 AD 42 9A			lda Y+1
   827 2065 85 8F			sta @REAL_MUL.B+1
   828 2067 AD 43 9A			lda Y+2
   829 206A 85 90			sta @REAL_MUL.B+2
   830 206C AD 44 9A			lda Y+3
   831 206F 85 91			sta @REAL_MUL.B+3
   832 2071 20 33 14			jsr @REAL_MUL
   833 2074 A5 86			lda :eax
   834 2076 38 E9 55			sub #$55
   835 2079 85 86			sta @REAL_MUL.A
   836 207B A5 87			lda :eax+1
   837 207D E9 00			sbc #$00
   838 207F 85 87			sta @REAL_MUL.A+1
   839 2081 A5 88			lda :eax+2
   840 2083 E9 00			sbc #$00
   841 2085 85 88			sta @REAL_MUL.A+2
   842 2087 A5 89			lda :eax+3
   843 2089 E9 00			sbc #$00
   844 208B 85 89			sta @REAL_MUL.A+3
   845 208D AD 41 9A			lda Y
   846 2090 85 8E			sta @REAL_MUL.B
   847 2092 AD 42 9A			lda Y+1
   848 2095 85 8F			sta @REAL_MUL.B+1
   849 2097 AD 43 9A			lda Y+2
   850 209A 85 90			sta @REAL_MUL.B+2
   851 209C AD 44 9A			lda Y+3
   852 209F 85 91			sta @REAL_MUL.B+3
   853 20A1 20 33 14			jsr @REAL_MUL
   854 20A4 A5 87			lda :eax+1
   855 20A6 18 69 01			add #$01
   856 20A9 85 87			sta @REAL_MUL.A+1
   857 20AB A5 88			lda :eax+2
   858 20AD 69 00			adc #$00
   859 20AF 85 88			sta @REAL_MUL.A+2
   860 20B1 A5 89			lda :eax+3
   861 20B3 69 00			adc #$00
   862 20B5 85 89			sta @REAL_MUL.A+3
   863 20B7 AD 3D 9A			lda X
   864 20BA 85 8E			sta @REAL_MUL.B
   865 20BC AD 3E 9A			lda X+1
   866 20BF 85 8F			sta @REAL_MUL.B+1
   867 20C1 AD 3F 9A			lda X+2
   868 20C4 85 90			sta @REAL_MUL.B+2
   869 20C6 AD 40 9A			lda X+3
   870 20C9 85 91			sta @REAL_MUL.B+3
   871 20CB 20 33 14			jsr @REAL_MUL
   872 20CE A5 86			lda :eax
   873 20D0 8D 3D 9A			sta X
   874 20D3 A5 87			lda :eax+1
   875 20D5 8D 3E 9A			sta X+1
   876 20D8 A5 88			lda :eax+2
   877 20DA 8D 3F 9A			sta X+2
   878 20DD A5 89			lda :eax+3
   879 20DF 8D 40 9A			sta X+3
   880
   881 				; optimize OK (SYSTEM), line = 880
   882
   883 20E2 A9 C9			lda #$C9
   884 20E4 18 6D 3D 9A			add X
   885 20E8 8D 3D 9A			sta X
   886 20EB A9 00			lda #$00
   887 20ED 6D 3E 9A			adc X+1
   888 20F0 8D 3E 9A			sta X+1
   889 20F3 A9 00			lda #$00
   890 20F5 6D 3F 9A			adc X+2
   891 20F8 8D 3F 9A			sta X+2
   892 20FB A9 00			lda #$00
   893 20FD 6D 40 9A			adc X+3
   894 2100 8D 40 9A			sta X+3
   895
   896 				; optimize OK (SYSTEM), line = 882
   897
   898 2103 AD 45 9A			lda SIGN
   899 2106 F0 21			jeq l_014F
   900
   901 				; optimize OK (SYSTEM), line = 883
   902
   903 2108 A9 00			lda #$00
   904 210A 38 ED 3D 9A			sub X
   905 210E 8D 39 9A			sta RESULT
   906 2111 A9 00			lda #$00
   907 2113 ED 3E 9A			sbc X+1
   908 2116 8D 3A 9A			sta RESULT+1
   909 2119 A9 00			lda #$00
   910 211B ED 3F 9A			sbc X+2
   911 211E 8D 3B 9A			sta RESULT+2
   912 2121 A9 00			lda #$00
   913 2123 ED 40 9A			sbc X+3
   914 2126 4C 3E 21			jmp l_0160
   915 2129			l_014F
   916
   917 				; optimize OK (SYSTEM), line = 885
   918
   919 2129 AD 3D 9A			lda X
   920 212C 8D 39 9A			sta RESULT
   921 212F AD 3E 9A			lda X+1
   922 2132 8D 3A 9A			sta RESULT+1
   923 2135 AD 3F 9A			lda X+2
   924 2138 8D 3B 9A			sta RESULT+2
   925 213B AD 40 9A			lda X+3
   926 213E			l_0160
   927 213E 8D 3C 9A			sta RESULT+3
   928 2141			@exit
   929
   930 				; ------------------------------------------------------------
   931
   932 = 9A35			VALUE	= DATAORIGIN+$0019
   933 = 9A39			RESULT	= DATAORIGIN+$001D
   934 = 9A3D			X	= DATAORIGIN+$0021
   935 = 9A41			Y	= DATAORIGIN+$0025
   936 = 9A45			SIGN	= DATAORIGIN+$0029
   937
   938 = 9A35			@VarData	= VALUE
   939 = 000D			@VarDataSize	= 13
   940
   941 2141 60				rts						; ret
   942 				.endl
   943 				.endl							; overload
   944
   945 2142			.local	RSINCOS						; FUNCTION
   946
   947 				; --- WhileProlog
   948 2142 4C 66 21			jmp l_019D
   949 2145			l_019E
   950
   951 				; optimize OK (SYSTEM), line = 1776
   952
   953 2145 AD 46 9A			lda X
   954 2148 38 E9 48			sub #$48
   955 214B 8D 46 9A			sta X
   956 214E AD 47 9A			lda X+1
   957 2151 E9 06			sbc #$06
   958 2153 8D 47 9A			sta X+1
   959 2156 AD 48 9A			lda X+2
   960 2159 E9 00			sbc #$00
   961 215B 8D 48 9A			sta X+2
   962 215E AD 49 9A			lda X+3
   963 2161 E9 00			sbc #$00
   964 2163 8D 49 9A			sta X+3
   965 2166			l_019D
   966 2166				.LOCAL
   967 2166 AD 49 9A			lda X+3
   968 2169 38 E9 00			sub #$00
   969 216C D0 1F			bne L4
   970 216E AD 48 9A			lda X+2
   971 2171 C9 00			cmp #$00
   972 2173 D0 0C			bne L1
   973 2175 AD 47 9A			lda X+1
   974 2178 C9 06			cmp #$06
   975 217A D0 05			bne L1
   976 217C AD 46 9A			lda X
   977 217F C9 48			cmp #$48
   978 2181 F0 10		L1	beq L5
   979 2183 B0 04			bcs L3
   980 2185 A9 FF			lda #$FF
   981 2187 D0 0A			bne L5
   982 2189 A9 01		L3	lda #$01
   983 218B D0 06			bne L5
   984 218D 50 04		L4	bvc L5
   985 218F 49 FF			eor #$FF
   986 2191 09 01			ora #$01
   987 2193			L5
   988 					.ENDL
   989 2193 30 02			smi
   990 2195 D0 AE			jne l_019E
   991
   992 				; --- WhileProlog
   993 2197 4C BB 21			jmp l_01B2
   994 219A			l_01B3
   995
   996 				; optimize OK (SYSTEM), line = 1777
   997
   998 219A AD 46 9A			lda X
   999 219D 18 69 48			add #$48
  1000 21A0 8D 46 9A			sta X
  1001 21A3 AD 47 9A			lda X+1
  1002 21A6 69 06			adc #$06
  1003 21A8 8D 47 9A			sta X+1
  1004 21AB AD 48 9A			lda X+2
  1005 21AE 69 00			adc #$00
  1006 21B0 8D 48 9A			sta X+2
  1007 21B3 AD 49 9A			lda X+3
  1008 21B6 69 00			adc #$00
  1009 21B8 8D 49 9A			sta X+3
  1010 21BB			l_01B2
  1011 21BB AD 49 9A			lda X+3
  1012 21BE 30 DA			jmi l_01B3
  1013
  1014 				; optimize OK (SYSTEM), line = 1780
  1015
  1016 21C0 A9 A3			lda #$A3
  1017 21C2 85 8E			sta @REAL_MUL.B
  1018 21C4 A9 00			lda #$00
  1019 21C6 85 8F			sta @REAL_MUL.B+1
  1020 21C8 85 90			sta @REAL_MUL.B+2
  1021 21CA 85 91			sta @REAL_MUL.B+3
  1022 21CC AD 46 9A			lda X
  1023 21CF 85 86			sta @REAL_MUL.A
  1024 21D1 AD 47 9A			lda X+1
  1025 21D4 85 87			sta @REAL_MUL.A+1
  1026 21D6 AD 48 9A			lda X+2
  1027 21D9 85 88			sta @REAL_MUL.A+2
  1028 21DB AD 49 9A			lda X+3
  1029 21DE 85 89			sta @REAL_MUL.A+3
  1030 21E0 20 33 14			jsr @REAL_MUL
  1031 21E3 A5 86			lda :eax
  1032 21E5 8D 46 9A			sta X
  1033 21E8 A5 87			lda :eax+1
  1034 21EA 8D 47 9A			sta X+1
  1035 21ED A5 88			lda :eax+2
  1036 21EF 8D 48 9A			sta X+2
  1037 21F2 A5 89			lda :eax+3
  1038 21F4 8D 49 9A			sta X+3
  1039
  1040 				; optimize OK (SYSTEM), line = 1783
  1041
  1042 21F7 AD 46 9A			lda X
  1043 21FA 85 86			sta @REAL_TRUNC.A
  1044 21FC AD 47 9A			lda X+1
  1045 21FF 85 87			sta @REAL_TRUNC.A+1
  1046 2201 AD 48 9A			lda X+2
  1047 2204 85 88			sta @REAL_TRUNC.A+2
  1048 2206 AD 49 9A			lda X+3
  1049 2209 85 89			sta @REAL_TRUNC.A+3
  1050 220B 20 7C 15			jsr @REAL_TRUNC
  1051 220E A5 86			lda :eax
  1052 2210 8D 4F 9A			sta I
  1053
  1054 				; optimize OK (SYSTEM), line = 1786
  1055
  1056 2213 AD 49 9A			lda X+3
  1057 2216 10 03			jpl l_01E1
  1058 2218 CE 4F 9A			dec I
  1059 221B			l_01E1
  1060
  1061 				; optimize OK (SYSTEM), line = 1789
  1062
  1063 221B A0 00			ldy #$00
  1064 221D AD 4F 9A			lda I
  1065 2220 10 01			spl
  1066 2222 88				dey
  1067 2223 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  1068 2225 84 C0			sty :STACKORIGIN+STACKWIDTH*2+10
  1069 2227 84 D0			sty :STACKORIGIN+STACKWIDTH*3+10
  1070 2229 AD 47 9A			lda X+1
  1071 222C 38 E5 B0			sub :STACKORIGIN+STACKWIDTH+10
  1072 222F 8D 47 9A			sta X+1
  1073 2232 AD 48 9A			lda X+2
  1074 2235 E5 C0			sbc :STACKORIGIN+STACKWIDTH*2+10
  1075 2237 8D 48 9A			sta X+2
  1076 223A AD 49 9A			lda X+3
  1077 223D E5 D0			sbc :STACKORIGIN+STACKWIDTH*3+10
  1078 223F 8D 49 9A			sta X+3
  1079
  1080 				; optimize OK (SYSTEM), line = 1792
  1081
  1082 2242 AD 4A 9A			lda SC
  1083 2245 F0 03			jeq l_01FE
  1084 2247 EE 4F 9A			inc I
  1085 224A			l_01FE
  1086
  1087 				; optimize OK (SYSTEM), line = 1795
  1088
  1089 224A AD 4F 9A			lda I
  1090 224D 29 01			and #$01
  1091 224F D0 21			jne l_021B
  1092 2251 A9 00			lda #$00
  1093 2253 38 ED 46 9A			sub X
  1094 2257 8D 46 9A			sta X
  1095 225A A9 01			lda #$01
  1096 225C ED 47 9A			sbc X+1
  1097 225F 8D 47 9A			sta X+1
  1098 2262 A9 00			lda #$00
  1099 2264 ED 48 9A			sbc X+2
  1100 2267 8D 48 9A			sta X+2
  1101 226A A9 00			lda #$00
  1102 226C ED 49 9A			sbc X+3
  1103 226F 8D 49 9A			sta X+3
  1104 2272			l_021B
  1105
  1106 				; optimize OK (SYSTEM), line = 1798
  1107
  1108 2272 AD 46 9A			lda X
  1109 2275 85 8E			sta @REAL_MUL.B
  1110 2277 AD 47 9A			lda X+1
  1111 227A 85 8F			sta @REAL_MUL.B+1
  1112 227C AD 48 9A			lda X+2
  1113 227F 85 90			sta @REAL_MUL.B+2
  1114 2281 AD 49 9A			lda X+3
  1115 2284 85 91			sta @REAL_MUL.B+3
  1116 2286 AD 46 9A			lda X
  1117 2289 85 86			sta @REAL_MUL.A
  1118 228B AD 47 9A			lda X+1
  1119 228E 85 87			sta @REAL_MUL.A+1
  1120 2290 AD 48 9A			lda X+2
  1121 2293 85 88			sta @REAL_MUL.A+2
  1122 2295 AD 49 9A			lda X+3
  1123 2298 85 89			sta @REAL_MUL.A+3
  1124 229A 20 33 14			jsr @REAL_MUL
  1125 229D A5 86			lda :eax
  1126 229F 8D 46 9A			sta X
  1127 22A2 A5 87			lda :eax+1
  1128 22A4 8D 47 9A			sta X+1
  1129 22A7 A5 88			lda :eax+2
  1130 22A9 8D 48 9A			sta X+2
  1131 22AC A5 89			lda :eax+3
  1132 22AE 8D 49 9A			sta X+3
  1133
  1134 				; optimize OK (SYSTEM), line = 1799
  1135
  1136 22B1 AD 46 9A			lda X
  1137 22B4 85 8E			sta @REAL_MUL.B
  1138 22B6 AD 47 9A			lda X+1
  1139 22B9 85 8F			sta @REAL_MUL.B+1
  1140 22BB AD 48 9A			lda X+2
  1141 22BE 85 90			sta @REAL_MUL.B+2
  1142 22C0 AD 49 9A			lda X+3
  1143 22C3 85 91			sta @REAL_MUL.B+3
  1144 22C5 A9 05			lda #$05
  1145 22C7 85 86			sta @REAL_MUL.A
  1146 22C9 A9 00			lda #$00
  1147 22CB 85 87			sta @REAL_MUL.A+1
  1148 22CD 85 88			sta @REAL_MUL.A+2
  1149 22CF 85 89			sta @REAL_MUL.A+3
  1150 22D1 20 33 14			jsr @REAL_MUL
  1151 22D4 A5 86			lda :eax
  1152 22D6 38 E9 3C			sub #$3C
  1153 22D9 85 86			sta @REAL_MUL.A
  1154 22DB A5 87			lda :eax+1
  1155 22DD E9 00			sbc #$00
  1156 22DF 85 87			sta @REAL_MUL.A+1
  1157 22E1 A5 88			lda :eax+2
  1158 22E3 E9 00			sbc #$00
  1159 22E5 85 88			sta @REAL_MUL.A+2
  1160 22E7 A5 89			lda :eax+3
  1161 22E9 E9 00			sbc #$00
  1162 22EB 85 89			sta @REAL_MUL.A+3
  1163 22ED AD 46 9A			lda X
  1164 22F0 85 8E			sta @REAL_MUL.B
  1165 22F2 AD 47 9A			lda X+1
  1166 22F5 85 8F			sta @REAL_MUL.B+1
  1167 22F7 AD 48 9A			lda X+2
  1168 22FA 85 90			sta @REAL_MUL.B+2
  1169 22FC AD 49 9A			lda X+3
  1170 22FF 85 91			sta @REAL_MUL.B+3
  1171 2301 20 33 14			jsr @REAL_MUL
  1172 2304 A5 87			lda :eax+1
  1173 2306 18 69 01			add #$01
  1174 2309 85 87			sta @REAL_MUL.A+1
  1175 230B A5 88			lda :eax+2
  1176 230D 69 00			adc #$00
  1177 230F 85 88			sta @REAL_MUL.A+2
  1178 2311 A5 89			lda :eax+3
  1179 2313 69 00			adc #$00
  1180 2315 85 89			sta @REAL_MUL.A+3
  1181 2317 A9 00			lda #$00
  1182 2319 38 ED 46 9A			sub X
  1183 231D 85 8E			sta @REAL_MUL.B
  1184 231F A9 01			lda #$01
  1185 2321 ED 47 9A			sbc X+1
  1186 2324 85 8F			sta @REAL_MUL.B+1
  1187 2326 A9 00			lda #$00
  1188 2328 ED 48 9A			sbc X+2
  1189 232B 85 90			sta @REAL_MUL.B+2
  1190 232D A9 00			lda #$00
  1191 232F ED 49 9A			sbc X+3
  1192 2332 85 91			sta @REAL_MUL.B+3
  1193 2334 20 33 14			jsr @REAL_MUL
  1194 2337 A5 86			lda :eax
  1195 2339 8D 4B 9A			sta RESULT
  1196 233C A5 87			lda :eax+1
  1197 233E 8D 4C 9A			sta RESULT+1
  1198 2341 A5 88			lda :eax+2
  1199 2343 8D 4D 9A			sta RESULT+2
  1200 2346 A5 89			lda :eax+3
  1201 2348 8D 4E 9A			sta RESULT+3
  1202
  1203 				; optimize OK (SYSTEM), line = 1802
  1204
  1205 234B AD 4F 9A			lda I
  1206 234E 29 02			and #$02
  1207 2350 C9 02			cmp #$02
  1208 2352 D0 21			jne l_0260
  1209 2354 A9 00			lda #$00
  1210 2356 38 ED 4B 9A			sub RESULT
  1211 235A 8D 4B 9A			sta RESULT
  1212 235D A9 00			lda #$00
  1213 235F ED 4C 9A			sbc RESULT+1
  1214 2362 8D 4C 9A			sta RESULT+1
  1215 2365 A9 00			lda #$00
  1216 2367 ED 4D 9A			sbc RESULT+2
  1217 236A 8D 4D 9A			sta RESULT+2
  1218 236D A9 00			lda #$00
  1219 236F ED 4E 9A			sbc RESULT+3
  1220 2372 8D 4E 9A			sta RESULT+3
  1221 2375			l_0260
  1222 2375			@exit
  1223
  1224 				; ------------------------------------------------------------
  1225
  1226 = 9A46			X	= DATAORIGIN+$002A
  1227 = 9A4A			SC	= DATAORIGIN+$002E
  1228 = 9A4B			RESULT	= DATAORIGIN+$002F
  1229 = 9A4F			I	= DATAORIGIN+$0033
  1230
  1231 = 9A46			@VarData	= X
  1232 = 0006			@VarDataSize	= 6
  1233
  1234 2375 60				rts						; ret
  1235 				.endl
  1236
  1237 2376			.local	SIN						; FUNCTION | OVERLOAD
  1238 2376			.local	@01018E000
  1239
  1240 				; optimize OK (SYSTEM), line = 1817
  1241
  1242 2376 AD 50 9A			lda X
  1243 2379 8D 46 9A			sta RSINCOS.X
  1244 237C AD 51 9A			lda X+1
  1245 237F 8D 47 9A			sta RSINCOS.X+1
  1246 2382 AD 52 9A			lda X+2
  1247 2385 8D 48 9A			sta RSINCOS.X+2
  1248 2388 AD 53 9A			lda X+3
  1249 238B 8D 49 9A			sta RSINCOS.X+3
  1250 238E A9 00			lda #$00
  1251 2390 8D 4A 9A			sta RSINCOS.SC
  1252 2393 20 42 21			jsr RSINCOS
  1253 2396 AD 4B 9A			lda RSINCOS.RESULT
  1254 2399 8D 54 9A			sta RESULT
  1255 239C AD 4C 9A			lda RSINCOS.RESULT+1
  1256 239F 8D 55 9A			sta RESULT+1
  1257 23A2 AD 4D 9A			lda RSINCOS.RESULT+2
  1258 23A5 8D 56 9A			sta RESULT+2
  1259 23A8 AD 4E 9A			lda RSINCOS.RESULT+3
  1260 23AB 8D 57 9A			sta RESULT+3
  1261 23AE			@exit
  1262
  1263 				; ------------------------------------------------------------
  1264
  1265 = 9A50			X	= DATAORIGIN+$0034
  1266 = 9A54			RESULT	= DATAORIGIN+$0038
  1267
  1268 = 9A50			@VarData	= X
  1269 = 0004			@VarDataSize	= 4
  1270
  1271 23AE 60				rts						; ret
  1272 				.endl
  1273 				.endl							; overload
  1274
  1275 23AF			.local	COS						; FUNCTION | OVERLOAD
  1276 23AF			.local	@01018E000
  1277
  1278 				; optimize OK (SYSTEM), line = 1831
  1279
  1280 23AF AD 58 9A			lda X
  1281 23B2 8D 46 9A			sta RSINCOS.X
  1282 23B5 AD 59 9A			lda X+1
  1283 23B8 8D 47 9A			sta RSINCOS.X+1
  1284 23BB AD 5A 9A			lda X+2
  1285 23BE 8D 48 9A			sta RSINCOS.X+2
  1286 23C1 AD 5B 9A			lda X+3
  1287 23C4 8D 49 9A			sta RSINCOS.X+3
  1288 23C7 A9 01			lda #$01
  1289 23C9 8D 4A 9A			sta RSINCOS.SC
  1290 23CC 20 42 21			jsr RSINCOS
  1291 23CF AD 4B 9A			lda RSINCOS.RESULT
  1292 23D2 8D 5C 9A			sta RESULT
  1293 23D5 AD 4C 9A			lda RSINCOS.RESULT+1
  1294 23D8 8D 5D 9A			sta RESULT+1
  1295 23DB AD 4D 9A			lda RSINCOS.RESULT+2
  1296 23DE 8D 5E 9A			sta RESULT+2
  1297 23E1 AD 4E 9A			lda RSINCOS.RESULT+3
  1298 23E4 8D 5F 9A			sta RESULT+3
  1299 23E7			@exit
  1300
  1301 				; ------------------------------------------------------------
  1302
  1303 = 9A58			X	= DATAORIGIN+$003C
  1304 = 9A5C			RESULT	= DATAORIGIN+$0040
  1305
  1306 = 9A58			@VarData	= X
  1307 = 0004			@VarDataSize	= 4
  1308
  1309 23E7 60				rts						; ret
  1310 				.endl
  1311 				.endl							; overload
  1312
  1313 23E8			.local	PAUSE						; PROCEDURE | ASSEMBLER | OVERLOAD
  1314 23E8			.local	@00
  1315
  1316 				; -------------------  ASM Block 00000043  -------------------
  1317
  1318 23E8 2C 0B D4			bit VCOUNT
  1319 23EB 30 FB			bmi *-3
  1320 23ED 2C 0B D4			bit VCOUNT
  1321 23F0 10 FB			bpl *-3
  1322
  1323 23F2			@exit
  1324 					.ifdef @new
  1325 					lda <@VarData
  1326 					sta :ztmp
  1327 					lda >@VarData
  1328 					ldy #@VarDataSize-1
  1329 					jmp @FreeMem
  1330 					els
  1331 23F2 60				rts						; ret
  1332 					eif
  1333 				.endl
  1334 				.endl							; overload
  1335
  1336 23F3			.local	RANDOM						; FUNCTION | ASSEMBLER | OVERLOAD
  1337 23F3			.local	@010180000
  1338 23F3 8D 60 9A			sta RANGE
  1339
  1340 				; -------------------  ASM Block 00000049  -------------------
  1341
  1342
  1343 				;BYTE FUNC Rand(BYTE range)
  1344 				; returns random number between 0 and
  1345 				; range-1.  If range=0, then a random
  1346 				; number between 0 and 255 is returned
  1347
  1348 23F6 AC 0A D2		  ldy $d20a   ; RANDOM
  1349
  1350 23F9 AD 60 9A		  lda range
  1351 23FC F0 08		  beq stop
  1352
  1353 23FE 85 8E		  sta :ecx
  1354 2400 84 86		  sty :eax
  1355
  1356 2402 20 AE 12		  jsr imulCL
  1357 2405 A8			  tay
  1358
  1359 2406 8C 61 9A		stop  sty Result
  1360
  1361
  1362 2409			@exit
  1363
  1364 				; ------------------------------------------------------------
  1365
  1366 = 9A60			RANGE	= DATAORIGIN+$0044
  1367 = 9A61			RESULT	= DATAORIGIN+$0045
  1368
  1369 = 9A60			@VarData	= RANGE
  1370 = 0001			@VarDataSize	= 1
  1371
  1372 2409 60				rts						; ret
  1373 				.endl
  1374 				.endl							; overload
  1375
  1376 240A			.local	RANDOM						; FUNCTION | OVERLOAD
  1377 240A			.local	@010184000
  1378
  1379 				; optimize OK (system_atari.inc), line = 179
  1380
  1381 240A AD 63 9A			lda RANGE+1
  1382 240D 0D 62 9A			ora RANGE
  1383 2410 D0 0B			jne l_02B3
  1384
  1385 				; optimize OK (system_atari.inc), line = 180
  1386
  1387 2412 A9 00			lda #$00
  1388 2414 8D 64 9A			sta RESULT
  1389 2417 8D 65 9A			sta RESULT+1
  1390 241A 4C 7F 24			jmp l_02C1
  1391 241D			l_02B3
  1392
  1393 				; optimize OK (system_atari.inc), line = 183
  1394
  1395 241D AD 25 9A			lda RNDSEED
  1396 2420 85 8E			sta :ecx
  1397 2422 AD 26 9A			lda RNDSEED+1
  1398 2425 85 8F			sta :ecx+1
  1399 2427 A9 95			lda #$95
  1400 2429 85 86			sta :eax
  1401 242B A9 45			lda #$45
  1402 242D 85 87			sta :eax+1
  1403 					.ifdef fmulinit
  1404 					fmulu_16
  1405 					els
  1406 242F 20 FA 12			imulCX
  1407 					eif
  1408 2432 A5 86			lda :eax
  1409 2434 8D 25 9A			sta RNDSEED
  1410 2437 A5 87			lda :eax+1
  1411 2439 8D 26 9A			sta RNDSEED+1
  1412
  1413 				; optimize OK (system_atari.inc), line = 184
  1414
  1415 243C AD 62 9A			lda RANGE
  1416 243F 85 8E			sta @SMALLINT.MOD.B
  1417 2441 AD 63 9A			lda RANGE+1
  1418 2444 85 8F			sta @SMALLINT.MOD.B+1
  1419 2446 AD 25 9A			lda RNDSEED
  1420 2449 85 86			sta @SMALLINT.MOD.A
  1421 244B AD 26 9A			lda RNDSEED+1
  1422 244E 85 87			sta @SMALLINT.MOD.A+1
  1423 2450 20 3F 12			jsr @SMALLINT.MOD
  1424 2453 A5 92			lda @SMALLINT.MOD.RESULT
  1425 2455 8D 64 9A			sta RESULT
  1426 2458 A5 93			lda @SMALLINT.MOD.RESULT+1
  1427 245A 8D 65 9A			sta RESULT+1
  1428
  1429 				; -------------------  ASM Block 00000050  -------------------
  1430
  1431 245D AD 63 9A			lda range+1
  1432 2460 10 07			bpl plus
  1433
  1434 2462 AD 65 9A			lda Result+1
  1435 2465 30 18			bmi ok
  1436 2467 10 05			bpl sign
  1437
  1438 2469 AD 65 9A		plus	lda Result+1
  1439 246C 10 11			bpl ok
  1440
  1441 246E A9 00		sign 	lda #0
  1442 2470 38 ED 64 9A			sub Result
  1443 2474 8D 64 9A			sta Result
  1444
  1445 2477 A9 00			lda #0
  1446 2479 ED 65 9A			sbc Result+1
  1447 247C 8D 65 9A			sta Result+1
  1448 247F			ok
  1449
  1450 247F			l_02C1
  1451 247F			@exit
  1452
  1453 				; ------------------------------------------------------------
  1454
  1455 = 9A62			RANGE	= DATAORIGIN+$0046
  1456 = 9A64			RESULT	= DATAORIGIN+$0048
  1457
  1458 = 9A62			@VarData	= RANGE
  1459 = 0002			@VarDataSize	= 2
  1460
  1461 247F 60				rts						; ret
  1462 				.endl
  1463 				.endl							; overload
  1464
  1465 				; ------------------------------------------------------------
  1466 				; ------------------------------------------------------------
  1467 2480			@UnitInit
  1468
  1469 				; -------------------  ASM Block 00000060  -------------------
  1470
  1471 					.ifdef @CmdLine
  1472
  1473 					ldx #$0F
  1474 					mva:rpl $340,x IOCB@COPY,x-
  1475 					rts
  1476
  1477 				IOCB@COPY	:16 brk
  1478 					eif
  1479
  1480
  1481 2480 60				rts
  1482
  1483 				; ------------------------------------------------------------
  1484
  1485 = 0648			M_PI_2	= $0648
  1486 = 0192			D_PI_2	= $0192
  1487 = 0004			D_PI_180	= $04
  1488 = 0101			__PORTB_BANKS	= $0101
  1489 = 0000			MGTIA	= $00
  1490 = 0080			MVBXE	= $80
  1491 = 0000			VBXE_XDLADR	= $00
  1492 = 00E0			VBXE_BCBTMP	= $E0
  1493 = 0100			VBXE_BCBADR	= $0100
  1494 = 1000			VBXE_MAPADR	= $1000
  1495 = 1000			VBXE_CHBASE	= $1000
  1496 = 5000			VBXE_OVRADR	= $5000
  1497 = B000			VBXE_WINDOW	= $B000
  1498 = 0000			IDLI	= $00
  1499 = 0001			IVBL	= $01
  1500 = 0001			IVBLD	= $01
  1501 = 0002			IVBLI	= $02
  1502 = 0003			ITIM1	= $03
  1503 = 0004			ITIM2	= $04
  1504 = 0005			ITIM4	= $05
  1505 = 00FE			CH_DELCHR	= $FE
  1506 = 009B			CH_ENTER	= $9B
  1507 = 001B			CH_ESC	= $1B
  1508 = 001C			CH_CURS_UP	= $1C
  1509 = 001D			CH_CURS_DOWN	= $1D
  1510 = 001E			CH_CURS_LEFT	= $1E
  1511 = 001F			CH_CURS_RIGHT	= $1F
  1512 = 007F			CH_TAB	= $7F
  1513 = 009B			CH_EOL	= $9B
  1514 = 007D			CH_CLR	= $7D
  1515 = 00FD			CH_BELL	= $FD
  1516 = 007E			CH_DEL	= $7E
  1517 = 009C			CH_DELLINE	= $9C
  1518 = 009D			CH_INSLINE	= $9D
  1519 = 0000			PAL_PMCOLOR0	= $00
  1520 = 0001			PAL_PMCOLOR1	= $01
  1521 = 0002			PAL_PMCOLOR2	= $02
  1522 = 0003			PAL_PMCOLOR3	= $03
  1523 = 0004			PAL_COLOR0	= $04
  1524 = 0005			PAL_COLOR1	= $05
  1525 = 0006			PAL_COLOR2	= $06
  1526 = 0007			PAL_COLOR3	= $07
  1527 = 0008			PAL_COLBAK	= $08
  1528 = 0000			COLOR_BLACK	= $00
  1529 = 000E			COLOR_WHITE	= $0E
  1530 = 0032			COLOR_RED	= $32
  1531 = 0096			COLOR_CYAN	= $96
  1532 = 0068			COLOR_VIOLET	= $68
  1533 = 00C4			COLOR_GREEN	= $C4
  1534 = 0074			COLOR_BLUE	= $74
  1535 = 00EE			COLOR_YELLOW	= $EE
  1536 = 0028			COLOR_ORANGE	= $28
  1537 = 00E4			COLOR_BROWN	= $E4
  1538 = 003C			COLOR_LIGHTRED	= $3C
  1539 = 0004			COLOR_GRAY1	= $04
  1540 = 0006			COLOR_GRAY2	= $06
  1541 = 000A			COLOR_GRAY3	= $0A
  1542 = 00CC			COLOR_LIGHTGREEN	= $CC
  1543 = 007C			COLOR_LIGHTBLUE	= $7C
  1544 = 0004			FMOPENREAD	= $04
  1545 = 0008			FMOPENWRITE	= $08
  1546 = 0009			FMOPENAPPEND	= $09
  1547 = 000C			FMOPENREADWRITE	= $0C
  1548 = 9A1C			DATESEPARATOR	= DATAORIGIN+$0000
  1549 = D20A			RND	= $D20A
  1550 = 02C0			adr.PALETTE	= $02C0
  1551 2481			.var PALETTE	= adr.PALETTE .word
  1552 = D012			adr.HPALETTE	= $D012
  1553 2481			.var HPALETTE	= adr.HPALETTE .word
  1554 = 9A1D			FILEMODE	= DATAORIGIN+$0001
  1555 = 9A1E			GRAPHMODE	= DATAORIGIN+$0002
  1556 = 9A1F			IORESULT	= DATAORIGIN+$0003
  1557 = 9A20			EOLN	= DATAORIGIN+$0004
  1558 = 9A21			SCREENWIDTH	= DATAORIGIN+$0005
  1559 = 9A23			SCREENHEIGHT	= DATAORIGIN+$0007
  1560 = 0000			adr.MEM	= $00
  1561 2481			.var MEM	= adr.MEM .word
  1562 = 9A25			RNDSEED	= DATAORIGIN+$0009
  1563
  1564 = 2481 C0 02		PALETTE
  1564 = 2483 12 D0		HPALETTE
  1564 = 2485 00 00		MEM
  1564 				.endl							; UNIT SYSTEM
  1565
  1566 				; ------------------------------------------------------------
  1567
  1568 2487			.local	ATARI						; UNIT
  1569
  1570 				; ------------------------------------------------------------
  1571
  1572 = 0000			DL_BLANK1	= $00
  1573 = 0010			DL_BLANK2	= $10
  1574 = 0020			DL_BLANK3	= $20
  1575 = 0030			DL_BLANK4	= $30
  1576 = 0040			DL_BLANK5	= $40
  1577 = 0050			DL_BLANK6	= $50
  1578 = 0060			DL_BLANK7	= $60
  1579 = 0070			DL_BLANK8	= $70
  1580 = 0080			DL_DLI	= $80
  1581 = 0040			DL_LMS	= $40
  1582 = 0020			DL_VSCROLL	= $20
  1583 = 0010			DL_HSCROLL	= $10
  1584 = 0001			DL_JMP	= $01
  1585 = 0041			DL_JVB	= $41
  1586 = 0002			DL_MODE_2	= $02
  1587 = 0003			DL_MODE_3	= $03
  1588 = 0004			DL_MODE_4	= $04
  1589 = 0005			DL_MODE_5	= $05
  1590 = 000E			DL_MODE_E	= $0E
  1591 = 000F			DL_MODE_F	= $0F
  1592 = 0010			IRQENS	= $10
  1593 = 0012			RTCLOK	= $12
  1594 = 0012			RTCLOK1	= $12
  1595 = 0013			RTCLOK2	= $13
  1596 = 0014			RTCLOK3	= $14
  1597 = 004D			ATRACT	= $4D
  1598 = 0052			LMARGIN	= $52
  1599 = 0053			RMARGIN	= $53
  1600 = 0054			ROWCRS	= $54
  1601 = 0055			COLCRS	= $55
  1602 = 0057			DINDEX	= $57
  1603 = 0058			SAVMSC	= $58
  1604 = 0062			PALNTS	= $62
  1605 = 006A			RAMTOP	= $6A
  1606 = 0200			VDSLST	= $0200
  1607 = 0230			SDLSTL	= $0230
  1608 = 0290			TXTROW	= $0290
  1609 = 0291			TXTCOL	= $0291
  1610 = 0293			TINDEX	= $0293
  1611 = 0294			TXTMSC	= $0294
  1612 = 022F			SDMCTL	= $022F
  1613 = 026F			GPRIOR	= $026F
  1614 = 02F0			CRSINH	= $02F0
  1615 = 02F3			CHACT	= $02F3
  1616 = 02F4			CHBAS	= $02F4
  1617 = 02FC			CH	= $02FC
  1618 = 02FD			FILDAT	= $02FD
  1619 = 02C0			PCOLR0	= $02C0
  1620 = 02C1			PCOLR1	= $02C1
  1621 = 02C2			PCOLR2	= $02C2
  1622 = 02C3			PCOLR3	= $02C3
  1623 = 02C4			COLOR0	= $02C4
  1624 = 02C5			COLOR1	= $02C5
  1625 = 02C6			COLOR2	= $02C6
  1626 = 02C7			COLOR3	= $02C7
  1627 = 02C8			COLOR4	= $02C8
  1628 = 02C8			COLBAKS	= $02C8
  1629 = D000			HPOSP0	= $D000
  1630 = D001			HPOSP1	= $D001
  1631 = D002			HPOSP2	= $D002
  1632 = D003			HPOSP3	= $D003
  1633 = D004			HPOSM0	= $D004
  1634 = D005			HPOSM1	= $D005
  1635 = D006			HPOSM2	= $D006
  1636 = D007			HPOSM3	= $D007
  1637 = D008			SIZEP0	= $D008
  1638 = D009			SIZEP1	= $D009
  1639 = D00A			SIZEP2	= $D00A
  1640 = D00B			SIZEP3	= $D00B
  1641 = D00C			SIZEM	= $D00C
  1642 = D00D			GRAFP0	= $D00D
  1643 = D00E			GRAFP1	= $D00E
  1644 = D00F			GRAFP2	= $D00F
  1645 = D010			GRAFP3	= $D010
  1646 = D011			GRAFM	= $D011
  1647 = D004			P0PF	= $D004
  1648 = D014			PAL	= $D014
  1649 = D013			TRIG3	= $D013
  1650 = D012			COLPM0	= $D012
  1651 = D013			COLPM1	= $D013
  1652 = D014			COLPM2	= $D014
  1653 = D015			COLPM3	= $D015
  1654 = D016			COLPF0	= $D016
  1655 = D017			COLPF1	= $D017
  1656 = D018			COLPF2	= $D018
  1657 = D019			COLPF3	= $D019
  1658 = D01A			COLBAK	= $D01A
  1659 = D01A			COLBK	= $D01A
  1660 = D01B			PRIOR	= $D01B
  1661 = D01D			GRACTL	= $D01D
  1662 = D01D			PMCNTL	= $D01D
  1663 = D01E			HITCLR	= $D01E
  1664 = D01F			CONSOL	= $D01F
  1665 = D200			AUDF1	= $D200
  1666 = D201			AUDC1	= $D201
  1667 = D202			AUDF2	= $D202
  1668 = D203			AUDC2	= $D203
  1669 = D204			AUDF3	= $D204
  1670 = D205			AUDC3	= $D205
  1671 = D206			AUDF4	= $D206
  1672 = D207			AUDC4	= $D207
  1673 = D208			AUDCTL	= $D208
  1674 = D209			KBCODE	= $D209
  1675 = D20E			IRQEN	= $D20E
  1676 = D20F			SKSTAT	= $D20F
  1677 = D300			PORTA	= $D300
  1678 = D301			PORTB	= $D301
  1679 = D302			PACTL	= $D302
  1680 = D400			DMACTL	= $D400
  1681 = D401			CHACTL	= $D401
  1682 = D402			DLISTL	= $D402
  1683 = D404			HSCROL	= $D404
  1684 = D405			VSCROL	= $D405
  1685 = D407			PMBASE	= $D407
  1686 = D409			CHBASE	= $D409
  1687 = D40A			WSYNC	= $D40A
  1688 = D40B			VCOUNT	= $D40B
  1689 = D40C			PENH	= $D40C
  1690 = D40D			PENV	= $D40D
  1691 = D40E			NMIEN	= $D40E
  1692 = FFFA			NMIVEC	= $FFFA
  1693 = FFFC			RESETVEC	= $FFFC
  1694 = FFFE			IRQVEC	= $FFFE
  1695
  1696 				.endl							; UNIT ATARI
  1697
  1698 				; ------------------------------------------------------------
  1699
  1700 2487			.local	CRT						; UNIT
  1701
  1702 				; ------------------------------------------------------------
  1703
  1704 = 9A66			TEXTATTR	= DATAORIGIN+$004A
  1705 = D01F			CONSOL	= $D01F
  1706 = 0000			CN_START_SELECT_OPTION	= $00
  1707 = 0001			CN_SELECT_OPTION	= $01
  1708 = 0002			CN_START_OPTION	= $02
  1709 = 0003			CN_OPTION	= $03
  1710 = 0004			CN_START_SELECT	= $04
  1711 = 0005			CN_SELECT	= $05
  1712 = 0006			CN_START	= $06
  1713 = 0007			CN_NONE	= $07
  1714 = 0000			BLACK	= $00
  1715 = 000F			WHITE	= $0F
  1716 = 0026			RED	= $26
  1717 = 00AC			CYAN	= $AC
  1718 = 0048			PURPLE	= $48
  1719 = 00B6			GREEN	= $B6
  1720 = 0086			BLUE	= $86
  1721 = 00DC			YELLOW	= $DC
  1722 = 0018			ORANGE	= $18
  1723 = 00F4			BROWN	= $F4
  1724 = 002A			LIGHT_RED	= $2A
  1725 = 0004			DARK_GREY	= $04
  1726 = 0008			GREY	= $08
  1727 = 00BC			LIGHT_GREEN	= $BC
  1728 = 009A			LIGHT_BLUE	= $9A
  1729 = 000C			LIGHT_GREY	= $0C
  1730 = 0000			BW40	= $00
  1731 = 0001			CO40	= $01
  1732 = 0002			BW80	= $02
  1733 = 0003			CO80	= $03
  1734 = 0007			MONO	= $07
  1735 = 0001			C40	= $01
  1736 = 0003			C80	= $03
  1737 = 0080			BLINK	= $80
  1738
  1739 				.endl							; UNIT CRT
  1740
  1741 				; ------------------------------------------------------------
  1742
  1743 2487			.local	TYPES						; UNIT
  1744
  1745 				; ------------------------------------------------------------
  1746
  1747 				.endl							; UNIT TYPES
  1748
  1749 				; ------------------------------------------------------------
  1750
  1751 2487			.local	GRAPH						; UNIT
  1752
  1753 				; ------------------------------------------------------------
  1754
  1755 = 0080			CURRENTDRIVER	= $80
  1756 = 0000			DETECT	= $00
  1757 = 0001			CGA	= $01
  1758 = 0002			MCGA	= $02
  1759 = 0003			EGA	= $03
  1760 = 0004			EGA64	= $04
  1761 = 0005			EGAMONO	= $05
  1762 = 0006			LOWRES	= $06
  1763 = 0007			HERCMONO	= $07
  1764 = 0009			VGA	= $09
  1765 = 000A			VESA	= $0A
  1766 = 000B			D1BIT	= $0B
  1767 = 000C			D2BIT	= $0C
  1768 = 000D			D4BIT	= $0D
  1769 = 000E			D6BIT	= $0E
  1770 = 000F			D8BIT	= $0F
  1771 = 0010			D12BIT	= $10
  1772 = 0018			M640X400	= $18
  1773 = 0018			M640X480	= $18
  1774 = 0001			GROK	= $01
  1775 = 00FF			GRNOINITGRAPH	= $FF
  1776 = 00FE			GRNOTDETECTED	= $FE
  1777 = 00FD			GRFILENOTFOUND	= $FD
  1778 = 00FC			GRINVALIDDRIVER	= $FC
  1779 = 00FB			GRNOLOADMEM	= $FB
  1780 = 00FA			GRNOSCANMEM	= $FA
  1781 = 00F9			GRNOFLOODMEM	= $F9
  1782 = 00F8			GRFONTNOTFOUND	= $F8
  1783 = 00F7			GRNOFONTMEM	= $F7
  1784 = 00F6			GRINVALIDMODE	= $F6
  1785 = 00F5			GRERROR	= $F5
  1786 = 00F4			GRIOERROR	= $F4
  1787 = 00F3			GRINVALIDFONT	= $F3
  1788 = 00F2			GRINVALIDFONTNUM	= $F2
  1789 = 00EE			GRINVALIDVERSION	= $EE
  1790 = 0000			CGAC0	= $00
  1791 = 0001			CGAC1	= $01
  1792 = 0002			CGAC2	= $02
  1793 = 0003			CGAC3	= $03
  1794 = 0004			CGAHI	= $04
  1795 = 0000			MCGAC0	= $00
  1796 = 0001			MCGAC1	= $01
  1797 = 0002			MCGAC2	= $02
  1798 = 0003			MCGAC3	= $03
  1799 = 0004			MCGAMED	= $04
  1800 = 0005			MCGAHI	= $05
  1801 = 0000			EGALO	= $00
  1802 = 0001			EGAHI	= $01
  1803 = 0000			EGA64LO	= $00
  1804 = 0001			EGA64HI	= $01
  1805 = 0003			EGAMONOHI	= $03
  1806 = 000A			VGALO	= $0A
  1807 = 001F			VGAMED	= $1F
  1808 = 0018			VGAHI	= $18
  1809 = 9A67			GRAPHRESULT	= DATAORIGIN+$004B
  1810 = 9A68			GETCOLOR	= DATAORIGIN+$004C
  1811 = 9A69			VIDEORAM	= DATAORIGIN+$004D
  1812 = 9A6B			adr.LASTARCCOORDS	= DATAORIGIN+$004F	; [12] RECORD
  1813 2487			.var LASTARCCOORDS	= adr.LASTARCCOORDS .word
  1814 = 9A6B			LASTARCCOORDS.X	= DATAORIGIN+$004F
  1815 = 9A6D			LASTARCCOORDS.Y	= DATAORIGIN+$0051
  1816 = 9A6F			LASTARCCOORDS.XSTART	= DATAORIGIN+$0053
  1817 = 9A71			LASTARCCOORDS.YSTART	= DATAORIGIN+$0055
  1818 = 9A73			LASTARCCOORDS.XEND	= DATAORIGIN+$0057
  1819 = 9A75			LASTARCCOORDS.YEND	= DATAORIGIN+$0059
  1820 = 9A77			WIN_LEFT	= DATAORIGIN+$005B
  1821 = 9A79			WIN_RIGHT	= DATAORIGIN+$005D
  1822 = 9A7B			WIN_TOP	= DATAORIGIN+$005F
  1823 = 9A7D			WIN_BOTTOM	= DATAORIGIN+$0061
  1824 = 9A7F			SCANLINE_WIDTH	= DATAORIGIN+$0063
  1825 = 9A80			CURRENTX	= DATAORIGIN+$0064
  1826 = 9A82			CURRENTY	= DATAORIGIN+$0066
  1827
  1828 = 2487 6B 9A		LASTARCCOORDS
  1828 				.endl							; UNIT GRAPH
  1829
  1830 				; ------------------------------------------------------------
  1831
  1832 2489			.local	VBXE						; UNIT
  1833
  1834 				; ------------------------------------------------------------
  1835 				; ------------------------------------------------------------
  1836 2489			@UnitInit
  1837
  1838 				; -------------------  ASM Block 00000138  -------------------
  1839
  1840 2489 8A 48			txa:pha
  1841
  1842 248B 20 65 19			jsr @vbxe_detect
  1843 248E 90 04			bcc ok
  1844
  1845 2490 A2 FF			ldx #MAIN.GRAPH.grNoInitGraph
  1846 2492 D0 05			bne status
  1847
  1848 2494 20 BB 19		ok	jsr @vbxe_init
  1849
  1850 2497 A2 01			ldx #MAIN.GRAPH.grOK
  1851 2499 8E 67 9A		status	stx MAIN.GRAPH.GraphResult
  1852
  1853 249C 68 AA			pla:tax
  1854
  1855 249E 60				rts
  1856
  1857 				; ------------------------------------------------------------
  1858
  1859 = 0001			VC_XDL	= $01
  1860 = 0002			VC_XCOLOR	= $02
  1861 = 0004			VC_NO_TRANS	= $04
  1862 = 0008			VC_TRANS15	= $08
  1863 = 0000			TCBLACK	= $00
  1864 = 0001			TCRED	= $01
  1865 = 0002			TCGREEN	= $02
  1866 = 0003			TCYELLOW	= $03
  1867 = 0004			TCBLUE	= $04
  1868 = 0005			TCMAGENTA	= $05
  1869 = 0006			TCCYAN	= $06
  1870 = 0007			TCWHITE	= $07
  1871 = 0008			TCBRIGHTBLACK	= $08
  1872 = 0009			TCBRIGHTRED	= $09
  1873 = 000A			TCBRIGHTGREEN	= $0A
  1874 = 000B			TCBRIGHTYELLOW	= $0B
  1875 = 000C			TCBRIGHTBLUE	= $0C
  1876 = 000D			TCBRIGHTMAGENTA	= $0D
  1877 = 000E			TCBRIGHTCYAN	= $0E
  1878 = 000F			TCBRIGHTWHITE	= $0F
  1879 = 0080			TBBLACK	= $80
  1880 = 0090			TBRED	= $90
  1881 = 00A0			TBGREEN	= $A0
  1882 = 00B0			TBYELLOW	= $B0
  1883 = 00C0			TBBLUE	= $C0
  1884 = 00D0			TBMAGENTA	= $D0
  1885 = 00E0			TBCYAN	= $E0
  1886 = 00F0			TBWHITE	= $F0
  1887 = 9A90			adr.VRAM	= DATAORIGIN+$0074	; [8] OBJECT
  1888 249F			.var VRAM	= adr.VRAM .word
  1889 = 9A90			VRAM.POSITION	= DATAORIGIN+$0074
  1890 = 9A94			VRAM.SIZE	= DATAORIGIN+$0078
  1891 = 0063			SCROLLBACK_FILL	= $63
  1892 = 1AA7			COLORMAPCONTROL = @VBXE_CMAP.CONFIG
  1893 = 0400			adr.SCROLLBACK_BUFFER	= $0400
  1894 249F			.var SCROLLBACK_BUFFER	= adr.SCROLLBACK_BUFFER .word
  1895 = 02FD			FILDAT	= $02FD
  1896 = 0054			ROWCRS	= $54
  1897 = 0055			COLCRS	= $55
  1898 = 0068			CRSADR	= $68
  1899
  1900 = 249F 90 9A		VRAM
  1900 = 24A1 00 04		SCROLLBACK_BUFFER
  1900 				.endl							; UNIT VBXE
  1901
  1902 24A3			.local	START_LEVEL					; PROCEDURE
  1903
  1904 24A3			@exit
  1905 					.ifdef @new
  1906 					lda <@VarData
  1907 					sta :ztmp
  1908 					lda >@VarData
  1909 					ldy #@VarDataSize-1
  1910 					jmp @FreeMem
  1911 					els
  1912 24A3 60				rts						; ret
  1913 					eif
  1914 				.endl
  1915
  1916 24A4			.local	DEATH_SOUND					; PROCEDURE
  1917
  1918 				; ------------------------------------------------------------
  1919
  1920 = 9AC9			A	= DATAORIGIN+$00AD
  1921
  1922 = 9AC9			@VarData	= A
  1923 = 0002			@VarDataSize	= 2
  1924
  1925 24A4			@exit
  1926 					.ifdef @new
  1927 					lda <@VarData
  1928 					sta :ztmp
  1929 					lda >@VarData
  1930 					ldy #@VarDataSize-1
  1931 					jmp @FreeMem
  1932 					els
  1933 24A4 60				rts						; ret
  1934 					eif
  1935 				.endl
  1936
  1937 24A5			.local	BALL_BLOCK_SOUND				; PROCEDURE
  1938
  1939 				; ------------------------------------------------------------
  1940
  1941 = 9ACB			A	= DATAORIGIN+$00AF
  1942 = 9ACD			B	= DATAORIGIN+$00B1
  1943
  1944 = 9ACB			@VarData	= A
  1945 = 0004			@VarDataSize	= 4
  1946
  1947 24A5			@exit
  1948 					.ifdef @new
  1949 					lda <@VarData
  1950 					sta :ztmp
  1951 					lda >@VarData
  1952 					ldy #@VarDataSize-1
  1953 					jmp @FreeMem
  1954 					els
  1955 24A5 60				rts						; ret
  1956 					eif
  1957 				.endl
  1958
  1959 24A6			.local	MOUSERESET					; PROCEDURE
  1960
  1961 24A6			@exit
  1962 					.ifdef @new
  1963 					lda <@VarData
  1964 					sta :ztmp
  1965 					lda >@VarData
  1966 					ldy #@VarDataSize-1
  1967 					jmp @FreeMem
  1968 					els
  1969 24A6 60				rts						; ret
  1970 					eif
  1971 				.endl
  1972
  1973 24A7			.local	MOUSECLICK					; FUNCTION
  1974
  1975 				; optimize OK (arkanoid_vbxe.pas), line = 89
  1976
  1977 24A7 AD C8 9A			lda MOUS.FIRE
  1978 24AA 8D CF 9A			sta RESULT
  1979 24AD A9 00			lda #$00
  1980 24AF 8D D0 9A			sta RESULT+1
  1981
  1982 				; optimize OK (arkanoid_vbxe.pas), line = 91
  1983
  1984 24B2 A0 01			ldy #1
  1985 24B4 AD C8 9A			lda MOUS.FIRE
  1986 24B7 F0 01			beq @+
  1987 24B9 88				dey
  1988 				@
  1989 24BA 98				tya
  1990 24BB 8D C8 9A			sta MOUS.FIRE
  1991 24BE			@exit
  1992
  1993 				; ------------------------------------------------------------
  1994
  1995 = 9ACF			RESULT	= DATAORIGIN+$00B3
  1996
  1997 24BE 60				rts						; ret
  1998 				.endl
  1999
  2000 24BF			.local	MOUSECOORDS					; PROCEDURE
  2001
  2002 				; optimize OK (arkanoid_vbxe.pas), line = 104
  2003
  2004 24BF AC D1 9A 84 84 AC + 	mwy X :bp2
  2005 24C9 A0 00			ldy #$00
  2006 24CB AD C4 9A			lda MOUS.X
  2007 24CE 91 84			sta (:bp2),y
  2008 24D0 C8				iny
  2009 24D1 AD C5 9A			lda MOUS.X+1
  2010 24D4 91 84			sta (:bp2),y
  2011
  2012 				; optimize OK (arkanoid_vbxe.pas), line = 105
  2013
  2014 24D6 AC D3 9A 84 84 AC + 	mwy Y :bp2
  2015 24E0 A0 00			ldy #$00
  2016 24E2 A9 BE			lda #$BE
  2017 24E4 91 84			sta (:bp2),y
  2018 24E6 C8				iny
  2019 24E7 A9 00			lda #$00
  2020 24E9 91 84			sta (:bp2),y
  2021
  2022 				; ------------------------------------------------------------
  2023
  2024 = 9AD1			X	= DATAORIGIN+$00B5
  2025 = 9AD3			Y	= DATAORIGIN+$00B7
  2026
  2027 = 9AD1			@VarData	= X
  2028 = 0004			@VarDataSize	= 4
  2029
  2030 24EB			@exit
  2031 					.ifdef @new
  2032 					lda <@VarData
  2033 					sta :ztmp
  2034 					lda >@VarData
  2035 					ldy #@VarDataSize-1
  2036 					jmp @FreeMem
  2037 					els
  2038 24EB 60				rts						; ret
  2039 					eif
  2040 				.endl
  2041
  2042 24EC			.local	MOUSE_X_LIMIT					; PROCEDURE
  2043
  2044 				; ------------------------------------------------------------
  2045
  2046 = 9AD5			MN	= DATAORIGIN+$00B9
  2047 = 9AD7			MX	= DATAORIGIN+$00BB
  2048
  2049 = 9AD5			@VarData	= MN
  2050 = 0004			@VarDataSize	= 4
  2051
  2052 24EC			@exit
  2053 					.ifdef @new
  2054 					lda <@VarData
  2055 					sta :ztmp
  2056 					lda >@VarData
  2057 					ldy #@VarDataSize-1
  2058 					jmp @FreeMem
  2059 					els
  2060 24EC 60				rts						; ret
  2061 					eif
  2062 				.endl
  2063
  2064 24ED			.local	MOUSEMOVE					; PROCEDURE
  2065
  2066 				; ------------------------------------------------------------
  2067
  2068 = 9AD9			X	= DATAORIGIN+$00BD
  2069 = 9ADB			Y	= DATAORIGIN+$00BF
  2070
  2071 = 9AD9			@VarData	= X
  2072 = 0004			@VarDataSize	= 4
  2073
  2074 24ED			@exit
  2075 					.ifdef @new
  2076 					lda <@VarData
  2077 					sta :ztmp
  2078 					lda >@VarData
  2079 					ldy #@VarDataSize-1
  2080 					jmp @FreeMem
  2081 					els
  2082 24ED 60				rts						; ret
  2083 					eif
  2084 				.endl
  2085
  2086 24EE			.local	BLITZERO					; PROCEDURE
  2087
  2088 				; optimize OK (service.pas), line = 283
  2089
  2090 24EE A9 00			lda #$00
  2091 24F0 8D E4 A3			sta I
  2092 24F3 8D E5 A3			sta I+1
  2093 24F6 AD E2 A3			lda SIZE
  2094 24F9 38 E9 01			sub #$01
  2095 24FC 8D 0F 25			sta @FORTMP_03C8_0
  2096 24FF AD E3 A3			lda SIZE+1
  2097 2502 E9 00			sbc #$00
  2098 2504 8D 08 25			sta @FORTMP_03C8_1
  2099
  2100 2507			l_03CB
  2101 				; --- ForToDoCondition
  2102 2507 A9 00			lda @FORTMP_03C8_1::#$00
  2103 2509 CD E5 A3			cmp I+1
  2104 250C D0 05			bne @+
  2105 250E A9 00			lda @FORTMP_03C8_0::#$00
  2106 2510 CD E4 A3			cmp I
  2107 				@
  2108 2513 90 76			jcc l_03D7
  2109
  2110 				; optimize OK (service.pas), line = 284
  2111
  2112 2515 AD DA A3			lda SRC
  2113 2518 18 6D E4 A3			add I
  2114 251C 85 9F			sta :STACKORIGIN+9
  2115 251E AD DB A3			lda SRC+1
  2116 2521 6D E5 A3			adc I+1
  2117 2524 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  2118 2526 AD 22 99			lda SCREEN
  2119 2529 18 65 9F			add :STACKORIGIN+9
  2120 252C A8				tay
  2121 252D AD 23 99			lda SCREEN+1
  2122 2530 65 AF			adc :STACKORIGIN+STACKWIDTH+9
  2123 2532 85 83			sta :bp+1
  2124 2534 B1 82			lda (:bp),y
  2125 2536 F0 46			jeq l_03EF
  2126 2538 AD DE A3			lda DST
  2127 253B 18 6D E4 A3			add I
  2128 253F 85 9F			sta :STACKORIGIN+9
  2129 2541 AD DF A3			lda DST+1
  2130 2544 6D E5 A3			adc I+1
  2131 2547 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  2132 2549 AD DA A3			lda SRC
  2133 254C 18 6D E4 A3			add I
  2134 2550 85 A0			sta :STACKORIGIN+10
  2135 2552 AD DB A3			lda SRC+1
  2136 2555 6D E5 A3			adc I+1
  2137 2558 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  2138 255A AD 22 99			lda SCREEN
  2139 255D 18 65 A0			add :STACKORIGIN+10
  2140 2560 A8				tay
  2141 2561 AD 23 99			lda SCREEN+1
  2142 2564 65 B0			adc :STACKORIGIN+STACKWIDTH+10
  2143 2566 85 83			sta :bp+1
  2144 2568 B1 82			lda (:bp),y
  2145 256A 85 A0			sta :STACKORIGIN+10
  2146 256C AD 22 99			lda SCREEN
  2147 256F 18 65 9F			add :STACKORIGIN+9
  2148 2572 A8				tay
  2149 2573 AD 23 99			lda SCREEN+1
  2150 2576 65 AF			adc :STACKORIGIN+STACKWIDTH+9
  2151 2578 85 83			sta :bp+1
  2152 257A A5 A0			lda :STACKORIGIN+10
  2153 257C 91 82			sta (:bp),y
  2154 257E			l_03EF
  2155
  2156 				; --- ForToDoEpilog
  2157 257E EE E4 A3			inc I
  2158 2581 D0 84			jne l_03CB
  2159 2583 EE E5 A3			inc I+1
  2160 2586 F0 03 4C 07 25		jne l_03CB
  2161 258B			l_03D7
  2162
  2163 				; ------------------------------------------------------------
  2164
  2165 = A3DA			SRC	= DATAORIGIN+$09BE
  2166 = A3DE			DST	= DATAORIGIN+$09C2
  2167 = A3E2			SIZE	= DATAORIGIN+$09C6
  2168 = A3E4			I	= DATAORIGIN+$09C8
  2169
  2170 = A3DA			@VarData	= SRC
  2171 = 000C			@VarDataSize	= 12
  2172
  2173 258B			@exit
  2174 					.ifdef @new
  2175 					lda <@VarData
  2176 					sta :ztmp
  2177 					lda >@VarData
  2178 					ldy #@VarDataSize-1
  2179 					jmp @FreeMem
  2180 					els
  2181 258B 60				rts						; ret
  2182 					eif
  2183 				.endl
  2184
  2185 258C			.local	BLITTMP						; PROCEDURE
  2186
  2187 				; optimize OK (service.pas), line = 293
  2188
  2189 258C A9 00			lda #$00
  2190 258E 8D ED A3			sta X
  2191 2591 AC EC A3			ldy SIZE
  2192 2594 88				dey
  2193 2595 8C 99 25			sty @FORTMP_0419_0
  2194
  2195 2598			l_041C
  2196 				; --- ForToDoCondition
  2197 2598 A9 00			lda @FORTMP_0419_0::#$00
  2198 259A CD ED A3			cmp X
  2199 259D 90 2F			jcc l_042A
  2200
  2201 				; optimize OK (service.pas), line = 294
  2202
  2203 259F AD E8 A3			lda DST
  2204 25A2 18 6D ED A3			add X
  2205 25A6 85 9F			sta :STACKORIGIN+9
  2206 25A8 AD E9 A3			lda DST+1
  2207 25AB 69 00			adc #$00
  2208 25AD 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  2209 25AF AC ED A3			ldy X
  2210 25B2 B9 DC 9E			lda adr.TMP,y
  2211 25B5 85 A0			sta :STACKORIGIN+10
  2212 25B7 AD 22 99			lda SCREEN
  2213 25BA 18 65 9F			add :STACKORIGIN+9
  2214 25BD A8				tay
  2215 25BE AD 23 99			lda SCREEN+1
  2216 25C1 65 AF			adc :STACKORIGIN+STACKWIDTH+9
  2217 25C3 85 83			sta :bp+1
  2218 25C5 A5 A0			lda :STACKORIGIN+10
  2219 25C7 91 82			sta (:bp),y
  2220
  2221 				; --- ForToDoEpilog
  2222 25C9 EE ED A3			inc X
  2223 25CC D0 CA			jne l_041C
  2224 25CE			l_042A
  2225
  2226 				; ------------------------------------------------------------
  2227
  2228 = A3E8			DST	= DATAORIGIN+$09CC
  2229 = A3EC			SIZE	= DATAORIGIN+$09D0
  2230 = A3ED			X	= DATAORIGIN+$09D1
  2231
  2232 = A3E8			@VarData	= DST
  2233 = 0006			@VarDataSize	= 6
  2234
  2235 25CE			@exit
  2236 					.ifdef @new
  2237 					lda <@VarData
  2238 					sta :ztmp
  2239 					lda >@VarData
  2240 					ldy #@VarDataSize-1
  2241 					jmp @FreeMem
  2242 					els
  2243 25CE 60				rts						; ret
  2244 					eif
  2245 				.endl
  2246
  2247 25CF			.local	BLITROW						; PROCEDURE
  2248
  2249 				; optimize OK (service.pas), line = 303
  2250
  2251 25CF A9 00			lda #$00
  2252 25D1 8D F9 A3			sta X
  2253 25D4 8D FA A3			sta X+1
  2254 25D7 AD F7 A3			lda SIZE
  2255 25DA 38 E9 01			sub #$01
  2256 25DD 8D F0 25			sta @FORTMP_044E_0
  2257 25E0 AD F8 A3			lda SIZE+1
  2258 25E3 E9 00			sbc #$00
  2259 25E5 8D E9 25			sta @FORTMP_044E_1
  2260
  2261 25E8			l_0451
  2262 				; --- ForToDoCondition
  2263 25E8 A9 00			lda @FORTMP_044E_1::#$00
  2264 25EA CD FA A3			cmp X+1
  2265 25ED D0 05			bne @+
  2266 25EF A9 00			lda @FORTMP_044E_0::#$00
  2267 25F1 CD F9 A3			cmp X
  2268 				@
  2269 25F4 90 50			jcc l_045D
  2270
  2271 				; optimize OK (service.pas), line = 304
  2272
  2273 25F6 AD F3 A3			lda DST
  2274 25F9 18 6D F9 A3			add X
  2275 25FD 85 9F			sta :STACKORIGIN+9
  2276 25FF AD F4 A3			lda DST+1
  2277 2602 6D FA A3			adc X+1
  2278 2605 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  2279 2607 AD EF A3			lda SRC
  2280 260A 18 6D F9 A3			add X
  2281 260E 85 A0			sta :STACKORIGIN+10
  2282 2610 AD F0 A3			lda SRC+1
  2283 2613 6D FA A3			adc X+1
  2284 2616 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  2285 2618 AD 22 99			lda SCREEN
  2286 261B 18 65 A0			add :STACKORIGIN+10
  2287 261E A8				tay
  2288 261F AD 23 99			lda SCREEN+1
  2289 2622 65 B0			adc :STACKORIGIN+STACKWIDTH+10
  2290 2624 85 83			sta :bp+1
  2291 2626 B1 82			lda (:bp),y
  2292 2628 85 A0			sta :STACKORIGIN+10
  2293 262A AD 22 99			lda SCREEN
  2294 262D 18 65 9F			add :STACKORIGIN+9
  2295 2630 A8				tay
  2296 2631 AD 23 99			lda SCREEN+1
  2297 2634 65 AF			adc :STACKORIGIN+STACKWIDTH+9
  2298 2636 85 83			sta :bp+1
  2299 2638 A5 A0			lda :STACKORIGIN+10
  2300 263A 91 82			sta (:bp),y
  2301
  2302 				; --- ForToDoEpilog
  2303 263C EE F9 A3			inc X
  2304 263F D0 A7			jne l_0451
  2305 2641 EE FA A3			inc X+1
  2306 2644 D0 A2			jne l_0451
  2307 2646			l_045D
  2308
  2309 				; ------------------------------------------------------------
  2310
  2311 = A3EF			SRC	= DATAORIGIN+$09D3
  2312 = A3F3			DST	= DATAORIGIN+$09D7
  2313 = A3F7			SIZE	= DATAORIGIN+$09DB
  2314 = A3F9			X	= DATAORIGIN+$09DD
  2315
  2316 = A3EF			@VarData	= SRC
  2317 = 000C			@VarDataSize	= 12
  2318
  2319 2646			@exit
  2320 					.ifdef @new
  2321 					lda <@VarData
  2322 					sta :ztmp
  2323 					lda >@VarData
  2324 					ldy #@VarDataSize-1
  2325 					jmp @FreeMem
  2326 					els
  2327 2646 60				rts						; ret
  2328 					eif
  2329 				.endl
  2330
  2331 2647			.local	BLITBYTE					; PROCEDURE
  2332
  2333 				; optimize OK (service.pas), line = 312
  2334
  2335 2647 AD 22 99			lda SCREEN
  2336 264A 18 6D FD A3			add SRC
  2337 264E A8				tay
  2338 264F AD 23 99			lda SCREEN+1
  2339 2652 6D FE A3			adc SRC+1
  2340 2655 85 83			sta :bp+1
  2341 2657 B1 82			lda (:bp),y
  2342 2659 85 A0			sta :STACKORIGIN+10
  2343 265B AD 22 99			lda SCREEN
  2344 265E 18 6D 01 A4			add DST
  2345 2662 A8				tay
  2346 2663 AD 23 99			lda SCREEN+1
  2347 2666 6D 02 A4			adc DST+1
  2348 2669 85 83			sta :bp+1
  2349 266B A5 A0			lda :STACKORIGIN+10
  2350 266D 91 82			sta (:bp),y
  2351
  2352 				; ------------------------------------------------------------
  2353
  2354 = A3FD			SRC	= DATAORIGIN+$09E1
  2355 = A401			DST	= DATAORIGIN+$09E5
  2356
  2357 = A3FD			@VarData	= SRC
  2358 = 0008			@VarDataSize	= 8
  2359
  2360 266F			@exit
  2361 					.ifdef @new
  2362 					lda <@VarData
  2363 					sta :ztmp
  2364 					lda >@VarData
  2365 					ldy #@VarDataSize-1
  2366 					jmp @FreeMem
  2367 					els
  2368 266F 60				rts						; ret
  2369 					eif
  2370 				.endl
  2371
  2372 2670			.local	PUTBYTE						; PROCEDURE
  2373
  2374 				; optimize OK (service.pas), line = 320
  2375
  2376 2670 AD 22 99			lda SCREEN
  2377 2673 18 6D 05 A4			add DST
  2378 2677 A8				tay
  2379 2678 AD 23 99			lda SCREEN+1
  2380 267B 6D 06 A4			adc DST+1
  2381 267E 85 83			sta :bp+1
  2382 2680 AD 09 A4			lda V
  2383 2683 91 82			sta (:bp),y
  2384
  2385 				; ------------------------------------------------------------
  2386
  2387 = A405			DST	= DATAORIGIN+$09E9
  2388 = A409			V	= DATAORIGIN+$09ED
  2389
  2390 = A405			@VarData	= DST
  2391 = 0005			@VarDataSize	= 5
  2392
  2393 2685			@exit
  2394 					.ifdef @new
  2395 					lda <@VarData
  2396 					sta :ztmp
  2397 					lda >@VarData
  2398 					ldy #@VarDataSize-1
  2399 					jmp @FreeMem
  2400 					els
  2401 2685 60				rts						; ret
  2402 					eif
  2403 				.endl
  2404
  2405 2686			.local	GETBYTE						; FUNCTION
  2406
  2407 				; optimize OK (service.pas), line = 328
  2408
  2409 2686 AD 22 99			lda SCREEN
  2410 2689 18 6D 0A A4			add SRC
  2411 268D A8				tay
  2412 268E AD 23 99			lda SCREEN+1
  2413 2691 6D 0B A4			adc SRC+1
  2414 2694 85 83			sta :bp+1
  2415 2696 B1 82			lda (:bp),y
  2416 2698 8D 0E A4			sta RESULT
  2417 269B			@exit
  2418
  2419 				; ------------------------------------------------------------
  2420
  2421 = A40A			SRC	= DATAORIGIN+$09EE
  2422 = A40E			RESULT	= DATAORIGIN+$09F2
  2423
  2424 = A40A			@VarData	= SRC
  2425 = 0004			@VarDataSize	= 4
  2426
  2427 269B 60				rts						; ret
  2428 				.endl
  2429
  2430 269C			.local	NOSOUND						; PROCEDURE
  2431
  2432 269C			@exit
  2433 					.ifdef @new
  2434 					lda <@VarData
  2435 					sta :ztmp
  2436 					lda >@VarData
  2437 					ldy #@VarDataSize-1
  2438 					jmp @FreeMem
  2439 					els
  2440 269C 60				rts						; ret
  2441 					eif
  2442 				.endl
  2443
  2444 269D			.local	MYDELAY						; PROCEDURE
  2445
  2446 				; ------------------------------------------------------------
  2447
  2448 = A40F			A	= DATAORIGIN+$09F3
  2449
  2450 = A40F			@VarData	= A
  2451 = 0002			@VarDataSize	= 2
  2452
  2453 269D			@exit
  2454 					.ifdef @new
  2455 					lda <@VarData
  2456 					sta :ztmp
  2457 					lda >@VarData
  2458 					ldy #@VarDataSize-1
  2459 					jmp @FreeMem
  2460 					els
  2461 269D 60				rts						; ret
  2462 					eif
  2463 				.endl
  2464
  2465 269E			.local	MAX						; FUNCTION
  2466
  2467 				; optimize OK (service.pas), line = 395
  2468
  2469 269E AD 13 A4			lda B
  2470 26A1 CD 11 A4			cmp A
  2471 26A4 AD 14 A4			lda B+1
  2472 26A7 ED 12 A4			sbc A+1
  2473 26AA 50 02			svc
  2474 26AC 49 80			eor #$80
  2475 26AE 10 0C			jpl l_04B4
  2476 26B0 AD 11 A4			lda A
  2477 26B3 8D 15 A4			sta RESULT
  2478 26B6 AD 12 A4			lda A+1
  2479 26B9 4C C5 26			jmp l_04C3
  2480 26BC			l_04B4
  2481
  2482 				; optimize OK (service.pas), line = 396
  2483
  2484 26BC AD 13 A4			lda B
  2485 26BF 8D 15 A4			sta RESULT
  2486 26C2 AD 14 A4			lda B+1
  2487 26C5			l_04C3
  2488 26C5 8D 16 A4			sta RESULT+1
  2489 26C8			@exit
  2490
  2491 				; ------------------------------------------------------------
  2492
  2493 = A411			A	= DATAORIGIN+$09F5
  2494 = A413			B	= DATAORIGIN+$09F7
  2495 = A415			RESULT	= DATAORIGIN+$09F9
  2496
  2497 = A411			@VarData	= A
  2498 = 0004			@VarDataSize	= 4
  2499
  2500 26C8 60				rts						; ret
  2501 				.endl
  2502
  2503 26C9			.local	MIN						; FUNCTION
  2504
  2505 				; optimize OK (service.pas), line = 402
  2506
  2507 26C9 AD 17 A4			lda A
  2508 26CC CD 19 A4			cmp B
  2509 26CF AD 18 A4			lda A+1
  2510 26D2 ED 1A A4			sbc B+1
  2511 26D5 50 02			svc
  2512 26D7 49 80			eor #$80
  2513 26D9 10 0C			jpl l_04DE
  2514 26DB AD 17 A4			lda A
  2515 26DE 8D 1B A4			sta RESULT
  2516 26E1 AD 18 A4			lda A+1
  2517 26E4 4C F0 26			jmp l_04ED
  2518 26E7			l_04DE
  2519
  2520 				; optimize OK (service.pas), line = 403
  2521
  2522 26E7 AD 19 A4			lda B
  2523 26EA 8D 1B A4			sta RESULT
  2524 26ED AD 1A A4			lda B+1
  2525 26F0			l_04ED
  2526 26F0 8D 1C A4			sta RESULT+1
  2527 26F3			@exit
  2528
  2529 				; ------------------------------------------------------------
  2530
  2531 = A417			A	= DATAORIGIN+$09FB
  2532 = A419			B	= DATAORIGIN+$09FD
  2533 = A41B			RESULT	= DATAORIGIN+$09FF
  2534
  2535 = A417			@VarData	= A
  2536 = 0004			@VarDataSize	= 4
  2537
  2538 26F3 60				rts						; ret
  2539 				.endl
  2540
  2541 26F4			.local	FATAL_ERROR					; PROCEDURE
  2542 26F4 8D 1D A4			sta ERR_TYPE
  2543
  2544 				; optimize OK (service.pas), line = 412
  2545
  2546 26F7 8D 9A 9B			sta STATUS
  2547
  2548 				; ------------------------------------------------------------
  2549
  2550 = A41D			ERR_TYPE	= DATAORIGIN+$0A01
  2551
  2552 = A41D			@VarData	= ERR_TYPE
  2553 = 0001			@VarDataSize	= 1
  2554
  2555 26FA			@exit
  2556 					.ifdef @new
  2557 					lda <@VarData
  2558 					sta :ztmp
  2559 					lda >@VarData
  2560 					ldy #@VarDataSize-1
  2561 					jmp @FreeMem
  2562 					els
  2563 26FA 60				rts						; ret
  2564 					eif
  2565 				.endl
  2566
  2567 26FB			.local	INITROWARRAY					; PROCEDURE
  2568
  2569 				; optimize OK (service.pas), line = 450
  2570
  2571 26FB A9 00			lda #$00
  2572 26FD 8D 1E A4			sta Y
  2573
  2574 2700			l_0509
  2575 				; --- ForToDoCondition
  2576 2700 AD 1E A4			lda Y
  2577 2703 C9 C8			cmp #$C8
  2578 2705 B0 34			jcs l_0517
  2579
  2580 				; optimize OK (service.pas), line = 451
  2581
  2582 2707 85 9F			sta :STACKORIGIN+9
  2583 2709 A9 00			lda #$00
  2584 270B 06 9F			asl :STACKORIGIN+9
  2585 270D 2A				rol @
  2586 270E 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  2587 2710 AD 1E A4			lda Y
  2588 2713 85 86			sta :eax
  2589 2715 A9 00			lda #$00
  2590 2717 85 87			sta :eax+1
  2591 2719 20 28 19			jsr @mul320
  2592 271C AD 1C 99			lda ROW
  2593 271F 18 65 9F			add :STACKORIGIN+9
  2594 2722 85 84			sta :bp2
  2595 2724 AD 1D 99			lda ROW+1
  2596 2727 65 AF			adc :STACKORIGIN+STACKWIDTH+9
  2597 2729 85 85			sta :bp2+1
  2598 272B A0 00			ldy #$00
  2599 272D A5 86			lda :eax
  2600 272F 91 84			sta (:bp2),y
  2601 2731 C8				iny
  2602 2732 A5 87			lda :eax+1
  2603 2734 91 84			sta (:bp2),y
  2604
  2605 				; --- ForToDoEpilog
  2606 2736 EE 1E A4			inc Y
  2607 2739 D0 C5			jne l_0509
  2608 273B			l_0517
  2609
  2610 				; optimize OK (service.pas), line = 453
  2611
  2612 273B A9 C8			lda #$C8
  2613 273D 8D 1E A4			sta Y
  2614
  2615 2740			l_0532
  2616 				; --- ForToDoCondition
  2617 2740 AD 1E A4			lda Y
  2618 2743 C9 FB			cmp #$FB
  2619 2745 B0 26			jcs l_0540
  2620
  2621 				; optimize OK (service.pas), line = 454
  2622
  2623 2747 A9 00			lda #$00
  2624 2749 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  2625 274B AD 1E A4			lda Y
  2626 274E 0A				asl @
  2627 274F 26 AF			rol :STACKORIGIN+STACKWIDTH+9
  2628 2751 18 6D 1C 99			add ROW
  2629 2755 85 84			sta :bp2
  2630 2757 AD 1D 99			lda ROW+1
  2631 275A 65 AF			adc :STACKORIGIN+STACKWIDTH+9
  2632 275C 85 85			sta :bp2+1
  2633 275E A0 00			ldy #$00
  2634 2760 98				tya
  2635 2761 91 84			sta (:bp2),y
  2636 2763 C8				iny
  2637 2764 A9 FA			lda #$FA
  2638 2766 91 84			sta (:bp2),y
  2639
  2640 				; --- ForToDoEpilog
  2641 2768 EE 1E A4			inc Y
  2642 276B D0 D3			jne l_0532
  2643 276D			l_0540
  2644
  2645 				; ------------------------------------------------------------
  2646
  2647 = A41E			Y	= DATAORIGIN+$0A02
  2648
  2649 = A41E			@VarData	= Y
  2650 = 0001			@VarDataSize	= 1
  2651
  2652 276D			@exit
  2653 					.ifdef @new
  2654 					lda <@VarData
  2655 					sta :ztmp
  2656 					lda >@VarData
  2657 					ldy #@VarDataSize-1
  2658 					jmp @FreeMem
  2659 					els
  2660 276D 60				rts						; ret
  2661 					eif
  2662 				.endl
  2663
  2664 276E			.local	INITSVGA					; PROCEDURE
  2665
  2666 276E			@exit
  2667 					.ifdef @new
  2668 					lda <@VarData
  2669 					sta :ztmp
  2670 					lda >@VarData
  2671 					ldy #@VarDataSize-1
  2672 					jmp @FreeMem
  2673 					els
  2674 276E 60				rts						; ret
  2675 					eif
  2676 				.endl
  2677
  2678 276F			.local	SHINE_BLOCK					; PROCEDURE
  2679
  2680 				; optimize OK (service.pas), line = 509
  2681
  2682 276F AD BA 9B			lda SHINEREC.XB
  2683 2772 8D 1F A4			sta XB
  2684 2775 A9 00			lda #$00
  2685 2777 8D 20 A4			sta XB+1
  2686
  2687 				; optimize OK (service.pas), line = 510
  2688
  2689 277A AD BB 9B			lda SHINEREC.YB
  2690 277D 8D 21 A4			sta YB
  2691 2780 A9 00			lda #$00
  2692 2782 8D 22 A4			sta YB+1
  2693
  2694 				; optimize OK (service.pas), line = 512
  2695
  2696 2785 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  2697 2787 AD 21 A4			lda YB
  2698 278A 0A				asl @
  2699 278B 26 B0			rol :STACKORIGIN+STACKWIDTH+10
  2700 278D 0A				asl @
  2701 278E 26 B0			rol :STACKORIGIN+STACKWIDTH+10
  2702 2790 0A				asl @
  2703 2791 0A				asl @
  2704 2792 18 6D 1F A4			add XB
  2705 2796 8D 2E A4			sta I
  2706
  2707 				; optimize OK (service.pas), line = 514
  2708
  2709 2799 A8				tay
  2710 279A B9 00 DB			lda adr.WALL,y
  2711 279D C9 09			cmp #$09
  2712 279F B0 03 4C F6 28		jcc l_0583
  2713
  2714 				; optimize OK (service.pas), line = 516
  2715
  2716 27A4 AD BC 9B			lda SHINEREC.FRAME
  2717 27A7 4A				lsr @
  2718 27A8 8D 23 A4			sta FRAME
  2719 27AB A9 00			lda #$00
  2720 27AD 8D 24 A4			sta FRAME+1
  2721
  2722 				; optimize OK (service.pas), line = 517
  2723
  2724 27B0 B9 00 DB			lda adr.WALL,y
  2725 27B3 C9 0A			cmp #$0A
  2726 27B5 F0 0E			jeq l_05A3
  2727 27B7 AD 23 A4			lda FRAME
  2728 27BA 18 69 05			add #$05
  2729 27BD 8D 23 A4			sta FRAME
  2730 27C0 90 03			scc
  2731 27C2 EE 24 A4			inc FRAME+1
  2732 27C5			l_05A3
  2733
  2734 				; optimize OK (service.pas), line = 519
  2735
  2736 27C5 AD 1F A4			lda XB
  2737 27C8 85 A0			sta :STACKORIGIN+10
  2738 27CA AD 20 A4			lda XB+1
  2739 27CD 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  2740 27CF 06 A0			asl :STACKORIGIN+10
  2741 27D1 26 B0			rol :STACKORIGIN+STACKWIDTH+10
  2742 27D3 06 A0			asl :STACKORIGIN+10
  2743 27D5 26 B0			rol :STACKORIGIN+STACKWIDTH+10
  2744 27D7 06 A0			asl :STACKORIGIN+10
  2745 27D9 26 B0			rol :STACKORIGIN+STACKWIDTH+10
  2746 27DB 06 A0			asl :STACKORIGIN+10
  2747 27DD 26 B0			rol :STACKORIGIN+STACKWIDTH+10
  2748 27DF A9 09			lda #$09
  2749 27E1 18 65 A0			add :STACKORIGIN+10
  2750 27E4 8D 25 A4			sta XF
  2751 27E7 A9 00			lda #$00
  2752 27E9 65 B0			adc :STACKORIGIN+STACKWIDTH+10
  2753 27EB 8D 26 A4			sta XF+1
  2754
  2755 				; optimize OK (service.pas), line = 520
  2756
  2757 27EE AD 21 A4			lda YB
  2758 27F1 85 A0			sta :STACKORIGIN+10
  2759 27F3 AD 22 A4			lda YB+1
  2760 27F6 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  2761 27F8 06 A0			asl :STACKORIGIN+10
  2762 27FA 26 B0			rol :STACKORIGIN+STACKWIDTH+10
  2763 27FC 06 A0			asl :STACKORIGIN+10
  2764 27FE 26 B0			rol :STACKORIGIN+STACKWIDTH+10
  2765 2800 06 A0			asl :STACKORIGIN+10
  2766 2802 26 B0			rol :STACKORIGIN+STACKWIDTH+10
  2767 2804 A9 16			lda #$16
  2768 2806 18 65 A0			add :STACKORIGIN+10
  2769 2809 8D 27 A4			sta YF
  2770 280C A9 00			lda #$00
  2771 280E 65 B0			adc :STACKORIGIN+STACKWIDTH+10
  2772 2810 8D 28 A4			sta YF+1
  2773
  2774 				; optimize OK (service.pas), line = 521
  2775
  2776 2813 AD 23 A4			lda FRAME
  2777 2816 85 9F			sta :STACKORIGIN+9
  2778 2818 AD 24 A4			lda FRAME+1
  2779 281B 06 9F			asl :STACKORIGIN+9
  2780 281D 2A				rol @
  2781 281E 06 9F			asl :STACKORIGIN+9
  2782 2820 2A				rol @
  2783 2821 06 9F			asl :STACKORIGIN+9
  2784 2823 2A				rol @
  2785 2824 06 9F			asl :STACKORIGIN+9
  2786 2826 2A				rol @
  2787 2827 06 9F			asl :STACKORIGIN+9
  2788 2829 2A				rol @
  2789 282A 06 9F			asl :STACKORIGIN+9
  2790 282C 2A				rol @
  2791 282D 06 9F			asl :STACKORIGIN+9
  2792 282F 2A				rol @
  2793 2830 8D 2A A4			sta FR+1
  2794 2833 A5 9F			lda :STACKORIGIN+9
  2795 2835 8D 29 A4			sta FR
  2796
  2797 				; optimize OK (service.pas), line = 523
  2798
  2799 2838 A9 00			lda #$00
  2800 283A 8D 2D A4			sta Y
  2801
  2802 283D			l_05D3
  2803 				; --- ForToDoCondition
  2804 283D AD 2D A4			lda Y
  2805 2840 C9 08			cmp #$08
  2806 2842 90 03 4C F6 28		jcs l_05E1
  2807
  2808 				; optimize OK (service.pas), line = 525
  2809
  2810 2847 85 9F			sta :STACKORIGIN+9
  2811 2849 A9 00			lda #$00
  2812 284B 06 9F			asl :STACKORIGIN+9
  2813 284D 2A				rol @
  2814 284E 06 9F			asl :STACKORIGIN+9
  2815 2850 2A				rol @
  2816 2851 06 9F			asl :STACKORIGIN+9
  2817 2853 2A				rol @
  2818 2854 06 9F			asl :STACKORIGIN+9
  2819 2856 2A				rol @
  2820 2857 8D 2C A4			sta OG+1
  2821 285A A5 9F			lda :STACKORIGIN+9
  2822 285C 8D 2B A4			sta OG
  2823
  2824 				; optimize OK (service.pas), line = 528
  2825
  2826 285F AD 27 A4			lda YF
  2827 2862 18 6D 2D A4			add Y
  2828 2866 85 A1			sta :STACKORIGIN+11
  2829 2868 AD 28 A4			lda YF+1
  2830 286B 69 00			adc #$00
  2831 286D 06 A1			asl :STACKORIGIN+11
  2832 286F 2A				rol @
  2833 2870 85 B1			sta :STACKORIGIN+STACKWIDTH+11
  2834 2872 AD 1C 99			lda ROW
  2835 2875 18 65 A1			add :STACKORIGIN+11
  2836 2878 85 84			sta :bp2
  2837 287A AD 1D 99			lda ROW+1
  2838 287D 65 B1			adc :STACKORIGIN+STACKWIDTH+11
  2839 287F 85 85			sta :bp2+1
  2840 2881 A0 00			ldy #$00
  2841 2883 AD 25 A4			lda XF
  2842 2886 18 71 84			add (:bp2),y
  2843 2889 8D F3 A3			sta BLITROW.DST
  2844 288C C8				iny
  2845 288D AD 26 A4			lda XF+1
  2846 2890 71 84			adc (:bp2),y
  2847 2892 8D F4 A3			sta BLITROW.DST+1
  2848 2895 A9 00			lda #$00
  2849 2897 69 00			adc #$00
  2850 2899 8D F5 A3			sta BLITROW.DST+2
  2851 289C A9 00			lda #$00
  2852 289E 69 00			adc #$00
  2853 28A0 8D F6 A3			sta BLITROW.DST+3
  2854 28A3 AD 31 9B			lda SHINEWALL.OFS
  2855 28A6 18 6D 29 A4			add FR
  2856 28AA 85 A1			sta :STACKORIGIN+11
  2857 28AC AD 32 9B			lda SHINEWALL.OFS+1
  2858 28AF 6D 2A A4			adc FR+1
  2859 28B2 85 B1			sta :STACKORIGIN+STACKWIDTH+11
  2860 28B4 AD 33 9B			lda SHINEWALL.OFS+2
  2861 28B7 69 00			adc #$00
  2862 28B9 85 C1			sta :STACKORIGIN+STACKWIDTH*2+11
  2863 28BB AD 34 9B			lda SHINEWALL.OFS+3
  2864 28BE 69 00			adc #$00
  2865 28C0 85 D1			sta :STACKORIGIN+STACKWIDTH*3+11
  2866 28C2 A5 A1			lda :STACKORIGIN+11
  2867 28C4 18 6D 2B A4			add OG
  2868 28C8 8D EF A3			sta BLITROW.SRC
  2869 28CB A5 B1			lda :STACKORIGIN+STACKWIDTH+11
  2870 28CD 6D 2C A4			adc OG+1
  2871 28D0 8D F0 A3			sta BLITROW.SRC+1
  2872 28D3 A5 C1			lda :STACKORIGIN+STACKWIDTH*2+11
  2873 28D5 69 00			adc #$00
  2874 28D7 8D F1 A3			sta BLITROW.SRC+2
  2875 28DA A5 D1			lda :STACKORIGIN+STACKWIDTH*3+11
  2876 28DC 69 00			adc #$00
  2877 28DE 8D F2 A3			sta BLITROW.SRC+3
  2878 28E1 A9 10			lda #$10
  2879 28E3 8D F7 A3			sta BLITROW.SIZE
  2880 28E6 A9 00			lda #$00
  2881 28E8 8D F8 A3			sta BLITROW.SIZE+1
  2882 28EB 20 CF 25			jsr BLITROW
  2883
  2884 				; --- ForToDoEpilog
  2885 28EE EE 2D A4			inc Y
  2886 28F1 F0 03 4C 3D 28		jne l_05D3
  2887 28F6			l_05E1
  2888 28F6			l_0583
  2889
  2890 				; optimize FAIL (0, service.pas), line = 532
  2891
  2892 28F6 EE BC 9B			inc SHINEREC.FRAME
  2893
  2894 				; optimize OK (service.pas), line = 533
  2895
  2896 28F9 AD BC 9B			lda SHINEREC.FRAME
  2897 28FC C9 0A			cmp #$0A
  2898 28FE D0 05			jne l_0628
  2899 2900 A9 00			lda #$00
  2900 2902 8D BE 9B			sta SHINEREC.ACTIVE
  2901 2905			l_0628
  2902
  2903 				; ------------------------------------------------------------
  2904
  2905 = A41F			XB	= DATAORIGIN+$0A03
  2906 = A421			YB	= DATAORIGIN+$0A05
  2907 = A423			FRAME	= DATAORIGIN+$0A07
  2908 = A425			XF	= DATAORIGIN+$0A09
  2909 = A427			YF	= DATAORIGIN+$0A0B
  2910 = A429			FR	= DATAORIGIN+$0A0D
  2911 = A42B			OG	= DATAORIGIN+$0A0F
  2912 = A42D			Y	= DATAORIGIN+$0A11
  2913 = A42E			I	= DATAORIGIN+$0A12
  2914
  2915 = A41F			@VarData	= XB
  2916 = 0010			@VarDataSize	= 16
  2917
  2918 2905			@exit
  2919 					.ifdef @new
  2920 					lda <@VarData
  2921 					sta :ztmp
  2922 					lda >@VarData
  2923 					ldy #@VarDataSize-1
  2924 					jmp @FreeMem
  2925 					els
  2926 2905 60				rts						; ret
  2927 					eif
  2928 				.endl
  2929
  2930 2906			.local	UNSHINE_BLOCK					; PROCEDURE
  2931
  2932 				; optimize OK (service.pas), line = 542
  2933
  2934 2906 A9 09			lda #$09
  2935 2908 8D BC 9B			sta SHINEREC.FRAME
  2936
  2937 				; optimize FAIL ('SHINE_BLOCK', service.pas), line = 543
  2938
  2939 290B 20 6F 27			jsr SHINE_BLOCK
  2940
  2941 290E			@exit
  2942 					.ifdef @new
  2943 					lda <@VarData
  2944 					sta :ztmp
  2945 					lda >@VarData
  2946 					ldy #@VarDataSize-1
  2947 					jmp @FreeMem
  2948 					els
  2949 290E 60				rts						; ret
  2950 					eif
  2951 				.endl
  2952
  2953 290F			.local	SHINE						; PROCEDURE
  2954
  2955 				; optimize OK (service.pas), line = 550
  2956
  2957 290F AD BE 9B			lda SHINEREC.ACTIVE
  2958 2912 F0 03			jeq l_0648
  2959 2914 20 06 29			jsr UNSHINE_BLOCK
  2960 2917			l_0648
  2961
  2962 				; optimize OK (service.pas), line = 552
  2963
  2964 2917 AD 2F A4			lda XB
  2965 291A 8D BA 9B			sta SHINEREC.XB
  2966
  2967 				; optimize OK (service.pas), line = 553
  2968
  2969 291D AD 30 A4			lda YB
  2970 2920 8D BB 9B			sta SHINEREC.YB
  2971
  2972 				; optimize OK (service.pas), line = 554
  2973
  2974 2923 A9 00			lda #$00
  2975 2925 8D BC 9B			sta SHINEREC.FRAME
  2976
  2977 				; optimize OK (service.pas), line = 555
  2978
  2979 2928 A9 01			lda #$01
  2980 292A 8D BE 9B			sta SHINEREC.ACTIVE
  2981
  2982 				; optimize OK (service.pas), line = 556
  2983
  2984 292D AD 30 A4			lda YB
  2985 2930 0A				asl @
  2986 2931 0A				asl @
  2987 2932 0A				asl @
  2988 2933 0A				asl @
  2989 2934 18 6D 2F A4			add XB
  2990 2938 A8				tay
  2991 2939 B9 00 DB			lda adr.WALL,y
  2992 293C 8D BD 9B			sta SHINEREC.BLOCK
  2993
  2994 				; ------------------------------------------------------------
  2995
  2996 = A42F			XB	= DATAORIGIN+$0A13
  2997 = A430			YB	= DATAORIGIN+$0A14
  2998
  2999 = A42F			@VarData	= XB
  3000 = 0002			@VarDataSize	= 2
  3001
  3002 293F			@exit
  3003 					.ifdef @new
  3004 					lda <@VarData
  3005 					sta :ztmp
  3006 					lda >@VarData
  3007 					ldy #@VarDataSize-1
  3008 					jmp @FreeMem
  3009 					els
  3010 293F 60				rts						; ret
  3011 					eif
  3012 				.endl
  3013
  3014 2940			.local	CHECKSHINE					; PROCEDURE
  3015
  3016 				; optimize OK (service.pas), line = 562
  3017
  3018 2940 AD BE 9B			lda SHINEREC.ACTIVE
  3019 2943 C9 01			cmp #$01
  3020 2945 D0 03			jne l_0689
  3021 2947 20 6F 27			jsr SHINE_BLOCK
  3022 294A			l_0689
  3023
  3024 294A			@exit
  3025 					.ifdef @new
  3026 					lda <@VarData
  3027 					sta :ztmp
  3028 					lda >@VarData
  3029 					ldy #@VarDataSize-1
  3030 					jmp @FreeMem
  3031 					els
  3032 294A 60				rts						; ret
  3033 					eif
  3034 				.endl
  3035
  3036 294B			.local	RANDOM_LETTER_DROP				; FUNCTION
  3037
  3038 				; --- RepeatUntilProlog
  3039 294B			l_0692
  3040
  3041 				; optimize OK (service.pas), line = 570
  3042
  3043 294B A9 64			lda #$64
  3044 294D 20 F3 23			jsr SYSTEM.RANDOM.@010180000
  3045 2950 AD 61 9A			lda SYSTEM.RANDOM.@010180000.RESULT
  3046 2953 8D 33 A4			sta RN
  3047 2956 A9 00			lda #$00
  3048 2958 8D 34 A4			sta RN+1
  3049
  3050 				; optimize OK (service.pas), line = 571
  3051
  3052 295B A9 00			lda #$00
  3053 295D 8D 35 A4			sta SUM
  3054 2960 8D 36 A4			sta SUM+1
  3055
  3056 				; optimize OK (service.pas), line = 572
  3057
  3058 2963 8D 37 A4			sta LETTER
  3059 2966 8D 38 A4			sta LETTER+1
  3060
  3061 				; --- RepeatUntilProlog
  3062 2969			l_06A0
  3063
  3064 				; optimize FAIL (0, service.pas), line = 577
  3065
  3066 2969 EE 37 A4			inc LETTER
  3067 296C D0 03			sne
  3068 296E EE 38 A4			inc LETTER+1
  3069
  3070 				; optimize OK (service.pas), line = 578
  3071
  3072 2971 AC 37 A4			ldy LETTER
  3073 2974 B9 9B 10			lda adr.LETTER_DIS,y
  3074 2977 18 6D 35 A4			add SUM
  3075 297B 8D 35 A4			sta SUM
  3076 297E AD 36 A4			lda SUM+1
  3077 2981 69 00			adc #$00
  3078 2983 8D 36 A4			sta SUM+1
  3079
  3080 				; optimize OK (service.pas), line = 581
  3081
  3082 2986 AD 34 A4			lda RN+1
  3083 2989 CD 36 A4			cmp SUM+1
  3084 298C D0 06			bne @+
  3085 298E AD 33 A4			lda RN
  3086 2991 CD 35 A4			cmp SUM
  3087 				@
  3088 2994 B0 D3			jcs l_06A0
  3089
  3090 				; optimize OK (service.pas), line = 585
  3091
  3092 2996 AD 37 A4			lda LETTER
  3093 2999 38 E9 01			sub #$01
  3094 299C 85 9F			sta :STACKORIGIN+9
  3095 299E AD 38 A4			lda LETTER+1
  3096 29A1 E9 00			sbc #$00
  3097 29A3 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  3098 29A5 A9 00			lda #$00
  3099 29A7 E9 00			sbc #$00
  3100 29A9 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
  3101 29AB A9 00			lda #$00
  3102 29AD E9 00			sbc #$00
  3103 29AF 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
  3104 29B1 AD D1 9B			lda LETT.LAST
  3105 29B4 85 A0			sta :STACKORIGIN+10
  3106 29B6 A0 00			ldy #$00
  3107 29B8 AD D2 9B			lda LETT.LAST+1
  3108 29BB 10 01			spl
  3109 29BD 88				dey
  3110 29BE 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  3111 29C0 84 C0			sty :STACKORIGIN+STACKWIDTH*2+10
  3112 29C2 84 D0			sty :STACKORIGIN+STACKWIDTH*3+10
  3113 29C4 A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
  3114 29C6 C5 D0			cmp :STACKORIGIN+STACKWIDTH*3+10
  3115 29C8 D0 10			bne @+
  3116 29CA A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
  3117 29CC C5 C0			cmp :STACKORIGIN+STACKWIDTH*2+10
  3118 29CE D0 0A			bne @+
  3119 29D0 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  3120 29D2 C5 B0			cmp :STACKORIGIN+STACKWIDTH+10
  3121 29D4 D0 04			bne @+
  3122 29D6 A5 9F			lda :STACKORIGIN+9
  3123 29D8 C5 A0			cmp :STACKORIGIN+10
  3124 				@
  3125 29DA D0 03 4C 4B 29		jeq l_0692
  3126
  3127 				; optimize OK (service.pas), line = 587
  3128
  3129 29DF AD 37 A4			lda LETTER
  3130 29E2 38 E9 01			sub #$01
  3131 29E5 8D 31 A4			sta RESULT
  3132 29E8 AD 38 A4			lda LETTER+1
  3133 29EB E9 00			sbc #$00
  3134 29ED 8D 32 A4			sta RESULT+1
  3135 29F0			@exit
  3136
  3137 				; ------------------------------------------------------------
  3138
  3139 = A431			RESULT	= DATAORIGIN+$0A15
  3140 = A433			RN	= DATAORIGIN+$0A17
  3141 = A435			SUM	= DATAORIGIN+$0A19
  3142 = A437			LETTER	= DATAORIGIN+$0A1B
  3143
  3144 = A433			@VarData	= RN
  3145 = 0006			@VarDataSize	= 6
  3146
  3147 29F0 60				rts						; ret
  3148 				.endl
  3149
  3150 29F1			.local	PUT_LETTER					; PROCEDURE
  3151
  3152 				; optimize OK (service.pas), line = 596
  3153
  3154 29F1 A9 00			lda #$00
  3155 29F3 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
  3156 29F5 AD C5 9B			lda LETT.TYP+1
  3157 29F8 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  3158 29FA AD C4 9B			lda LETT.TYP
  3159 29FD 0A				asl @
  3160 29FE 26 AF			rol :STACKORIGIN+STACKWIDTH+9
  3161 2A00 26 BF			rol :STACKORIGIN+STACKWIDTH*2+9
  3162 2A02 0A				asl @
  3163 2A03 26 AF			rol :STACKORIGIN+STACKWIDTH+9
  3164 2A05 26 BF			rol :STACKORIGIN+STACKWIDTH*2+9
  3165 2A07 85 9F			sta :STACKORIGIN+9
  3166 2A09 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  3167 2A0B 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
  3168 2A0D A5 9F			lda :STACKORIGIN+9
  3169 2A0F 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  3170 2A11 AD C6 9B			lda LETT.FRAME
  3171 2A14 85 A0			sta :STACKORIGIN+10
  3172 2A16 A9 00			lda #$00
  3173 2A18 06 A0			asl :STACKORIGIN+10
  3174 2A1A 2A				rol @
  3175 2A1B 06 A0			asl :STACKORIGIN+10
  3176 2A1D 2A				rol @
  3177 2A1E 06 A0			asl :STACKORIGIN+10
  3178 2A20 2A				rol @
  3179 2A21 06 A0			asl :STACKORIGIN+10
  3180 2A23 2A				rol @
  3181 2A24 18 65 AF			add :STACKORIGIN+STACKWIDTH+9
  3182 2A27 8D 3A A4			sta FL+1
  3183 2A2A A5 A0			lda :STACKORIGIN+10
  3184 2A2C 8D 39 A4			sta FL
  3185
  3186 				; optimize OK (service.pas), line = 598
  3187
  3188 2A2F A9 00			lda #$00
  3189 2A31 8D 3D A4			sta YL
  3190
  3191 2A34			l_06F0
  3192 				; --- ForToDoCondition
  3193 2A34 AD 3D A4			lda YL
  3194 2A37 C9 08			cmp #$08
  3195 2A39 90 03 4C F4 2A		jcs l_06FE
  3196
  3197 				; optimize OK (service.pas), line = 600
  3198
  3199 2A3E 85 9F			sta :STACKORIGIN+9
  3200 2A40 A9 00			lda #$00
  3201 2A42 06 9F			asl :STACKORIGIN+9
  3202 2A44 2A				rol @
  3203 2A45 06 9F			asl :STACKORIGIN+9
  3204 2A47 2A				rol @
  3205 2A48 06 9F			asl :STACKORIGIN+9
  3206 2A4A 2A				rol @
  3207 2A4B 06 9F			asl :STACKORIGIN+9
  3208 2A4D 2A				rol @
  3209 2A4E 06 9F			asl :STACKORIGIN+9
  3210 2A50 2A				rol @
  3211 2A51 06 9F			asl :STACKORIGIN+9
  3212 2A53 2A				rol @
  3213 2A54 06 9F			asl :STACKORIGIN+9
  3214 2A56 2A				rol @
  3215 2A57 8D 3C A4			sta FW+1
  3216 2A5A A5 9F			lda :STACKORIGIN+9
  3217 2A5C 8D 3B A4			sta FW
  3218
  3219 				; optimize OK (service.pas), line = 602
  3220
  3221 2A5F AD C3 9B			lda LETT.Y
  3222 2A62 18 6D 3D A4			add YL
  3223 2A66 85 A1			sta :STACKORIGIN+11
  3224 2A68 A9 00			lda #$00
  3225 2A6A 69 00			adc #$00
  3226 2A6C 06 A1			asl :STACKORIGIN+11
  3227 2A6E 2A				rol @
  3228 2A6F 85 B1			sta :STACKORIGIN+STACKWIDTH+11
  3229 2A71 AD 1C 99			lda ROW
  3230 2A74 18 65 A1			add :STACKORIGIN+11
  3231 2A77 85 84			sta :bp2
  3232 2A79 AD 1D 99			lda ROW+1
  3233 2A7C 65 B1			adc :STACKORIGIN+STACKWIDTH+11
  3234 2A7E 85 85			sta :bp2+1
  3235 2A80 A0 00			ldy #$00
  3236 2A82 AD C2 9B			lda LETT.X
  3237 2A85 18 71 84			add (:bp2),y
  3238 2A88 8D DE A3			sta BLITZERO.DST
  3239 2A8B C8				iny
  3240 2A8C A9 00			lda #$00
  3241 2A8E 71 84			adc (:bp2),y
  3242 2A90 8D DF A3			sta BLITZERO.DST+1
  3243 2A93 A9 00			lda #$00
  3244 2A95 69 00			adc #$00
  3245 2A97 8D E0 A3			sta BLITZERO.DST+2
  3246 2A9A A9 00			lda #$00
  3247 2A9C 69 00			adc #$00
  3248 2A9E 8D E1 A3			sta BLITZERO.DST+3
  3249 2AA1 AD 49 9B			lda LETTERS.OFS
  3250 2AA4 18 6D 3B A4			add FW
  3251 2AA8 85 A1			sta :STACKORIGIN+11
  3252 2AAA AD 4A 9B			lda LETTERS.OFS+1
  3253 2AAD 6D 3C A4			adc FW+1
  3254 2AB0 85 B1			sta :STACKORIGIN+STACKWIDTH+11
  3255 2AB2 AD 4B 9B			lda LETTERS.OFS+2
  3256 2AB5 69 00			adc #$00
  3257 2AB7 85 C1			sta :STACKORIGIN+STACKWIDTH*2+11
  3258 2AB9 AD 4C 9B			lda LETTERS.OFS+3
  3259 2ABC 69 00			adc #$00
  3260 2ABE 85 D1			sta :STACKORIGIN+STACKWIDTH*3+11
  3261 2AC0 A5 A1			lda :STACKORIGIN+11
  3262 2AC2 18 6D 39 A4			add FL
  3263 2AC6 8D DA A3			sta BLITZERO.SRC
  3264 2AC9 A5 B1			lda :STACKORIGIN+STACKWIDTH+11
  3265 2ACB 6D 3A A4			adc FL+1
  3266 2ACE 8D DB A3			sta BLITZERO.SRC+1
  3267 2AD1 A5 C1			lda :STACKORIGIN+STACKWIDTH*2+11
  3268 2AD3 69 00			adc #$00
  3269 2AD5 8D DC A3			sta BLITZERO.SRC+2
  3270 2AD8 A5 D1			lda :STACKORIGIN+STACKWIDTH*3+11
  3271 2ADA 69 00			adc #$00
  3272 2ADC 8D DD A3			sta BLITZERO.SRC+3
  3273 2ADF A9 10			lda #$10
  3274 2AE1 8D E2 A3			sta BLITZERO.SIZE
  3275 2AE4 A9 00			lda #$00
  3276 2AE6 8D E3 A3			sta BLITZERO.SIZE+1
  3277 2AE9 20 EE 24			jsr BLITZERO
  3278
  3279 				; --- ForToDoEpilog
  3280 2AEC EE 3D A4			inc YL
  3281 2AEF F0 03 4C 34 2A		jne l_06F0
  3282 2AF4			l_06FE
  3283
  3284 				; ------------------------------------------------------------
  3285
  3286 = A439			FL	= DATAORIGIN+$0A1D
  3287 = A43B			FW	= DATAORIGIN+$0A1F
  3288 = A43D			YL	= DATAORIGIN+$0A21
  3289
  3290 = A439			@VarData	= FL
  3291 = 0005			@VarDataSize	= 5
  3292
  3293 2AF4			@exit
  3294 					.ifdef @new
  3295 					lda <@VarData
  3296 					sta :ztmp
  3297 					lda >@VarData
  3298 					ldy #@VarDataSize-1
  3299 					jmp @FreeMem
  3300 					els
  3301 2AF4 60				rts						; ret
  3302 					eif
  3303 				.endl
  3304
  3305 2AF5			.local	REMOVE_LETTER					; PROCEDURE
  3306
  3307 				; optimize OK (service.pas), line = 614
  3308
  3309 2AF5 A9 00			lda #$00
  3310 2AF7 8D 40 A4			sta YL
  3311
  3312 2AFA			l_073C
  3313 				; --- ForToDoCondition
  3314 2AFA AD 40 A4			lda YL
  3315 2AFD C9 08			cmp #$08
  3316 2AFF 90 03 4C 87 2B		jcs l_074A
  3317
  3318 				; optimize OK (service.pas), line = 616
  3319
  3320 2B04 AD C3 9B			lda LETT.Y
  3321 2B07 6D 40 A4			adc YL
  3322 2B0A 85 A0			sta :STACKORIGIN+10
  3323 2B0C A9 00			lda #$00
  3324 2B0E 69 00			adc #$00
  3325 2B10 06 A0			asl :STACKORIGIN+10
  3326 2B12 2A				rol @
  3327 2B13 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  3328 2B15 AD 1C 99			lda ROW
  3329 2B18 18 65 A0			add :STACKORIGIN+10
  3330 2B1B 85 84			sta :bp2
  3331 2B1D AD 1D 99			lda ROW+1
  3332 2B20 65 B0			adc :STACKORIGIN+STACKWIDTH+10
  3333 2B22 85 85			sta :bp2+1
  3334 2B24 A0 00			ldy #$00
  3335 2B26 AD C2 9B			lda LETT.X
  3336 2B29 18 71 84			add (:bp2),y
  3337 2B2C 8D 3E A4			sta AD
  3338 2B2F C8				iny
  3339 2B30 A9 00			lda #$00
  3340 2B32 71 84			adc (:bp2),y
  3341 2B34 8D 3F A4			sta AD+1
  3342
  3343 				; optimize OK (service.pas), line = 617
  3344
  3345 2B37 C9 FA			cmp #$FA
  3346 2B39 B0 44			jcs l_076F
  3347
  3348 				; optimize OK (service.pas), line = 620
  3349
  3350 2B3B AD 3E A4			lda AD
  3351 2B3E 8D F3 A3			sta BLITROW.DST
  3352 2B41 AD 3F A4			lda AD+1
  3353 2B44 8D F4 A3			sta BLITROW.DST+1
  3354 2B47 A9 00			lda #$00
  3355 2B49 8D F5 A3			sta BLITROW.DST+2
  3356 2B4C 8D F6 A3			sta BLITROW.DST+3
  3357 2B4F AD E9 9A			lda PLAYSCREEN.OFS
  3358 2B52 18 6D 3E A4			add AD
  3359 2B56 8D EF A3			sta BLITROW.SRC
  3360 2B59 AD EA 9A			lda PLAYSCREEN.OFS+1
  3361 2B5C 6D 3F A4			adc AD+1
  3362 2B5F 8D F0 A3			sta BLITROW.SRC+1
  3363 2B62 AD EB 9A			lda PLAYSCREEN.OFS+2
  3364 2B65 69 00			adc #$00
  3365 2B67 8D F1 A3			sta BLITROW.SRC+2
  3366 2B6A AD EC 9A			lda PLAYSCREEN.OFS+3
  3367 2B6D 69 00			adc #$00
  3368 2B6F 8D F2 A3			sta BLITROW.SRC+3
  3369 2B72 A9 10			lda #$10
  3370 2B74 8D F7 A3			sta BLITROW.SIZE
  3371 2B77 A9 00			lda #$00
  3372 2B79 8D F8 A3			sta BLITROW.SIZE+1
  3373 2B7C 20 CF 25			jsr BLITROW
  3374 2B7F			l_076F
  3375
  3376 				; --- ForToDoEpilog
  3377 2B7F EE 40 A4			inc YL
  3378 2B82 F0 03 4C FA 2A		jne l_073C
  3379 2B87			l_074A
  3380
  3381 				; ------------------------------------------------------------
  3382
  3383 = A43E			AD	= DATAORIGIN+$0A22
  3384 = A440			YL	= DATAORIGIN+$0A24
  3385
  3386 = A43E			@VarData	= AD
  3387 = 0003			@VarDataSize	= 3
  3388
  3389 2B87			@exit
  3390 					.ifdef @new
  3391 					lda <@VarData
  3392 					sta :ztmp
  3393 					lda >@VarData
  3394 					ldy #@VarDataSize-1
  3395 					jmp @FreeMem
  3396 					els
  3397 2B87 60				rts						; ret
  3398 					eif
  3399 				.endl
  3400
  3401 2B88			.local	DISABLE_LETTER					; PROCEDURE
  3402
  3403 				; optimize FAIL ('REMOVE_LETTER', service.pas), line = 628
  3404
  3405 2B88 20 F5 2A			jsr REMOVE_LETTER
  3406
  3407 				; optimize OK (service.pas), line = 629
  3408
  3409 2B8B A9 00			lda #$00
  3410 2B8D 8D C8 9B			sta LETT.ACTIVE
  3411
  3412 2B90			@exit
  3413 					.ifdef @new
  3414 					lda <@VarData
  3415 					sta :ztmp
  3416 					lda >@VarData
  3417 					ldy #@VarDataSize-1
  3418 					jmp @FreeMem
  3419 					els
  3420 2B90 60				rts						; ret
  3421 					eif
  3422 				.endl
  3423
  3424 2B91			.local	START_LETTER					; PROCEDURE
  3425
  3426 				; optimize OK (service.pas), line = 635
  3427
  3428 2B91 AD C8 9B			lda LETT.ACTIVE
  3429 2B94 F0 03			jeq l_079E
  3430 2B96 20 88 2B			jsr DISABLE_LETTER
  3431 2B99			l_079E
  3432
  3433 				; optimize OK (service.pas), line = 637
  3434
  3435 2B99 AD 41 A4			lda XL
  3436 2B9C 8D C2 9B			sta LETT.X
  3437
  3438 				; optimize OK (service.pas), line = 638
  3439
  3440 2B9F AD 43 A4			lda YL
  3441 2BA2 8D C3 9B			sta LETT.Y
  3442
  3443 				; optimize OK (service.pas), line = 639
  3444
  3445 2BA5 AD 45 A4			lda LETTER
  3446 2BA8 8D C4 9B			sta LETT.TYP
  3447 2BAB AD 46 A4			lda LETTER+1
  3448 2BAE 8D C5 9B			sta LETT.TYP+1
  3449
  3450 				; optimize OK (service.pas), line = 640
  3451
  3452 2BB1 A9 00			lda #$00
  3453 2BB3 8D C6 9B			sta LETT.FRAME
  3454
  3455 				; optimize OK (service.pas), line = 641
  3456
  3457 2BB6 8D C7 9B			sta LETT.SUBFRAME
  3458
  3459 				; optimize OK (service.pas), line = 642
  3460
  3461 2BB9 A9 01			lda #$01
  3462 2BBB 8D C8 9B			sta LETT.ACTIVE
  3463
  3464 				; ------------------------------------------------------------
  3465
  3466 = A441			XL	= DATAORIGIN+$0A25
  3467 = A443			YL	= DATAORIGIN+$0A27
  3468 = A445			LETTER	= DATAORIGIN+$0A29
  3469
  3470 = A441			@VarData	= XL
  3471 = 0006			@VarDataSize	= 6
  3472
  3473 2BBE			@exit
  3474 					.ifdef @new
  3475 					lda <@VarData
  3476 					sta :ztmp
  3477 					lda >@VarData
  3478 					ldy #@VarDataSize-1
  3479 					jmp @FreeMem
  3480 					els
  3481 2BBE 60				rts						; ret
  3482 					eif
  3483 				.endl
  3484
  3485 2BBF			.local	CHECK_LETTER					; PROCEDURE
  3486
  3487 				; optimize OK (service.pas), line = 648
  3488
  3489 2BBF AD C8 9B			lda LETT.ACTIVE
  3490 2BC2 D0 03 4C BE 2C		jeq l_07CD
  3491
  3492 				; optimize FAIL ('REMOVE_LETTER', service.pas), line = 650
  3493
  3494 2BC7 20 F5 2A			jsr REMOVE_LETTER
  3495
  3496 				; optimize FAIL (0, service.pas), line = 651
  3497
  3498 2BCA EE C3 9B			inc LETT.Y
  3499
  3500 				; optimize OK (service.pas), line = 652
  3501
  3502 2BCD AD C3 9B			lda LETT.Y
  3503 2BD0 C9 C8			cmp #$C8
  3504 2BD2 90 03			jcc l_07E5
  3505 				; optimize FAIL ('DISABLE_LETTER', service.pas), line = 653
  3506 2BD4 4C B0 2C			jmp l_07F0
  3507 2BD7			l_07E5
  3508
  3509 				; optimize FAIL ('PUT_LETTER', service.pas), line = 655
  3510
  3511 2BD7 20 F1 29			jsr PUT_LETTER
  3512
  3513 				; optimize FAIL (0, service.pas), line = 656
  3514
  3515 2BDA EE C7 9B			inc LETT.SUBFRAME
  3516
  3517 				; optimize OK (service.pas), line = 657
  3518
  3519 2BDD AD C7 9B			lda LETT.SUBFRAME
  3520 2BE0 C9 05			cmp #$05
  3521 2BE2 D0 08			jne l_0807
  3522
  3523 				; optimize OK (service.pas), line = 659
  3524
  3525 2BE4 A9 00			lda #$00
  3526 2BE6 8D C7 9B			sta LETT.SUBFRAME
  3527
  3528 				; optimize FAIL (0, service.pas), line = 660
  3529
  3530 2BE9 EE C6 9B			inc LETT.FRAME
  3531 2BEC			l_0807
  3532
  3533 				; optimize OK (service.pas), line = 663
  3534
  3535 2BEC AD C6 9B			lda LETT.FRAME
  3536 2BEF C9 08			cmp #$08
  3537 2BF1 D0 05			jne l_0824
  3538 2BF3 A9 00			lda #$00
  3539 2BF5 8D C6 9B			sta LETT.FRAME
  3540 2BF8			l_0824
  3541
  3542 				; optimize OK (service.pas), line = 665
  3543
  3544 2BF8 AD C2 9B			lda LETT.X
  3545 2BFB 18 69 10			add #$10
  3546 2BFE 85 A0			sta :STACKORIGIN+10
  3547 2C00 A9 00			lda #$00
  3548 2C02 69 00			adc #$00
  3549 2C04 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  3550 2C06 A9 00			lda #$00
  3551 2C08 C5 B0			cmp :STACKORIGIN+STACKWIDTH+10
  3552 2C0A D0 05			bne @+
  3553 2C0C AD 5D 9B			lda VAUS.X
  3554 2C0F C5 A0			cmp :STACKORIGIN+10
  3555 				@
  3556 2C11 90 03 4C B3 2C		jcs l_087D
  3557 				@
  3558 2C16 AD 5D 9B			lda VAUS.X
  3559 2C19 18 6D 65 9B			add VAUS.WIDTH
  3560 2C1D 85 A0			sta :STACKORIGIN+10
  3561 2C1F A9 00			lda #$00
  3562 2C21 69 00			adc #$00
  3563 2C23 C9 00			cmp #$00
  3564 2C25 D0 05			bne @+
  3565 2C27 A5 A0			lda :STACKORIGIN+10
  3566 2C29 CD C2 9B			cmp LETT.X
  3567 				@
  3568 2C2C B0 03 4C B3 2C		jcc l_087D
  3569 2C31 D0 03 4C B3 2C		jeq l_087D
  3570 				@
  3571 2C36 AD C3 9B			lda LETT.Y
  3572 2C39 18 69 08			add #$08
  3573 2C3C 85 A1			sta :STACKORIGIN+11
  3574 2C3E A9 00			lda #$00
  3575 2C40 69 00			adc #$00
  3576 2C42 85 B1			sta :STACKORIGIN+STACKWIDTH+11
  3577 2C44 A9 00			lda #$00
  3578 2C46 C5 B1			cmp :STACKORIGIN+STACKWIDTH+11
  3579 2C48 D0 05			bne @+
  3580 2C4A AD 5E 9B			lda VAUS.Y
  3581 2C4D C5 A1			cmp :STACKORIGIN+11
  3582 				@
  3583 2C4F B0 62			jcs l_087D
  3584 				@
  3585 2C51 AD 5E 9B			lda VAUS.Y
  3586 2C54 18 6D 66 9B			add VAUS.HEIGHT
  3587 2C58 85 A0			sta :STACKORIGIN+10
  3588 2C5A A9 00			lda #$00
  3589 2C5C 69 00			adc #$00
  3590 2C5E C9 00			cmp #$00
  3591 2C60 D0 05			bne @+
  3592 2C62 A5 A0			lda :STACKORIGIN+10
  3593 2C64 CD C3 9B			cmp LETT.Y
  3594 				@
  3595 2C67 90 4A			jcc l_087D
  3596 2C69 F0 48			jeq l_087D
  3597 				@
  3598
  3599 				; optimize OK (service.pas), line = 668
  3600
  3601 2C6B A9 64			lda #$64
  3602 2C6D 8D CB 9A			sta BALL_BLOCK_SOUND.A
  3603 2C70 A9 00			lda #$00
  3604 2C72 8D CC 9A			sta BALL_BLOCK_SOUND.A+1
  3605 2C75 A9 0A			lda #$0A
  3606 2C77 8D CD 9A			sta BALL_BLOCK_SOUND.B
  3607 2C7A A9 00			lda #$00
  3608 2C7C 8D CE 9A			sta BALL_BLOCK_SOUND.B+1
  3609 2C7F 20 A5 24			jsr BALL_BLOCK_SOUND
  3610
  3611 				; optimize OK (service.pas), line = 669
  3612
  3613 2C82 AC C4 9B			ldy LETT.TYP
  3614 2C85 C8				iny
  3615 2C86 8C 69 9B			sty VAUS.LETTER
  3616
  3617 				; optimize OK (service.pas), line = 670
  3618
  3619 2C89 AD B9 9B			lda CUR_PLAYER
  3620 2C8C 0A				asl @
  3621 2C8D 0A				asl @
  3622 2C8E A8				tay
  3623 2C8F B9 9E 9B			lda adr.SCORE.PLAYER,y
  3624 2C92 18 69 E8			add #$E8
  3625 2C95 99 9E 9B			sta adr.SCORE.PLAYER,y
  3626 2C98 B9 9F 9B			lda adr.SCORE.PLAYER+1,y
  3627 2C9B 69 03			adc #$03
  3628 2C9D 99 9F 9B			sta adr.SCORE.PLAYER+1,y
  3629 2CA0 B9 A0 9B			lda adr.SCORE.PLAYER+2,y
  3630 2CA3 69 00			adc #$00
  3631 2CA5 99 A0 9B			sta adr.SCORE.PLAYER+2,y
  3632 2CA8 B9 A1 9B			lda adr.SCORE.PLAYER+3,y
  3633 2CAB 69 00			adc #$00
  3634 2CAD 99 A1 9B			sta adr.SCORE.PLAYER+3,y
  3635 2CB0			l_07F0
  3636
  3637 				; optimize FAIL ('DISABLE_LETTER', service.pas), line = 671
  3638
  3639 2CB0 20 88 2B			jsr DISABLE_LETTER
  3640 2CB3			l_087D
  3641
  3642 				; optimize OK (service.pas), line = 675
  3643
  3644 2CB3 A9 00			lda #$00
  3645 2CB5 8D C9 9B			sta LETT.INCOMING
  3646 2CB8 8D CA 9B			sta LETT.INCOMING+1
  3647 2CBB 4C F5 2C			jmp l_089E
  3648 2CBE			l_07CD
  3649
  3650 				; optimize OK (service.pas), line = 677
  3651
  3652 2CBE AD C9 9B			lda LETT.INCOMING
  3653 2CC1 C9 E9			cmp #$E9
  3654 2CC3 AD CA 9B			lda LETT.INCOMING+1
  3655 2CC6 E9 03			sbc #$03
  3656 2CC8 50 02			svc
  3657 2CCA 49 80			eor #$80
  3658 2CCC 30 27			jmi l_08AF
  3659
  3660 				; optimize OK (service.pas), line = 678
  3661
  3662 2CCE AD CB 9B			lda LETT.NEXTX
  3663 2CD1 8D 41 A4			sta START_LETTER.XL
  3664 2CD4 AD CC 9B			lda LETT.NEXTX+1
  3665 2CD7 8D 42 A4			sta START_LETTER.XL+1
  3666 2CDA AD CD 9B			lda LETT.NEXTY
  3667 2CDD 8D 43 A4			sta START_LETTER.YL
  3668 2CE0 AD CE 9B			lda LETT.NEXTY+1
  3669 2CE3 8D 44 A4			sta START_LETTER.YL+1
  3670 2CE6 AD CF 9B			lda LETT.NEXTTYPE
  3671 2CE9 8D 45 A4			sta START_LETTER.LETTER
  3672 2CEC AD D0 9B			lda LETT.NEXTTYPE+1
  3673 2CEF 8D 46 A4			sta START_LETTER.LETTER+1
  3674 2CF2 20 91 2B			jsr START_LETTER
  3675 2CF5			l_089E
  3676 2CF5			l_08AF
  3677
  3678 2CF5			@exit
  3679 					.ifdef @new
  3680 					lda <@VarData
  3681 					sta :ztmp
  3682 					lda >@VarData
  3683 					ldy #@VarDataSize-1
  3684 					jmp @FreeMem
  3685 					els
  3686 2CF5 60				rts						; ret
  3687 					eif
  3688 				.endl
  3689
  3690 2CF6			.local	SHOWBTMPICTURE					; PROCEDURE
  3691
  3692 				; ------------------------------------------------------------
  3693
  3694 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
  3695 				; as Pointer
  3696 2CF6 B5 96			lda :STACKORIGIN,x
  3697 2CF8 85 84			sta :bp2
  3698 2CFA B5 A6			lda :STACKORIGIN+STACKWIDTH,x
  3699 2CFC 85 85			sta :bp2+1
  3700 2CFE A0 07			ldy #$07
  3701 2D00 B1 84 99 47 A4 88 + 	mva:rpl (:bp2),y adr.BTM,y-
  3702 2D08 CA				dex
  3703 2D09			@main
  3704
  3705 				; optimize OK (service.pas), line = 688
  3706
  3707 2D09 AD 49 A4			lda BTM.HEIGHT
  3708 2D0C 85 8E			sta :ecx
  3709 2D0E AD 4A A4			lda BTM.HEIGHT+1
  3710 2D11 85 8F			sta :ecx+1
  3711 2D13 AD 47 A4			lda BTM.WIDTH
  3712 2D16 85 86			sta :eax
  3713 2D18 AD 48 A4			lda BTM.WIDTH+1
  3714 2D1B 85 87			sta :eax+1
  3715 					.ifdef fmulinit
  3716 					fmulu_16
  3717 					els
  3718 2D1D 20 FA 12			imulCX
  3719 					eif
  3720 2D20 A5 86			lda :eax
  3721 2D22 8D F7 A3			sta BLITROW.SIZE
  3722 2D25 A5 87			lda :eax+1
  3723 2D27 8D F8 A3			sta BLITROW.SIZE+1
  3724 2D2A AD 4B A4			lda BTM.OFS
  3725 2D2D 8D EF A3			sta BLITROW.SRC
  3726 2D30 AD 4C A4			lda BTM.OFS+1
  3727 2D33 8D F0 A3			sta BLITROW.SRC+1
  3728 2D36 AD 4D A4			lda BTM.OFS+2
  3729 2D39 8D F1 A3			sta BLITROW.SRC+2
  3730 2D3C AD 4E A4			lda BTM.OFS+3
  3731 2D3F 8D F2 A3			sta BLITROW.SRC+3
  3732 2D42 A9 00			lda #$00
  3733 2D44 8D F3 A3			sta BLITROW.DST
  3734 2D47 8D F4 A3			sta BLITROW.DST+1
  3735 2D4A 8D F5 A3			sta BLITROW.DST+2
  3736 2D4D 8D F6 A3			sta BLITROW.DST+3
  3737 2D50 20 CF 25			jsr BLITROW
  3738
  3739 				; ------------------------------------------------------------
  3740
  3741 = A447			adr.BTM	= DATAORIGIN+$0A2B	; [8] RECORD
  3742 2D53			.var BTM	= adr.BTM .word
  3743 = A447			BTM.WIDTH	= DATAORIGIN+$0A2B
  3744 = A449			BTM.HEIGHT	= DATAORIGIN+$0A2D
  3745 = A44B			BTM.OFS	= DATAORIGIN+$0A2F
  3746 = A44F			X	= DATAORIGIN+$0A33
  3747 = A451			Y	= DATAORIGIN+$0A35
  3748 = A453			OFST	= DATAORIGIN+$0A37
  3749
  3750 = A447			@VarData	= BTM.WIDTH
  3751 = 000E			@VarDataSize	= 14
  3752
  3753 2D53			@exit
  3754 					.ifdef @new
  3755 					lda <@VarData
  3756 					sta :ztmp
  3757 					lda >@VarData
  3758 					ldy #@VarDataSize-1
  3759 					jmp @FreeMem
  3760 					els
  3761 2D53 60				rts						; ret
  3762 					eif
  3763 = 2D54 47 A4		BTM
  3763 				.endl
  3764
  3765 2D56			.local	SETPALETTE					; PROCEDURE
  3766
  3767 				; ------------------------------------------------------------
  3768
  3769 = A455			BTM	= DATAORIGIN+$0A39
  3770 = 9A1C			BTM.WIDTH	= DATAORIGIN+$0000
  3771 = 9A1E			BTM.HEIGHT	= DATAORIGIN+$0002
  3772 = 9A20			BTM.OFS	= DATAORIGIN+$0004
  3773
  3774 = A455			@VarData	= BTM
  3775 = 0002			@VarDataSize	= 2
  3776
  3777 2D56			@exit
  3778 					.ifdef @new
  3779 					lda <@VarData
  3780 					sta :ztmp
  3781 					lda >@VarData
  3782 					ldy #@VarDataSize-1
  3783 					jmp @FreeMem
  3784 					els
  3785 2D56 60				rts						; ret
  3786 					eif
  3787 				.endl
  3788
  3789 2D57			.local	PLACE_BALL					; PROCEDURE
  3790
  3791 				; optimize OK (service.pas), line = 783
  3792
  3793 2D57 A9 00			lda #$00
  3794 2D59 8D 5D A4			sta YP
  3795
  3796 2D5C			l_08DB
  3797 				; --- ForToDoCondition
  3798 2D5C AD 5D A4			lda YP
  3799 2D5F C9 05			cmp #$05
  3800 2D61 90 03 4C 23 2E		jcs l_08E9
  3801
  3802 				; optimize OK (service.pas), line = 785
  3803
  3804 2D66 AC 59 A4 84 84 AC + 	mwy BALL :bp2
  3805 2D70 A0 00			ldy #BALL.X-DATAORIGIN
  3806 2D72 B1 84			lda (:bp2),y
  3807 2D74 38 E9 03			sub #$03
  3808 2D77 85 9F			sta :STACKORIGIN+9
  3809 2D79 C8				iny
  3810 2D7A B1 84			lda (:bp2),y
  3811 2D7C E9 00			sbc #$00
  3812 2D7E 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  3813 2D80 AD 5D A4			lda YP
  3814 2D83 38 E9 03			sub #$03
  3815 2D86 85 A0			sta :STACKORIGIN+10
  3816 2D88 A9 00			lda #$00
  3817 2D8A E9 00			sbc #$00
  3818 2D8C 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  3819 2D8E A0 02			ldy #BALL.Y-DATAORIGIN
  3820 2D90 A5 A0			lda :STACKORIGIN+10
  3821 2D92 18 71 84			add (:bp2),y
  3822 2D95 85 A0			sta :STACKORIGIN+10
  3823 2D97 C8				iny
  3824 2D98 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
  3825 2D9A 71 84			adc (:bp2),y
  3826 2D9C 06 A0			asl :STACKORIGIN+10
  3827 2D9E 2A				rol @
  3828 2D9F 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  3829 2DA1 AD 1C 99			lda ROW
  3830 2DA4 18 65 A0			add :STACKORIGIN+10
  3831 2DA7 85 84			sta :bp2
  3832 2DA9 AD 1D 99			lda ROW+1
  3833 2DAC 65 B0			adc :STACKORIGIN+STACKWIDTH+10
  3834 2DAE 85 85			sta :bp2+1
  3835 2DB0 A0 00			ldy #$00
  3836 2DB2 A5 9F			lda :STACKORIGIN+9
  3837 2DB4 18 71 84			add (:bp2),y
  3838 2DB7 8D 5E A4			sta ADR
  3839 2DBA C8				iny
  3840 2DBB A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  3841 2DBD 71 84			adc (:bp2),y
  3842 2DBF 8D 5F A4			sta ADR+1
  3843
  3844 				; optimize OK (service.pas), line = 788
  3845
  3846 2DC2 AD 5E A4			lda ADR
  3847 2DC5 8D DE A3			sta BLITZERO.DST
  3848 2DC8 AD 5F A4			lda ADR+1
  3849 2DCB 8D DF A3			sta BLITZERO.DST+1
  3850 2DCE A9 00			lda #$00
  3851 2DD0 8D E0 A3			sta BLITZERO.DST+2
  3852 2DD3 8D E1 A3			sta BLITZERO.DST+3
  3853 2DD6 85 B2			sta :STACKORIGIN+STACKWIDTH+12
  3854 2DD8 AD 5D A4			lda YP
  3855 2DDB 0A				asl @
  3856 2DDC 26 B2			rol :STACKORIGIN+STACKWIDTH+12
  3857 2DDE 0A				asl @
  3858 2DDF 26 B2			rol :STACKORIGIN+STACKWIDTH+12
  3859 2DE1 18 6D 5D A4			add YP
  3860 2DE5 85 A2			sta :STACKORIGIN+12
  3861 2DE7 A5 B2			lda :STACKORIGIN+STACKWIDTH+12
  3862 2DE9 69 00			adc #$00
  3863 2DEB 85 B2			sta :STACKORIGIN+STACKWIDTH+12
  3864 2DED AD E1 9A			lda BALLDATA.OFS
  3865 2DF0 18 65 A2			add :STACKORIGIN+12
  3866 2DF3 8D DA A3			sta BLITZERO.SRC
  3867 2DF6 AD E2 9A			lda BALLDATA.OFS+1
  3868 2DF9 65 B2			adc :STACKORIGIN+STACKWIDTH+12
  3869 2DFB 8D DB A3			sta BLITZERO.SRC+1
  3870 2DFE AD E3 9A			lda BALLDATA.OFS+2
  3871 2E01 69 00			adc #$00
  3872 2E03 8D DC A3			sta BLITZERO.SRC+2
  3873 2E06 AD E4 9A			lda BALLDATA.OFS+3
  3874 2E09 69 00			adc #$00
  3875 2E0B 8D DD A3			sta BLITZERO.SRC+3
  3876 2E0E A9 05			lda #$05
  3877 2E10 8D E2 A3			sta BLITZERO.SIZE
  3878 2E13 A9 00			lda #$00
  3879 2E15 8D E3 A3			sta BLITZERO.SIZE+1
  3880 2E18 20 EE 24			jsr BLITZERO
  3881
  3882 				; --- ForToDoEpilog
  3883 2E1B EE 5D A4			inc YP
  3884 2E1E F0 03 4C 5C 2D		jne l_08DB
  3885 2E23			l_08E9
  3886
  3887 				; ------------------------------------------------------------
  3888
  3889 = A459			BALL	= DATAORIGIN+$0A3D
  3890 = 9A1C			BALL.X	= DATAORIGIN+$0000
  3891 = 9A1E			BALL.Y	= DATAORIGIN+$0002
  3892 = 9A20			BALL.FINEX	= DATAORIGIN+$0004
  3893 = 9A22			BALL.FINEY	= DATAORIGIN+$0006
  3894 = 9A24			BALL.OLDX	= DATAORIGIN+$0008
  3895 = 9A26			BALL.OLDY	= DATAORIGIN+$000A
  3896 = 9A28			BALL.SPEED	= DATAORIGIN+$000C
  3897 = 9A2A			BALL.FINESPEED	= DATAORIGIN+$000E
  3898 = 9A2C			BALL.SPEEDX	= DATAORIGIN+$0010
  3899 = 9A2E			BALL.SPEEDY	= DATAORIGIN+$0012
  3900 = 9A30			BALL.SBD	= DATAORIGIN+$0014
  3901 = 9A32			BALL.BRWHIT	= DATAORIGIN+$0016
  3902 = 9A33			BALL.INPLAY	= DATAORIGIN+$0017
  3903 = 9A34			BALL.LAUNCH	= DATAORIGIN+$0018
  3904 = 9A35			BALL.ONVAUS	= DATAORIGIN+$0019
  3905 = 9A36			BALL.STM	= DATAORIGIN+$001A
  3906 = A45D			YP	= DATAORIGIN+$0A41
  3907 = A45E			ADR	= DATAORIGIN+$0A42
  3908
  3909 = A459			@VarData	= BALL
  3910 = 0005			@VarDataSize	= 5
  3911
  3912 2E23			@exit
  3913 					.ifdef @new
  3914 					lda <@VarData
  3915 					sta :ztmp
  3916 					lda >@VarData
  3917 					ldy #@VarDataSize-1
  3918 					jmp @FreeMem
  3919 					els
  3920 2E23 60				rts						; ret
  3921 					eif
  3922 				.endl
  3923
  3924 2E24			.local	REMOVE_BALL					; PROCEDURE
  3925
  3926 				; optimize OK (service.pas), line = 802
  3927
  3928 2E24 A9 00			lda #$00
  3929 2E26 8D 64 A4			sta YP
  3930
  3931 2E29			l_0928
  3932 				; --- ForToDoCondition
  3933 2E29 AD 64 A4			lda YP
  3934 2E2C C9 05			cmp #$05
  3935 2E2E 90 03 4C E7 2E		jcs l_0936
  3936
  3937 				; optimize OK (service.pas), line = 804
  3938
  3939 2E33 AC 60 A4 84 84 AC + 	mwy BALL :bp2
  3940 2E3D A0 08			ldy #BALL.OLDX-DATAORIGIN
  3941 2E3F B1 84			lda (:bp2),y
  3942 2E41 38 E9 03			sub #$03
  3943 2E44 85 9F			sta :STACKORIGIN+9
  3944 2E46 C8				iny
  3945 2E47 B1 84			lda (:bp2),y
  3946 2E49 E9 00			sbc #$00
  3947 2E4B 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  3948 2E4D AD 64 A4			lda YP
  3949 2E50 38 E9 03			sub #$03
  3950 2E53 85 A0			sta :STACKORIGIN+10
  3951 2E55 A9 00			lda #$00
  3952 2E57 E9 00			sbc #$00
  3953 2E59 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  3954 2E5B A0 0A			ldy #BALL.OLDY-DATAORIGIN
  3955 2E5D A5 A0			lda :STACKORIGIN+10
  3956 2E5F 18 71 84			add (:bp2),y
  3957 2E62 85 A0			sta :STACKORIGIN+10
  3958 2E64 C8				iny
  3959 2E65 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
  3960 2E67 71 84			adc (:bp2),y
  3961 2E69 06 A0			asl :STACKORIGIN+10
  3962 2E6B 2A				rol @
  3963 2E6C 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  3964 2E6E AD 1C 99			lda ROW
  3965 2E71 18 65 A0			add :STACKORIGIN+10
  3966 2E74 85 84			sta :bp2
  3967 2E76 AD 1D 99			lda ROW+1
  3968 2E79 65 B0			adc :STACKORIGIN+STACKWIDTH+10
  3969 2E7B 85 85			sta :bp2+1
  3970 2E7D A0 00			ldy #$00
  3971 2E7F A5 9F			lda :STACKORIGIN+9
  3972 2E81 18 71 84			add (:bp2),y
  3973 2E84 8D 65 A4			sta TEMP
  3974 2E87 C8				iny
  3975 2E88 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  3976 2E8A 71 84			adc (:bp2),y
  3977 2E8C 8D 66 A4			sta TEMP+1
  3978
  3979 				; optimize OK (service.pas), line = 806
  3980
  3981 2E8F 0D 65 A4			ora TEMP
  3982 2E92 F0 4B			jeq l_096C
  3983 2E94 AD 66 A4			lda TEMP+1
  3984 2E97 C9 FA			cmp #$FA
  3985 2E99 B0 44			jcs l_096C
  3986
  3987 				; optimize OK (service.pas), line = 809
  3988
  3989 2E9B AD 65 A4			lda TEMP
  3990 2E9E 8D F3 A3			sta BLITROW.DST
  3991 2EA1 AD 66 A4			lda TEMP+1
  3992 2EA4 8D F4 A3			sta BLITROW.DST+1
  3993 2EA7 A9 00			lda #$00
  3994 2EA9 8D F5 A3			sta BLITROW.DST+2
  3995 2EAC 8D F6 A3			sta BLITROW.DST+3
  3996 2EAF AD E9 9A			lda PLAYSCREEN.OFS
  3997 2EB2 18 6D 65 A4			add TEMP
  3998 2EB6 8D EF A3			sta BLITROW.SRC
  3999 2EB9 AD EA 9A			lda PLAYSCREEN.OFS+1
  4000 2EBC 6D 66 A4			adc TEMP+1
  4001 2EBF 8D F0 A3			sta BLITROW.SRC+1
  4002 2EC2 AD EB 9A			lda PLAYSCREEN.OFS+2
  4003 2EC5 69 00			adc #$00
  4004 2EC7 8D F1 A3			sta BLITROW.SRC+2
  4005 2ECA AD EC 9A			lda PLAYSCREEN.OFS+3
  4006 2ECD 69 00			adc #$00
  4007 2ECF 8D F2 A3			sta BLITROW.SRC+3
  4008 2ED2 A9 05			lda #$05
  4009 2ED4 8D F7 A3			sta BLITROW.SIZE
  4010 2ED7 A9 00			lda #$00
  4011 2ED9 8D F8 A3			sta BLITROW.SIZE+1
  4012 2EDC 20 CF 25			jsr BLITROW
  4013 2EDF			l_096C
  4014
  4015 				; --- ForToDoEpilog
  4016 2EDF EE 64 A4			inc YP
  4017 2EE2 F0 03 4C 29 2E		jne l_0928
  4018 2EE7			l_0936
  4019
  4020 				; ------------------------------------------------------------
  4021
  4022 = A460			BALL	= DATAORIGIN+$0A44
  4023 = 9A1C			BALL.X	= DATAORIGIN+$0000
  4024 = 9A1E			BALL.Y	= DATAORIGIN+$0002
  4025 = 9A20			BALL.FINEX	= DATAORIGIN+$0004
  4026 = 9A22			BALL.FINEY	= DATAORIGIN+$0006
  4027 = 9A24			BALL.OLDX	= DATAORIGIN+$0008
  4028 = 9A26			BALL.OLDY	= DATAORIGIN+$000A
  4029 = 9A28			BALL.SPEED	= DATAORIGIN+$000C
  4030 = 9A2A			BALL.FINESPEED	= DATAORIGIN+$000E
  4031 = 9A2C			BALL.SPEEDX	= DATAORIGIN+$0010
  4032 = 9A2E			BALL.SPEEDY	= DATAORIGIN+$0012
  4033 = 9A30			BALL.SBD	= DATAORIGIN+$0014
  4034 = 9A32			BALL.BRWHIT	= DATAORIGIN+$0016
  4035 = 9A33			BALL.INPLAY	= DATAORIGIN+$0017
  4036 = 9A34			BALL.LAUNCH	= DATAORIGIN+$0018
  4037 = 9A35			BALL.ONVAUS	= DATAORIGIN+$0019
  4038 = 9A36			BALL.STM	= DATAORIGIN+$001A
  4039 = A464			YP	= DATAORIGIN+$0A48
  4040 = A465			TEMP	= DATAORIGIN+$0A49
  4041
  4042 = A460			@VarData	= BALL
  4043 = 0005			@VarDataSize	= 5
  4044
  4045 2EE7			@exit
  4046 					.ifdef @new
  4047 					lda <@VarData
  4048 					sta :ztmp
  4049 					lda >@VarData
  4050 					ldy #@VarDataSize-1
  4051 					jmp @FreeMem
  4052 					els
  4053 2EE7 60				rts						; ret
  4054 					eif
  4055 				.endl
  4056
  4057 2EE8			.local	WAIT_VBL					; PROCEDURE
  4058
  4059 				; optimize FAIL ('SYSTEM.PAUSE.@00', service.pas), line = 845
  4060
  4061 2EE8 20 E8 23			jsr SYSTEM.PAUSE.@00
  4062
  4063 2EEB			@exit
  4064 					.ifdef @new
  4065 					lda <@VarData
  4066 					sta :ztmp
  4067 					lda >@VarData
  4068 					ldy #@VarDataSize-1
  4069 					jmp @FreeMem
  4070 					els
  4071 2EEB 60				rts						; ret
  4072 					eif
  4073 				.endl
  4074
  4075 2EEC			.local	SET_BALL					; PROCEDURE
  4076
  4077 				; optimize OK (service.pas), line = 856
  4078
  4079 2EEC AC 67 A4 84 84 AC + 	mwy BALL :bp2
  4080 2EF6 A0 08			ldy #BALL.OLDX-DATAORIGIN
  4081 2EF8 B1 84			lda (:bp2),y
  4082 2EFA 85 9F			sta :STACKORIGIN+9
  4083 2EFC C8				iny
  4084 2EFD B1 84			lda (:bp2),y
  4085 2EFF A0 01			ldy #1
  4086 2F01 C9 FF			cmp #$FF
  4087 2F03 D0 04			bne @+
  4088 2F05 A5 9F			lda :STACKORIGIN+9
  4089 2F07 C9 FF			cmp #$FF
  4090 				@
  4091 2F09 D0 01			bne @+
  4092 2F0B 88				dey
  4093 				@
  4094 2F0C 84 9F			sty :STACKORIGIN+9
  4095 2F0E A0 0A			ldy #BALL.OLDY-DATAORIGIN
  4096 2F10 B1 84			lda (:bp2),y
  4097 2F12 85 A0			sta :STACKORIGIN+10
  4098 2F14 C8				iny
  4099 2F15 B1 84			lda (:bp2),y
  4100 2F17 A0 01			ldy #1
  4101 2F19 C9 FF			cmp #$FF
  4102 2F1B D0 04			bne @+
  4103 2F1D A5 A0			lda :STACKORIGIN+10
  4104 2F1F C9 FF			cmp #$FF
  4105 				@
  4106 2F21 D0 01			bne @+
  4107 2F23 88				dey
  4108 				@
  4109 2F24 98				tya
  4110 2F25 25 9F			and :STACKORIGIN+9
  4111 2F27 85 9F			sta :STACKORIGIN+9
  4112 2F29 A0 08			ldy #BALL.OLDX-DATAORIGIN
  4113 2F2B B1 84			lda (:bp2),y
  4114 2F2D 85 A0			sta :STACKORIGIN+10
  4115 2F2F C8				iny
  4116 2F30 B1 84			lda (:bp2),y
  4117 2F32 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  4118 2F34 A0 00			ldy #BALL.X-DATAORIGIN
  4119 2F36 B1 84			lda (:bp2),y
  4120 2F38 85 A1			sta :STACKORIGIN+11
  4121 2F3A C8				iny
  4122 2F3B B1 84			lda (:bp2),y
  4123 2F3D 85 B1			sta :STACKORIGIN+STACKWIDTH+11
  4124 2F3F A0 01			ldy #1
  4125 2F41 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
  4126 2F43 C5 B1			cmp :STACKORIGIN+STACKWIDTH+11
  4127 2F45 D0 04			bne @+
  4128 2F47 A5 A0			lda :STACKORIGIN+10
  4129 2F49 C5 A1			cmp :STACKORIGIN+11
  4130 				@
  4131 2F4B D0 01			bne @+
  4132 2F4D 88				dey
  4133 				@
  4134 2F4E 84 A0			sty :STACKORIGIN+10
  4135 2F50 A0 0A			ldy #BALL.OLDY-DATAORIGIN
  4136 2F52 B1 84			lda (:bp2),y
  4137 2F54 85 A1			sta :STACKORIGIN+11
  4138 2F56 C8				iny
  4139 2F57 B1 84			lda (:bp2),y
  4140 2F59 85 B1			sta :STACKORIGIN+STACKWIDTH+11
  4141 2F5B A0 02			ldy #BALL.Y-DATAORIGIN
  4142 2F5D B1 84			lda (:bp2),y
  4143 2F5F 85 A2			sta :STACKORIGIN+12
  4144 2F61 C8				iny
  4145 2F62 B1 84			lda (:bp2),y
  4146 2F64 85 B2			sta :STACKORIGIN+STACKWIDTH+12
  4147 2F66 A0 01			ldy #1
  4148 2F68 A5 B1			lda :STACKORIGIN+STACKWIDTH+11
  4149 2F6A C5 B2			cmp :STACKORIGIN+STACKWIDTH+12
  4150 2F6C D0 04			bne @+
  4151 2F6E A5 A1			lda :STACKORIGIN+11
  4152 2F70 C5 A2			cmp :STACKORIGIN+12
  4153 				@
  4154 2F72 D0 01			bne @+
  4155 2F74 88				dey
  4156 				@
  4157 2F75 98				tya
  4158 2F76 05 A0			ora :STACKORIGIN+10
  4159 2F78 25 9F			and :STACKORIGIN+9
  4160 2F7A F0 0F			jeq l_09BF
  4161
  4162 				; optimize OK (service.pas), line = 858
  4163
  4164 2F7C AD 67 A4			lda BALL
  4165 2F7F 8D 60 A4			sta REMOVE_BALL.BALL
  4166 2F82 AD 68 A4			lda BALL+1
  4167 2F85 8D 61 A4			sta REMOVE_BALL.BALL+1
  4168 2F88 20 24 2E			jsr REMOVE_BALL
  4169 2F8B			l_09BF
  4170
  4171 				; optimize OK (service.pas), line = 860
  4172
  4173 2F8B AD 67 A4			lda BALL
  4174 2F8E 8D 59 A4			sta PLACE_BALL.BALL
  4175 2F91 AD 68 A4			lda BALL+1
  4176 2F94 8D 5A A4			sta PLACE_BALL.BALL+1
  4177 2F97 20 57 2D			jsr PLACE_BALL
  4178
  4179 				; optimize OK (service.pas), line = 862
  4180
  4181 2F9A AC 67 A4 84 84 AC + 	mwy BALL :bp2
  4182 2FA4 A0 00			ldy #BALL.X-DATAORIGIN
  4183 2FA6 B1 84			lda (:bp2),y
  4184 2FA8 85 9F			sta :STACKORIGIN+9
  4185 2FAA C8				iny
  4186 2FAB B1 84			lda (:bp2),y
  4187 2FAD 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  4188 2FAF A0 08			ldy #BALL.OLDX-DATAORIGIN
  4189 2FB1 A5 9F			lda :STACKORIGIN+9
  4190 2FB3 91 84			sta (:bp2),y
  4191 2FB5 C8				iny
  4192 2FB6 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  4193 2FB8 91 84			sta (:bp2),y
  4194
  4195 				; optimize OK (service.pas), line = 863
  4196
  4197 2FBA A0 02			ldy #BALL.Y-DATAORIGIN
  4198 2FBC B1 84			lda (:bp2),y
  4199 2FBE 85 9F			sta :STACKORIGIN+9
  4200 2FC0 C8				iny
  4201 2FC1 B1 84			lda (:bp2),y
  4202 2FC3 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  4203 2FC5 A0 0A			ldy #BALL.OLDY-DATAORIGIN
  4204 2FC7 A5 9F			lda :STACKORIGIN+9
  4205 2FC9 91 84			sta (:bp2),y
  4206 2FCB C8				iny
  4207 2FCC A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  4208 2FCE 91 84			sta (:bp2),y
  4209
  4210 				; ------------------------------------------------------------
  4211
  4212 = A467			BALL	= DATAORIGIN+$0A4B
  4213 = 9A1C			BALL.X	= DATAORIGIN+$0000
  4214 = 9A1E			BALL.Y	= DATAORIGIN+$0002
  4215 = 9A20			BALL.FINEX	= DATAORIGIN+$0004
  4216 = 9A22			BALL.FINEY	= DATAORIGIN+$0006
  4217 = 9A24			BALL.OLDX	= DATAORIGIN+$0008
  4218 = 9A26			BALL.OLDY	= DATAORIGIN+$000A
  4219 = 9A28			BALL.SPEED	= DATAORIGIN+$000C
  4220 = 9A2A			BALL.FINESPEED	= DATAORIGIN+$000E
  4221 = 9A2C			BALL.SPEEDX	= DATAORIGIN+$0010
  4222 = 9A2E			BALL.SPEEDY	= DATAORIGIN+$0012
  4223 = 9A30			BALL.SBD	= DATAORIGIN+$0014
  4224 = 9A32			BALL.BRWHIT	= DATAORIGIN+$0016
  4225 = 9A33			BALL.INPLAY	= DATAORIGIN+$0017
  4226 = 9A34			BALL.LAUNCH	= DATAORIGIN+$0018
  4227 = 9A35			BALL.ONVAUS	= DATAORIGIN+$0019
  4228 = 9A36			BALL.STM	= DATAORIGIN+$001A
  4229
  4230 = A467			@VarData	= BALL
  4231 = 0002			@VarDataSize	= 2
  4232
  4233 2FD0			@exit
  4234 					.ifdef @new
  4235 					lda <@VarData
  4236 					sta :ztmp
  4237 					lda >@VarData
  4238 					ldy #@VarDataSize-1
  4239 					jmp @FreeMem
  4240 					els
  4241 2FD0 60				rts						; ret
  4242 					eif
  4243 				.endl
  4244
  4245 2FD1			.local	SET_BALL_SPEED					; PROCEDURE
  4246
  4247 				; optimize OK (service.pas), line = 873
  4248
  4249 2FD1 AC 6B A4 84 84 AC + 	mwy BALL :bp2
  4250 2FDB A0 10			ldy #BALL.SPEEDX-DATAORIGIN
  4251 2FDD B1 84			lda (:bp2),y
  4252 2FDF 8D 71 A4			sta SX
  4253 2FE2 C8				iny
  4254 2FE3 B1 84			lda (:bp2),y
  4255 2FE5 8D 72 A4			sta SX+1
  4256
  4257 				; optimize OK (service.pas), line = 874
  4258
  4259 2FE8 A0 12			ldy #BALL.SPEEDY-DATAORIGIN
  4260 2FEA B1 84			lda (:bp2),y
  4261 2FEC 8D 73 A4			sta SY
  4262 2FEF C8				iny
  4263 2FF0 B1 84			lda (:bp2),y
  4264 2FF2 8D 74 A4			sta SY+1
  4265
  4266 				; optimize FAIL (1, service.pas), line = 876
  4267
  4268 2FF5 E8				inx
  4269 2FF6 AD 6F A4 95 96		mva SPEED :STACKORIGIN,x
  4270 2FFB AD 70 A4 95 A6		mva SPEED+1 :STACKORIGIN+STACKWIDTH,x
  4271 3000 AD 71 A4			lda SX
  4272 3003 85 8E			sta :ecx
  4273 3005 85 92			sta :ztmp8
  4274 3007 AD 72 A4			lda SX+1
  4275 300A 85 8F			sta :ecx+1
  4276 300C 85 93			sta :ztmp9
  4277 300E AD 71 A4			lda SX
  4278 3011 85 86			sta :eax
  4279 3013 85 94			sta :ztmp10
  4280 3015 AD 72 A4			lda SX+1
  4281 3018 85 87			sta :eax+1
  4282 301A 85 95			sta :ztmp11
  4283 					.ifdef fmulinit
  4284 					fmulu_16
  4285 					els
  4286 301C 20 FA 12			imulCX
  4287 					eif
  4288 301F A5 95			lda :ztmp11
  4289 3021 10 0D			bpl @+
  4290 3023 A5 88			lda :eax+2
  4291 3025 38 E5 92			sub :ztmp8
  4292 3028 85 88			sta :eax+2
  4293 302A A5 89			lda :eax+3
  4294 302C E5 93			sbc :ztmp9
  4295 302E 85 89			sta :eax+3
  4296 				@
  4297 3030 A5 93			lda :ztmp9
  4298 3032 10 0D			bpl @+
  4299 3034 A5 88			lda :eax+2
  4300 3036 38 E5 94			sub :ztmp10
  4301 3039 85 88			sta :eax+2
  4302 303B A5 89			lda :eax+3
  4303 303D E5 95			sbc :ztmp11
  4304 303F 85 89			sta :eax+3
  4305 				@
  4306 3041 A5 86			lda :eax
  4307 3043 85 9F			sta :STACKORIGIN+9
  4308 3045 A5 87			lda :eax+1
  4309 3047 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  4310 3049 A5 88			lda :eax+2
  4311 304B 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
  4312 304D A5 89			lda :eax+3
  4313 304F 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
  4314 3051 AD 73 A4			lda SY
  4315 3054 85 8E			sta :ecx
  4316 3056 85 92			sta :ztmp8
  4317 3058 AD 74 A4			lda SY+1
  4318 305B 85 8F			sta :ecx+1
  4319 305D 85 93			sta :ztmp9
  4320 305F AD 73 A4			lda SY
  4321 3062 85 86			sta :eax
  4322 3064 85 94			sta :ztmp10
  4323 3066 AD 74 A4			lda SY+1
  4324 3069 85 87			sta :eax+1
  4325 306B 85 95			sta :ztmp11
  4326 					.ifdef fmulinit
  4327 					fmulu_16
  4328 					els
  4329 306D 20 FA 12			imulCX
  4330 					eif
  4331 3070 A5 95			lda :ztmp11
  4332 3072 10 0D			bpl @+
  4333 3074 A5 88			lda :eax+2
  4334 3076 38 E5 92			sub :ztmp8
  4335 3079 85 88			sta :eax+2
  4336 307B A5 89			lda :eax+3
  4337 307D E5 93			sbc :ztmp9
  4338 307F 85 89			sta :eax+3
  4339 				@
  4340 3081 A5 93			lda :ztmp9
  4341 3083 10 0D			bpl @+
  4342 3085 A5 88			lda :eax+2
  4343 3087 38 E5 94			sub :ztmp10
  4344 308A 85 88			sta :eax+2
  4345 308C A5 89			lda :eax+3
  4346 308E E5 95			sbc :ztmp11
  4347 3090 85 89			sta :eax+3
  4348 				@
  4349 3092 A5 9F			lda :STACKORIGIN+9
  4350 3094 18 65 86			add :eax
  4351 3097 8D 27 9A			sta SYSTEM.SQRT.@010185000.X
  4352 309A A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  4353 309C 65 87			adc :eax+1
  4354 309E 8D 28 9A			sta SYSTEM.SQRT.@010185000.X+1
  4355 30A1 A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
  4356 30A3 65 88			adc :eax+2
  4357 30A5 8D 29 9A			sta SYSTEM.SQRT.@010185000.X+2
  4358 30A8 A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
  4359 30AA 65 89			adc :eax+3
  4360 30AC 8D 2A 9A			sta SYSTEM.SQRT.@010185000.X+3
  4361 30AF 20 9B 1B			jsr SYSTEM.SQRT.@010185000
  4362 30B2 E8				inx
  4363 30B3 AD 2B 9A 95 96		mva SYSTEM.SQRT.@010185000.RESULT :STACKORIGIN,x
  4364 30B8 AD 2C 9A 95 A6		mva SYSTEM.SQRT.@010185000.RESULT+1 :STACKORIGIN+STACKWIDTH,x
  4365 30BD AD 2D 9A 95 B6		mva SYSTEM.SQRT.@010185000.RESULT+2 :STACKORIGIN+STACKWIDTH*2,x
  4366 30C2 AD 2E 9A 95 C6		mva SYSTEM.SQRT.@010185000.RESULT+3 :STACKORIGIN+STACKWIDTH*3,x
  4367 30C7 20 3B 11			jsr @expandToCARD1.SMALL
  4368 30CA B5 95			lda :STACKORIGIN-1,x
  4369 30CC 85 8E			sta :FPMAN0
  4370 30CE B5 A5			lda :STACKORIGIN-1+STACKWIDTH,x
  4371 30D0 85 8F			sta :FPMAN1
  4372 30D2 B5 B5			lda :STACKORIGIN-1+STACKWIDTH*2,x
  4373 30D4 85 90			sta :FPMAN2
  4374 30D6 B5 C5			lda :STACKORIGIN-1+STACKWIDTH*3,x
  4375 30D8 85 91			sta :FPMAN3
  4376 30DA 20 12 19			jsr @I2F
  4377 30DD A5 8E			lda :FPMAN0
  4378 30DF 85 8A			sta :FP2MAN0
  4379 30E1 A5 8F			lda :FPMAN1
  4380 30E3 85 8B			sta :FP2MAN1
  4381 30E5 A5 90			lda :FPMAN2
  4382 30E7 85 8C			sta :FP2MAN2
  4383 30E9 A5 91			lda :FPMAN3
  4384 30EB 85 8D			sta :FP2MAN3
  4385 30ED B5 95			lda :STACKORIGIN-1,x
  4386 30EF 85 86			sta :FP1MAN0
  4387 30F1 B5 A5			lda :STACKORIGIN-1+STACKWIDTH,x
  4388 30F3 85 87			sta :FP1MAN1
  4389 30F5 B5 B5			lda :STACKORIGIN-1+STACKWIDTH*2,x
  4390 30F7 85 88			sta :FP1MAN2
  4391 30F9 B5 C5			lda :STACKORIGIN-1+STACKWIDTH*3,x
  4392 30FB 85 89			sta :FP1MAN3
  4393 30FD 20 25 18			jsr @FDIV
  4394 3100 CA				dex
  4395 3101 A5 8E			lda :FPMAN0
  4396 3103 8D 75 A4			sta VM
  4397 3106 A5 8F			lda :FPMAN1
  4398 3108 8D 76 A4			sta VM+1
  4399 310B A5 90			lda :FPMAN2
  4400 310D 8D 77 A4			sta VM+2
  4401 3110 A5 91			lda :FPMAN3
  4402 3112 8D 78 A4			sta VM+3
  4403 3115 CA				dex
  4404
  4405 				; optimize OK (service.pas), line = 881
  4406
  4407 3116 AD 71 A4			lda SX
  4408 3119 85 8E			sta :FPMAN0
  4409 311B A0 00			ldy #$00
  4410 311D AD 72 A4			lda SX+1
  4411 3120 10 01			spl
  4412 3122 88				dey
  4413 3123 85 8F			sta :FPMAN1
  4414 3125 84 90			sty :FPMAN2
  4415 3127 84 91			sty :FPMAN3
  4416 3129 20 12 19			jsr @I2F
  4417 312C A5 8E			lda :FPMAN0
  4418 312E 85 86			sta :FP1MAN0
  4419 3130 A5 8F			lda :FPMAN1
  4420 3132 85 87			sta :FP1MAN1
  4421 3134 A5 90			lda :FPMAN2
  4422 3136 85 88			sta :FP1MAN2
  4423 3138 A5 91			lda :FPMAN3
  4424 313A 85 89			sta :FP1MAN3
  4425 313C AD 75 A4			lda VM
  4426 313F 85 8A			sta :FP2MAN0
  4427 3141 AD 76 A4			lda VM+1
  4428 3144 85 8B			sta :FP2MAN1
  4429 3146 AD 77 A4			lda VM+2
  4430 3149 85 8C			sta :FP2MAN2
  4431 314B AD 78 A4			lda VM+3
  4432 314E 85 8D			sta :FP2MAN3
  4433 3150 20 84 17			jsr @FMUL
  4434 3153 A5 8E			lda :FPMAN0
  4435 3155 85 8A			sta :FP2MAN0
  4436 3157 A5 8F			lda :FPMAN1
  4437 3159 85 8B			sta :FP2MAN1
  4438 315B A5 90			lda :FPMAN2
  4439 315D 85 8C			sta :FP2MAN2
  4440 315F A5 91			lda :FPMAN3
  4441 3161 85 8D			sta :FP2MAN3
  4442 3163 20 DC 15			jsr @FROUND
  4443 3166 AC 6B A4 84 84 AC + 	mwy BALL :bp2
  4444 3170 A0 10			ldy #BALL.SPEEDX-DATAORIGIN
  4445 3172 A5 8E			lda :FPMAN0
  4446 3174 91 84			sta (:bp2),y
  4447 3176 C8				iny
  4448 3177 A5 8F			lda :FPMAN1
  4449 3179 91 84			sta (:bp2),y
  4450
  4451 				; optimize OK (service.pas), line = 882
  4452
  4453 317B AD 73 A4			lda SY
  4454 317E 85 8E			sta :FPMAN0
  4455 3180 A0 00			ldy #$00
  4456 3182 AD 74 A4			lda SY+1
  4457 3185 10 01			spl
  4458 3187 88				dey
  4459 3188 85 8F			sta :FPMAN1
  4460 318A 84 90			sty :FPMAN2
  4461 318C 84 91			sty :FPMAN3
  4462 318E 20 12 19			jsr @I2F
  4463 3191 A5 8E			lda :FPMAN0
  4464 3193 85 86			sta :FP1MAN0
  4465 3195 A5 8F			lda :FPMAN1
  4466 3197 85 87			sta :FP1MAN1
  4467 3199 A5 90			lda :FPMAN2
  4468 319B 85 88			sta :FP1MAN2
  4469 319D A5 91			lda :FPMAN3
  4470 319F 85 89			sta :FP1MAN3
  4471 31A1 AD 75 A4			lda VM
  4472 31A4 85 8A			sta :FP2MAN0
  4473 31A6 AD 76 A4			lda VM+1
  4474 31A9 85 8B			sta :FP2MAN1
  4475 31AB AD 77 A4			lda VM+2
  4476 31AE 85 8C			sta :FP2MAN2
  4477 31B0 AD 78 A4			lda VM+3
  4478 31B3 85 8D			sta :FP2MAN3
  4479 31B5 20 84 17			jsr @FMUL
  4480 31B8 A5 8E			lda :FPMAN0
  4481 31BA 85 8A			sta :FP2MAN0
  4482 31BC A5 8F			lda :FPMAN1
  4483 31BE 85 8B			sta :FP2MAN1
  4484 31C0 A5 90			lda :FPMAN2
  4485 31C2 85 8C			sta :FP2MAN2
  4486 31C4 A5 91			lda :FPMAN3
  4487 31C6 85 8D			sta :FP2MAN3
  4488 31C8 20 DC 15			jsr @FROUND
  4489 31CB AC 6B A4 84 84 AC + 	mwy BALL :bp2
  4490 31D5 A0 12			ldy #BALL.SPEEDY-DATAORIGIN
  4491 31D7 A5 8E			lda :FPMAN0
  4492 31D9 91 84			sta (:bp2),y
  4493 31DB C8				iny
  4494 31DC A5 8F			lda :FPMAN1
  4495 31DE 91 84			sta (:bp2),y
  4496
  4497 				; ------------------------------------------------------------
  4498
  4499 = A46B			BALL	= DATAORIGIN+$0A4F
  4500 = 9A1C			BALL.X	= DATAORIGIN+$0000
  4501 = 9A1E			BALL.Y	= DATAORIGIN+$0002
  4502 = 9A20			BALL.FINEX	= DATAORIGIN+$0004
  4503 = 9A22			BALL.FINEY	= DATAORIGIN+$0006
  4504 = 9A24			BALL.OLDX	= DATAORIGIN+$0008
  4505 = 9A26			BALL.OLDY	= DATAORIGIN+$000A
  4506 = 9A28			BALL.SPEED	= DATAORIGIN+$000C
  4507 = 9A2A			BALL.FINESPEED	= DATAORIGIN+$000E
  4508 = 9A2C			BALL.SPEEDX	= DATAORIGIN+$0010
  4509 = 9A2E			BALL.SPEEDY	= DATAORIGIN+$0012
  4510 = 9A30			BALL.SBD	= DATAORIGIN+$0014
  4511 = 9A32			BALL.BRWHIT	= DATAORIGIN+$0016
  4512 = 9A33			BALL.INPLAY	= DATAORIGIN+$0017
  4513 = 9A34			BALL.LAUNCH	= DATAORIGIN+$0018
  4514 = 9A35			BALL.ONVAUS	= DATAORIGIN+$0019
  4515 = 9A36			BALL.STM	= DATAORIGIN+$001A
  4516 = A46F			SPEED	= DATAORIGIN+$0A53
  4517 = A471			SX	= DATAORIGIN+$0A55
  4518 = A473			SY	= DATAORIGIN+$0A57
  4519 = A475			VM	= DATAORIGIN+$0A59
  4520
  4521 = A46B			@VarData	= BALL
  4522 = 000C			@VarDataSize	= 12
  4523
  4524 31E0			@exit
  4525 					.ifdef @new
  4526 					lda <@VarData
  4527 					sta :ztmp
  4528 					lda >@VarData
  4529 					ldy #@VarDataSize-1
  4530 					jmp @FreeMem
  4531 					els
  4532 31E0 60				rts						; ret
  4533 					eif
  4534 				.endl
  4535
  4536 31E1			.local	SET_BALL_DIRECTION				; PROCEDURE
  4537
  4538 				; optimize OK (service.pas), line = 889
  4539
  4540 31E1 AD 7D A4			lda ANGLE
  4541 31E4 85 9F			sta :STACKORIGIN+9
  4542 31E6 A0 00			ldy #$00
  4543 31E8 AD 7E A4			lda ANGLE+1
  4544 31EB 10 01			spl
  4545 31ED 88				dey
  4546 31EE 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  4547 31F0 85 88			sta @REAL_MUL.A+2
  4548 31F2 84 89			sty @REAL_MUL.A+3
  4549 31F4 A5 9F			lda :STACKORIGIN+9
  4550 31F6 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  4551 31F8 A9 00			lda #$00
  4552 31FA 85 86			sta @REAL_MUL.A
  4553 31FC A9 24			lda #$24
  4554 31FE 85 8E			sta @REAL_MUL.B
  4555 3200 A9 03			lda #$03
  4556 3202 85 8F			sta @REAL_MUL.B+1
  4557 3204 A9 00			lda #$00
  4558 3206 85 90			sta @REAL_MUL.B+2
  4559 3208 85 91			sta @REAL_MUL.B+3
  4560 320A A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  4561 320C 85 87			sta @REAL_MUL.A+1
  4562 320E 20 33 14			jsr @REAL_MUL
  4563 3211 A9 00			lda #$00
  4564 3213 85 8E			sta @REAL_DIV.B
  4565 3215 A9 B4			lda #$B4
  4566 3217 85 8F			sta @REAL_DIV.B+1
  4567 3219 A9 00			lda #$00
  4568 321B 85 90			sta @REAL_DIV.B+2
  4569 321D 85 91			sta @REAL_DIV.B+3
  4570 321F 20 F2 14			jsr @REAL_DIV
  4571 3222 A5 86			lda :eax
  4572 3224 8D 7F A4			sta W
  4573 3227 A5 87			lda :eax+1
  4574 3229 8D 80 A4			sta W+1
  4575 322C A5 88			lda :eax+2
  4576 322E 8D 81 A4			sta W+2
  4577 3231 A5 89			lda :eax+3
  4578 3233 8D 82 A4			sta W+3
  4579
  4580 				; optimize FAIL (1, service.pas), line = 891
  4581
  4582 3236 E8				inx
  4583 3237 A9 00 95 96			mva #$00 :STACKORIGIN,x
  4584 323B A9 01 95 A6			mva #$01 :STACKORIGIN+STACKWIDTH,x
  4585 323F AD 7F A4			lda W
  4586 3242 8D 58 9A			sta SYSTEM.COS.@01018E000.X
  4587 3245 AD 80 A4			lda W+1
  4588 3248 8D 59 9A			sta SYSTEM.COS.@01018E000.X+1
  4589 324B AD 81 A4			lda W+2
  4590 324E 8D 5A 9A			sta SYSTEM.COS.@01018E000.X+2
  4591 3251 AD 82 A4			lda W+3
  4592 3254 8D 5B 9A			sta SYSTEM.COS.@01018E000.X+3
  4593 3257 20 AF 23			jsr SYSTEM.COS.@01018E000
  4594 325A E8				inx
  4595 325B AD 5C 9A 95 96		mva SYSTEM.COS.@01018E000.RESULT :STACKORIGIN,x
  4596 3260 AD 5D 9A 95 A6		mva SYSTEM.COS.@01018E000.RESULT+1 :STACKORIGIN+STACKWIDTH,x
  4597 3265 AD 5E 9A 95 B6		mva SYSTEM.COS.@01018E000.RESULT+2 :STACKORIGIN+STACKWIDTH*2,x
  4598 326A AD 5F 9A 95 C6		mva SYSTEM.COS.@01018E000.RESULT+3 :STACKORIGIN+STACKWIDTH*3,x
  4599 326F A9 00 95 B5			mva #$00 :STACKORIGIN-1+STACKWIDTH*2,x
  4600 3273 95 C5			sta :STACKORIGIN-1+STACKWIDTH*3,x
  4601 3275 20 58 11			jsr @expandToREAL1
  4602 3278 B5 96			lda :STACKORIGIN,x
  4603 327A 85 8E			sta @REAL_MUL.B
  4604 327C B5 A6			lda :STACKORIGIN+STACKWIDTH,x
  4605 327E 85 8F			sta @REAL_MUL.B+1
  4606 3280 B5 B6			lda :STACKORIGIN+STACKWIDTH*2,x
  4607 3282 85 90			sta @REAL_MUL.B+2
  4608 3284 B5 C6			lda :STACKORIGIN+STACKWIDTH*3,x
  4609 3286 85 91			sta @REAL_MUL.B+3
  4610 3288 B5 95			lda :STACKORIGIN-1,x
  4611 328A 85 86			sta @REAL_MUL.A
  4612 328C B5 A5			lda :STACKORIGIN-1+STACKWIDTH,x
  4613 328E 85 87			sta @REAL_MUL.A+1
  4614 3290 B5 B5			lda :STACKORIGIN-1+STACKWIDTH*2,x
  4615 3292 85 88			sta @REAL_MUL.A+2
  4616 3294 B5 C5			lda :STACKORIGIN-1+STACKWIDTH*3,x
  4617 3296 85 89			sta @REAL_MUL.A+3
  4618 3298 20 33 14			jsr @REAL_MUL
  4619 329B CA				dex
  4620 329C 20 9A 15			jsr @REAL_ROUND
  4621 329F A5 86			lda :eax
  4622 32A1 95 96			sta :STACKORIGIN,x
  4623 32A3 A5 87			lda :eax+1
  4624 32A5 95 A6			sta :STACKORIGIN+STACKWIDTH,x
  4625 32A7 A5 88			lda :eax+2
  4626 32A9 95 B6			sta :STACKORIGIN+STACKWIDTH*2,x
  4627 32AB A5 89			lda :eax+3
  4628 32AD 95 C6			sta :STACKORIGIN+STACKWIDTH*3,x
  4629 32AF AC 79 A4 84 84 AC + 	mwy BALL :bp2
  4630 32B9 A0 10			ldy #BALL.SPEEDX-DATAORIGIN
  4631 32BB B5 96			lda :STACKORIGIN,x
  4632 32BD 91 84			sta (:bp2),y
  4633 32BF C8				iny
  4634 32C0 B5 A6			lda :STACKORIGIN+STACKWIDTH,x
  4635 32C2 91 84			sta (:bp2),y
  4636
  4637 				; optimize FAIL (1, service.pas), line = 892
  4638
  4639 32C4 A9 00 95 96			mva #$00 :STACKORIGIN,x
  4640 32C8 A9 01 95 A6			mva #$01 :STACKORIGIN+STACKWIDTH,x
  4641 32CC AD 7F A4			lda W
  4642 32CF 8D 50 9A			sta SYSTEM.SIN.@01018E000.X
  4643 32D2 AD 80 A4			lda W+1
  4644 32D5 8D 51 9A			sta SYSTEM.SIN.@01018E000.X+1
  4645 32D8 AD 81 A4			lda W+2
  4646 32DB 8D 52 9A			sta SYSTEM.SIN.@01018E000.X+2
  4647 32DE AD 82 A4			lda W+3
  4648 32E1 8D 53 9A			sta SYSTEM.SIN.@01018E000.X+3
  4649 32E4 20 76 23			jsr SYSTEM.SIN.@01018E000
  4650 32E7 E8				inx
  4651 32E8 AD 54 9A 95 96		mva SYSTEM.SIN.@01018E000.RESULT :STACKORIGIN,x
  4652 32ED AD 55 9A 95 A6		mva SYSTEM.SIN.@01018E000.RESULT+1 :STACKORIGIN+STACKWIDTH,x
  4653 32F2 AD 56 9A 95 B6		mva SYSTEM.SIN.@01018E000.RESULT+2 :STACKORIGIN+STACKWIDTH*2,x
  4654 32F7 AD 57 9A 95 C6		mva SYSTEM.SIN.@01018E000.RESULT+3 :STACKORIGIN+STACKWIDTH*3,x
  4655 32FC A9 00 95 B5			mva #$00 :STACKORIGIN-1+STACKWIDTH*2,x
  4656 3300 95 C5			sta :STACKORIGIN-1+STACKWIDTH*3,x
  4657 3302 20 58 11			jsr @expandToREAL1
  4658 3305 B5 96			lda :STACKORIGIN,x
  4659 3307 85 8E			sta @REAL_MUL.B
  4660 3309 B5 A6			lda :STACKORIGIN+STACKWIDTH,x
  4661 330B 85 8F			sta @REAL_MUL.B+1
  4662 330D B5 B6			lda :STACKORIGIN+STACKWIDTH*2,x
  4663 330F 85 90			sta @REAL_MUL.B+2
  4664 3311 B5 C6			lda :STACKORIGIN+STACKWIDTH*3,x
  4665 3313 85 91			sta @REAL_MUL.B+3
  4666 3315 B5 95			lda :STACKORIGIN-1,x
  4667 3317 85 86			sta @REAL_MUL.A
  4668 3319 B5 A5			lda :STACKORIGIN-1+STACKWIDTH,x
  4669 331B 85 87			sta @REAL_MUL.A+1
  4670 331D B5 B5			lda :STACKORIGIN-1+STACKWIDTH*2,x
  4671 331F 85 88			sta @REAL_MUL.A+2
  4672 3321 B5 C5			lda :STACKORIGIN-1+STACKWIDTH*3,x
  4673 3323 85 89			sta @REAL_MUL.A+3
  4674 3325 20 33 14			jsr @REAL_MUL
  4675 3328 CA				dex
  4676 3329 20 9A 15			jsr @REAL_ROUND
  4677 332C A5 86			lda :eax
  4678 332E 95 96			sta :STACKORIGIN,x
  4679 3330 A5 87			lda :eax+1
  4680 3332 95 A6			sta :STACKORIGIN+STACKWIDTH,x
  4681 3334 A5 88			lda :eax+2
  4682 3336 95 B6			sta :STACKORIGIN+STACKWIDTH*2,x
  4683 3338 A5 89			lda :eax+3
  4684 333A 95 C6			sta :STACKORIGIN+STACKWIDTH*3,x
  4685 333C A9 00			lda #$00
  4686 333E 38 F5 96			sub :STACKORIGIN,x
  4687 3341 95 96			sta :STACKORIGIN,x
  4688 3343 A9 00			lda #$00
  4689 3345 F5 A6			sbc :STACKORIGIN+STACKWIDTH,x
  4690 3347 95 A6			sta :STACKORIGIN+STACKWIDTH,x
  4691 3349 A9 00			lda #$00
  4692 334B F5 B6			sbc :STACKORIGIN+STACKWIDTH*2,x
  4693 334D 95 B6			sta :STACKORIGIN+STACKWIDTH*2,x
  4694 334F A9 00			lda #$00
  4695 3351 F5 C6			sbc :STACKORIGIN+STACKWIDTH*3,x
  4696 3353 95 C6			sta :STACKORIGIN+STACKWIDTH*3,x
  4697 3355 AC 79 A4 84 84 AC + 	mwy BALL :bp2
  4698 335F A0 12			ldy #BALL.SPEEDY-DATAORIGIN
  4699 3361 B5 96			lda :STACKORIGIN,x
  4700 3363 91 84			sta (:bp2),y
  4701 3365 C8				iny
  4702 3366 B5 A6			lda :STACKORIGIN+STACKWIDTH,x
  4703 3368 91 84			sta (:bp2),y
  4704 336A CA				dex
  4705
  4706 				; ------------------------------------------------------------
  4707
  4708 = A479			BALL	= DATAORIGIN+$0A5D
  4709 = 9A1C			BALL.X	= DATAORIGIN+$0000
  4710 = 9A1E			BALL.Y	= DATAORIGIN+$0002
  4711 = 9A20			BALL.FINEX	= DATAORIGIN+$0004
  4712 = 9A22			BALL.FINEY	= DATAORIGIN+$0006
  4713 = 9A24			BALL.OLDX	= DATAORIGIN+$0008
  4714 = 9A26			BALL.OLDY	= DATAORIGIN+$000A
  4715 = 9A28			BALL.SPEED	= DATAORIGIN+$000C
  4716 = 9A2A			BALL.FINESPEED	= DATAORIGIN+$000E
  4717 = 9A2C			BALL.SPEEDX	= DATAORIGIN+$0010
  4718 = 9A2E			BALL.SPEEDY	= DATAORIGIN+$0012
  4719 = 9A30			BALL.SBD	= DATAORIGIN+$0014
  4720 = 9A32			BALL.BRWHIT	= DATAORIGIN+$0016
  4721 = 9A33			BALL.INPLAY	= DATAORIGIN+$0017
  4722 = 9A34			BALL.LAUNCH	= DATAORIGIN+$0018
  4723 = 9A35			BALL.ONVAUS	= DATAORIGIN+$0019
  4724 = 9A36			BALL.STM	= DATAORIGIN+$001A
  4725 = A47D			ANGLE	= DATAORIGIN+$0A61
  4726 = A47F			W	= DATAORIGIN+$0A63
  4727
  4728 = A479			@VarData	= BALL
  4729 = 0008			@VarDataSize	= 8
  4730
  4731 336B			@exit
  4732 					.ifdef @new
  4733 					lda <@VarData
  4734 					sta :ztmp
  4735 					lda >@VarData
  4736 					ldy #@VarDataSize-1
  4737 					jmp @FreeMem
  4738 					els
  4739 336B 60				rts						; ret
  4740 					eif
  4741 				.endl
  4742
  4743 336C			.local	GET_BALL_DIRECTION				; FUNCTION
  4744
  4745 				; optimize OK (service.pas), line = 900
  4746
  4747 336C AC 83 A4 84 84 AC + 	mwy BALL :bp2
  4748 3376 A0 11			ldy #BALL.SPEEDX-DATAORIGIN+$01
  4749 3378 B1 84			lda (:bp2),y
  4750 337A 88				dey
  4751 337B 11 84			ora (:bp2),y
  4752 337D D0 75			jne l_0A47
  4753 337F E8				inx
  4754 3380 A9 5A 95 96			mva #$5A :STACKORIGIN,x
  4755 3384 E8				inx
  4756 3385 AC 83 A4 84 84 AC + 	mwy BALL :bp2
  4757 338F A0 12			ldy #BALL.SPEEDY-DATAORIGIN
  4758 3391 B1 84 95 96			mva (:bp2),y :STACKORIGIN,x
  4759 3395 C8				iny
  4760 3396 B1 84 95 A6			mva (:bp2),y :STACKORIGIN+STACKWIDTH,x
  4761 339A A0 12			ldy #BALL.SPEEDY-DATAORIGIN
  4762 339C B1 84			lda (:bp2),y
  4763 339E 85 8A			sta SYSTEM.ABS.@010184000.X
  4764 33A0 C8				iny
  4765 33A1 B1 84			lda (:bp2),y
  4766 33A3 85 8B			sta SYSTEM.ABS.@010184000.X+1
  4767 33A5 20 6D 1B			jsr SYSTEM.ABS.@010184000
  4768 33A8 E8				inx
  4769 33A9 A5 92			lda SYSTEM.ABS.@010184000.RESULT
  4770 33AB 85 8E			sta @SMALLINT.DIV.B
  4771 33AD A5 93			lda SYSTEM.ABS.@010184000.RESULT+1
  4772 33AF 85 8F			sta @SMALLINT.DIV.B+1
  4773 33B1 B5 95			lda :STACKORIGIN-1,x
  4774 33B3 85 86			sta @SMALLINT.DIV.A
  4775 33B5 B5 A5			lda :STACKORIGIN-1+STACKWIDTH,x
  4776 33B7 85 87			sta @SMALLINT.DIV.A+1
  4777 33B9 20 22 12			jsr @SMALLINT.DIV
  4778 33BC A5 86			lda :eax
  4779 33BE 95 95			sta :STACKORIGIN-1,x
  4780 33C0 A5 87			lda :eax+1
  4781 33C2 95 A5			sta :STACKORIGIN-1+STACKWIDTH,x
  4782 33C4 CA				dex
  4783 33C5 A9 00 95 A5			mva #$00 :STACKORIGIN-1+STACKWIDTH,x
  4784 33C9 20 FA 11			jsr mulSMALLINT
  4785 33CC CA				dex
  4786 33CD A9 00			lda #$00
  4787 33CF 38 F5 96			sub :STACKORIGIN,x
  4788 33D2 95 96			sta :STACKORIGIN,x
  4789 33D4 A9 00			lda #$00
  4790 33D6 F5 A6			sbc :STACKORIGIN+STACKWIDTH,x
  4791 33D8 95 A6			sta :STACKORIGIN+STACKWIDTH,x
  4792 33DA A9 00			lda #$00
  4793 33DC F5 B6			sbc :STACKORIGIN+STACKWIDTH*2,x
  4794 33DE 95 B6			sta :STACKORIGIN+STACKWIDTH*2,x
  4795 33E0 A9 00			lda #$00
  4796 33E2 F5 C6			sbc :STACKORIGIN+STACKWIDTH*3,x
  4797 33E4 95 C6			sta :STACKORIGIN+STACKWIDTH*3,x
  4798 33E6 B5 96			lda :STACKORIGIN,x
  4799 33E8 8D 89 A4			sta W
  4800 33EB B5 A6			lda :STACKORIGIN+STACKWIDTH,x
  4801 33ED 8D 8A A4			sta W+1
  4802 33F0 CA				dex
  4803 33F1 4C 1A 35			jmp l_0A63
  4804 33F4			l_0A47
  4805
  4806 				; optimize OK (service.pas), line = 906
  4807
  4808 33F4 AC 83 A4 84 84 AC + 	mwy BALL :bp2
  4809 33FE A0 12			ldy #BALL.SPEEDY-DATAORIGIN
  4810 3400 B1 84			lda (:bp2),y
  4811 3402 85 87			sta @REAL_DIV.A+1
  4812 3404 C8				iny
  4813 3405 B1 84			lda (:bp2),y
  4814 3407 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  4815 3409 A0 10			ldy #BALL.SPEEDX-DATAORIGIN
  4816 340B B1 84			lda (:bp2),y
  4817 340D 85 A0			sta :STACKORIGIN+10
  4818 340F C8				iny
  4819 3410 B1 84			lda (:bp2),y
  4820 3412 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  4821 3414 A0 00			ldy #$00
  4822 3416 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
  4823 3418 10 01			spl
  4824 341A 88				dey
  4825 341B 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  4826 341D 85 90			sta @REAL_DIV.B+2
  4827 341F 84 91			sty @REAL_DIV.B+3
  4828 3421 A5 A0			lda :STACKORIGIN+10
  4829 3423 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  4830 3425 A9 00			lda #$00
  4831 3427 85 8E			sta @REAL_DIV.B
  4832 3429 A0 00			ldy #$00
  4833 342B A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  4834 342D 10 01			spl
  4835 342F 88				dey
  4836 3430 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  4837 3432 85 88			sta @REAL_DIV.A+2
  4838 3434 84 89			sty @REAL_DIV.A+3
  4839 3436 A9 00			lda #$00
  4840 3438 85 86			sta @REAL_DIV.A
  4841 343A A5 B0			lda :STACKORIGIN+STACKWIDTH+10
  4842 343C 85 8F			sta @REAL_DIV.B+1
  4843 343E 20 F2 14			jsr @REAL_DIV
  4844 3441 A9 00			lda #$00
  4845 3443 38 E5 86			sub :eax
  4846 3446 8D 35 9A			sta SYSTEM.ARCTAN.@01018E000.VALUE
  4847 3449 A9 00			lda #$00
  4848 344B E5 87			sbc :eax+1
  4849 344D 8D 36 9A			sta SYSTEM.ARCTAN.@01018E000.VALUE+1
  4850 3450 A9 00			lda #$00
  4851 3452 E5 88			sbc :eax+2
  4852 3454 8D 37 9A			sta SYSTEM.ARCTAN.@01018E000.VALUE+2
  4853 3457 A9 00			lda #$00
  4854 3459 E5 89			sbc :eax+3
  4855 345B 8D 38 9A			sta SYSTEM.ARCTAN.@01018E000.VALUE+3
  4856 345E 20 30 1E			jsr SYSTEM.ARCTAN.@01018E000
  4857 3461 E8				inx
  4858 3462 E8				inx
  4859 3463 A9 00			lda #$00
  4860 3465 85 8E			sta @REAL_MUL.B
  4861 3467 A9 B4			lda #$B4
  4862 3469 85 8F			sta @REAL_MUL.B+1
  4863 346B A9 00			lda #$00
  4864 346D 85 90			sta @REAL_MUL.B+2
  4865 346F A9 00			lda #$00
  4866 3471 85 91			sta @REAL_MUL.B+3
  4867 3473 AD 39 9A			lda SYSTEM.ARCTAN.@01018E000.RESULT
  4868 3476 85 86			sta @REAL_MUL.A
  4869 3478 AD 3A 9A			lda SYSTEM.ARCTAN.@01018E000.RESULT+1
  4870 347B 85 87			sta @REAL_MUL.A+1
  4871 347D AD 3B 9A			lda SYSTEM.ARCTAN.@01018E000.RESULT+2
  4872 3480 85 88			sta @REAL_MUL.A+2
  4873 3482 AD 3C 9A			lda SYSTEM.ARCTAN.@01018E000.RESULT+3
  4874 3485 85 89			sta @REAL_MUL.A+3
  4875 3487 20 33 14			jsr @REAL_MUL
  4876 348A A5 86			lda :eax
  4877 348C 95 95			sta :STACKORIGIN-1,x
  4878 348E A5 87			lda :eax+1
  4879 3490 95 A5			sta :STACKORIGIN-1+STACKWIDTH,x
  4880 3492 A5 88			lda :eax+2
  4881 3494 95 B5			sta :STACKORIGIN-1+STACKWIDTH*2,x
  4882 3496 A5 89			lda :eax+3
  4883 3498 95 C5			sta :STACKORIGIN-1+STACKWIDTH*3,x
  4884 349A A9 24			lda #$24
  4885 349C 85 8E			sta @REAL_DIV.B
  4886 349E A9 03			lda #$03
  4887 34A0 85 8F			sta @REAL_DIV.B+1
  4888 34A2 A9 00			lda #$00
  4889 34A4 85 90			sta @REAL_DIV.B+2
  4890 34A6 A9 00			lda #$00
  4891 34A8 85 91			sta @REAL_DIV.B+3
  4892 34AA B5 95			lda :STACKORIGIN-1,x
  4893 34AC 85 86			sta @REAL_DIV.A
  4894 34AE B5 A5			lda :STACKORIGIN-1+STACKWIDTH,x
  4895 34B0 85 87			sta @REAL_DIV.A+1
  4896 34B2 B5 B5			lda :STACKORIGIN-1+STACKWIDTH*2,x
  4897 34B4 85 88			sta @REAL_DIV.A+2
  4898 34B6 B5 C5			lda :STACKORIGIN-1+STACKWIDTH*3,x
  4899 34B8 85 89			sta @REAL_DIV.A+3
  4900 34BA 20 F2 14			jsr @REAL_DIV
  4901 34BD CA				dex
  4902 34BE 20 9A 15			jsr @REAL_ROUND
  4903 34C1 A5 86			lda :eax
  4904 34C3 8D 89 A4			sta W
  4905 34C6 A5 87			lda :eax+1
  4906 34C8 8D 8A A4			sta W+1
  4907 34CB CA				dex
  4908
  4909 				; optimize OK (service.pas), line = 908
  4910
  4911 34CC AC 83 A4 84 84 AC + 	mwy BALL :bp2
  4912 34D6 A0 00			ldy #$00
  4913 34D8 B1 84			lda (:bp2),y
  4914 34DA 10 0E			jpl l_0A8A
  4915 34DC AD 89 A4			lda W
  4916 34DF 18 69 B4			add #$B4
  4917 34E2 8D 89 A4			sta W
  4918 34E5 90 03			scc
  4919 34E7 EE 8A A4			inc W+1
  4920 34EA			l_0A8A
  4921
  4922 				; optimize OK (service.pas), line = 910
  4923
  4924 34EA AD 89 A4			lda W
  4925 34ED 18 69 68			add #$68
  4926 34F0 8D 89 A4			sta W
  4927 34F3 AD 8A A4			lda W+1
  4928 34F6 69 01			adc #$01
  4929 34F8 8D 8A A4			sta W+1
  4930
  4931 				; optimize OK (service.pas), line = 911
  4932
  4933 34FB A9 68			lda #$68
  4934 34FD 85 8E			sta @SMALLINT.MOD.B
  4935 34FF A9 01			lda #$01
  4936 3501 85 8F			sta @SMALLINT.MOD.B+1
  4937 3503 AD 89 A4			lda W
  4938 3506 85 86			sta @SMALLINT.MOD.A
  4939 3508 AD 8A A4			lda W+1
  4940 350B 85 87			sta @SMALLINT.MOD.A+1
  4941 350D 20 3F 12			jsr @SMALLINT.MOD
  4942 3510 A5 92			lda @SMALLINT.MOD.RESULT
  4943 3512 8D 89 A4			sta W
  4944 3515 A5 93			lda @SMALLINT.MOD.RESULT+1
  4945 3517 8D 8A A4			sta W+1
  4946 351A			l_0A63
  4947
  4948 				; optimize OK (service.pas), line = 914
  4949
  4950 351A AD 89 A4			lda W
  4951 351D 8D 87 A4			sta RESULT
  4952 3520 AD 8A A4			lda W+1
  4953 3523 8D 88 A4			sta RESULT+1
  4954 3526			@exit
  4955
  4956 				; ------------------------------------------------------------
  4957
  4958 = A483			BALL	= DATAORIGIN+$0A67
  4959 = 9A1C			BALL.X	= DATAORIGIN+$0000
  4960 = 9A1E			BALL.Y	= DATAORIGIN+$0002
  4961 = 9A20			BALL.FINEX	= DATAORIGIN+$0004
  4962 = 9A22			BALL.FINEY	= DATAORIGIN+$0006
  4963 = 9A24			BALL.OLDX	= DATAORIGIN+$0008
  4964 = 9A26			BALL.OLDY	= DATAORIGIN+$000A
  4965 = 9A28			BALL.SPEED	= DATAORIGIN+$000C
  4966 = 9A2A			BALL.FINESPEED	= DATAORIGIN+$000E
  4967 = 9A2C			BALL.SPEEDX	= DATAORIGIN+$0010
  4968 = 9A2E			BALL.SPEEDY	= DATAORIGIN+$0012
  4969 = 9A30			BALL.SBD	= DATAORIGIN+$0014
  4970 = 9A32			BALL.BRWHIT	= DATAORIGIN+$0016
  4971 = 9A33			BALL.INPLAY	= DATAORIGIN+$0017
  4972 = 9A34			BALL.LAUNCH	= DATAORIGIN+$0018
  4973 = 9A35			BALL.ONVAUS	= DATAORIGIN+$0019
  4974 = 9A36			BALL.STM	= DATAORIGIN+$001A
  4975 = A487			RESULT	= DATAORIGIN+$0A6B
  4976 = A489			W	= DATAORIGIN+$0A6D
  4977
  4978 = A483			@VarData	= BALL
  4979 = 0004			@VarDataSize	= 4
  4980
  4981 3526 60				rts						; ret
  4982 				.endl
  4983
  4984 3527			.local	START_BALL					; PROCEDURE
  4985
  4986 				; optimize OK (service.pas), line = 922
  4987
  4988 3527 AC 8B A4 84 84 AC + 	mwy BALL :bp2
  4989 3531 A0 19			ldy #BALL.ONVAUS-DATAORIGIN
  4990 3533 A0 00			ldy #BALL.X-DATAORIGIN
  4991 3535 AD 5D 9B			lda VAUS.X
  4992 3538 18 71 84			add (:bp2),y
  4993 353B 91 84			sta (:bp2),y
  4994 353D C8				iny
  4995 353E A9 00			lda #$00
  4996 3540 69 00			adc #$00
  4997 3542 91 84			sta (:bp2),y
  4998
  4999 				; optimize OK (service.pas), line = 928
  5000
  5001 3544 A0 02			ldy #BALL.Y-DATAORIGIN
  5002 3546 AD 5E 9B			lda VAUS.Y
  5003 3549 38 E9 03			sub #$03
  5004 354C 91 84			sta (:bp2),y
  5005 354E C8				iny
  5006 354F A9 00			lda #$00
  5007 3551 E9 00			sbc #$00
  5008 3553 91 84			sta (:bp2),y
  5009
  5010 				; optimize OK (service.pas), line = 933
  5011
  5012 3555 A0 04			ldy #BALL.FINEX-DATAORIGIN
  5013 3557 A9 00			lda #$00
  5014 3559 91 84			sta (:bp2),y
  5015 355B C8				iny
  5016 355C 91 84			sta (:bp2),y
  5017
  5018 				; optimize OK (service.pas), line = 934
  5019
  5020 355E A0 06			ldy #BALL.FINEY-DATAORIGIN
  5021 3560 91 84			sta (:bp2),y
  5022 3562 C8				iny
  5023 3563 91 84			sta (:bp2),y
  5024
  5025 				; optimize OK (service.pas), line = 936
  5026
  5027 3565 A0 17			ldy #BALL.INPLAY-DATAORIGIN
  5028 3567 A9 01			lda #$01
  5029 3569 91 84			sta (:bp2),y
  5030
  5031 				; optimize OK (service.pas), line = 938
  5032
  5033 356B A0 14			ldy #BALL.SBD-DATAORIGIN
  5034 356D A9 00			lda #$00
  5035 356F 91 84			sta (:bp2),y
  5036 3571 C8				iny
  5037 3572 91 84			sta (:bp2),y
  5038
  5039 				; optimize OK (service.pas), line = 939
  5040
  5041 3574 A0 16			ldy #BALL.BRWHIT-DATAORIGIN
  5042 3576 91 84			sta (:bp2),y
  5043
  5044 				; ------------------------------------------------------------
  5045
  5046 = A48B			BALL	= DATAORIGIN+$0A6F
  5047 = 9A1C			BALL.X	= DATAORIGIN+$0000
  5048 = 9A1E			BALL.Y	= DATAORIGIN+$0002
  5049 = 9A20			BALL.FINEX	= DATAORIGIN+$0004
  5050 = 9A22			BALL.FINEY	= DATAORIGIN+$0006
  5051 = 9A24			BALL.OLDX	= DATAORIGIN+$0008
  5052 = 9A26			BALL.OLDY	= DATAORIGIN+$000A
  5053 = 9A28			BALL.SPEED	= DATAORIGIN+$000C
  5054 = 9A2A			BALL.FINESPEED	= DATAORIGIN+$000E
  5055 = 9A2C			BALL.SPEEDX	= DATAORIGIN+$0010
  5056 = 9A2E			BALL.SPEEDY	= DATAORIGIN+$0012
  5057 = 9A30			BALL.SBD	= DATAORIGIN+$0014
  5058 = 9A32			BALL.BRWHIT	= DATAORIGIN+$0016
  5059 = 9A33			BALL.INPLAY	= DATAORIGIN+$0017
  5060 = 9A34			BALL.LAUNCH	= DATAORIGIN+$0018
  5061 = 9A35			BALL.ONVAUS	= DATAORIGIN+$0019
  5062 = 9A36			BALL.STM	= DATAORIGIN+$001A
  5063
  5064 = A48B			@VarData	= BALL
  5065 = 0002			@VarDataSize	= 2
  5066
  5067 3578			@exit
  5068 					.ifdef @new
  5069 					lda <@VarData
  5070 					sta :ztmp
  5071 					lda >@VarData
  5072 					ldy #@VarDataSize-1
  5073 					jmp @FreeMem
  5074 					els
  5075 3578 60				rts						; ret
  5076 					eif
  5077 				.endl
  5078
  5079 3579			.local	BALL_SPEED					; FUNCTION
  5080
  5081 				; ------------------------------------------------------------
  5082
  5083 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
  5084 				; as Pointer
  5085 3579 B5 96			lda :STACKORIGIN,x
  5086 357B 85 84			sta :bp2
  5087 357D B5 A6			lda :STACKORIGIN+STACKWIDTH,x
  5088 357F 85 85			sta :bp2+1
  5089 3581 A0 1A			ldy #$1A
  5090 3583 B1 84 99 8F A4 88 + 	mva:rpl (:bp2),y adr.BALL,y-
  5091 358B CA				dex
  5092 358C			@main
  5093
  5094 				; optimize OK (service.pas), line = 947
  5095
  5096 358C AD 9F A4			lda BALL.SPEEDX
  5097 358F 85 8E			sta :ecx
  5098 3591 85 92			sta :ztmp8
  5099 3593 AD A0 A4			lda BALL.SPEEDX+1
  5100 3596 85 8F			sta :ecx+1
  5101 3598 85 93			sta :ztmp9
  5102 359A AD 9F A4			lda BALL.SPEEDX
  5103 359D 85 86			sta :eax
  5104 359F 85 94			sta :ztmp10
  5105 35A1 AD A0 A4			lda BALL.SPEEDX+1
  5106 35A4 85 87			sta :eax+1
  5107 35A6 85 95			sta :ztmp11
  5108 					.ifdef fmulinit
  5109 					fmulu_16
  5110 					els
  5111 35A8 20 FA 12			imulCX
  5112 					eif
  5113 35AB A5 95			lda :ztmp11
  5114 35AD 10 0D			bpl @+
  5115 35AF A5 88			lda :eax+2
  5116 35B1 38 E5 92			sub :ztmp8
  5117 35B4 85 88			sta :eax+2
  5118 35B6 A5 89			lda :eax+3
  5119 35B8 E5 93			sbc :ztmp9
  5120 35BA 85 89			sta :eax+3
  5121 				@
  5122 35BC A5 93			lda :ztmp9
  5123 35BE 10 0D			bpl @+
  5124 35C0 A5 88			lda :eax+2
  5125 35C2 38 E5 94			sub :ztmp10
  5126 35C5 85 88			sta :eax+2
  5127 35C7 A5 89			lda :eax+3
  5128 35C9 E5 95			sbc :ztmp11
  5129 35CB 85 89			sta :eax+3
  5130 				@
  5131 35CD A5 86			lda :eax
  5132 35CF 85 9F			sta :STACKORIGIN+9
  5133 35D1 A5 87			lda :eax+1
  5134 35D3 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  5135 35D5 A5 88			lda :eax+2
  5136 35D7 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
  5137 35D9 A5 89			lda :eax+3
  5138 35DB 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
  5139 35DD AD A1 A4			lda BALL.SPEEDY
  5140 35E0 85 8E			sta :ecx
  5141 35E2 85 92			sta :ztmp8
  5142 35E4 AD A2 A4			lda BALL.SPEEDY+1
  5143 35E7 85 8F			sta :ecx+1
  5144 35E9 85 93			sta :ztmp9
  5145 35EB AD A1 A4			lda BALL.SPEEDY
  5146 35EE 85 86			sta :eax
  5147 35F0 85 94			sta :ztmp10
  5148 35F2 AD A2 A4			lda BALL.SPEEDY+1
  5149 35F5 85 87			sta :eax+1
  5150 35F7 85 95			sta :ztmp11
  5151 					.ifdef fmulinit
  5152 					fmulu_16
  5153 					els
  5154 35F9 20 FA 12			imulCX
  5155 					eif
  5156 35FC A5 95			lda :ztmp11
  5157 35FE 10 0D			bpl @+
  5158 3600 A5 88			lda :eax+2
  5159 3602 38 E5 92			sub :ztmp8
  5160 3605 85 88			sta :eax+2
  5161 3607 A5 89			lda :eax+3
  5162 3609 E5 93			sbc :ztmp9
  5163 360B 85 89			sta :eax+3
  5164 				@
  5165 360D A5 93			lda :ztmp9
  5166 360F 10 0D			bpl @+
  5167 3611 A5 88			lda :eax+2
  5168 3613 38 E5 94			sub :ztmp10
  5169 3616 85 88			sta :eax+2
  5170 3618 A5 89			lda :eax+3
  5171 361A E5 95			sbc :ztmp11
  5172 361C 85 89			sta :eax+3
  5173 				@
  5174 361E A5 9F			lda :STACKORIGIN+9
  5175 3620 18 65 86			add :eax
  5176 3623 8D 27 9A			sta SYSTEM.SQRT.@010185000.X
  5177 3626 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  5178 3628 65 87			adc :eax+1
  5179 362A 8D 28 9A			sta SYSTEM.SQRT.@010185000.X+1
  5180 362D A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
  5181 362F 65 88			adc :eax+2
  5182 3631 8D 29 9A			sta SYSTEM.SQRT.@010185000.X+2
  5183 3634 A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
  5184 3636 65 89			adc :eax+3
  5185 3638 8D 2A 9A			sta SYSTEM.SQRT.@010185000.X+3
  5186 363B 20 9B 1B			jsr SYSTEM.SQRT.@010185000
  5187 363E E8				inx
  5188 363F AD 2B 9A			lda SYSTEM.SQRT.@010185000.RESULT
  5189 3642 85 8A			sta :FP2MAN0
  5190 3644 AD 2C 9A			lda SYSTEM.SQRT.@010185000.RESULT+1
  5191 3647 85 8B			sta :FP2MAN1
  5192 3649 AD 2D 9A			lda SYSTEM.SQRT.@010185000.RESULT+2
  5193 364C 85 8C			sta :FP2MAN2
  5194 364E AD 2E 9A			lda SYSTEM.SQRT.@010185000.RESULT+3
  5195 3651 85 8D			sta :FP2MAN3
  5196 3653 20 DC 15			jsr @FROUND
  5197 3656 A5 8E			lda :FPMAN0
  5198 3658 8D AA A4			sta RESULT
  5199 365B A5 8F			lda :FPMAN1
  5200 365D 8D AB A4			sta RESULT+1
  5201 3660 CA				dex
  5202 3661			@exit
  5203
  5204 				; ------------------------------------------------------------
  5205
  5206 = A48F			adr.BALL	= DATAORIGIN+$0A73	; [27] RECORD
  5207 3661			.var BALL	= adr.BALL .word
  5208 = A48F			BALL.X	= DATAORIGIN+$0A73
  5209 = A491			BALL.Y	= DATAORIGIN+$0A75
  5210 = A493			BALL.FINEX	= DATAORIGIN+$0A77
  5211 = A495			BALL.FINEY	= DATAORIGIN+$0A79
  5212 = A497			BALL.OLDX	= DATAORIGIN+$0A7B
  5213 = A499			BALL.OLDY	= DATAORIGIN+$0A7D
  5214 = A49B			BALL.SPEED	= DATAORIGIN+$0A7F
  5215 = A49D			BALL.FINESPEED	= DATAORIGIN+$0A81
  5216 = A49F			BALL.SPEEDX	= DATAORIGIN+$0A83
  5217 = A4A1			BALL.SPEEDY	= DATAORIGIN+$0A85
  5218 = A4A3			BALL.SBD	= DATAORIGIN+$0A87
  5219 = A4A5			BALL.BRWHIT	= DATAORIGIN+$0A89
  5220 = A4A6			BALL.INPLAY	= DATAORIGIN+$0A8A
  5221 = A4A7			BALL.LAUNCH	= DATAORIGIN+$0A8B
  5222 = A4A8			BALL.ONVAUS	= DATAORIGIN+$0A8C
  5223 = A4A9			BALL.STM	= DATAORIGIN+$0A8D
  5224 = A4AA			RESULT	= DATAORIGIN+$0A8E
  5225
  5226 = A48F			@VarData	= BALL.X
  5227 = 001B			@VarDataSize	= 27
  5228
  5229 3661 60				rts						; ret
  5230 = 3662 8F A4		BALL
  5230 				.endl
  5231
  5232 3664			.local	MOVE_BALL					; PROCEDURE
  5233
  5234 				; optimize OK (service.pas), line = 961
  5235
  5236 3664 AC AC A4 84 84 AC + 	mwy BALL :bp2
  5237 366E A0 00			ldy #BALL.X-DATAORIGIN
  5238 3670 B1 84			lda (:bp2),y
  5239 3672 C8				iny
  5240 3673 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  5241 3675 A9 00			lda #$00
  5242 3677 A0 04			ldy #BALL.FINEX-DATAORIGIN
  5243 3679 18 71 84			add (:bp2),y
  5244 367C 85 9F			sta :STACKORIGIN+9
  5245 367E C8				iny
  5246 367F A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  5247 3681 71 84			adc (:bp2),y
  5248 3683 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  5249 3685 A0 10			ldy #BALL.SPEEDX-DATAORIGIN
  5250 3687 A5 9F			lda :STACKORIGIN+9
  5251 3689 18 71 84			add (:bp2),y
  5252 368C 8D B0 A4			sta X
  5253 368F C8				iny
  5254 3690 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  5255 3692 71 84			adc (:bp2),y
  5256 3694 8D B1 A4			sta X+1
  5257
  5258 				; optimize OK (service.pas), line = 962
  5259
  5260 3697 A0 02			ldy #BALL.Y-DATAORIGIN
  5261 3699 B1 84			lda (:bp2),y
  5262 369B C8				iny
  5263 369C 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  5264 369E A9 00			lda #$00
  5265 36A0 A0 06			ldy #BALL.FINEY-DATAORIGIN
  5266 36A2 18 71 84			add (:bp2),y
  5267 36A5 85 9F			sta :STACKORIGIN+9
  5268 36A7 C8				iny
  5269 36A8 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  5270 36AA 71 84			adc (:bp2),y
  5271 36AC 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  5272 36AE A0 12			ldy #BALL.SPEEDY-DATAORIGIN
  5273 36B0 A5 9F			lda :STACKORIGIN+9
  5274 36B2 18 71 84			add (:bp2),y
  5275 36B5 8D B2 A4			sta Y
  5276 36B8 C8				iny
  5277 36B9 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  5278 36BB 71 84			adc (:bp2),y
  5279 36BD 8D B3 A4			sta Y+1
  5280
  5281 				; optimize OK (service.pas), line = 964
  5282
  5283 36C0 A0 00			ldy #BALL.X-DATAORIGIN
  5284 36C2 AD B1 A4			lda X+1
  5285 36C5 91 84			sta (:bp2),y
  5286 36C7 C8				iny
  5287 36C8 A9 00			lda #$00
  5288 36CA 91 84			sta (:bp2),y
  5289
  5290 				; optimize OK (service.pas), line = 965
  5291
  5292 36CC A0 02			ldy #BALL.Y-DATAORIGIN
  5293 36CE AD B3 A4			lda Y+1
  5294 36D1 91 84			sta (:bp2),y
  5295 36D3 C8				iny
  5296 36D4 A9 00			lda #$00
  5297 36D6 91 84			sta (:bp2),y
  5298
  5299 				; optimize OK (service.pas), line = 967
  5300
  5301 36D8 A0 04			ldy #BALL.FINEX-DATAORIGIN
  5302 36DA AD B0 A4			lda X
  5303 36DD 91 84			sta (:bp2),y
  5304 36DF C8				iny
  5305 36E0 A9 00			lda #$00
  5306 36E2 91 84			sta (:bp2),y
  5307
  5308 				; optimize OK (service.pas), line = 968
  5309
  5310 36E4 A0 06			ldy #BALL.FINEY-DATAORIGIN
  5311 36E6 AD B2 A4			lda Y
  5312 36E9 91 84			sta (:bp2),y
  5313 36EB C8				iny
  5314 36EC A9 00			lda #$00
  5315 36EE 91 84			sta (:bp2),y
  5316
  5317 				; optimize OK (service.pas), line = 973
  5318
  5319 36F0 A0 00			ldy #BALL.X-DATAORIGIN
  5320 36F2 B1 84			lda (:bp2),y
  5321 36F4 C8				iny
  5322 36F5 C9 D9			cmp #$D9
  5323 36F7 B1 84			lda (:bp2),y
  5324 36F9 E9 00			sbc #$00
  5325 36FB 50 02			svc
  5326 36FD 49 80			eor #$80
  5327 36FF 30 67			jmi l_0B46
  5328
  5329 				; optimize OK (service.pas), line = 975
  5330
  5331 3701 A0 10			ldy #BALL.SPEEDX-DATAORIGIN
  5332 3703 A9 00			lda #$00
  5333 3705 38 F1 84			sub (:bp2),y
  5334 3708 85 9F			sta :STACKORIGIN+9
  5335 370A C8				iny
  5336 370B A9 00			lda #$00
  5337 370D F1 84			sbc (:bp2),y
  5338 370F 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  5339 3711 A0 10			ldy #BALL.SPEEDX-DATAORIGIN
  5340 3713 A5 9F			lda :STACKORIGIN+9
  5341 3715 91 84			sta (:bp2),y
  5342 3717 C8				iny
  5343 3718 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  5344 371A 91 84			sta (:bp2),y
  5345
  5346 				; optimize OK (service.pas), line = 976
  5347
  5348 371C A0 00			ldy #BALL.X-DATAORIGIN
  5349 371E A9 B0			lda #$B0
  5350 3720 38 F1 84			sub (:bp2),y
  5351 3723 85 9F			sta :STACKORIGIN+9
  5352 3725 C8				iny
  5353 3726 A9 01			lda #$01
  5354 3728 F1 84			sbc (:bp2),y
  5355 372A 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  5356 372C A0 00			ldy #BALL.X-DATAORIGIN
  5357 372E A5 9F			lda :STACKORIGIN+9
  5358 3730 91 84			sta (:bp2),y
  5359 3732 C8				iny
  5360 3733 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  5361 3735 91 84			sta (:bp2),y
  5362
  5363 				; optimize OK (service.pas), line = 977
  5364
  5365 3737 A0 04			ldy #BALL.FINEX-DATAORIGIN
  5366 3739 A9 FF			lda #$FF
  5367 373B 51 84			eor (:bp2),y
  5368 373D 85 9F			sta :STACKORIGIN+9
  5369 373F C8				iny
  5370 3740 A9 00			lda #$00
  5371 3742 F1 84			sbc (:bp2),y
  5372 3744 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  5373 3746 A0 04			ldy #BALL.FINEX-DATAORIGIN
  5374 3748 A5 9F			lda :STACKORIGIN+9
  5375 374A 91 84			sta (:bp2),y
  5376 374C C8				iny
  5377 374D A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  5378 374F 91 84			sta (:bp2),y
  5379
  5380 				; optimize OK (service.pas), line = 978
  5381
  5382 3751 A9 F0			lda #$F0
  5383 3753 8D CB 9A			sta BALL_BLOCK_SOUND.A
  5384 3756 A9 00			lda #$00
  5385 3758 8D CC 9A			sta BALL_BLOCK_SOUND.A+1
  5386 375B A9 05			lda #$05
  5387 375D 8D CD 9A			sta BALL_BLOCK_SOUND.B
  5388 3760 A9 00			lda #$00
  5389 3762 8D CE 9A			sta BALL_BLOCK_SOUND.B+1
  5390 3765 20 A5 24			jsr BALL_BLOCK_SOUND
  5391 3768			l_0B46
  5392
  5393 				; optimize OK (service.pas), line = 983
  5394
  5395 3768 AC AC A4 84 84 AC + 	mwy BALL :bp2
  5396 3772 A0 00			ldy #BALL.X-DATAORIGIN
  5397 3774 B1 84			lda (:bp2),y
  5398 3776 C8				iny
  5399 3777 C9 0A			cmp #$0A
  5400 3779 B1 84			lda (:bp2),y
  5401 377B E9 00			sbc #$00
  5402 377D 50 02			svc
  5403 377F 49 80			eor #$80
  5404 3781 10 67			jpl l_0B7B
  5405
  5406 				; optimize OK (service.pas), line = 985
  5407
  5408 3783 A0 10			ldy #BALL.SPEEDX-DATAORIGIN
  5409 3785 A9 00			lda #$00
  5410 3787 38 F1 84			sub (:bp2),y
  5411 378A 85 9F			sta :STACKORIGIN+9
  5412 378C C8				iny
  5413 378D A9 00			lda #$00
  5414 378F F1 84			sbc (:bp2),y
  5415 3791 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  5416 3793 A0 10			ldy #BALL.SPEEDX-DATAORIGIN
  5417 3795 A5 9F			lda :STACKORIGIN+9
  5418 3797 91 84			sta (:bp2),y
  5419 3799 C8				iny
  5420 379A A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  5421 379C 91 84			sta (:bp2),y
  5422
  5423 				; optimize OK (service.pas), line = 986
  5424
  5425 379E A0 00			ldy #BALL.X-DATAORIGIN
  5426 37A0 A9 14			lda #$14
  5427 37A2 38 F1 84			sub (:bp2),y
  5428 37A5 85 9F			sta :STACKORIGIN+9
  5429 37A7 C8				iny
  5430 37A8 A9 00			lda #$00
  5431 37AA F1 84			sbc (:bp2),y
  5432 37AC 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  5433 37AE A0 00			ldy #BALL.X-DATAORIGIN
  5434 37B0 A5 9F			lda :STACKORIGIN+9
  5435 37B2 91 84			sta (:bp2),y
  5436 37B4 C8				iny
  5437 37B5 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  5438 37B7 91 84			sta (:bp2),y
  5439
  5440 				; optimize OK (service.pas), line = 987
  5441
  5442 37B9 A0 04			ldy #BALL.FINEX-DATAORIGIN
  5443 37BB A9 FF			lda #$FF
  5444 37BD 51 84			eor (:bp2),y
  5445 37BF 85 9F			sta :STACKORIGIN+9
  5446 37C1 C8				iny
  5447 37C2 A9 00			lda #$00
  5448 37C4 F1 84			sbc (:bp2),y
  5449 37C6 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  5450 37C8 A0 04			ldy #BALL.FINEX-DATAORIGIN
  5451 37CA A5 9F			lda :STACKORIGIN+9
  5452 37CC 91 84			sta (:bp2),y
  5453 37CE C8				iny
  5454 37CF A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  5455 37D1 91 84			sta (:bp2),y
  5456
  5457 				; optimize OK (service.pas), line = 988
  5458
  5459 37D3 A9 F0			lda #$F0
  5460 37D5 8D CB 9A			sta BALL_BLOCK_SOUND.A
  5461 37D8 A9 00			lda #$00
  5462 37DA 8D CC 9A			sta BALL_BLOCK_SOUND.A+1
  5463 37DD A9 05			lda #$05
  5464 37DF 8D CD 9A			sta BALL_BLOCK_SOUND.B
  5465 37E2 A9 00			lda #$00
  5466 37E4 8D CE 9A			sta BALL_BLOCK_SOUND.B+1
  5467 37E7 20 A5 24			jsr BALL_BLOCK_SOUND
  5468 37EA			l_0B7B
  5469
  5470 				; optimize OK (service.pas), line = 993
  5471
  5472 37EA AC AC A4 84 84 AC + 	mwy BALL :bp2
  5473 37F4 A0 02			ldy #BALL.Y-DATAORIGIN
  5474 37F6 B1 84			lda (:bp2),y
  5475 37F8 C8				iny
  5476 37F9 C9 0C			cmp #$0C
  5477 37FB B1 84			lda (:bp2),y
  5478 37FD E9 00			sbc #$00
  5479 37FF 50 02			svc
  5480 3801 49 80			eor #$80
  5481 3803 10 67			jpl l_0BB0
  5482
  5483 				; optimize OK (service.pas), line = 995
  5484
  5485 3805 A0 12			ldy #BALL.SPEEDY-DATAORIGIN
  5486 3807 A9 00			lda #$00
  5487 3809 38 F1 84			sub (:bp2),y
  5488 380C 85 9F			sta :STACKORIGIN+9
  5489 380E C8				iny
  5490 380F A9 00			lda #$00
  5491 3811 F1 84			sbc (:bp2),y
  5492 3813 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  5493 3815 A0 12			ldy #BALL.SPEEDY-DATAORIGIN
  5494 3817 A5 9F			lda :STACKORIGIN+9
  5495 3819 91 84			sta (:bp2),y
  5496 381B C8				iny
  5497 381C A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  5498 381E 91 84			sta (:bp2),y
  5499
  5500 				; optimize OK (service.pas), line = 996
  5501
  5502 3820 A0 02			ldy #BALL.Y-DATAORIGIN
  5503 3822 A9 18			lda #$18
  5504 3824 38 F1 84			sub (:bp2),y
  5505 3827 85 9F			sta :STACKORIGIN+9
  5506 3829 C8				iny
  5507 382A A9 00			lda #$00
  5508 382C F1 84			sbc (:bp2),y
  5509 382E 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  5510 3830 A0 02			ldy #BALL.Y-DATAORIGIN
  5511 3832 A5 9F			lda :STACKORIGIN+9
  5512 3834 91 84			sta (:bp2),y
  5513 3836 C8				iny
  5514 3837 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  5515 3839 91 84			sta (:bp2),y
  5516
  5517 				; optimize OK (service.pas), line = 997
  5518
  5519 383B A0 06			ldy #BALL.FINEY-DATAORIGIN
  5520 383D A9 FF			lda #$FF
  5521 383F 51 84			eor (:bp2),y
  5522 3841 85 9F			sta :STACKORIGIN+9
  5523 3843 C8				iny
  5524 3844 A9 00			lda #$00
  5525 3846 F1 84			sbc (:bp2),y
  5526 3848 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  5527 384A A0 06			ldy #BALL.FINEY-DATAORIGIN
  5528 384C A5 9F			lda :STACKORIGIN+9
  5529 384E 91 84			sta (:bp2),y
  5530 3850 C8				iny
  5531 3851 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  5532 3853 91 84			sta (:bp2),y
  5533
  5534 				; optimize OK (service.pas), line = 998
  5535
  5536 3855 A9 F0			lda #$F0
  5537 3857 8D CB 9A			sta BALL_BLOCK_SOUND.A
  5538 385A A9 00			lda #$00
  5539 385C 8D CC 9A			sta BALL_BLOCK_SOUND.A+1
  5540 385F A9 05			lda #$05
  5541 3861 8D CD 9A			sta BALL_BLOCK_SOUND.B
  5542 3864 A9 00			lda #$00
  5543 3866 8D CE 9A			sta BALL_BLOCK_SOUND.B+1
  5544 3869 20 A5 24			jsr BALL_BLOCK_SOUND
  5545 386C			l_0BB0
  5546
  5547 				; optimize OK (service.pas), line = 1006
  5548
  5549 386C AC AC A4 84 84 AC + 	mwy BALL :bp2
  5550 3876 A0 02			ldy #BALL.Y-DATAORIGIN
  5551 3878 B1 84			lda (:bp2),y
  5552 387A 18 69 03			add #$03
  5553 387D 85 9F			sta :STACKORIGIN+9
  5554 387F C8				iny
  5555 3880 B1 84			lda (:bp2),y
  5556 3882 69 00			adc #$00
  5557 3884 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  5558 3886 A0 01			ldy #1
  5559 3888 A5 9F			lda :STACKORIGIN+9
  5560 388A C9 B9			cmp #$B9
  5561 388C A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  5562 388E E9 00			sbc #$00
  5563 3890 50 02			svc
  5564 3892 49 80			eor #$80
  5565 3894 10 01			bpl @+
  5566 3896 88				dey
  5567 				@
  5568 3897 84 9F			sty :STACKORIGIN+9
  5569 3899 A0 12			ldy #BALL.SPEEDY-DATAORIGIN
  5570 389B B1 84			lda (:bp2),y
  5571 389D 85 A0			sta :STACKORIGIN+10
  5572 389F C8				iny
  5573 38A0 B1 84			lda (:bp2),y
  5574 38A2 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  5575 38A4 A0 01			ldy #1
  5576 38A6 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
  5577 38A8 30 04			bmi @+
  5578 38AA 05 A0			ora :STACKORIGIN+10
  5579 38AC D0 01			sne
  5580 				@
  5581 38AE 88				dey
  5582 				@
  5583 38AF 98				tya
  5584 38B0 25 9F			and :STACKORIGIN+9
  5585 38B2 85 9F			sta :STACKORIGIN+9
  5586 38B4 A0 0A			ldy #BALL.OLDY-DATAORIGIN
  5587 38B6 B1 84			lda (:bp2),y
  5588 38B8 85 A0			sta :STACKORIGIN+10
  5589 38BA C8				iny
  5590 38BB B1 84			lda (:bp2),y
  5591 38BD 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  5592 38BF A0 01			ldy #1
  5593 38C1 A5 A0			lda :STACKORIGIN+10
  5594 38C3 C9 B9			cmp #$B9
  5595 38C5 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
  5596 38C7 E9 00			sbc #$00
  5597 38C9 50 02			svc
  5598 38CB 49 80			eor #$80
  5599 38CD 30 01			bmi @+
  5600 38CF 88				dey
  5601 				@
  5602 38D0 98				tya
  5603 38D1 25 9F			and :STACKORIGIN+9
  5604 38D3 D0 03 4C 06 3C		jeq l_0BFF
  5605
  5606 				; optimize OK (service.pas), line = 1010
  5607
  5608 38D8 A0 00			ldy #BALL.X-DATAORIGIN
  5609 38DA B1 84			lda (:bp2),y
  5610 38DC 85 9F			sta :STACKORIGIN+9
  5611 38DE C8				iny
  5612 38DF AD 5D 9B			lda VAUS.X
  5613 38E2 38 E9 03			sub #$03
  5614 38E5 85 A0			sta :STACKORIGIN+10
  5615 38E7 A9 00			lda #$00
  5616 38E9 E9 00			sbc #$00
  5617 38EB 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  5618 38ED A5 A0			lda :STACKORIGIN+10
  5619 38EF C5 9F			cmp :STACKORIGIN+9
  5620 38F1 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
  5621 38F3 F1 84			sbc (:bp2),y
  5622 38F5 50 02			svc
  5623 38F7 49 80			eor #$80
  5624 38F9 30 03 4C 06 3C		jpl l_0C2E
  5625 38FE A0 00			ldy #BALL.X-DATAORIGIN
  5626 3900 B1 84			lda (:bp2),y
  5627 3902 85 A0			sta :STACKORIGIN+10
  5628 3904 C8				iny
  5629 3905 B1 84			lda (:bp2),y
  5630 3907 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  5631 3909 AD 5D 9B			lda VAUS.X
  5632 390C 18 6D 65 9B			add VAUS.WIDTH
  5633 3910 85 A1			sta :STACKORIGIN+11
  5634 3912 A9 00			lda #$00
  5635 3914 69 00			adc #$00
  5636 3916 85 B1			sta :STACKORIGIN+STACKWIDTH+11
  5637 3918 A5 A1			lda :STACKORIGIN+11
  5638 391A 18 69 03			add #$03
  5639 391D 85 A1			sta :STACKORIGIN+11
  5640 391F A5 B1			lda :STACKORIGIN+STACKWIDTH+11
  5641 3921 69 00			adc #$00
  5642 3923 85 B1			sta :STACKORIGIN+STACKWIDTH+11
  5643 3925 A9 00			lda #$00
  5644 3927 69 00			adc #$00
  5645 3929 85 C1			sta :STACKORIGIN+STACKWIDTH*2+11
  5646 392B A9 00			lda #$00
  5647 392D 69 00			adc #$00
  5648 392F 85 D1			sta :STACKORIGIN+STACKWIDTH*3+11
  5649 3931 A0 00			ldy #$00
  5650 3933 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
  5651 3935 10 01			spl
  5652 3937 88				dey
  5653 3938 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  5654 393A 84 C0			sty :STACKORIGIN+STACKWIDTH*2+10
  5655 393C 84 D0			sty :STACKORIGIN+STACKWIDTH*3+10
  5656 393E A5 D0			lda :STACKORIGIN+STACKWIDTH*3+10
  5657 3940 C5 D1			cmp :STACKORIGIN+STACKWIDTH*3+11
  5658 3942 D0 10			bne @+
  5659 3944 A5 C0			lda :STACKORIGIN+STACKWIDTH*2+10
  5660 3946 C5 C1			cmp :STACKORIGIN+STACKWIDTH*2+11
  5661 3948 D0 0A			bne @+
  5662 394A A5 B0			lda :STACKORIGIN+STACKWIDTH+10
  5663 394C C5 B1			cmp :STACKORIGIN+STACKWIDTH+11
  5664 394E D0 04			bne @+
  5665 3950 A5 A0			lda :STACKORIGIN+10
  5666 3952 C5 A1			cmp :STACKORIGIN+11
  5667 				@
  5668 3954 90 03 4C 06 3C		jcs l_0C2E
  5669 				@
  5670
  5671 				; optimize OK (service.pas), line = 1013
  5672
  5673 3959 A0 12			ldy #BALL.SPEEDY-DATAORIGIN
  5674 395B A9 00			lda #$00
  5675 395D 38 F1 84			sub (:bp2),y
  5676 3960 85 9F			sta :STACKORIGIN+9
  5677 3962 C8				iny
  5678 3963 A9 00			lda #$00
  5679 3965 F1 84			sbc (:bp2),y
  5680 3967 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  5681 3969 A0 12			ldy #BALL.SPEEDY-DATAORIGIN
  5682 396B A5 9F			lda :STACKORIGIN+9
  5683 396D 91 84			sta (:bp2),y
  5684 396F C8				iny
  5685 3970 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  5686 3972 91 84			sta (:bp2),y
  5687
  5688 				; optimize OK (service.pas), line = 1015
  5689
  5690 3974 AD 69 9B			lda VAUS.LETTER
  5691 3977 C9 06			cmp #$06
  5692 3979 D0 1D			jne l_0C52
  5693 397B A0 18			ldy #BALL.LAUNCH-DATAORIGIN
  5694 397D B1 84			lda (:bp2),y
  5695 397F D0 17			jne l_0C52
  5696
  5697 				; optimize OK (service.pas), line = 1017
  5698
  5699 3981 A0 1A			ldy #BALL.STM-DATAORIGIN
  5700 3983 91 84			sta (:bp2),y
  5701
  5702 				; optimize OK (service.pas), line = 1018
  5703
  5704 3985 A0 18			ldy #BALL.LAUNCH-DATAORIGIN
  5705 3987 A9 01			lda #$01
  5706 3989 91 84			sta (:bp2),y
  5707
  5708 				; optimize OK (service.pas), line = 1019
  5709
  5710 398B A0 00			ldy #BALL.X-DATAORIGIN
  5711 398D B1 84			lda (:bp2),y
  5712 398F C8				iny
  5713 3990 38 ED 5D 9B			sub VAUS.X
  5714 3994 A0 19			ldy #BALL.ONVAUS-DATAORIGIN
  5715 3996 91 84			sta (:bp2),y
  5716 3998			l_0C52
  5717
  5718 				; optimize OK (service.pas), line = 1022
  5719
  5720 3998 A9 2C			lda #$2C
  5721 399A 8D CB 9A			sta BALL_BLOCK_SOUND.A
  5722 399D A9 01			lda #$01
  5723 399F 8D CC 9A			sta BALL_BLOCK_SOUND.A+1
  5724 39A2 A9 06			lda #$06
  5725 39A4 8D CD 9A			sta BALL_BLOCK_SOUND.B
  5726 39A7 A9 00			lda #$00
  5727 39A9 8D CE 9A			sta BALL_BLOCK_SOUND.B+1
  5728 39AC 20 A5 24			jsr BALL_BLOCK_SOUND
  5729
  5730 				; optimize OK (service.pas), line = 1026
  5731
  5732 39AF AC AC A4 84 84 AC + 	mwy BALL :bp2
  5733 39B9 A0 00			ldy #BALL.X-DATAORIGIN
  5734 39BB B1 84			lda (:bp2),y
  5735 39BD 85 9F			sta :STACKORIGIN+9
  5736 39BF C8				iny
  5737 39C0 B1 84			lda (:bp2),y
  5738 39C2 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  5739 39C4 AD 5D 9B			lda VAUS.X
  5740 39C7 18 69 0A			add #$0A
  5741 39CA 85 A0			sta :STACKORIGIN+10
  5742 39CC A9 00			lda #$00
  5743 39CE 69 00			adc #$00
  5744 39D0 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  5745 39D2 A0 00			ldy #$00
  5746 39D4 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  5747 39D6 10 01			spl
  5748 39D8 88				dey
  5749 39D9 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  5750 39DB 84 BF			sty :STACKORIGIN+STACKWIDTH*2+9
  5751 39DD 84 CF			sty :STACKORIGIN+STACKWIDTH*3+9
  5752 39DF				.LOCAL
  5753 39DF A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
  5754 39E1 38 E9 00			sub #$00
  5755 39E4 D0 1C			bne L4
  5756 39E6 A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
  5757 39E8 C9 00			cmp #$00
  5758 39EA D0 0A			bne L1
  5759 39EC A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  5760 39EE C5 B0			cmp :STACKORIGIN+STACKWIDTH+10
  5761 39F0 D0 04			bne L1
  5762 39F2 A5 9F			lda :STACKORIGIN+9
  5763 39F4 C5 A0			cmp :STACKORIGIN+10
  5764 39F6 F0 10		L1	beq L5
  5765 39F8 B0 04			bcs L3
  5766 39FA A9 FF			lda #$FF
  5767 39FC D0 0A			bne L5
  5768 39FE A9 01		L3	lda #$01
  5769 3A00 D0 06			bne L5
  5770 3A02 50 04		L4	bvc L5
  5771 3A04 49 FF			eor #$FF
  5772 3A06 09 01			ora #$01
  5773 3A08			L5
  5774 					.ENDL
  5775 3A08 30 03 4C CB 3A		jpl l_0C82
  5776
  5777 				; optimize OK (service.pas), line = 1029
  5778
  5779 3A0D A0 10			ldy #BALL.SPEEDX-DATAORIGIN
  5780 3A0F A9 00			lda #$00
  5781 3A11 38 F1 84			sub (:bp2),y
  5782 3A14 85 9F			sta :STACKORIGIN+9
  5783 3A16 C8				iny
  5784 3A17 A9 00			lda #$00
  5785 3A19 F1 84			sbc (:bp2),y
  5786 3A1B 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  5787 3A1D A0 10			ldy #BALL.SPEEDX-DATAORIGIN
  5788 3A1F A5 9F			lda :STACKORIGIN+9
  5789 3A21 91 84			sta (:bp2),y
  5790 3A23 C8				iny
  5791 3A24 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  5792 3A26 91 84			sta (:bp2),y
  5793
  5794 				; optimize OK (service.pas), line = 1033
  5795
  5796 3A28 AD AC A4			lda BALL
  5797 3A2B 8D 83 A4			sta GET_BALL_DIRECTION.BALL
  5798 3A2E AD AD A4			lda BALL+1
  5799 3A31 8D 84 A4			sta GET_BALL_DIRECTION.BALL+1
  5800 3A34 20 6C 33			jsr GET_BALL_DIRECTION
  5801 3A37 E8				inx
  5802 3A38 AD 87 A4 95 96		mva GET_BALL_DIRECTION.RESULT :STACKORIGIN,x
  5803 3A3D AD 88 A4 95 A6		mva GET_BALL_DIRECTION.RESULT+1 :STACKORIGIN+STACKWIDTH,x
  5804 3A42 A9 1E			lda #$1E
  5805 3A44 20 F3 23			jsr SYSTEM.RANDOM.@010180000
  5806 3A47 B5 96			lda :STACKORIGIN,x
  5807 3A49 18 6D 61 9A			add SYSTEM.RANDOM.@010180000.RESULT
  5808 3A4D 8D B4 A4			sta ANGLE
  5809 3A50 B5 A6			lda :STACKORIGIN+STACKWIDTH,x
  5810 3A52 69 00			adc #$00
  5811 3A54 8D B5 A4			sta ANGLE+1
  5812 3A57 CA				dex
  5813
  5814 				; optimize OK (service.pas), line = 1041
  5815
  5816 3A58 A9 A0			lda #$A0
  5817 3A5A 8D 17 A4			sta MIN.A
  5818 3A5D A9 00			lda #$00
  5819 3A5F 8D 18 A4			sta MIN.A+1
  5820 3A62 AD B4 A4			lda ANGLE
  5821 3A65 8D 19 A4			sta MIN.B
  5822 3A68 AD B5 A4			lda ANGLE+1
  5823 3A6B 8D 1A A4			sta MIN.B+1
  5824 3A6E 20 C9 26			jsr MIN
  5825 3A71 A9 78			lda #$78
  5826 3A73 8D 11 A4			sta MAX.A
  5827 3A76 A9 00			lda #$00
  5828 3A78 8D 12 A4			sta MAX.A+1
  5829 3A7B AD 1B A4			lda MIN.RESULT
  5830 3A7E 8D 13 A4			sta MAX.B
  5831 3A81 AD 1C A4			lda MIN.RESULT+1
  5832 3A84 8D 14 A4			sta MAX.B+1
  5833 3A87 20 9E 26			jsr MAX
  5834 3A8A AD AC A4			lda BALL
  5835 3A8D 8D 79 A4			sta SET_BALL_DIRECTION.BALL
  5836 3A90 AD AD A4			lda BALL+1
  5837 3A93 8D 7A A4			sta SET_BALL_DIRECTION.BALL+1
  5838 3A96 AD 15 A4			lda MAX.RESULT
  5839 3A99 8D 7D A4			sta SET_BALL_DIRECTION.ANGLE
  5840 3A9C AD 16 A4			lda MAX.RESULT+1
  5841 3A9F 8D 7E A4			sta SET_BALL_DIRECTION.ANGLE+1
  5842 3AA2 20 E1 31			jsr SET_BALL_DIRECTION
  5843
  5844 				; optimize OK (service.pas), line = 1046
  5845
  5846 3AA5 AC AC A4 84 84 AC + 	mwy BALL :bp2
  5847 3AAF A0 0C			ldy #BALL.SPEED-DATAORIGIN
  5848 3AB1 B1 84			lda (:bp2),y
  5849 3AB3 8D 6F A4			sta SET_BALL_SPEED.SPEED
  5850 3AB6 C8				iny
  5851 3AB7 B1 84			lda (:bp2),y
  5852 3AB9 8D 70 A4			sta SET_BALL_SPEED.SPEED+1
  5853 3ABC AD AC A4			lda BALL
  5854 3ABF 8D 6B A4			sta SET_BALL_SPEED.BALL
  5855 3AC2 AD AD A4			lda BALL+1
  5856 3AC5 8D 6C A4			sta SET_BALL_SPEED.BALL+1
  5857 3AC8 20 D1 2F			jsr SET_BALL_SPEED
  5858 3ACB			l_0C82
  5859
  5860 				; optimize OK (service.pas), line = 1052
  5861
  5862 3ACB AC AC A4 84 84 AC + 	mwy BALL :bp2
  5863 3AD5 A0 00			ldy #BALL.X-DATAORIGIN
  5864 3AD7 B1 84			lda (:bp2),y
  5865 3AD9 85 9F			sta :STACKORIGIN+9
  5866 3ADB C8				iny
  5867 3ADC B1 84			lda (:bp2),y
  5868 3ADE 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  5869 3AE0 AD 5D 9B			lda VAUS.X
  5870 3AE3 18 6D 65 9B			add VAUS.WIDTH
  5871 3AE7 85 A0			sta :STACKORIGIN+10
  5872 3AE9 A9 00			lda #$00
  5873 3AEB 69 00			adc #$00
  5874 3AED 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  5875 3AEF A5 A0			lda :STACKORIGIN+10
  5876 3AF1 38 E9 0A			sub #$0A
  5877 3AF4 85 A0			sta :STACKORIGIN+10
  5878 3AF6 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
  5879 3AF8 E9 00			sbc #$00
  5880 3AFA 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  5881 3AFC A9 00			lda #$00
  5882 3AFE E9 00			sbc #$00
  5883 3B00 85 C0			sta :STACKORIGIN+STACKWIDTH*2+10
  5884 3B02 A9 00			lda #$00
  5885 3B04 E9 00			sbc #$00
  5886 3B06 85 D0			sta :STACKORIGIN+STACKWIDTH*3+10
  5887 3B08 A0 00			ldy #$00
  5888 3B0A A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  5889 3B0C 10 01			spl
  5890 3B0E 88				dey
  5891 3B0F 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  5892 3B11 84 BF			sty :STACKORIGIN+STACKWIDTH*2+9
  5893 3B13 84 CF			sty :STACKORIGIN+STACKWIDTH*3+9
  5894 3B15				.LOCAL
  5895 3B15 A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
  5896 3B17 38 E5 D0			sub :STACKORIGIN+STACKWIDTH*3+10
  5897 3B1A D0 1C			bne L4
  5898 3B1C A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
  5899 3B1E C5 C0			cmp :STACKORIGIN+STACKWIDTH*2+10
  5900 3B20 D0 0A			bne L1
  5901 3B22 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  5902 3B24 C5 B0			cmp :STACKORIGIN+STACKWIDTH+10
  5903 3B26 D0 04			bne L1
  5904 3B28 A5 9F			lda :STACKORIGIN+9
  5905 3B2A C5 A0			cmp :STACKORIGIN+10
  5906 3B2C F0 10		L1	beq L5
  5907 3B2E B0 04			bcs L3
  5908 3B30 A9 FF			lda #$FF
  5909 3B32 D0 0A			bne L5
  5910 3B34 A9 01		L3	lda #$01
  5911 3B36 D0 06			bne L5
  5912 3B38 50 04		L4	bvc L5
  5913 3B3A 49 FF			eor #$FF
  5914 3B3C 09 01			ora #$01
  5915 3B3E			L5
  5916 					.ENDL
  5917 3B3E 10 03 4C 06 3C		jmi l_0CC3
  5918 3B43 D0 03 4C 06 3C		jeq l_0CC3
  5919
  5920 				; optimize OK (service.pas), line = 1054
  5921
  5922 3B48 A0 10			ldy #BALL.SPEEDX-DATAORIGIN
  5923 3B4A A9 00			lda #$00
  5924 3B4C 38 F1 84			sub (:bp2),y
  5925 3B4F 85 9F			sta :STACKORIGIN+9
  5926 3B51 C8				iny
  5927 3B52 A9 00			lda #$00
  5928 3B54 F1 84			sbc (:bp2),y
  5929 3B56 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  5930 3B58 A0 10			ldy #BALL.SPEEDX-DATAORIGIN
  5931 3B5A A5 9F			lda :STACKORIGIN+9
  5932 3B5C 91 84			sta (:bp2),y
  5933 3B5E C8				iny
  5934 3B5F A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  5935 3B61 91 84			sta (:bp2),y
  5936
  5937 				; optimize OK (service.pas), line = 1055
  5938
  5939 3B63 AD AC A4			lda BALL
  5940 3B66 8D 83 A4			sta GET_BALL_DIRECTION.BALL
  5941 3B69 AD AD A4			lda BALL+1
  5942 3B6C 8D 84 A4			sta GET_BALL_DIRECTION.BALL+1
  5943 3B6F 20 6C 33			jsr GET_BALL_DIRECTION
  5944 3B72 E8				inx
  5945 3B73 AD 87 A4 95 96		mva GET_BALL_DIRECTION.RESULT :STACKORIGIN,x
  5946 3B78 AD 88 A4 95 A6		mva GET_BALL_DIRECTION.RESULT+1 :STACKORIGIN+STACKWIDTH,x
  5947 3B7D A9 1E			lda #$1E
  5948 3B7F 20 F3 23			jsr SYSTEM.RANDOM.@010180000
  5949 3B82 B5 96			lda :STACKORIGIN,x
  5950 3B84 38 ED 61 9A			sub SYSTEM.RANDOM.@010180000.RESULT
  5951 3B88 8D B4 A4			sta ANGLE
  5952 3B8B B5 A6			lda :STACKORIGIN+STACKWIDTH,x
  5953 3B8D E9 00			sbc #$00
  5954 3B8F 8D B5 A4			sta ANGLE+1
  5955 3B92 CA				dex
  5956
  5957 				; optimize OK (service.pas), line = 1056
  5958
  5959 3B93 A9 14			lda #$14
  5960 3B95 8D 11 A4			sta MAX.A
  5961 3B98 A9 00			lda #$00
  5962 3B9A 8D 12 A4			sta MAX.A+1
  5963 3B9D AD B4 A4			lda ANGLE
  5964 3BA0 8D 13 A4			sta MAX.B
  5965 3BA3 AD B5 A4			lda ANGLE+1
  5966 3BA6 8D 14 A4			sta MAX.B+1
  5967 3BA9 20 9E 26			jsr MAX
  5968 3BAC A9 3C			lda #$3C
  5969 3BAE 8D 17 A4			sta MIN.A
  5970 3BB1 A9 00			lda #$00
  5971 3BB3 8D 18 A4			sta MIN.A+1
  5972 3BB6 AD 15 A4			lda MAX.RESULT
  5973 3BB9 8D 19 A4			sta MIN.B
  5974 3BBC AD 16 A4			lda MAX.RESULT+1
  5975 3BBF 8D 1A A4			sta MIN.B+1
  5976 3BC2 20 C9 26			jsr MIN
  5977 3BC5 AD AC A4			lda BALL
  5978 3BC8 8D 79 A4			sta SET_BALL_DIRECTION.BALL
  5979 3BCB AD AD A4			lda BALL+1
  5980 3BCE 8D 7A A4			sta SET_BALL_DIRECTION.BALL+1
  5981 3BD1 AD 1B A4			lda MIN.RESULT
  5982 3BD4 8D 7D A4			sta SET_BALL_DIRECTION.ANGLE
  5983 3BD7 AD 1C A4			lda MIN.RESULT+1
  5984 3BDA 8D 7E A4			sta SET_BALL_DIRECTION.ANGLE+1
  5985 3BDD 20 E1 31			jsr SET_BALL_DIRECTION
  5986
  5987 				; optimize OK (service.pas), line = 1057
  5988
  5989 3BE0 AC AC A4 84 84 AC + 	mwy BALL :bp2
  5990 3BEA A0 0C			ldy #BALL.SPEED-DATAORIGIN
  5991 3BEC B1 84			lda (:bp2),y
  5992 3BEE 8D 6F A4			sta SET_BALL_SPEED.SPEED
  5993 3BF1 C8				iny
  5994 3BF2 B1 84			lda (:bp2),y
  5995 3BF4 8D 70 A4			sta SET_BALL_SPEED.SPEED+1
  5996 3BF7 AD AC A4			lda BALL
  5997 3BFA 8D 6B A4			sta SET_BALL_SPEED.BALL
  5998 3BFD AD AD A4			lda BALL+1
  5999 3C00 8D 6C A4			sta SET_BALL_SPEED.BALL+1
  6000 3C03 20 D1 2F			jsr SET_BALL_SPEED
  6001 3C06			l_0CC3
  6002 3C06			l_0C2E
  6003 3C06			l_0BFF
  6004
  6005 				; optimize OK (service.pas), line = 1069
  6006
  6007 3C06 AC AC A4 84 84 AC + 	mwy BALL :bp2
  6008 3C10 A0 0A			ldy #BALL.OLDY-DATAORIGIN
  6009 3C12 B1 84			lda (:bp2),y
  6010 3C14 85 9F			sta :STACKORIGIN+9
  6011 3C16 C8				iny
  6012 3C17 B1 84			lda (:bp2),y
  6013 3C19 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  6014 3C1B A0 01			ldy #1
  6015 3C1D A5 9F			lda :STACKORIGIN+9
  6016 3C1F C9 B9			cmp #$B9
  6017 3C21 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  6018 3C23 E9 00			sbc #$00
  6019 3C25 50 02			svc
  6020 3C27 49 80			eor #$80
  6021 3C29 10 01			bpl @+
  6022 3C2B 88				dey
  6023 				@
  6024 3C2C 84 9F			sty :STACKORIGIN+9
  6025 3C2E A0 02			ldy #BALL.Y-DATAORIGIN
  6026 3C30 B1 84			lda (:bp2),y
  6027 3C32 85 A0			sta :STACKORIGIN+10
  6028 3C34 C8				iny
  6029 3C35 B1 84			lda (:bp2),y
  6030 3C37 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  6031 3C39 A0 01			ldy #1
  6032 3C3B A5 A0			lda :STACKORIGIN+10
  6033 3C3D C9 C9			cmp #$C9
  6034 3C3F A5 B0			lda :STACKORIGIN+STACKWIDTH+10
  6035 3C41 E9 00			sbc #$00
  6036 3C43 50 02			svc
  6037 3C45 49 80			eor #$80
  6038 3C47 10 01			bpl @+
  6039 3C49 88				dey
  6040 				@
  6041 3C4A 98				tya
  6042 3C4B 25 9F			and :STACKORIGIN+9
  6043 3C4D 85 9F			sta :STACKORIGIN+9
  6044 3C4F A0 12			ldy #BALL.SPEEDY-DATAORIGIN
  6045 3C51 B1 84			lda (:bp2),y
  6046 3C53 85 A0			sta :STACKORIGIN+10
  6047 3C55 C8				iny
  6048 3C56 B1 84			lda (:bp2),y
  6049 3C58 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  6050 3C5A A0 01			ldy #1
  6051 3C5C A5 B0			lda :STACKORIGIN+STACKWIDTH+10
  6052 3C5E 30 04			bmi @+
  6053 3C60 05 A0			ora :STACKORIGIN+10
  6054 3C62 D0 01			sne
  6055 				@
  6056 3C64 88				dey
  6057 				@
  6058 3C65 98				tya
  6059 3C66 25 9F			and :STACKORIGIN+9
  6060 3C68 F0 15			jeq l_0D12
  6061
  6062 				; optimize OK (service.pas), line = 1071
  6063
  6064 3C6A A0 17			ldy #BALL.INPLAY-DATAORIGIN
  6065 3C6C A9 00			lda #$00
  6066 3C6E 91 84			sta (:bp2),y
  6067
  6068 				; optimize OK (service.pas), line = 1073
  6069
  6070 3C70 AD AC A4			lda BALL
  6071 3C73 8D 60 A4			sta REMOVE_BALL.BALL
  6072 3C76 AD AD A4			lda BALL+1
  6073 3C79 8D 61 A4			sta REMOVE_BALL.BALL+1
  6074 3C7C 20 24 2E			jsr REMOVE_BALL
  6075 3C7F			l_0D12
  6076
  6077 				; ------------------------------------------------------------
  6078
  6079 = A4AC			BALL	= DATAORIGIN+$0A90
  6080 = 9A1C			BALL.X	= DATAORIGIN+$0000
  6081 = 9A1E			BALL.Y	= DATAORIGIN+$0002
  6082 = 9A20			BALL.FINEX	= DATAORIGIN+$0004
  6083 = 9A22			BALL.FINEY	= DATAORIGIN+$0006
  6084 = 9A24			BALL.OLDX	= DATAORIGIN+$0008
  6085 = 9A26			BALL.OLDY	= DATAORIGIN+$000A
  6086 = 9A28			BALL.SPEED	= DATAORIGIN+$000C
  6087 = 9A2A			BALL.FINESPEED	= DATAORIGIN+$000E
  6088 = 9A2C			BALL.SPEEDX	= DATAORIGIN+$0010
  6089 = 9A2E			BALL.SPEEDY	= DATAORIGIN+$0012
  6090 = 9A30			BALL.SBD	= DATAORIGIN+$0014
  6091 = 9A32			BALL.BRWHIT	= DATAORIGIN+$0016
  6092 = 9A33			BALL.INPLAY	= DATAORIGIN+$0017
  6093 = 9A34			BALL.LAUNCH	= DATAORIGIN+$0018
  6094 = 9A35			BALL.ONVAUS	= DATAORIGIN+$0019
  6095 = 9A36			BALL.STM	= DATAORIGIN+$001A
  6096 = A4B0			X	= DATAORIGIN+$0A94
  6097 = A4B2			Y	= DATAORIGIN+$0A96
  6098 = A4B4			ANGLE	= DATAORIGIN+$0A98
  6099
  6100 = A4AC			@VarData	= BALL
  6101 = 0008			@VarDataSize	= 8
  6102
  6103 3C7F			@exit
  6104 					.ifdef @new
  6105 					lda <@VarData
  6106 					sta :ztmp
  6107 					lda >@VarData
  6108 					ldy #@VarDataSize-1
  6109 					jmp @FreeMem
  6110 					els
  6111 3C7F 60				rts						; ret
  6112 					eif
  6113 				.endl
  6114
  6115 3C80			.local	MODIFY_VAUS					; PROCEDURE
  6116
  6117 				; optimize OK (service.pas), line = 1080
  6118
  6119 3C80 AD 65 9B			lda VAUS.WIDTH
  6120 3C83 8D 63 9B			sta VAUS.OLDLEN
  6121 3C86 A9 00			lda #$00
  6122 3C88 8D 64 9B			sta VAUS.OLDLEN+1
  6123
  6124 				; optimize OK (service.pas), line = 1081
  6125
  6126 3C8B AD ED 9A			lda PLAYVAUS.WIDTH
  6127 3C8E 8D 65 9B			sta VAUS.WIDTH
  6128
  6129 				; optimize OK (service.pas), line = 1082
  6130
  6131 3C91 AD EF 9A			lda PLAYVAUS.HEIGHT
  6132 3C94 8D 66 9B			sta VAUS.HEIGHT
  6133
  6134 3C97			@exit
  6135 					.ifdef @new
  6136 					lda <@VarData
  6137 					sta :ztmp
  6138 					lda >@VarData
  6139 					ldy #@VarDataSize-1
  6140 					jmp @FreeMem
  6141 					els
  6142 3C97 60				rts						; ret
  6143 					eif
  6144 				.endl
  6145
  6146 3C98			.local	SET_VAUS					; PROCEDURE
  6147
  6148 				; optimize OK (service.pas), line = 1087
  6149
  6150 3C98 A9 5F			lda #$5F
  6151 3C9A 8D 5D 9B			sta VAUS.X
  6152
  6153 				; optimize OK (service.pas), line = 1088
  6154
  6155 3C9D A9 B8			lda #$B8
  6156 3C9F 8D 5E 9B			sta VAUS.Y
  6157
  6158 				; optimize OK (service.pas), line = 1090
  6159
  6160 3CA2 A9 FF			lda #$FF
  6161 3CA4 8D 5F 9B			sta VAUS.OLDX
  6162 3CA7 8D 60 9B			sta VAUS.OLDX+1
  6163
  6164 				; optimize OK (service.pas), line = 1091
  6165
  6166 3CAA 8D 61 9B			sta VAUS.OLDY
  6167 3CAD 8D 62 9B			sta VAUS.OLDY+1
  6168
  6169 				; optimize OK (service.pas), line = 1092
  6170
  6171 3CB0 A9 00			lda #$00
  6172 3CB2 8D 68 9B			sta VAUS.IFLASH
  6173
  6174 				; optimize OK (service.pas), line = 1096
  6175
  6176 3CB5 8D 67 9B			sta VAUS.FLASH
  6177
  6178 				; optimize OK (service.pas), line = 1100
  6179
  6180 3CB8 AD ED 9A			lda PLAYVAUS.WIDTH
  6181 3CBB 8D 65 9B			sta VAUS.WIDTH
  6182
  6183 				; optimize OK (service.pas), line = 1101
  6184
  6185 3CBE AD EF 9A			lda PLAYVAUS.HEIGHT
  6186 3CC1 8D 66 9B			sta VAUS.HEIGHT
  6187
  6188 				; optimize OK (service.pas), line = 1102
  6189
  6190 3CC4 AD 65 9B			lda VAUS.WIDTH
  6191 3CC7 8D 63 9B			sta VAUS.OLDLEN
  6192 3CCA A9 00			lda #$00
  6193 3CCC 8D 64 9B			sta VAUS.OLDLEN+1
  6194
  6195 				; optimize OK (service.pas), line = 1103
  6196
  6197 3CCF A9 FF			lda #$FF
  6198 3CD1 8D 69 9B			sta VAUS.LETTER
  6199
  6200 3CD4			@exit
  6201 					.ifdef @new
  6202 					lda <@VarData
  6203 					sta :ztmp
  6204 					lda >@VarData
  6205 					ldy #@VarDataSize-1
  6206 					jmp @FreeMem
  6207 					els
  6208 3CD4 60				rts						; ret
  6209 					eif
  6210 				.endl
  6211
  6212 3CD5			.local	START_VAUS					; PROCEDURE
  6213
  6214 				; optimize OK (service.pas), line = 1110
  6215
  6216 3CD5 A9 D8			lda #$D8
  6217 3CD7 38 ED 65 9B			sub VAUS.WIDTH
  6218 3CDB 85 9F			sta :STACKORIGIN+9
  6219 3CDD A9 00			lda #$00
  6220 3CDF E9 00			sbc #$00
  6221 3CE1 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  6222 3CE3 A0 00			ldy #$00
  6223 3CE5 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  6224 3CE7 10 01			spl
  6225 3CE9 88				dey
  6226 3CEA 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  6227 3CEC 84 BF			sty :STACKORIGIN+STACKWIDTH*2+9
  6228 3CEE 84 CF			sty :STACKORIGIN+STACKWIDTH*3+9
  6229 3CF0 A5 9F			lda :STACKORIGIN+9
  6230 3CF2 38 E9 01			sub #$01
  6231 3CF5 85 9F			sta :STACKORIGIN+9
  6232 3CF7 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  6233 3CF9 E9 00			sbc #$00
  6234 3CFB 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  6235 3CFD A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
  6236 3CFF E9 00			sbc #$00
  6237 3D01 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
  6238 3D03 A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
  6239 3D05 E9 00			sbc #$00
  6240 3D07 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
  6241 3D09 06 9F			asl :STACKORIGIN+9
  6242 3D0B 26 AF			rol :STACKORIGIN+STACKWIDTH+9
  6243 3D0D 26 BF			rol :STACKORIGIN+STACKWIDTH*2+9
  6244 3D0F 26 CF			rol :STACKORIGIN+STACKWIDTH*3+9
  6245 3D11 A9 14			lda #$14
  6246 3D13 8D D5 9A			sta MOUSE_X_LIMIT.MN
  6247 3D16 A9 00			lda #$00
  6248 3D18 8D D6 9A			sta MOUSE_X_LIMIT.MN+1
  6249 3D1B A5 9F			lda :STACKORIGIN+9
  6250 3D1D 8D D7 9A			sta MOUSE_X_LIMIT.MX
  6251 3D20 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  6252 3D22 8D D8 9A			sta MOUSE_X_LIMIT.MX+1
  6253 3D25 20 EC 24			jsr MOUSE_X_LIMIT
  6254
  6255 				; optimize OK (service.pas), line = 1111
  6256
  6257 3D28 A9 BE			lda #$BE
  6258 3D2A 8D D9 9A			sta MOUSEMOVE.X
  6259 3D2D A9 00			lda #$00
  6260 3D2F 8D DA 9A			sta MOUSEMOVE.X+1
  6261 3D32 A9 B8			lda #$B8
  6262 3D34 8D DB 9A			sta MOUSEMOVE.Y
  6263 3D37 A9 00			lda #$00
  6264 3D39 8D DC 9A			sta MOUSEMOVE.Y+1
  6265 3D3C 20 ED 24			jsr MOUSEMOVE
  6266
  6267 				; optimize OK (service.pas), line = 1112
  6268
  6269 3D3F A9 5F			lda #$5F
  6270 3D41 8D 5D 9B			sta VAUS.X
  6271
  6272 				; optimize OK (service.pas), line = 1113
  6273
  6274 3D44 A9 B8			lda #$B8
  6275 3D46 8D 5E 9B			sta VAUS.Y
  6276
  6277 3D49			@exit
  6278 					.ifdef @new
  6279 					lda <@VarData
  6280 					sta :ztmp
  6281 					lda >@VarData
  6282 					ldy #@VarDataSize-1
  6283 					jmp @FreeMem
  6284 					els
  6285 3D49 60				rts						; ret
  6286 					eif
  6287 				.endl
  6288
  6289 3D4A			.local	REMOVE_VAUS					; PROCEDURE
  6290
  6291 				; optimize OK (service.pas), line = 1127
  6292
  6293 3D4A AD 61 9B			lda VAUS.OLDY
  6294 3D4D 8D B6 A4			sta Y
  6295 3D50 18 6D 66 9B			add VAUS.HEIGHT
  6296 3D54 8D 58 3D			sta @FORTMP_0D92_0
  6297
  6298 3D57			l_0D95
  6299 				; --- ForToDoCondition
  6300 3D57 A9 00			lda @FORTMP_0D92_0::#$00
  6301 3D59 CD B6 A4			cmp Y
  6302 3D5C B0 03 4C 29 3E		jcc l_0DA3
  6303
  6304 				; optimize OK (service.pas), line = 1130
  6305
  6306 3D61 AD 5F 9B			lda VAUS.OLDX
  6307 3D64 85 A0			sta :STACKORIGIN+10
  6308 3D66 A0 00			ldy #$00
  6309 3D68 AD 60 9B			lda VAUS.OLDX+1
  6310 3D6B 10 01			spl
  6311 3D6D 88				dey
  6312 3D6E 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  6313 3D70 84 C0			sty :STACKORIGIN+STACKWIDTH*2+10
  6314 3D72 84 D0			sty :STACKORIGIN+STACKWIDTH*3+10
  6315 3D74 A9 00			lda #$00
  6316 3D76 85 B1			sta :STACKORIGIN+STACKWIDTH+11
  6317 3D78 AD B6 A4			lda Y
  6318 3D7B 0A				asl @
  6319 3D7C 26 B1			rol :STACKORIGIN+STACKWIDTH+11
  6320 3D7E 18 6D 1C 99			add ROW
  6321 3D82 85 84			sta :bp2
  6322 3D84 AD 1D 99			lda ROW+1
  6323 3D87 65 B1			adc :STACKORIGIN+STACKWIDTH+11
  6324 3D89 85 85			sta :bp2+1
  6325 3D8B A0 00			ldy #$00
  6326 3D8D A5 A0			lda :STACKORIGIN+10
  6327 3D8F 18 71 84			add (:bp2),y
  6328 3D92 8D F3 A3			sta BLITROW.DST
  6329 3D95 C8				iny
  6330 3D96 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
  6331 3D98 71 84			adc (:bp2),y
  6332 3D9A 8D F4 A3			sta BLITROW.DST+1
  6333 3D9D A5 C0			lda :STACKORIGIN+STACKWIDTH*2+10
  6334 3D9F 69 00			adc #$00
  6335 3DA1 8D F5 A3			sta BLITROW.DST+2
  6336 3DA4 A5 D0			lda :STACKORIGIN+STACKWIDTH*3+10
  6337 3DA6 69 00			adc #$00
  6338 3DA8 8D F6 A3			sta BLITROW.DST+3
  6339 3DAB AD 5F 9B			lda VAUS.OLDX
  6340 3DAE 85 A2			sta :STACKORIGIN+12
  6341 3DB0 A0 00			ldy #$00
  6342 3DB2 AD 60 9B			lda VAUS.OLDX+1
  6343 3DB5 10 01			spl
  6344 3DB7 88				dey
  6345 3DB8 85 B2			sta :STACKORIGIN+STACKWIDTH+12
  6346 3DBA 84 C2			sty :STACKORIGIN+STACKWIDTH*2+12
  6347 3DBC 84 D2			sty :STACKORIGIN+STACKWIDTH*3+12
  6348 3DBE AD E9 9A			lda PLAYSCREEN.OFS
  6349 3DC1 18 65 A2			add :STACKORIGIN+12
  6350 3DC4 85 A1			sta :STACKORIGIN+11
  6351 3DC6 AD EA 9A			lda PLAYSCREEN.OFS+1
  6352 3DC9 65 B2			adc :STACKORIGIN+STACKWIDTH+12
  6353 3DCB 85 B1			sta :STACKORIGIN+STACKWIDTH+11
  6354 3DCD AD EB 9A			lda PLAYSCREEN.OFS+2
  6355 3DD0 65 C2			adc :STACKORIGIN+STACKWIDTH*2+12
  6356 3DD2 85 C1			sta :STACKORIGIN+STACKWIDTH*2+11
  6357 3DD4 AD EC 9A			lda PLAYSCREEN.OFS+3
  6358 3DD7 65 D2			adc :STACKORIGIN+STACKWIDTH*3+12
  6359 3DD9 85 D1			sta :STACKORIGIN+STACKWIDTH*3+11
  6360 3DDB A9 00			lda #$00
  6361 3DDD 85 B2			sta :STACKORIGIN+STACKWIDTH+12
  6362 3DDF AD B6 A4			lda Y
  6363 3DE2 0A				asl @
  6364 3DE3 26 B2			rol :STACKORIGIN+STACKWIDTH+12
  6365 3DE5 18 6D 1C 99			add ROW
  6366 3DE9 85 84			sta :bp2
  6367 3DEB AD 1D 99			lda ROW+1
  6368 3DEE 65 B2			adc :STACKORIGIN+STACKWIDTH+12
  6369 3DF0 85 85			sta :bp2+1
  6370 3DF2 A0 00			ldy #$00
  6371 3DF4 A5 A1			lda :STACKORIGIN+11
  6372 3DF6 18 71 84			add (:bp2),y
  6373 3DF9 8D EF A3			sta BLITROW.SRC
  6374 3DFC C8				iny
  6375 3DFD A5 B1			lda :STACKORIGIN+STACKWIDTH+11
  6376 3DFF 71 84			adc (:bp2),y
  6377 3E01 8D F0 A3			sta BLITROW.SRC+1
  6378 3E04 A5 C1			lda :STACKORIGIN+STACKWIDTH*2+11
  6379 3E06 69 00			adc #$00
  6380 3E08 8D F1 A3			sta BLITROW.SRC+2
  6381 3E0B A5 D1			lda :STACKORIGIN+STACKWIDTH*3+11
  6382 3E0D 69 00			adc #$00
  6383 3E0F 8D F2 A3			sta BLITROW.SRC+3
  6384 3E12 AD 63 9B			lda VAUS.OLDLEN
  6385 3E15 8D F7 A3			sta BLITROW.SIZE
  6386 3E18 AD 64 9B			lda VAUS.OLDLEN+1
  6387 3E1B 8D F8 A3			sta BLITROW.SIZE+1
  6388 3E1E 20 CF 25			jsr BLITROW
  6389
  6390 				; --- ForToDoEpilog
  6391 3E21 EE B6 A4			inc Y
  6392 3E24 F0 03 4C 57 3D		jne l_0D95
  6393 3E29			l_0DA3
  6394
  6395 				; optimize OK (service.pas), line = 1132
  6396
  6397 3E29 AD 65 9B			lda VAUS.WIDTH
  6398 3E2C 8D 63 9B			sta VAUS.OLDLEN
  6399 3E2F A9 00			lda #$00
  6400 3E31 8D 64 9B			sta VAUS.OLDLEN+1
  6401
  6402 				; ------------------------------------------------------------
  6403
  6404 = A4B6			Y	= DATAORIGIN+$0A9A
  6405
  6406 = A4B6			@VarData	= Y
  6407 = 0001			@VarDataSize	= 1
  6408
  6409 3E34			@exit
  6410 					.ifdef @new
  6411 					lda <@VarData
  6412 					sta :ztmp
  6413 					lda >@VarData
  6414 					ldy #@VarDataSize-1
  6415 					jmp @FreeMem
  6416 					els
  6417 3E34 60				rts						; ret
  6418 					eif
  6419 				.endl
  6420
  6421 3E35			.local	PLACE_VAUS					; PROCEDURE
  6422
  6423 				; optimize FAIL (0, service.pas), line = 1142
  6424
  6425 3E35 EE 68 9B			inc VAUS.IFLASH
  6426
  6427 				; optimize OK (service.pas), line = 1144
  6428
  6429 3E38 AD 68 9B			lda VAUS.IFLASH
  6430 3E3B C9 0B			cmp #$0B
  6431 3E3D 90 08			jcc l_0DE7
  6432
  6433 				; optimize FAIL (0, service.pas), line = 1146
  6434
  6435 3E3F EE 67 9B			inc VAUS.FLASH
  6436
  6437 				; optimize OK (service.pas), line = 1147
  6438
  6439 3E42 A9 00			lda #$00
  6440 3E44 8D 68 9B			sta VAUS.IFLASH
  6441 3E47			l_0DE7
  6442
  6443 				; optimize OK (service.pas), line = 1150
  6444
  6445 3E47 AD 67 9B			lda VAUS.FLASH
  6446 3E4A C9 0B			cmp #$0B
  6447 3E4C 90 05			jcc l_0E04
  6448 3E4E A9 00			lda #$00
  6449 3E50 8D 67 9B			sta VAUS.FLASH
  6450 3E53			l_0E04
  6451
  6452 				; optimize OK (service.pas), line = 1160
  6453
  6454 3E53 A9 00			lda #$00
  6455 3E55 8D B8 A4			sta Y
  6456 3E58 AC 66 9B			ldy VAUS.HEIGHT
  6457 3E5B 88				dey
  6458 3E5C 8C 60 3E			sty @FORTMP_0E17_0
  6459
  6460 3E5F			l_0E1A
  6461 				; --- ForToDoCondition
  6462 3E5F A9 00			lda @FORTMP_0E17_0::#$00
  6463 3E61 CD B8 A4			cmp Y
  6464 3E64 B0 03 4C F1 3F		jcc l_0E28
  6465
  6466 				; optimize OK (service.pas), line = 1164
  6467
  6468 3E69 AD 65 9B			lda VAUS.WIDTH
  6469 3E6C 85 8E			sta :ecx
  6470 3E6E AD B8 A4			lda Y
  6471 3E71 85 86			sta :eax
  6472 					.ifdef fmulinit
  6473 					fmulu_8
  6474 					els
  6475 3E73 20 AE 12			imulCL
  6476 					eif
  6477 3E76 8D BA A4			sta CNT+1
  6478 3E79 A5 86			lda :eax
  6479 3E7B 8D B9 A4			sta CNT
  6480
  6481 				; optimize OK (service.pas), line = 1166
  6482
  6483 3E7E AD B8 A4			lda Y
  6484 3E81 18 6D 5E 9B			add VAUS.Y
  6485 3E85 85 A1			sta :STACKORIGIN+11
  6486 3E87 A9 00			lda #$00
  6487 3E89 69 00			adc #$00
  6488 3E8B 06 A1			asl :STACKORIGIN+11
  6489 3E8D 2A				rol @
  6490 3E8E 85 B1			sta :STACKORIGIN+STACKWIDTH+11
  6491 3E90 AD 1C 99			lda ROW
  6492 3E93 18 65 A1			add :STACKORIGIN+11
  6493 3E96 85 84			sta :bp2
  6494 3E98 AD 1D 99			lda ROW+1
  6495 3E9B 65 B1			adc :STACKORIGIN+STACKWIDTH+11
  6496 3E9D 85 85			sta :bp2+1
  6497 3E9F A0 00			ldy #$00
  6498 3EA1 AD 5D 9B			lda VAUS.X
  6499 3EA4 18 71 84			add (:bp2),y
  6500 3EA7 8D DE A3			sta BLITZERO.DST
  6501 3EAA C8				iny
  6502 3EAB A9 00			lda #$00
  6503 3EAD 71 84			adc (:bp2),y
  6504 3EAF 8D DF A3			sta BLITZERO.DST+1
  6505 3EB2 A9 00			lda #$00
  6506 3EB4 69 00			adc #$00
  6507 3EB6 8D E0 A3			sta BLITZERO.DST+2
  6508 3EB9 A9 00			lda #$00
  6509 3EBB 69 00			adc #$00
  6510 3EBD 8D E1 A3			sta BLITZERO.DST+3
  6511 3EC0 AD F1 9A			lda PLAYVAUS.OFS
  6512 3EC3 18 6D B9 A4			add CNT
  6513 3EC7 8D DA A3			sta BLITZERO.SRC
  6514 3ECA AD F2 9A			lda PLAYVAUS.OFS+1
  6515 3ECD 6D BA A4			adc CNT+1
  6516 3ED0 8D DB A3			sta BLITZERO.SRC+1
  6517 3ED3 AD F3 9A			lda PLAYVAUS.OFS+2
  6518 3ED6 69 00			adc #$00
  6519 3ED8 8D DC A3			sta BLITZERO.SRC+2
  6520 3EDB AD F4 9A			lda PLAYVAUS.OFS+3
  6521 3EDE 69 00			adc #$00
  6522 3EE0 8D DD A3			sta BLITZERO.SRC+3
  6523 3EE3 AD 65 9B			lda VAUS.WIDTH
  6524 3EE6 8D E2 A3			sta BLITZERO.SIZE
  6525 3EE9 A9 00			lda #$00
  6526 3EEB 8D E3 A3			sta BLITZERO.SIZE+1
  6527 3EEE 20 EE 24			jsr BLITZERO
  6528
  6529 				; optimize OK (service.pas), line = 1168
  6530
  6531 3EF1 AD B8 A4			lda Y
  6532 3EF4 C9 02			cmp #$02
  6533 3EF6 B0 03 4C E9 3F		jcc l_0E77
  6534 3EFB AD 66 9B			lda VAUS.HEIGHT
  6535 3EFE E9 02			sbc #$02
  6536 3F00 85 A1			sta :STACKORIGIN+11
  6537 3F02 A9 00			lda #$00
  6538 3F04 E9 00			sbc #$00
  6539 3F06 85 B1			sta :STACKORIGIN+STACKWIDTH+11
  6540 3F08 AD B8 A4			lda Y
  6541 3F0B C5 A1			cmp :STACKORIGIN+11
  6542 3F0D A9 00			lda #$00
  6543 3F0F E5 B1			sbc :STACKORIGIN+STACKWIDTH+11
  6544 3F11 50 02			svc
  6545 3F13 49 80			eor #$80
  6546 3F15 30 03 4C E9 3F		jpl l_0E77
  6547
  6548 				; optimize OK (service.pas), line = 1171
  6549
  6550 3F1A AC 67 9B			ldy VAUS.FLASH
  6551 3F1D B9 4C 10			lda adr.FLASH,y
  6552 3F20 8D 09 A4			sta PUTBYTE.V
  6553 3F23 AD B8 A4			lda Y
  6554 3F26 18 6D 5E 9B			add VAUS.Y
  6555 3F2A 85 A1			sta :STACKORIGIN+11
  6556 3F2C A9 00			lda #$00
  6557 3F2E 69 00			adc #$00
  6558 3F30 06 A1			asl :STACKORIGIN+11
  6559 3F32 2A				rol @
  6560 3F33 85 B1			sta :STACKORIGIN+STACKWIDTH+11
  6561 3F35 AD 1C 99			lda ROW
  6562 3F38 18 65 A1			add :STACKORIGIN+11
  6563 3F3B 85 84			sta :bp2
  6564 3F3D AD 1D 99			lda ROW+1
  6565 3F40 65 B1			adc :STACKORIGIN+STACKWIDTH+11
  6566 3F42 85 85			sta :bp2+1
  6567 3F44 A0 00			ldy #$00
  6568 3F46 AD 5D 9B			lda VAUS.X
  6569 3F49 18 71 84			add (:bp2),y
  6570 3F4C 8D 05 A4			sta PUTBYTE.DST
  6571 3F4F C8				iny
  6572 3F50 A9 00			lda #$00
  6573 3F52 71 84			adc (:bp2),y
  6574 3F54 8D 06 A4			sta PUTBYTE.DST+1
  6575 3F57 A9 00			lda #$00
  6576 3F59 69 00			adc #$00
  6577 3F5B 8D 07 A4			sta PUTBYTE.DST+2
  6578 3F5E A9 00			lda #$00
  6579 3F60 69 00			adc #$00
  6580 3F62 8D 08 A4			sta PUTBYTE.DST+3
  6581 3F65 20 70 26			jsr PUTBYTE
  6582
  6583 				; optimize OK (service.pas), line = 1174
  6584
  6585 3F68 AC 67 9B			ldy VAUS.FLASH
  6586 3F6B B9 4C 10			lda adr.FLASH,y
  6587 3F6E 8D 09 A4			sta PUTBYTE.V
  6588 3F71 AD 5D 9B			lda VAUS.X
  6589 3F74 18 6D 65 9B			add VAUS.WIDTH
  6590 3F78 85 A0			sta :STACKORIGIN+10
  6591 3F7A A9 00			lda #$00
  6592 3F7C 69 00			adc #$00
  6593 3F7E 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  6594 3F80 A9 00			lda #$00
  6595 3F82 69 00			adc #$00
  6596 3F84 85 C0			sta :STACKORIGIN+STACKWIDTH*2+10
  6597 3F86 A9 00			lda #$00
  6598 3F88 69 00			adc #$00
  6599 3F8A 85 D0			sta :STACKORIGIN+STACKWIDTH*3+10
  6600 3F8C A5 A0			lda :STACKORIGIN+10
  6601 3F8E 38 E9 01			sub #$01
  6602 3F91 85 A0			sta :STACKORIGIN+10
  6603 3F93 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
  6604 3F95 E9 00			sbc #$00
  6605 3F97 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  6606 3F99 A5 C0			lda :STACKORIGIN+STACKWIDTH*2+10
  6607 3F9B E9 00			sbc #$00
  6608 3F9D 85 C0			sta :STACKORIGIN+STACKWIDTH*2+10
  6609 3F9F A5 D0			lda :STACKORIGIN+STACKWIDTH*3+10
  6610 3FA1 E9 00			sbc #$00
  6611 3FA3 85 D0			sta :STACKORIGIN+STACKWIDTH*3+10
  6612 3FA5 AD B8 A4			lda Y
  6613 3FA8 18 6D 5E 9B			add VAUS.Y
  6614 3FAC 85 A1			sta :STACKORIGIN+11
  6615 3FAE A9 00			lda #$00
  6616 3FB0 69 00			adc #$00
  6617 3FB2 06 A1			asl :STACKORIGIN+11
  6618 3FB4 2A				rol @
  6619 3FB5 85 B1			sta :STACKORIGIN+STACKWIDTH+11
  6620 3FB7 AD 1C 99			lda ROW
  6621 3FBA 18 65 A1			add :STACKORIGIN+11
  6622 3FBD 85 84			sta :bp2
  6623 3FBF AD 1D 99			lda ROW+1
  6624 3FC2 65 B1			adc :STACKORIGIN+STACKWIDTH+11
  6625 3FC4 85 85			sta :bp2+1
  6626 3FC6 A0 00			ldy #$00
  6627 3FC8 A5 A0			lda :STACKORIGIN+10
  6628 3FCA 18 71 84			add (:bp2),y
  6629 3FCD 8D 05 A4			sta PUTBYTE.DST
  6630 3FD0 C8				iny
  6631 3FD1 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
  6632 3FD3 71 84			adc (:bp2),y
  6633 3FD5 8D 06 A4			sta PUTBYTE.DST+1
  6634 3FD8 A5 C0			lda :STACKORIGIN+STACKWIDTH*2+10
  6635 3FDA 69 00			adc #$00
  6636 3FDC 8D 07 A4			sta PUTBYTE.DST+2
  6637 3FDF A5 D0			lda :STACKORIGIN+STACKWIDTH*3+10
  6638 3FE1 69 00			adc #$00
  6639 3FE3 8D 08 A4			sta PUTBYTE.DST+3
  6640 3FE6 20 70 26			jsr PUTBYTE
  6641 3FE9			l_0E77
  6642
  6643 				; --- ForToDoEpilog
  6644 3FE9 EE B8 A4			inc Y
  6645 3FEC F0 03 4C 5F 3E		jne l_0E1A
  6646 3FF1			l_0E28
  6647
  6648 				; ------------------------------------------------------------
  6649
  6650 = A4B8			Y	= DATAORIGIN+$0A9C
  6651 = A4B9			CNT	= DATAORIGIN+$0A9D
  6652
  6653 = A4B8			@VarData	= Y
  6654 = 0003			@VarDataSize	= 3
  6655
  6656 3FF1			@exit
  6657 					.ifdef @new
  6658 					lda <@VarData
  6659 					sta :ztmp
  6660 					lda >@VarData
  6661 					ldy #@VarDataSize-1
  6662 					jmp @FreeMem
  6663 					els
  6664 3FF1 60				rts						; ret
  6665 					eif
  6666 				.endl
  6667
  6668 3FF2			.local	MOVE_VAUS					; PROCEDURE
  6669
  6670 				; optimize OK (service.pas), line = 1185
  6671
  6672 3FF2 A0 01			ldy #1
  6673 3FF4 AD 60 9B			lda VAUS.OLDX+1
  6674 3FF7 C9 FF			cmp #$FF
  6675 3FF9 D0 05			bne @+
  6676 3FFB AD 5F 9B			lda VAUS.OLDX
  6677 3FFE C9 FF			cmp #$FF
  6678 				@
  6679 4000 D0 01			bne @+
  6680 4002 88				dey
  6681 				@
  6682 4003 84 9F			sty :STACKORIGIN+9
  6683 4005 A0 01			ldy #1
  6684 4007 AD 60 9B			lda VAUS.OLDX+1
  6685 400A C9 00			cmp #$00
  6686 400C D0 06			bne @+
  6687 400E AD 5F 9B			lda VAUS.OLDX
  6688 4011 CD 5D 9B			cmp VAUS.X
  6689 				@
  6690 4014 D0 01			bne @+
  6691 4016 88				dey
  6692 				@
  6693 4017 98				tya
  6694 4018 25 9F			and :STACKORIGIN+9
  6695 401A 85 9F			sta :STACKORIGIN+9
  6696 401C A0 01			ldy #1
  6697 401E A9 00			lda #$00
  6698 4020 CD 64 9B			cmp VAUS.OLDLEN+1
  6699 4023 D0 06			bne @+
  6700 4025 AD 65 9B			lda VAUS.WIDTH
  6701 4028 CD 63 9B			cmp VAUS.OLDLEN
  6702 				@
  6703 402B D0 01			bne @+
  6704 402D 88				dey
  6705 				@
  6706 402E 98				tya
  6707 402F 05 9F			ora :STACKORIGIN+9
  6708 4031 F0 03			jeq l_0EF0
  6709
  6710 				; optimize FAIL ('REMOVE_VAUS', service.pas), line = 1186
  6711
  6712 4033 20 4A 3D			jsr REMOVE_VAUS
  6713 4036			l_0EF0
  6714
  6715 				; optimize OK (service.pas), line = 1188
  6716
  6717 4036 AD 5D 9B			lda VAUS.X
  6718 4039 8D 5F 9B			sta VAUS.OLDX
  6719 403C A9 00			lda #$00
  6720 403E 8D 60 9B			sta VAUS.OLDX+1
  6721
  6722 				; optimize OK (service.pas), line = 1189
  6723
  6724 4041 AD 5E 9B			lda VAUS.Y
  6725 4044 8D 61 9B			sta VAUS.OLDY
  6726 4047 A9 00			lda #$00
  6727 4049 8D 62 9B			sta VAUS.OLDY+1
  6728
  6729 				; optimize OK (service.pas), line = 1196
  6730
  6731 404C A9 D8			lda #$D8
  6732 404E 38 ED 65 9B			sub VAUS.WIDTH
  6733 4052 8D 19 A4			sta MIN.B
  6734 4055 A9 00			lda #$00
  6735 4057 E9 00			sbc #$00
  6736 4059 8D 1A A4			sta MIN.B+1
  6737 405C AD BC A4			lda X
  6738 405F 8D 17 A4			sta MIN.A
  6739 4062 AD BD A4			lda X+1
  6740 4065 8D 18 A4			sta MIN.A+1
  6741 4068 20 C9 26			jsr MIN
  6742 406B A9 0A			lda #$0A
  6743 406D 8D 11 A4			sta MAX.A
  6744 4070 A9 00			lda #$00
  6745 4072 8D 12 A4			sta MAX.A+1
  6746 4075 AD 1B A4			lda MIN.RESULT
  6747 4078 8D 13 A4			sta MAX.B
  6748 407B AD 1C A4			lda MIN.RESULT+1
  6749 407E 8D 14 A4			sta MAX.B+1
  6750 4081 20 9E 26			jsr MAX
  6751 4084 AD 15 A4			lda MAX.RESULT
  6752 4087 8D 5D 9B			sta VAUS.X
  6753
  6754 				; optimize OK (service.pas), line = 1197
  6755
  6756 408A A9 C8			lda #$C8
  6757 408C 38 ED 66 9B			sub VAUS.HEIGHT
  6758 4090 8D 19 A4			sta MIN.B
  6759 4093 A9 00			lda #$00
  6760 4095 E9 00			sbc #$00
  6761 4097 8D 1A A4			sta MIN.B+1
  6762 409A AD BE A4			lda Y
  6763 409D 8D 17 A4			sta MIN.A
  6764 40A0 AD BF A4			lda Y+1
  6765 40A3 8D 18 A4			sta MIN.A+1
  6766 40A6 20 C9 26			jsr MIN
  6767 40A9 A9 0C			lda #$0C
  6768 40AB 8D 11 A4			sta MAX.A
  6769 40AE A9 00			lda #$00
  6770 40B0 8D 12 A4			sta MAX.A+1
  6771 40B3 AD 1B A4			lda MIN.RESULT
  6772 40B6 8D 13 A4			sta MAX.B
  6773 40B9 AD 1C A4			lda MIN.RESULT+1
  6774 40BC 8D 14 A4			sta MAX.B+1
  6775 40BF 20 9E 26			jsr MAX
  6776 40C2 AD 15 A4			lda MAX.RESULT
  6777 40C5 8D 5E 9B			sta VAUS.Y
  6778
  6779 				; optimize FAIL ('PLACE_VAUS', service.pas), line = 1199
  6780
  6781 40C8 20 35 3E			jsr PLACE_VAUS
  6782
  6783 				; ------------------------------------------------------------
  6784
  6785 = A4BC			X	= DATAORIGIN+$0AA0
  6786 = A4BE			Y	= DATAORIGIN+$0AA2
  6787
  6788 = A4BC			@VarData	= X
  6789 = 0004			@VarDataSize	= 4
  6790
  6791 40CB			@exit
  6792 					.ifdef @new
  6793 					lda <@VarData
  6794 					sta :ztmp
  6795 					lda >@VarData
  6796 					ldy #@VarDataSize-1
  6797 					jmp @FreeMem
  6798 					els
  6799 40CB 60				rts						; ret
  6800 					eif
  6801 				.endl
  6802
  6803 40CC			.local	REMOVE_BLOCK					; PROCEDURE
  6804
  6805 				; optimize OK (service.pas), line = 1213
  6806
  6807 40CC AD C0 A4			lda XA
  6808 40CF 85 9F			sta :STACKORIGIN+9
  6809 40D1 A9 00			lda #$00
  6810 40D3 06 9F			asl :STACKORIGIN+9
  6811 40D5 2A				rol @
  6812 40D6 06 9F			asl :STACKORIGIN+9
  6813 40D8 2A				rol @
  6814 40D9 06 9F			asl :STACKORIGIN+9
  6815 40DB 2A				rol @
  6816 40DC 06 9F			asl :STACKORIGIN+9
  6817 40DE 2A				rol @
  6818 40DF 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  6819 40E1 A5 9F			lda :STACKORIGIN+9
  6820 40E3 18 69 09			add #$09
  6821 40E6 8D C4 A4			sta XS
  6822 40E9 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  6823 40EB 69 00			adc #$00
  6824 40ED 8D C5 A4			sta XS+1
  6825
  6826 				; optimize OK (service.pas), line = 1214
  6827
  6828 40F0 AD C1 A4			lda YA
  6829 40F3 85 9F			sta :STACKORIGIN+9
  6830 40F5 A9 00			lda #$00
  6831 40F7 06 9F			asl :STACKORIGIN+9
  6832 40F9 2A				rol @
  6833 40FA 06 9F			asl :STACKORIGIN+9
  6834 40FC 2A				rol @
  6835 40FD 06 9F			asl :STACKORIGIN+9
  6836 40FF 2A				rol @
  6837 4100 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  6838 4102 A5 9F			lda :STACKORIGIN+9
  6839 4104 18 69 16			add #$16
  6840 4107 8D C6 A4			sta YS
  6841 410A A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  6842 410C 69 00			adc #$00
  6843 410E 8D C7 A4			sta YS+1
  6844
  6845 				; optimize OK (service.pas), line = 1216
  6846
  6847 4111 A9 00			lda #$00
  6848 4113 8D C3 A4			sta Y
  6849
  6850 4116			l_0F48
  6851 				; --- ForToDoCondition
  6852 4116 AD C3 A4			lda Y
  6853 4119 C9 08			cmp #$08
  6854 411B 90 03 4C 57 43		jcs l_0F56
  6855
  6856 				; optimize OK (service.pas), line = 1218
  6857
  6858 4120 AD C6 A4			lda YS
  6859 4123 6D C3 A4			adc Y
  6860 4126 A8				tay
  6861 4127 B9 12 A3			lda adr.MODY,y
  6862 412A 85 86			sta :eax
  6863 412C A9 00			lda #$00
  6864 412E 85 87			sta :eax+1
  6865 4130 AD 6A 9B			lda PATTERN.WIDTH
  6866 4133 85 8E			sta :ecx
  6867 4135 AD 6B 9B			lda PATTERN.WIDTH+1
  6868 4138 85 8F			sta :ecx+1
  6869 					.ifdef fmulinit
  6870 					fmulu_16
  6871 					els
  6872 413A 20 3E 13			imulCX_AL
  6873 					eif
  6874 413D A5 86			lda :eax
  6875 413F 8D C8 A4			sta YH
  6876 4142 A5 87			lda :eax+1
  6877 4144 8D C9 A4			sta YH+1
  6878
  6879 				; optimize OK (service.pas), line = 1226
  6880
  6881 4147 A9 00			lda #$00
  6882 4149 8D C2 A4			sta X
  6883
  6884 414C			l_0F72
  6885 				; --- ForToDoCondition
  6886 414C AD C2 A4			lda X
  6887 414F C9 10			cmp #$10
  6888 4151 90 03 4C 4F 43		jcs l_0F80
  6889
  6890 				; optimize OK (service.pas), line = 1227
  6891
  6892 4156 6D C4 A4			adc XS
  6893 4159 85 9F			sta :STACKORIGIN+9
  6894 415B A9 00			lda #$00
  6895 415D 6D C5 A4			adc XS+1
  6896 4160 C9 00			cmp #$00
  6897 4162 D0 04			bne @+
  6898 4164 A5 9F			lda :STACKORIGIN+9
  6899 4166 C9 D8			cmp #$D8
  6900 				@
  6901 4168 90 03 4C 47 43		jcs l_0F97
  6902
  6903 				; optimize OK (service.pas), line = 1233
  6904
  6905 416D AD E9 9A			lda PLAYSCREEN.OFS
  6906 4170 6D C2 A4			adc X
  6907 4173 85 9F			sta :STACKORIGIN+9
  6908 4175 AD EA 9A			lda PLAYSCREEN.OFS+1
  6909 4178 69 00			adc #$00
  6910 417A 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  6911 417C AD EB 9A			lda PLAYSCREEN.OFS+2
  6912 417F 69 00			adc #$00
  6913 4181 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
  6914 4183 AD EC 9A			lda PLAYSCREEN.OFS+3
  6915 4186 69 00			adc #$00
  6916 4188 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
  6917 418A A5 9F			lda :STACKORIGIN+9
  6918 418C 18 6D C4 A4			add XS
  6919 4190 85 9F			sta :STACKORIGIN+9
  6920 4192 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  6921 4194 6D C5 A4			adc XS+1
  6922 4197 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  6923 4199 A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
  6924 419B 69 00			adc #$00
  6925 419D 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
  6926 419F A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
  6927 41A1 69 00			adc #$00
  6928 41A3 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
  6929 41A5 AD C3 A4			lda Y
  6930 41A8 18 6D C6 A4			add YS
  6931 41AC 85 A0			sta :STACKORIGIN+10
  6932 41AE A9 00			lda #$00
  6933 41B0 6D C7 A4			adc YS+1
  6934 41B3 06 A0			asl :STACKORIGIN+10
  6935 41B5 2A				rol @
  6936 41B6 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  6937 41B8 AD 1C 99			lda ROW
  6938 41BB 18 65 A0			add :STACKORIGIN+10
  6939 41BE 85 84			sta :bp2
  6940 41C0 AD 1D 99			lda ROW+1
  6941 41C3 65 B0			adc :STACKORIGIN+STACKWIDTH+10
  6942 41C5 85 85			sta :bp2+1
  6943 41C7 A0 00			ldy #$00
  6944 41C9 A5 9F			lda :STACKORIGIN+9
  6945 41CB 18 71 84			add (:bp2),y
  6946 41CE 8D 0A A4			sta GETBYTE.SRC
  6947 41D1 C8				iny
  6948 41D2 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  6949 41D4 71 84			adc (:bp2),y
  6950 41D6 8D 0B A4			sta GETBYTE.SRC+1
  6951 41D9 A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
  6952 41DB 69 00			adc #$00
  6953 41DD 8D 0C A4			sta GETBYTE.SRC+2
  6954 41E0 A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
  6955 41E2 69 00			adc #$00
  6956 41E4 8D 0D A4			sta GETBYTE.SRC+3
  6957 41E7 20 86 26			jsr GETBYTE
  6958 41EA AD 0E A4			lda GETBYTE.RESULT
  6959 41ED 29 80			and #$80
  6960 41EF 8D CB A4			sta SHADOW
  6961
  6962 				; optimize OK (service.pas), line = 1237
  6963
  6964 41F2 AD C2 A4			lda X
  6965 41F5 18 6D C4 A4			add XS
  6966 41F9 85 A0			sta :STACKORIGIN+10
  6967 41FB A9 00			lda #$00
  6968 41FD 6D C5 A4			adc XS+1
  6969 4200 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  6970 4202 AD 1E 99			lda MODX
  6971 4205 18 65 A0			add :STACKORIGIN+10
  6972 4208 A8				tay
  6973 4209 AD 1F 99			lda MODX+1
  6974 420C 65 B0			adc :STACKORIGIN+STACKWIDTH+10
  6975 420E 85 83			sta :bp+1
  6976 4210 AD 6E 9B			lda PATTERN.OFS
  6977 4213 18 71 82			add (:bp),y
  6978 4216 85 9F			sta :STACKORIGIN+9
  6979 4218 AD 6F 9B			lda PATTERN.OFS+1
  6980 421B 69 00			adc #$00
  6981 421D 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  6982 421F AD 70 9B			lda PATTERN.OFS+2
  6983 4222 69 00			adc #$00
  6984 4224 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
  6985 4226 AD 71 9B			lda PATTERN.OFS+3
  6986 4229 69 00			adc #$00
  6987 422B 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
  6988 422D A5 9F			lda :STACKORIGIN+9
  6989 422F 18 6D C8 A4			add YH
  6990 4233 8D 0A A4			sta GETBYTE.SRC
  6991 4236 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  6992 4238 6D C9 A4			adc YH+1
  6993 423B 8D 0B A4			sta GETBYTE.SRC+1
  6994 423E A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
  6995 4240 69 00			adc #$00
  6996 4242 8D 0C A4			sta GETBYTE.SRC+2
  6997 4245 A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
  6998 4247 69 00			adc #$00
  6999 4249 8D 0D A4			sta GETBYTE.SRC+3
  7000 424C 20 86 26			jsr GETBYTE
  7001 424F E8				inx
  7002 4250 AD 0E A4			lda GETBYTE.RESULT
  7003 4253 29 7F			and #$7F
  7004 4255 0D CB A4			ora SHADOW
  7005 4258 8D CA A4			sta CL
  7006 425B CA				dex
  7007
  7008 				; optimize OK (service.pas), line = 1241
  7009
  7010 425C AD C2 A4			lda X
  7011 425F 18 6D C4 A4			add XS
  7012 4263 85 A0			sta :STACKORIGIN+10
  7013 4265 A9 00			lda #$00
  7014 4267 6D C5 A4			adc XS+1
  7015 426A 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  7016 426C A9 00			lda #$00
  7017 426E 69 00			adc #$00
  7018 4270 85 C0			sta :STACKORIGIN+STACKWIDTH*2+10
  7019 4272 A9 00			lda #$00
  7020 4274 69 00			adc #$00
  7021 4276 85 D0			sta :STACKORIGIN+STACKWIDTH*3+10
  7022 4278 AD C3 A4			lda Y
  7023 427B 18 6D C6 A4			add YS
  7024 427F 85 A1			sta :STACKORIGIN+11
  7025 4281 A9 00			lda #$00
  7026 4283 6D C7 A4			adc YS+1
  7027 4286 06 A1			asl :STACKORIGIN+11
  7028 4288 2A				rol @
  7029 4289 85 B1			sta :STACKORIGIN+STACKWIDTH+11
  7030 428B AD 1C 99			lda ROW
  7031 428E 18 65 A1			add :STACKORIGIN+11
  7032 4291 85 84			sta :bp2
  7033 4293 AD 1D 99			lda ROW+1
  7034 4296 65 B1			adc :STACKORIGIN+STACKWIDTH+11
  7035 4298 85 85			sta :bp2+1
  7036 429A A0 00			ldy #$00
  7037 429C A5 A0			lda :STACKORIGIN+10
  7038 429E 18 71 84			add (:bp2),y
  7039 42A1 8D 05 A4			sta PUTBYTE.DST
  7040 42A4 C8				iny
  7041 42A5 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
  7042 42A7 71 84			adc (:bp2),y
  7043 42A9 8D 06 A4			sta PUTBYTE.DST+1
  7044 42AC A5 C0			lda :STACKORIGIN+STACKWIDTH*2+10
  7045 42AE 69 00			adc #$00
  7046 42B0 8D 07 A4			sta PUTBYTE.DST+2
  7047 42B3 A5 D0			lda :STACKORIGIN+STACKWIDTH*3+10
  7048 42B5 69 00			adc #$00
  7049 42B7 8D 08 A4			sta PUTBYTE.DST+3
  7050 42BA AD CA A4			lda CL
  7051 42BD 8D 09 A4			sta PUTBYTE.V
  7052 42C0 20 70 26			jsr PUTBYTE
  7053
  7054 				; optimize OK (service.pas), line = 1246
  7055
  7056 42C3 AD E9 9A			lda PLAYSCREEN.OFS
  7057 42C6 18 6D C2 A4			add X
  7058 42CA 85 A0			sta :STACKORIGIN+10
  7059 42CC AD EA 9A			lda PLAYSCREEN.OFS+1
  7060 42CF 69 00			adc #$00
  7061 42D1 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  7062 42D3 AD EB 9A			lda PLAYSCREEN.OFS+2
  7063 42D6 69 00			adc #$00
  7064 42D8 85 C0			sta :STACKORIGIN+STACKWIDTH*2+10
  7065 42DA AD EC 9A			lda PLAYSCREEN.OFS+3
  7066 42DD 69 00			adc #$00
  7067 42DF 85 D0			sta :STACKORIGIN+STACKWIDTH*3+10
  7068 42E1 A5 A0			lda :STACKORIGIN+10
  7069 42E3 18 6D C4 A4			add XS
  7070 42E7 85 A0			sta :STACKORIGIN+10
  7071 42E9 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
  7072 42EB 6D C5 A4			adc XS+1
  7073 42EE 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  7074 42F0 A5 C0			lda :STACKORIGIN+STACKWIDTH*2+10
  7075 42F2 69 00			adc #$00
  7076 42F4 85 C0			sta :STACKORIGIN+STACKWIDTH*2+10
  7077 42F6 A5 D0			lda :STACKORIGIN+STACKWIDTH*3+10
  7078 42F8 69 00			adc #$00
  7079 42FA 85 D0			sta :STACKORIGIN+STACKWIDTH*3+10
  7080 42FC AD C3 A4			lda Y
  7081 42FF 18 6D C6 A4			add YS
  7082 4303 85 A1			sta :STACKORIGIN+11
  7083 4305 A9 00			lda #$00
  7084 4307 6D C7 A4			adc YS+1
  7085 430A 06 A1			asl :STACKORIGIN+11
  7086 430C 2A				rol @
  7087 430D 85 B1			sta :STACKORIGIN+STACKWIDTH+11
  7088 430F AD 1C 99			lda ROW
  7089 4312 18 65 A1			add :STACKORIGIN+11
  7090 4315 85 84			sta :bp2
  7091 4317 AD 1D 99			lda ROW+1
  7092 431A 65 B1			adc :STACKORIGIN+STACKWIDTH+11
  7093 431C 85 85			sta :bp2+1
  7094 431E A0 00			ldy #$00
  7095 4320 A5 A0			lda :STACKORIGIN+10
  7096 4322 18 71 84			add (:bp2),y
  7097 4325 8D 05 A4			sta PUTBYTE.DST
  7098 4328 C8				iny
  7099 4329 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
  7100 432B 71 84			adc (:bp2),y
  7101 432D 8D 06 A4			sta PUTBYTE.DST+1
  7102 4330 A5 C0			lda :STACKORIGIN+STACKWIDTH*2+10
  7103 4332 69 00			adc #$00
  7104 4334 8D 07 A4			sta PUTBYTE.DST+2
  7105 4337 A5 D0			lda :STACKORIGIN+STACKWIDTH*3+10
  7106 4339 69 00			adc #$00
  7107 433B 8D 08 A4			sta PUTBYTE.DST+3
  7108 433E AD CA A4			lda CL
  7109 4341 8D 09 A4			sta PUTBYTE.V
  7110 4344 20 70 26			jsr PUTBYTE
  7111 4347			l_0F97
  7112
  7113 				; --- ForToDoEpilog
  7114 4347 EE C2 A4			inc X
  7115 434A F0 03 4C 4C 41		jne l_0F72
  7116 434F			l_0F80
  7117
  7118 				; --- ForToDoEpilog
  7119 434F EE C3 A4			inc Y
  7120 4352 F0 03 4C 16 41		jne l_0F48
  7121 4357			l_0F56
  7122
  7123 				; optimize OK (service.pas), line = 1256
  7124
  7125 4357 AD C6 A4			lda YS
  7126 435A 18 69 04			add #$04
  7127 435D 8D C3 A4			sta Y
  7128 4360 AD C6 A4			lda YS
  7129 4363 18 69 0C			add #$0C
  7130 4366 8D 6A 43			sta @FORTMP_1031_0
  7131
  7132 4369			l_1034
  7133 				; --- ForToDoCondition
  7134 4369 A9 00			lda @FORTMP_1031_0::#$00
  7135 436B CD C3 A4			cmp Y
  7136 436E B0 03 4C A7 44		jcc l_1042
  7137
  7138 				; optimize OK (service.pas), line = 1257
  7139
  7140 4373 AD C4 A4			lda XS
  7141 4376 18 69 08			add #$08
  7142 4379 8D C2 A4			sta X
  7143 437C AD C4 A4			lda XS
  7144 437F 18 69 18			add #$18
  7145 4382 8D 86 43			sta @FORTMP_1052_0
  7146
  7147 4385			l_1055
  7148 				; --- ForToDoCondition
  7149 4385 A9 00			lda @FORTMP_1052_0::#$00
  7150 4387 CD C2 A4			cmp X
  7151 438A B0 03 4C 9F 44		jcc l_1063
  7152
  7153 				; optimize OK (service.pas), line = 1273
  7154
  7155 438F AD C2 A4			lda X
  7156 4392 C9 D8			cmp #$D8
  7157 4394 90 03 4C 97 44		jcs l_1075
  7158
  7159 				; optimize OK (service.pas), line = 1277
  7160
  7161 4399 AD E9 9A			lda PLAYSCREEN.OFS
  7162 439C 6D C2 A4			adc X
  7163 439F 85 9F			sta :STACKORIGIN+9
  7164 43A1 AD EA 9A			lda PLAYSCREEN.OFS+1
  7165 43A4 69 00			adc #$00
  7166 43A6 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  7167 43A8 AD EB 9A			lda PLAYSCREEN.OFS+2
  7168 43AB 69 00			adc #$00
  7169 43AD 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
  7170 43AF AD EC 9A			lda PLAYSCREEN.OFS+3
  7171 43B2 69 00			adc #$00
  7172 43B4 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
  7173 43B6 A9 00			lda #$00
  7174 43B8 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  7175 43BA AD C3 A4			lda Y
  7176 43BD 0A				asl @
  7177 43BE 26 B0			rol :STACKORIGIN+STACKWIDTH+10
  7178 43C0 18 6D 1C 99			add ROW
  7179 43C4 85 84			sta :bp2
  7180 43C6 AD 1D 99			lda ROW+1
  7181 43C9 65 B0			adc :STACKORIGIN+STACKWIDTH+10
  7182 43CB 85 85			sta :bp2+1
  7183 43CD A0 00			ldy #$00
  7184 43CF A5 9F			lda :STACKORIGIN+9
  7185 43D1 18 71 84			add (:bp2),y
  7186 43D4 8D 0A A4			sta GETBYTE.SRC
  7187 43D7 C8				iny
  7188 43D8 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  7189 43DA 71 84			adc (:bp2),y
  7190 43DC 8D 0B A4			sta GETBYTE.SRC+1
  7191 43DF A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
  7192 43E1 69 00			adc #$00
  7193 43E3 8D 0C A4			sta GETBYTE.SRC+2
  7194 43E6 A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
  7195 43E8 69 00			adc #$00
  7196 43EA 8D 0D A4			sta GETBYTE.SRC+3
  7197 43ED 20 86 26			jsr GETBYTE
  7198 43F0 AD 0E A4			lda GETBYTE.RESULT
  7199 43F3 09 80			ora #$80
  7200 43F5 8D CA A4			sta CL
  7201
  7202 				; optimize OK (service.pas), line = 1281
  7203
  7204 43F8 A9 00			lda #$00
  7205 43FA 85 B1			sta :STACKORIGIN+STACKWIDTH+11
  7206 43FC AD C3 A4			lda Y
  7207 43FF 0A				asl @
  7208 4400 26 B1			rol :STACKORIGIN+STACKWIDTH+11
  7209 4402 18 6D 1C 99			add ROW
  7210 4406 85 84			sta :bp2
  7211 4408 AD 1D 99			lda ROW+1
  7212 440B 65 B1			adc :STACKORIGIN+STACKWIDTH+11
  7213 440D 85 85			sta :bp2+1
  7214 440F A0 00			ldy #$00
  7215 4411 AD C2 A4			lda X
  7216 4414 18 71 84			add (:bp2),y
  7217 4417 8D 05 A4			sta PUTBYTE.DST
  7218 441A C8				iny
  7219 441B A9 00			lda #$00
  7220 441D 71 84			adc (:bp2),y
  7221 441F 8D 06 A4			sta PUTBYTE.DST+1
  7222 4422 A9 00			lda #$00
  7223 4424 69 00			adc #$00
  7224 4426 8D 07 A4			sta PUTBYTE.DST+2
  7225 4429 A9 00			lda #$00
  7226 442B 69 00			adc #$00
  7227 442D 8D 08 A4			sta PUTBYTE.DST+3
  7228 4430 AD CA A4			lda CL
  7229 4433 8D 09 A4			sta PUTBYTE.V
  7230 4436 20 70 26			jsr PUTBYTE
  7231
  7232 				; optimize OK (service.pas), line = 1286
  7233
  7234 4439 AD E9 9A			lda PLAYSCREEN.OFS
  7235 443C 18 6D C2 A4			add X
  7236 4440 85 A0			sta :STACKORIGIN+10
  7237 4442 AD EA 9A			lda PLAYSCREEN.OFS+1
  7238 4445 69 00			adc #$00
  7239 4447 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  7240 4449 AD EB 9A			lda PLAYSCREEN.OFS+2
  7241 444C 69 00			adc #$00
  7242 444E 85 C0			sta :STACKORIGIN+STACKWIDTH*2+10
  7243 4450 AD EC 9A			lda PLAYSCREEN.OFS+3
  7244 4453 69 00			adc #$00
  7245 4455 85 D0			sta :STACKORIGIN+STACKWIDTH*3+10
  7246 4457 A9 00			lda #$00
  7247 4459 85 B1			sta :STACKORIGIN+STACKWIDTH+11
  7248 445B AD C3 A4			lda Y
  7249 445E 0A				asl @
  7250 445F 26 B1			rol :STACKORIGIN+STACKWIDTH+11
  7251 4461 18 6D 1C 99			add ROW
  7252 4465 85 84			sta :bp2
  7253 4467 AD 1D 99			lda ROW+1
  7254 446A 65 B1			adc :STACKORIGIN+STACKWIDTH+11
  7255 446C 85 85			sta :bp2+1
  7256 446E A0 00			ldy #$00
  7257 4470 A5 A0			lda :STACKORIGIN+10
  7258 4472 18 71 84			add (:bp2),y
  7259 4475 8D 05 A4			sta PUTBYTE.DST
  7260 4478 C8				iny
  7261 4479 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
  7262 447B 71 84			adc (:bp2),y
  7263 447D 8D 06 A4			sta PUTBYTE.DST+1
  7264 4480 A5 C0			lda :STACKORIGIN+STACKWIDTH*2+10
  7265 4482 69 00			adc #$00
  7266 4484 8D 07 A4			sta PUTBYTE.DST+2
  7267 4487 A5 D0			lda :STACKORIGIN+STACKWIDTH*3+10
  7268 4489 69 00			adc #$00
  7269 448B 8D 08 A4			sta PUTBYTE.DST+3
  7270 448E AD CA A4			lda CL
  7271 4491 8D 09 A4			sta PUTBYTE.V
  7272 4494 20 70 26			jsr PUTBYTE
  7273 4497			l_1075
  7274
  7275 				; --- ForToDoEpilog
  7276 4497 EE C2 A4			inc X
  7277 449A F0 03 4C 85 43		jne l_1055
  7278 449F			l_1063
  7279
  7280 				; --- ForToDoEpilog
  7281 449F EE C3 A4			inc Y
  7282 44A2 F0 03 4C 69 43		jne l_1034
  7283 44A7			l_1042
  7284
  7285 				; ------------------------------------------------------------
  7286
  7287 = A4C0			XA	= DATAORIGIN+$0AA4
  7288 = A4C1			YA	= DATAORIGIN+$0AA5
  7289 = A4C2			X	= DATAORIGIN+$0AA6
  7290 = A4C3			Y	= DATAORIGIN+$0AA7
  7291 = A4C4			XS	= DATAORIGIN+$0AA8
  7292 = A4C6			YS	= DATAORIGIN+$0AAA
  7293 = A4C8			YH	= DATAORIGIN+$0AAC
  7294 = A4CA			CL	= DATAORIGIN+$0AAE
  7295 = A4CB			SHADOW	= DATAORIGIN+$0AAF
  7296
  7297 = A4C0			@VarData	= XA
  7298 = 000C			@VarDataSize	= 12
  7299
  7300 44A7			@exit
  7301 					.ifdef @new
  7302 					lda <@VarData
  7303 					sta :ztmp
  7304 					lda >@VarData
  7305 					ldy #@VarDataSize-1
  7306 					jmp @FreeMem
  7307 					els
  7308 44A7 60				rts						; ret
  7309 					eif
  7310 				.endl
  7311
  7312 44A8			.local	PLACE_BLOCK					; PROCEDURE
  7313
  7314 				; optimize OK (service.pas), line = 1301
  7315
  7316 44A8 AD CE A4			lda XA
  7317 44AB 85 9F			sta :STACKORIGIN+9
  7318 44AD A9 00			lda #$00
  7319 44AF 06 9F			asl :STACKORIGIN+9
  7320 44B1 2A				rol @
  7321 44B2 06 9F			asl :STACKORIGIN+9
  7322 44B4 2A				rol @
  7323 44B5 06 9F			asl :STACKORIGIN+9
  7324 44B7 2A				rol @
  7325 44B8 06 9F			asl :STACKORIGIN+9
  7326 44BA 2A				rol @
  7327 44BB 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  7328 44BD A5 9F			lda :STACKORIGIN+9
  7329 44BF 18 69 09			add #$09
  7330 44C2 8D D3 A4			sta XS
  7331 44C5 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  7332 44C7 69 00			adc #$00
  7333 44C9 8D D4 A4			sta XS+1
  7334
  7335 				; optimize OK (service.pas), line = 1302
  7336
  7337 44CC AD CF A4			lda YA
  7338 44CF 85 9F			sta :STACKORIGIN+9
  7339 44D1 A9 00			lda #$00
  7340 44D3 06 9F			asl :STACKORIGIN+9
  7341 44D5 2A				rol @
  7342 44D6 06 9F			asl :STACKORIGIN+9
  7343 44D8 2A				rol @
  7344 44D9 06 9F			asl :STACKORIGIN+9
  7345 44DB 2A				rol @
  7346 44DC 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  7347 44DE A5 9F			lda :STACKORIGIN+9
  7348 44E0 18 69 16			add #$16
  7349 44E3 8D D5 A4			sta YS
  7350 44E6 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  7351 44E8 69 00			adc #$00
  7352 44EA 8D D6 A4			sta YS+1
  7353
  7354 				; optimize OK (service.pas), line = 1304
  7355
  7356 44ED A9 00			lda #$00
  7357 44EF 8D D2 A4			sta Y
  7358
  7359 44F2			l_10E8
  7360 				; --- ForToDoCondition
  7361 44F2 AD D2 A4			lda Y
  7362 44F5 C9 08			cmp #$08
  7363 44F7 90 03 4C A3 47		jcs l_10F6
  7364
  7365 				; optimize OK (service.pas), line = 1305
  7366
  7367 44FC A9 00			lda #$00
  7368 44FE 8D D1 A4			sta X
  7369
  7370 4501			l_10FF
  7371 				; --- ForToDoCondition
  7372 4501 AD D1 A4			lda X
  7373 4504 C9 10			cmp #$10
  7374 4506 90 03 4C 9B 47		jcs l_110D
  7375
  7376 				; optimize OK (service.pas), line = 1310
  7377
  7378 450B AD E9 9A			lda PLAYSCREEN.OFS
  7379 450E 6D D3 A4			adc XS
  7380 4511 85 9F			sta :STACKORIGIN+9
  7381 4513 AD EA 9A			lda PLAYSCREEN.OFS+1
  7382 4516 6D D4 A4			adc XS+1
  7383 4519 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  7384 451B AD EB 9A			lda PLAYSCREEN.OFS+2
  7385 451E 69 00			adc #$00
  7386 4520 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
  7387 4522 AD EC 9A			lda PLAYSCREEN.OFS+3
  7388 4525 69 00			adc #$00
  7389 4527 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
  7390 4529 A5 9F			lda :STACKORIGIN+9
  7391 452B 18 6D D1 A4			add X
  7392 452F 85 9F			sta :STACKORIGIN+9
  7393 4531 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  7394 4533 69 00			adc #$00
  7395 4535 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  7396 4537 A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
  7397 4539 69 00			adc #$00
  7398 453B 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
  7399 453D A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
  7400 453F 69 00			adc #$00
  7401 4541 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
  7402 4543 AD D5 A4			lda YS
  7403 4546 18 6D D2 A4			add Y
  7404 454A 85 A0			sta :STACKORIGIN+10
  7405 454C AD D6 A4			lda YS+1
  7406 454F 69 00			adc #$00
  7407 4551 06 A0			asl :STACKORIGIN+10
  7408 4553 2A				rol @
  7409 4554 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  7410 4556 AD 1C 99			lda ROW
  7411 4559 18 65 A0			add :STACKORIGIN+10
  7412 455C 85 84			sta :bp2
  7413 455E AD 1D 99			lda ROW+1
  7414 4561 65 B0			adc :STACKORIGIN+STACKWIDTH+10
  7415 4563 85 85			sta :bp2+1
  7416 4565 A0 00			ldy #$00
  7417 4567 A5 9F			lda :STACKORIGIN+9
  7418 4569 18 71 84			add (:bp2),y
  7419 456C 8D 0A A4			sta GETBYTE.SRC
  7420 456F C8				iny
  7421 4570 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  7422 4572 71 84			adc (:bp2),y
  7423 4574 8D 0B A4			sta GETBYTE.SRC+1
  7424 4577 A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
  7425 4579 69 00			adc #$00
  7426 457B 8D 0C A4			sta GETBYTE.SRC+2
  7427 457E A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
  7428 4580 69 00			adc #$00
  7429 4582 8D 0D A4			sta GETBYTE.SRC+3
  7430 4585 20 86 26			jsr GETBYTE
  7431 4588 AD 0E A4			lda GETBYTE.RESULT
  7432 458B 29 80			and #$80
  7433 458D 8D D9 A4			sta SHADOW
  7434
  7435 				; optimize OK (service.pas), line = 1312
  7436
  7437 4590 AD D2 A4			lda Y
  7438 4593 C9 07			cmp #$07
  7439 4595 90 03 4C A8 46		jcs l_114C
  7440 459A AD D1 A4			lda X
  7441 459D C9 0F			cmp #$0F
  7442 459F 90 03 4C A8 46		jcs l_114C
  7443
  7444 				; optimize OK (service.pas), line = 1317
  7445
  7446 45A4 AD D0 A4			lda BLOCK
  7447 45A7 38 E9 01			sub #$01
  7448 45AA 85 9F			sta :STACKORIGIN+9
  7449 45AC A9 00			lda #$00
  7450 45AE E9 00			sbc #$00
  7451 45B0 A5 9F			lda :STACKORIGIN+9
  7452 45B2 29 0F			and #$0F
  7453 45B4 A8				tay
  7454 45B5 B9 76 10			lda adr.COLORBLOCK,y
  7455 45B8 29 7F			and #$7F
  7456 45BA 0D D9 A4			ora SHADOW
  7457 45BD 8D D7 A4			sta CL
  7458
  7459 				; optimize OK (service.pas), line = 1320
  7460
  7461 45C0 AD D3 A4			lda XS
  7462 45C3 18 6D D1 A4			add X
  7463 45C7 85 A0			sta :STACKORIGIN+10
  7464 45C9 AD D4 A4			lda XS+1
  7465 45CC 69 00			adc #$00
  7466 45CE 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  7467 45D0 A9 00			lda #$00
  7468 45D2 69 00			adc #$00
  7469 45D4 85 C0			sta :STACKORIGIN+STACKWIDTH*2+10
  7470 45D6 A9 00			lda #$00
  7471 45D8 69 00			adc #$00
  7472 45DA 85 D0			sta :STACKORIGIN+STACKWIDTH*3+10
  7473 45DC AD D5 A4			lda YS
  7474 45DF 18 6D D2 A4			add Y
  7475 45E3 85 A1			sta :STACKORIGIN+11
  7476 45E5 AD D6 A4			lda YS+1
  7477 45E8 69 00			adc #$00
  7478 45EA 06 A1			asl :STACKORIGIN+11
  7479 45EC 2A				rol @
  7480 45ED 85 B1			sta :STACKORIGIN+STACKWIDTH+11
  7481 45EF AD 1C 99			lda ROW
  7482 45F2 18 65 A1			add :STACKORIGIN+11
  7483 45F5 85 84			sta :bp2
  7484 45F7 AD 1D 99			lda ROW+1
  7485 45FA 65 B1			adc :STACKORIGIN+STACKWIDTH+11
  7486 45FC 85 85			sta :bp2+1
  7487 45FE A0 00			ldy #$00
  7488 4600 A5 A0			lda :STACKORIGIN+10
  7489 4602 18 71 84			add (:bp2),y
  7490 4605 8D 05 A4			sta PUTBYTE.DST
  7491 4608 C8				iny
  7492 4609 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
  7493 460B 71 84			adc (:bp2),y
  7494 460D 8D 06 A4			sta PUTBYTE.DST+1
  7495 4610 A5 C0			lda :STACKORIGIN+STACKWIDTH*2+10
  7496 4612 69 00			adc #$00
  7497 4614 8D 07 A4			sta PUTBYTE.DST+2
  7498 4617 A5 D0			lda :STACKORIGIN+STACKWIDTH*3+10
  7499 4619 69 00			adc #$00
  7500 461B 8D 08 A4			sta PUTBYTE.DST+3
  7501 461E AD D7 A4			lda CL
  7502 4621 8D 09 A4			sta PUTBYTE.V
  7503 4624 20 70 26			jsr PUTBYTE
  7504
  7505 				; optimize OK (service.pas), line = 1323
  7506
  7507 4627 AD E9 9A			lda PLAYSCREEN.OFS
  7508 462A 18 6D D3 A4			add XS
  7509 462E 85 A0			sta :STACKORIGIN+10
  7510 4630 AD EA 9A			lda PLAYSCREEN.OFS+1
  7511 4633 6D D4 A4			adc XS+1
  7512 4636 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  7513 4638 AD EB 9A			lda PLAYSCREEN.OFS+2
  7514 463B 69 00			adc #$00
  7515 463D 85 C0			sta :STACKORIGIN+STACKWIDTH*2+10
  7516 463F AD EC 9A			lda PLAYSCREEN.OFS+3
  7517 4642 69 00			adc #$00
  7518 4644 85 D0			sta :STACKORIGIN+STACKWIDTH*3+10
  7519 4646 A5 A0			lda :STACKORIGIN+10
  7520 4648 18 6D D1 A4			add X
  7521 464C 85 A0			sta :STACKORIGIN+10
  7522 464E A5 B0			lda :STACKORIGIN+STACKWIDTH+10
  7523 4650 69 00			adc #$00
  7524 4652 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  7525 4654 A5 C0			lda :STACKORIGIN+STACKWIDTH*2+10
  7526 4656 69 00			adc #$00
  7527 4658 85 C0			sta :STACKORIGIN+STACKWIDTH*2+10
  7528 465A A5 D0			lda :STACKORIGIN+STACKWIDTH*3+10
  7529 465C 69 00			adc #$00
  7530 465E 85 D0			sta :STACKORIGIN+STACKWIDTH*3+10
  7531 4660 AD D5 A4			lda YS
  7532 4663 18 6D D2 A4			add Y
  7533 4667 85 A1			sta :STACKORIGIN+11
  7534 4669 AD D6 A4			lda YS+1
  7535 466C 69 00			adc #$00
  7536 466E 06 A1			asl :STACKORIGIN+11
  7537 4670 2A				rol @
  7538 4671 85 B1			sta :STACKORIGIN+STACKWIDTH+11
  7539 4673 AD 1C 99			lda ROW
  7540 4676 18 65 A1			add :STACKORIGIN+11
  7541 4679 85 84			sta :bp2
  7542 467B AD 1D 99			lda ROW+1
  7543 467E 65 B1			adc :STACKORIGIN+STACKWIDTH+11
  7544 4680 85 85			sta :bp2+1
  7545 4682 A0 00			ldy #$00
  7546 4684 A5 A0			lda :STACKORIGIN+10
  7547 4686 18 71 84			add (:bp2),y
  7548 4689 8D 05 A4			sta PUTBYTE.DST
  7549 468C C8				iny
  7550 468D A5 B0			lda :STACKORIGIN+STACKWIDTH+10
  7551 468F 71 84			adc (:bp2),y
  7552 4691 8D 06 A4			sta PUTBYTE.DST+1
  7553 4694 A5 C0			lda :STACKORIGIN+STACKWIDTH*2+10
  7554 4696 69 00			adc #$00
  7555 4698 8D 07 A4			sta PUTBYTE.DST+2
  7556 469B A5 D0			lda :STACKORIGIN+STACKWIDTH*3+10
  7557 469D 69 00			adc #$00
  7558 469F 8D 08 A4			sta PUTBYTE.DST+3
  7559 46A2 AD D7 A4			lda CL
  7560 46A5 4C 8D 47			jmp l_11AB
  7561 46A8			l_114C
  7562
  7563 				; optimize OK (service.pas), line = 1331
  7564
  7565 46A8 AD D3 A4			lda XS
  7566 46AB 18 6D D1 A4			add X
  7567 46AF 85 A0			sta :STACKORIGIN+10
  7568 46B1 AD D4 A4			lda XS+1
  7569 46B4 69 00			adc #$00
  7570 46B6 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  7571 46B8 A9 00			lda #$00
  7572 46BA 69 00			adc #$00
  7573 46BC 85 C0			sta :STACKORIGIN+STACKWIDTH*2+10
  7574 46BE A9 00			lda #$00
  7575 46C0 69 00			adc #$00
  7576 46C2 85 D0			sta :STACKORIGIN+STACKWIDTH*3+10
  7577 46C4 AD D5 A4			lda YS
  7578 46C7 18 6D D2 A4			add Y
  7579 46CB 85 A1			sta :STACKORIGIN+11
  7580 46CD AD D6 A4			lda YS+1
  7581 46D0 69 00			adc #$00
  7582 46D2 06 A1			asl :STACKORIGIN+11
  7583 46D4 2A				rol @
  7584 46D5 85 B1			sta :STACKORIGIN+STACKWIDTH+11
  7585 46D7 AD 1C 99			lda ROW
  7586 46DA 18 65 A1			add :STACKORIGIN+11
  7587 46DD 85 84			sta :bp2
  7588 46DF AD 1D 99			lda ROW+1
  7589 46E2 65 B1			adc :STACKORIGIN+STACKWIDTH+11
  7590 46E4 85 85			sta :bp2+1
  7591 46E6 A0 00			ldy #$00
  7592 46E8 A5 A0			lda :STACKORIGIN+10
  7593 46EA 18 71 84			add (:bp2),y
  7594 46ED 8D 05 A4			sta PUTBYTE.DST
  7595 46F0 C8				iny
  7596 46F1 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
  7597 46F3 71 84			adc (:bp2),y
  7598 46F5 8D 06 A4			sta PUTBYTE.DST+1
  7599 46F8 A5 C0			lda :STACKORIGIN+STACKWIDTH*2+10
  7600 46FA 69 00			adc #$00
  7601 46FC 8D 07 A4			sta PUTBYTE.DST+2
  7602 46FF A5 D0			lda :STACKORIGIN+STACKWIDTH*3+10
  7603 4701 69 00			adc #$00
  7604 4703 8D 08 A4			sta PUTBYTE.DST+3
  7605 4706 AD D9 A4			lda SHADOW
  7606 4709 8D 09 A4			sta PUTBYTE.V
  7607 470C 20 70 26			jsr PUTBYTE
  7608
  7609 				; optimize OK (service.pas), line = 1334
  7610
  7611 470F AD E9 9A			lda PLAYSCREEN.OFS
  7612 4712 18 6D D3 A4			add XS
  7613 4716 85 A0			sta :STACKORIGIN+10
  7614 4718 AD EA 9A			lda PLAYSCREEN.OFS+1
  7615 471B 6D D4 A4			adc XS+1
  7616 471E 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  7617 4720 AD EB 9A			lda PLAYSCREEN.OFS+2
  7618 4723 69 00			adc #$00
  7619 4725 85 C0			sta :STACKORIGIN+STACKWIDTH*2+10
  7620 4727 AD EC 9A			lda PLAYSCREEN.OFS+3
  7621 472A 69 00			adc #$00
  7622 472C 85 D0			sta :STACKORIGIN+STACKWIDTH*3+10
  7623 472E A5 A0			lda :STACKORIGIN+10
  7624 4730 18 6D D1 A4			add X
  7625 4734 85 A0			sta :STACKORIGIN+10
  7626 4736 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
  7627 4738 69 00			adc #$00
  7628 473A 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  7629 473C A5 C0			lda :STACKORIGIN+STACKWIDTH*2+10
  7630 473E 69 00			adc #$00
  7631 4740 85 C0			sta :STACKORIGIN+STACKWIDTH*2+10
  7632 4742 A5 D0			lda :STACKORIGIN+STACKWIDTH*3+10
  7633 4744 69 00			adc #$00
  7634 4746 85 D0			sta :STACKORIGIN+STACKWIDTH*3+10
  7635 4748 AD D5 A4			lda YS
  7636 474B 18 6D D2 A4			add Y
  7637 474F 85 A1			sta :STACKORIGIN+11
  7638 4751 AD D6 A4			lda YS+1
  7639 4754 69 00			adc #$00
  7640 4756 06 A1			asl :STACKORIGIN+11
  7641 4758 2A				rol @
  7642 4759 85 B1			sta :STACKORIGIN+STACKWIDTH+11
  7643 475B AD 1C 99			lda ROW
  7644 475E 18 65 A1			add :STACKORIGIN+11
  7645 4761 85 84			sta :bp2
  7646 4763 AD 1D 99			lda ROW+1
  7647 4766 65 B1			adc :STACKORIGIN+STACKWIDTH+11
  7648 4768 85 85			sta :bp2+1
  7649 476A A0 00			ldy #$00
  7650 476C A5 A0			lda :STACKORIGIN+10
  7651 476E 18 71 84			add (:bp2),y
  7652 4771 8D 05 A4			sta PUTBYTE.DST
  7653 4774 C8				iny
  7654 4775 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
  7655 4777 71 84			adc (:bp2),y
  7656 4779 8D 06 A4			sta PUTBYTE.DST+1
  7657 477C A5 C0			lda :STACKORIGIN+STACKWIDTH*2+10
  7658 477E 69 00			adc #$00
  7659 4780 8D 07 A4			sta PUTBYTE.DST+2
  7660 4783 A5 D0			lda :STACKORIGIN+STACKWIDTH*3+10
  7661 4785 69 00			adc #$00
  7662 4787 8D 08 A4			sta PUTBYTE.DST+3
  7663 478A AD D9 A4			lda SHADOW
  7664 478D			l_11AB
  7665 478D 8D 09 A4			sta PUTBYTE.V
  7666 4790 20 70 26			jsr PUTBYTE
  7667
  7668 				; --- ForToDoEpilog
  7669 4793 EE D1 A4			inc X
  7670 4796 F0 03 4C 01 45		jne l_10FF
  7671 479B			l_110D
  7672
  7673 				; --- ForToDoEpilog
  7674 479B EE D2 A4			inc Y
  7675 479E F0 03 4C F2 44		jne l_10E8
  7676 47A3			l_10F6
  7677
  7678 				; optimize OK (service.pas), line = 1339
  7679
  7680 47A3 AD D5 A4			lda YS
  7681 47A6 18 69 04			add #$04
  7682 47A9 8D D2 A4			sta Y
  7683 47AC AD D5 A4			lda YS
  7684 47AF 18 69 0C			add #$0C
  7685 47B2 8D B6 47			sta @FORTMP_11FF_0
  7686
  7687 47B5			l_1202
  7688 				; --- ForToDoCondition
  7689 47B5 A9 00			lda @FORTMP_11FF_0::#$00
  7690 47B7 CD D2 A4			cmp Y
  7691 47BA B0 03 4C F3 48		jcc l_1210
  7692
  7693 				; optimize OK (service.pas), line = 1340
  7694
  7695 47BF AD D3 A4			lda XS
  7696 47C2 18 69 08			add #$08
  7697 47C5 8D D1 A4			sta X
  7698 47C8 AD D3 A4			lda XS
  7699 47CB 18 69 18			add #$18
  7700 47CE 8D D2 47			sta @FORTMP_1220_0
  7701
  7702 47D1			l_1223
  7703 				; --- ForToDoCondition
  7704 47D1 A9 00			lda @FORTMP_1220_0::#$00
  7705 47D3 CD D1 A4			cmp X
  7706 47D6 B0 03 4C EB 48		jcc l_1231
  7707
  7708 				; optimize OK (service.pas), line = 1341
  7709
  7710 47DB AD D1 A4			lda X
  7711 47DE C9 D8			cmp #$D8
  7712 47E0 90 03 4C E3 48		jcs l_1243
  7713
  7714 				; optimize OK (service.pas), line = 1348
  7715
  7716 47E5 AD E9 9A			lda PLAYSCREEN.OFS
  7717 47E8 6D D1 A4			adc X
  7718 47EB 85 9F			sta :STACKORIGIN+9
  7719 47ED AD EA 9A			lda PLAYSCREEN.OFS+1
  7720 47F0 69 00			adc #$00
  7721 47F2 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  7722 47F4 AD EB 9A			lda PLAYSCREEN.OFS+2
  7723 47F7 69 00			adc #$00
  7724 47F9 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
  7725 47FB AD EC 9A			lda PLAYSCREEN.OFS+3
  7726 47FE 69 00			adc #$00
  7727 4800 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
  7728 4802 A9 00			lda #$00
  7729 4804 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  7730 4806 AD D2 A4			lda Y
  7731 4809 0A				asl @
  7732 480A 26 B0			rol :STACKORIGIN+STACKWIDTH+10
  7733 480C 18 6D 1C 99			add ROW
  7734 4810 85 84			sta :bp2
  7735 4812 AD 1D 99			lda ROW+1
  7736 4815 65 B0			adc :STACKORIGIN+STACKWIDTH+10
  7737 4817 85 85			sta :bp2+1
  7738 4819 A0 00			ldy #$00
  7739 481B A5 9F			lda :STACKORIGIN+9
  7740 481D 18 71 84			add (:bp2),y
  7741 4820 8D 0A A4			sta GETBYTE.SRC
  7742 4823 C8				iny
  7743 4824 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  7744 4826 71 84			adc (:bp2),y
  7745 4828 8D 0B A4			sta GETBYTE.SRC+1
  7746 482B A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
  7747 482D 69 00			adc #$00
  7748 482F 8D 0C A4			sta GETBYTE.SRC+2
  7749 4832 A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
  7750 4834 69 00			adc #$00
  7751 4836 8D 0D A4			sta GETBYTE.SRC+3
  7752 4839 20 86 26			jsr GETBYTE
  7753 483C AD 0E A4			lda GETBYTE.RESULT
  7754 483F 29 7F			and #$7F
  7755 4841 8D D7 A4			sta CL
  7756
  7757 				; optimize OK (service.pas), line = 1352
  7758
  7759 4844 A9 00			lda #$00
  7760 4846 85 B1			sta :STACKORIGIN+STACKWIDTH+11
  7761 4848 AD D2 A4			lda Y
  7762 484B 0A				asl @
  7763 484C 26 B1			rol :STACKORIGIN+STACKWIDTH+11
  7764 484E 18 6D 1C 99			add ROW
  7765 4852 85 84			sta :bp2
  7766 4854 AD 1D 99			lda ROW+1
  7767 4857 65 B1			adc :STACKORIGIN+STACKWIDTH+11
  7768 4859 85 85			sta :bp2+1
  7769 485B A0 00			ldy #$00
  7770 485D AD D1 A4			lda X
  7771 4860 18 71 84			add (:bp2),y
  7772 4863 8D 05 A4			sta PUTBYTE.DST
  7773 4866 C8				iny
  7774 4867 A9 00			lda #$00
  7775 4869 71 84			adc (:bp2),y
  7776 486B 8D 06 A4			sta PUTBYTE.DST+1
  7777 486E A9 00			lda #$00
  7778 4870 69 00			adc #$00
  7779 4872 8D 07 A4			sta PUTBYTE.DST+2
  7780 4875 A9 00			lda #$00
  7781 4877 69 00			adc #$00
  7782 4879 8D 08 A4			sta PUTBYTE.DST+3
  7783 487C AD D7 A4			lda CL
  7784 487F 8D 09 A4			sta PUTBYTE.V
  7785 4882 20 70 26			jsr PUTBYTE
  7786
  7787 				; optimize OK (service.pas), line = 1356
  7788
  7789 4885 AD E9 9A			lda PLAYSCREEN.OFS
  7790 4888 18 6D D1 A4			add X
  7791 488C 85 A0			sta :STACKORIGIN+10
  7792 488E AD EA 9A			lda PLAYSCREEN.OFS+1
  7793 4891 69 00			adc #$00
  7794 4893 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  7795 4895 AD EB 9A			lda PLAYSCREEN.OFS+2
  7796 4898 69 00			adc #$00
  7797 489A 85 C0			sta :STACKORIGIN+STACKWIDTH*2+10
  7798 489C AD EC 9A			lda PLAYSCREEN.OFS+3
  7799 489F 69 00			adc #$00
  7800 48A1 85 D0			sta :STACKORIGIN+STACKWIDTH*3+10
  7801 48A3 A9 00			lda #$00
  7802 48A5 85 B1			sta :STACKORIGIN+STACKWIDTH+11
  7803 48A7 AD D2 A4			lda Y
  7804 48AA 0A				asl @
  7805 48AB 26 B1			rol :STACKORIGIN+STACKWIDTH+11
  7806 48AD 18 6D 1C 99			add ROW
  7807 48B1 85 84			sta :bp2
  7808 48B3 AD 1D 99			lda ROW+1
  7809 48B6 65 B1			adc :STACKORIGIN+STACKWIDTH+11
  7810 48B8 85 85			sta :bp2+1
  7811 48BA A0 00			ldy #$00
  7812 48BC A5 A0			lda :STACKORIGIN+10
  7813 48BE 18 71 84			add (:bp2),y
  7814 48C1 8D 05 A4			sta PUTBYTE.DST
  7815 48C4 C8				iny
  7816 48C5 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
  7817 48C7 71 84			adc (:bp2),y
  7818 48C9 8D 06 A4			sta PUTBYTE.DST+1
  7819 48CC A5 C0			lda :STACKORIGIN+STACKWIDTH*2+10
  7820 48CE 69 00			adc #$00
  7821 48D0 8D 07 A4			sta PUTBYTE.DST+2
  7822 48D3 A5 D0			lda :STACKORIGIN+STACKWIDTH*3+10
  7823 48D5 69 00			adc #$00
  7824 48D7 8D 08 A4			sta PUTBYTE.DST+3
  7825 48DA AD D7 A4			lda CL
  7826 48DD 8D 09 A4			sta PUTBYTE.V
  7827 48E0 20 70 26			jsr PUTBYTE
  7828 48E3			l_1243
  7829
  7830 				; --- ForToDoEpilog
  7831 48E3 EE D1 A4			inc X
  7832 48E6 F0 03 4C D1 47		jne l_1223
  7833 48EB			l_1231
  7834
  7835 				; --- ForToDoEpilog
  7836 48EB EE D2 A4			inc Y
  7837 48EE F0 03 4C B5 47		jne l_1202
  7838 48F3			l_1210
  7839
  7840 				; optimize OK (service.pas), line = 1359
  7841
  7842 48F3 AD D0 A4			lda BLOCK
  7843 48F6 C9 09			cmp #$09
  7844 48F8 B0 03 4C E8 4B		jcc l_129F
  7845
  7846 				; optimize OK (service.pas), line = 1361
  7847
  7848 48FD A9 00			lda #$00
  7849 48FF 8D D8 A4			sta CL2
  7850
  7851 				; optimize OK (service.pas), line = 1362
  7852
  7853 4902 AD D0 A4			lda BLOCK
  7854 4905 29 0F			and #$0F
  7855 4907 C9 09			cmp #$09
  7856 4909 D0 19			jne l_12BA
  7857
  7858 				; optimize OK (service.pas), line = 1364
  7859
  7860 490B A9 CA			lda #$CA
  7861 490D 8D D8 A4			sta CL2
  7862
  7863 				; optimize OK (service.pas), line = 1365
  7864
  7865 4910 AD CF A4			lda YA
  7866 4913 0A				asl @
  7867 4914 0A				asl @
  7868 4915 0A				asl @
  7869 4916 0A				asl @
  7870 4917 18 6D CE A4			add XA
  7871 491B A8				tay
  7872 491C A9 19			lda #$19
  7873 491E 99 00 DB			sta adr.WALL,y
  7874 4921 4C 30 49			jmp l_12D9
  7875 4924			l_12BA
  7876
  7877 				; optimize OK (service.pas), line = 1371
  7878
  7879 4924 AD D0 A4			lda BLOCK
  7880 4927 C9 0A			cmp #$0A
  7881 4929 D0 05			jne l_12EB
  7882 492B A9 C9			lda #$C9
  7883 492D 8D D8 A4			sta CL2
  7884 4930			l_12D9
  7885 4930			l_12EB
  7886
  7887 				; optimize OK (service.pas), line = 1375
  7888
  7889 4930 A9 00			lda #$00
  7890 4932 8D D2 A4			sta Y
  7891
  7892 4935			l_12FB
  7893 				; --- ForToDoCondition
  7894 4935 AD D2 A4			lda Y
  7895 4938 C9 07			cmp #$07
  7896 493A 90 03 4C 74 4A		jcs l_1309
  7897
  7898 				; optimize OK (service.pas), line = 1381
  7899
  7900 493F AD E9 9A			lda PLAYSCREEN.OFS
  7901 4942 6D D3 A4			adc XS
  7902 4945 85 9F			sta :STACKORIGIN+9
  7903 4947 AD EA 9A			lda PLAYSCREEN.OFS+1
  7904 494A 6D D4 A4			adc XS+1
  7905 494D 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  7906 494F AD EB 9A			lda PLAYSCREEN.OFS+2
  7907 4952 69 00			adc #$00
  7908 4954 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
  7909 4956 AD EC 9A			lda PLAYSCREEN.OFS+3
  7910 4959 69 00			adc #$00
  7911 495B 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
  7912 495D AD D2 A4			lda Y
  7913 4960 18 6D D5 A4			add YS
  7914 4964 85 A0			sta :STACKORIGIN+10
  7915 4966 A9 00			lda #$00
  7916 4968 6D D6 A4			adc YS+1
  7917 496B 06 A0			asl :STACKORIGIN+10
  7918 496D 2A				rol @
  7919 496E 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  7920 4970 AD 1C 99			lda ROW
  7921 4973 18 65 A0			add :STACKORIGIN+10
  7922 4976 85 84			sta :bp2
  7923 4978 AD 1D 99			lda ROW+1
  7924 497B 65 B0			adc :STACKORIGIN+STACKWIDTH+10
  7925 497D 85 85			sta :bp2+1
  7926 497F A0 00			ldy #$00
  7927 4981 A5 9F			lda :STACKORIGIN+9
  7928 4983 18 71 84			add (:bp2),y
  7929 4986 8D 0A A4			sta GETBYTE.SRC
  7930 4989 C8				iny
  7931 498A A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  7932 498C 71 84			adc (:bp2),y
  7933 498E 8D 0B A4			sta GETBYTE.SRC+1
  7934 4991 A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
  7935 4993 69 00			adc #$00
  7936 4995 8D 0C A4			sta GETBYTE.SRC+2
  7937 4998 A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
  7938 499A 69 00			adc #$00
  7939 499C 8D 0D A4			sta GETBYTE.SRC+3
  7940 499F 20 86 26			jsr GETBYTE
  7941 49A2 AD 0E A4			lda GETBYTE.RESULT
  7942 49A5 29 80			and #$80
  7943 49A7 8D D7 A4			sta CL
  7944
  7945 				; optimize OK (service.pas), line = 1383
  7946
  7947 49AA AD D8 A4			lda CL2
  7948 49AD 29 7F			and #$7F
  7949 49AF 0D D7 A4			ora CL
  7950 49B2 8D D8 A4			sta CL2
  7951
  7952 				; optimize OK (service.pas), line = 1387
  7953
  7954 49B5 AD D5 A4			lda YS
  7955 49B8 18 6D D2 A4			add Y
  7956 49BC 85 A1			sta :STACKORIGIN+11
  7957 49BE AD D6 A4			lda YS+1
  7958 49C1 69 00			adc #$00
  7959 49C3 06 A1			asl :STACKORIGIN+11
  7960 49C5 2A				rol @
  7961 49C6 85 B1			sta :STACKORIGIN+STACKWIDTH+11
  7962 49C8 AD 1C 99			lda ROW
  7963 49CB 18 65 A1			add :STACKORIGIN+11
  7964 49CE 85 84			sta :bp2
  7965 49D0 AD 1D 99			lda ROW+1
  7966 49D3 65 B1			adc :STACKORIGIN+STACKWIDTH+11
  7967 49D5 85 85			sta :bp2+1
  7968 49D7 A0 00			ldy #$00
  7969 49D9 AD D3 A4			lda XS
  7970 49DC 18 71 84			add (:bp2),y
  7971 49DF 8D 05 A4			sta PUTBYTE.DST
  7972 49E2 C8				iny
  7973 49E3 AD D4 A4			lda XS+1
  7974 49E6 71 84			adc (:bp2),y
  7975 49E8 8D 06 A4			sta PUTBYTE.DST+1
  7976 49EB A9 00			lda #$00
  7977 49ED 69 00			adc #$00
  7978 49EF 8D 07 A4			sta PUTBYTE.DST+2
  7979 49F2 A9 00			lda #$00
  7980 49F4 69 00			adc #$00
  7981 49F6 8D 08 A4			sta PUTBYTE.DST+3
  7982 49F9 AD D8 A4			lda CL2
  7983 49FC 8D 09 A4			sta PUTBYTE.V
  7984 49FF 20 70 26			jsr PUTBYTE
  7985
  7986 				; optimize OK (service.pas), line = 1391
  7987
  7988 4A02 AD E9 9A			lda PLAYSCREEN.OFS
  7989 4A05 18 6D D3 A4			add XS
  7990 4A09 85 A0			sta :STACKORIGIN+10
  7991 4A0B AD EA 9A			lda PLAYSCREEN.OFS+1
  7992 4A0E 6D D4 A4			adc XS+1
  7993 4A11 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  7994 4A13 AD EB 9A			lda PLAYSCREEN.OFS+2
  7995 4A16 69 00			adc #$00
  7996 4A18 85 C0			sta :STACKORIGIN+STACKWIDTH*2+10
  7997 4A1A AD EC 9A			lda PLAYSCREEN.OFS+3
  7998 4A1D 69 00			adc #$00
  7999 4A1F 85 D0			sta :STACKORIGIN+STACKWIDTH*3+10
  8000 4A21 AD D5 A4			lda YS
  8001 4A24 18 6D D2 A4			add Y
  8002 4A28 85 A1			sta :STACKORIGIN+11
  8003 4A2A AD D6 A4			lda YS+1
  8004 4A2D 69 00			adc #$00
  8005 4A2F 06 A1			asl :STACKORIGIN+11
  8006 4A31 2A				rol @
  8007 4A32 85 B1			sta :STACKORIGIN+STACKWIDTH+11
  8008 4A34 AD 1C 99			lda ROW
  8009 4A37 18 65 A1			add :STACKORIGIN+11
  8010 4A3A 85 84			sta :bp2
  8011 4A3C AD 1D 99			lda ROW+1
  8012 4A3F 65 B1			adc :STACKORIGIN+STACKWIDTH+11
  8013 4A41 85 85			sta :bp2+1
  8014 4A43 A0 00			ldy #$00
  8015 4A45 A5 A0			lda :STACKORIGIN+10
  8016 4A47 18 71 84			add (:bp2),y
  8017 4A4A 8D 05 A4			sta PUTBYTE.DST
  8018 4A4D C8				iny
  8019 4A4E A5 B0			lda :STACKORIGIN+STACKWIDTH+10
  8020 4A50 71 84			adc (:bp2),y
  8021 4A52 8D 06 A4			sta PUTBYTE.DST+1
  8022 4A55 A5 C0			lda :STACKORIGIN+STACKWIDTH*2+10
  8023 4A57 69 00			adc #$00
  8024 4A59 8D 07 A4			sta PUTBYTE.DST+2
  8025 4A5C A5 D0			lda :STACKORIGIN+STACKWIDTH*3+10
  8026 4A5E 69 00			adc #$00
  8027 4A60 8D 08 A4			sta PUTBYTE.DST+3
  8028 4A63 AD D8 A4			lda CL2
  8029 4A66 8D 09 A4			sta PUTBYTE.V
  8030 4A69 20 70 26			jsr PUTBYTE
  8031
  8032 				; --- ForToDoEpilog
  8033 4A6C EE D2 A4			inc Y
  8034 4A6F F0 03 4C 35 49		jne l_12FB
  8035 4A74			l_1309
  8036
  8037 				; optimize OK (service.pas), line = 1395
  8038
  8039 4A74 A9 00			lda #$00
  8040 4A76 8D D1 A4			sta X
  8041
  8042 4A79			l_1370
  8043 				; --- ForToDoCondition
  8044 4A79 AD D1 A4			lda X
  8045 4A7C C9 0F			cmp #$0F
  8046 4A7E 90 03 4C E8 4B		jcs l_137E
  8047
  8048 				; optimize OK (service.pas), line = 1399
  8049
  8050 4A83 AD E9 9A			lda PLAYSCREEN.OFS
  8051 4A86 6D D3 A4			adc XS
  8052 4A89 85 9F			sta :STACKORIGIN+9
  8053 4A8B AD EA 9A			lda PLAYSCREEN.OFS+1
  8054 4A8E 6D D4 A4			adc XS+1
  8055 4A91 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  8056 4A93 AD EB 9A			lda PLAYSCREEN.OFS+2
  8057 4A96 69 00			adc #$00
  8058 4A98 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
  8059 4A9A AD EC 9A			lda PLAYSCREEN.OFS+3
  8060 4A9D 69 00			adc #$00
  8061 4A9F 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
  8062 4AA1 A5 9F			lda :STACKORIGIN+9
  8063 4AA3 18 6D D1 A4			add X
  8064 4AA7 85 9F			sta :STACKORIGIN+9
  8065 4AA9 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  8066 4AAB 69 00			adc #$00
  8067 4AAD 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  8068 4AAF A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
  8069 4AB1 69 00			adc #$00
  8070 4AB3 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
  8071 4AB5 A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
  8072 4AB7 69 00			adc #$00
  8073 4AB9 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
  8074 4ABB AD D6 A4			lda YS+1
  8075 4ABE 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  8076 4AC0 AD D5 A4			lda YS
  8077 4AC3 0A				asl @
  8078 4AC4 26 B0			rol :STACKORIGIN+STACKWIDTH+10
  8079 4AC6 18 6D 1C 99			add ROW
  8080 4ACA 85 84			sta :bp2
  8081 4ACC AD 1D 99			lda ROW+1
  8082 4ACF 65 B0			adc :STACKORIGIN+STACKWIDTH+10
  8083 4AD1 85 85			sta :bp2+1
  8084 4AD3 A0 00			ldy #$00
  8085 4AD5 A5 9F			lda :STACKORIGIN+9
  8086 4AD7 18 71 84			add (:bp2),y
  8087 4ADA 8D 0A A4			sta GETBYTE.SRC
  8088 4ADD C8				iny
  8089 4ADE A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  8090 4AE0 71 84			adc (:bp2),y
  8091 4AE2 8D 0B A4			sta GETBYTE.SRC+1
  8092 4AE5 A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
  8093 4AE7 69 00			adc #$00
  8094 4AE9 8D 0C A4			sta GETBYTE.SRC+2
  8095 4AEC A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
  8096 4AEE 69 00			adc #$00
  8097 4AF0 8D 0D A4			sta GETBYTE.SRC+3
  8098 4AF3 20 86 26			jsr GETBYTE
  8099 4AF6 AD 0E A4			lda GETBYTE.RESULT
  8100 4AF9 29 80			and #$80
  8101 4AFB 8D D7 A4			sta CL
  8102
  8103 				; optimize OK (service.pas), line = 1401
  8104
  8105 4AFE AD D8 A4			lda CL2
  8106 4B01 29 7F			and #$7F
  8107 4B03 0D D7 A4			ora CL
  8108 4B06 8D D8 A4			sta CL2
  8109
  8110 				; optimize OK (service.pas), line = 1404
  8111
  8112 4B09 AD D3 A4			lda XS
  8113 4B0C 18 6D D1 A4			add X
  8114 4B10 85 A0			sta :STACKORIGIN+10
  8115 4B12 AD D4 A4			lda XS+1
  8116 4B15 69 00			adc #$00
  8117 4B17 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  8118 4B19 A9 00			lda #$00
  8119 4B1B 69 00			adc #$00
  8120 4B1D 85 C0			sta :STACKORIGIN+STACKWIDTH*2+10
  8121 4B1F A9 00			lda #$00
  8122 4B21 69 00			adc #$00
  8123 4B23 85 D0			sta :STACKORIGIN+STACKWIDTH*3+10
  8124 4B25 AD D6 A4			lda YS+1
  8125 4B28 85 B1			sta :STACKORIGIN+STACKWIDTH+11
  8126 4B2A AD D5 A4			lda YS
  8127 4B2D 0A				asl @
  8128 4B2E 26 B1			rol :STACKORIGIN+STACKWIDTH+11
  8129 4B30 18 6D 1C 99			add ROW
  8130 4B34 85 84			sta :bp2
  8131 4B36 AD 1D 99			lda ROW+1
  8132 4B39 65 B1			adc :STACKORIGIN+STACKWIDTH+11
  8133 4B3B 85 85			sta :bp2+1
  8134 4B3D A0 00			ldy #$00
  8135 4B3F A5 A0			lda :STACKORIGIN+10
  8136 4B41 18 71 84			add (:bp2),y
  8137 4B44 8D 05 A4			sta PUTBYTE.DST
  8138 4B47 C8				iny
  8139 4B48 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
  8140 4B4A 71 84			adc (:bp2),y
  8141 4B4C 8D 06 A4			sta PUTBYTE.DST+1
  8142 4B4F A5 C0			lda :STACKORIGIN+STACKWIDTH*2+10
  8143 4B51 69 00			adc #$00
  8144 4B53 8D 07 A4			sta PUTBYTE.DST+2
  8145 4B56 A5 D0			lda :STACKORIGIN+STACKWIDTH*3+10
  8146 4B58 69 00			adc #$00
  8147 4B5A 8D 08 A4			sta PUTBYTE.DST+3
  8148 4B5D AD D8 A4			lda CL2
  8149 4B60 8D 09 A4			sta PUTBYTE.V
  8150 4B63 20 70 26			jsr PUTBYTE
  8151
  8152 				; optimize OK (service.pas), line = 1407
  8153
  8154 4B66 AD E9 9A			lda PLAYSCREEN.OFS
  8155 4B69 18 6D D3 A4			add XS
  8156 4B6D 85 A0			sta :STACKORIGIN+10
  8157 4B6F AD EA 9A			lda PLAYSCREEN.OFS+1
  8158 4B72 6D D4 A4			adc XS+1
  8159 4B75 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  8160 4B77 AD EB 9A			lda PLAYSCREEN.OFS+2
  8161 4B7A 69 00			adc #$00
  8162 4B7C 85 C0			sta :STACKORIGIN+STACKWIDTH*2+10
  8163 4B7E AD EC 9A			lda PLAYSCREEN.OFS+3
  8164 4B81 69 00			adc #$00
  8165 4B83 85 D0			sta :STACKORIGIN+STACKWIDTH*3+10
  8166 4B85 A5 A0			lda :STACKORIGIN+10
  8167 4B87 18 6D D1 A4			add X
  8168 4B8B 85 A0			sta :STACKORIGIN+10
  8169 4B8D A5 B0			lda :STACKORIGIN+STACKWIDTH+10
  8170 4B8F 69 00			adc #$00
  8171 4B91 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  8172 4B93 A5 C0			lda :STACKORIGIN+STACKWIDTH*2+10
  8173 4B95 69 00			adc #$00
  8174 4B97 85 C0			sta :STACKORIGIN+STACKWIDTH*2+10
  8175 4B99 A5 D0			lda :STACKORIGIN+STACKWIDTH*3+10
  8176 4B9B 69 00			adc #$00
  8177 4B9D 85 D0			sta :STACKORIGIN+STACKWIDTH*3+10
  8178 4B9F AD D6 A4			lda YS+1
  8179 4BA2 85 B1			sta :STACKORIGIN+STACKWIDTH+11
  8180 4BA4 AD D5 A4			lda YS
  8181 4BA7 0A				asl @
  8182 4BA8 26 B1			rol :STACKORIGIN+STACKWIDTH+11
  8183 4BAA 18 6D 1C 99			add ROW
  8184 4BAE 85 84			sta :bp2
  8185 4BB0 AD 1D 99			lda ROW+1
  8186 4BB3 65 B1			adc :STACKORIGIN+STACKWIDTH+11
  8187 4BB5 85 85			sta :bp2+1
  8188 4BB7 A0 00			ldy #$00
  8189 4BB9 A5 A0			lda :STACKORIGIN+10
  8190 4BBB 18 71 84			add (:bp2),y
  8191 4BBE 8D 05 A4			sta PUTBYTE.DST
  8192 4BC1 C8				iny
  8193 4BC2 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
  8194 4BC4 71 84			adc (:bp2),y
  8195 4BC6 8D 06 A4			sta PUTBYTE.DST+1
  8196 4BC9 A5 C0			lda :STACKORIGIN+STACKWIDTH*2+10
  8197 4BCB 69 00			adc #$00
  8198 4BCD 8D 07 A4			sta PUTBYTE.DST+2
  8199 4BD0 A5 D0			lda :STACKORIGIN+STACKWIDTH*3+10
  8200 4BD2 69 00			adc #$00
  8201 4BD4 8D 08 A4			sta PUTBYTE.DST+3
  8202 4BD7 AD D8 A4			lda CL2
  8203 4BDA 8D 09 A4			sta PUTBYTE.V
  8204 4BDD 20 70 26			jsr PUTBYTE
  8205
  8206 				; --- ForToDoEpilog
  8207 4BE0 EE D1 A4			inc X
  8208 4BE3 F0 03 4C 79 4A		jne l_1370
  8209 4BE8			l_137E
  8210 4BE8			l_129F
  8211
  8212 				; ------------------------------------------------------------
  8213
  8214 = A4CE			XA	= DATAORIGIN+$0AB2
  8215 = A4CF			YA	= DATAORIGIN+$0AB3
  8216 = A4D0			BLOCK	= DATAORIGIN+$0AB4
  8217 = A4D1			X	= DATAORIGIN+$0AB5
  8218 = A4D2			Y	= DATAORIGIN+$0AB6
  8219 = A4D3			XS	= DATAORIGIN+$0AB7
  8220 = A4D5			YS	= DATAORIGIN+$0AB9
  8221 = A4D7			CL	= DATAORIGIN+$0ABB
  8222 = A4D8			CL2	= DATAORIGIN+$0ABC
  8223 = A4D9			SHADOW	= DATAORIGIN+$0ABD
  8224
  8225 = A4CE			@VarData	= XA
  8226 = 000C			@VarDataSize	= 12
  8227
  8228 4BE8			@exit
  8229 					.ifdef @new
  8230 					lda <@VarData
  8231 					sta :ztmp
  8232 					lda >@VarData
  8233 					ldy #@VarDataSize-1
  8234 					jmp @FreeMem
  8235 					els
  8236 4BE8 60				rts						; ret
  8237 					eif
  8238 				.endl
  8239
  8240 4BE9			.local	PUT_WALL					; PROCEDURE
  8241
  8242 				; optimize OK (service.pas), line = 1417
  8243
  8244 4BE9 A9 00			lda #$00
  8245 4BEB 8D DD A4			sta Y
  8246
  8247 4BEE			l_13EB
  8248 				; --- ForToDoCondition
  8249 4BEE AD DD A4			lda Y
  8250 4BF1 C9 0F			cmp #$0F
  8251 4BF3 B0 48			jcs l_13F9
  8252
  8253 				; optimize OK (service.pas), line = 1418
  8254
  8255 4BF5 A9 00			lda #$00
  8256 4BF7 8D DC A4			sta X
  8257
  8258 4BFA			l_1402
  8259 				; --- ForToDoCondition
  8260 4BFA AD DC A4			lda X
  8261 4BFD C9 0D			cmp #$0D
  8262 4BFF B0 37			jcs l_1410
  8263
  8264 				; optimize OK (service.pas), line = 1419
  8265
  8266 4C01 AD DD A4			lda Y
  8267 4C04 0A				asl @
  8268 4C05 0A				asl @
  8269 4C06 0A				asl @
  8270 4C07 0A				asl @
  8271 4C08 18 6D DC A4			add X
  8272 4C0C A8				tay
  8273 4C0D B9 00 DB			lda adr.WALL,y
  8274 4C10 F0 21			jeq l_142F
  8275 4C12 AD DD A4			lda Y
  8276 4C15 0A				asl @
  8277 4C16 0A				asl @
  8278 4C17 0A				asl @
  8279 4C18 0A				asl @
  8280 4C19 18 6D DC A4			add X
  8281 4C1D A8				tay
  8282 4C1E B9 00 DB			lda adr.WALL,y
  8283 4C21 8D D0 A4			sta PLACE_BLOCK.BLOCK
  8284 4C24 AD DC A4			lda X
  8285 4C27 8D CE A4			sta PLACE_BLOCK.XA
  8286 4C2A AD DD A4			lda Y
  8287 4C2D 8D CF A4			sta PLACE_BLOCK.YA
  8288 4C30 20 A8 44			jsr PLACE_BLOCK
  8289 4C33			l_142F
  8290
  8291 				; --- ForToDoEpilog
  8292 4C33 EE DC A4			inc X
  8293 4C36 D0 C2			jne l_1402
  8294 4C38			l_1410
  8295
  8296 				; --- ForToDoEpilog
  8297 4C38 EE DD A4			inc Y
  8298 4C3B D0 B1			jne l_13EB
  8299 4C3D			l_13F9
  8300
  8301 				; ------------------------------------------------------------
  8302
  8303 = A4DC			X	= DATAORIGIN+$0AC0
  8304 = A4DD			Y	= DATAORIGIN+$0AC1
  8305
  8306 = A4DC			@VarData	= X
  8307 = 0002			@VarDataSize	= 2
  8308
  8309 4C3D			@exit
  8310 					.ifdef @new
  8311 					lda <@VarData
  8312 					sta :ztmp
  8313 					lda >@VarData
  8314 					ldy #@VarDataSize-1
  8315 					jmp @FreeMem
  8316 					els
  8317 4C3D 60				rts						; ret
  8318 					eif
  8319 				.endl
  8320
  8321 4C3E			.local	SET_WALL					; PROCEDURE
  8322
  8323 				; optimize OK (service.pas), line = 1428
  8324
  8325 4C3E A9 00			lda #$00
  8326 4C40 8D 9C 9B			sta REMAIN_BLK
  8327
  8328 				; optimize OK (service.pas), line = 1429
  8329
  8330 4C43 AC B9 9B			ldy CUR_PLAYER
  8331 4C46 B9 AA 9B			lda adr.SCORE.WALL_N,y
  8332 4C49 8D E0 A4			sta WL
  8333
  8334 				; optimize OK (service.pas), line = 1432
  8335
  8336 4C4C A9 00			lda #$00
  8337 4C4E 8D DF A4			sta Y
  8338
  8339 4C51			l_146D
  8340 				; --- ForToDoCondition
  8341 4C51 AD DF A4			lda Y
  8342 4C54 C9 0F			cmp #$0F
  8343 4C56 B0 3D			jcs l_147B
  8344
  8345 				; optimize OK (service.pas), line = 1433
  8346
  8347 4C58 A9 00			lda #$00
  8348 4C5A 8D DE A4			sta X
  8349
  8350 4C5D			l_1484
  8351 				; --- ForToDoCondition
  8352 4C5D AD DE A4			lda X
  8353 4C60 C9 0D			cmp #$0D
  8354 4C62 B0 2C			jcs l_1492
  8355
  8356 				; optimize OK (service.pas), line = 1436
  8357
  8358 4C64 AD DF A4			lda Y
  8359 4C67 0A				asl @
  8360 4C68 0A				asl @
  8361 4C69 0A				asl @
  8362 4C6A 0A				asl @
  8363 4C6B 18 6D DE A4			add X
  8364 4C6F A8				tay
  8365 4C70 B9 00 DB			lda adr.WALL,y
  8366 4C73 F0 16			jeq l_14CA
  8367 4C75 AD DF A4			lda Y
  8368 4C78 0A				asl @
  8369 4C79 0A				asl @
  8370 4C7A 0A				asl @
  8371 4C7B 0A				asl @
  8372 4C7C 18 6D DE A4			add X
  8373 4C80 A8				tay
  8374 4C81 B9 00 DB			lda adr.WALL,y
  8375 4C84 C9 0A			cmp #$0A
  8376 4C86 F0 03			jeq l_14CA
  8377 4C88 EE 9C 9B			inc REMAIN_BLK
  8378 4C8B			l_14CA
  8379
  8380 				; --- ForToDoEpilog
  8381 4C8B EE DE A4			inc X
  8382 4C8E D0 CD			jne l_1484
  8383 4C90			l_1492
  8384
  8385 				; --- ForToDoEpilog
  8386 4C90 EE DF A4			inc Y
  8387 4C93 D0 BC			jne l_146D
  8388 4C95			l_147B
  8389
  8390 				; optimize OK (service.pas), line = 1438
  8391
  8392 4C95 AD E0 A4			lda WL
  8393 4C98 38 E9 01			sub #$01
  8394 4C9B 85 86			sta @SMALLINT.MOD.A
  8395 4C9D A9 00			lda #$00
  8396 4C9F E9 00			sbc #$00
  8397 4CA1 85 87			sta @SMALLINT.MOD.A+1
  8398 4CA3 A9 04			lda #$04
  8399 4CA5 85 8E			sta @SMALLINT.MOD.B
  8400 4CA7 A9 00			lda #$00
  8401 4CA9 85 8F			sta @SMALLINT.MOD.B+1
  8402 4CAB 20 3F 12			jsr @SMALLINT.MOD
  8403 4CAE A5 92			lda @SMALLINT.MOD.RESULT
  8404 4CB0 8D E0 A4			sta WL
  8405
  8406 				; optimize OK (service.pas), line = 1440
  8407
  8408 4CB3 8D E1 A4			sta @CASETMP_0007
  8409 4CB6 C9 00			cmp #$00
  8410 4CB8 D0 33			jne l_14F4
  8411 				@
  8412
  8413 				; optimize OK (service.pas), line = 1441
  8414
  8415 4CBA AD 72 9B 8D 6A 9B + 	:8 mva adr.PATTERN0+# adr.PATTERN+#
  8416 4CEA 4C C6 4D			jmp a_0007
  8417 4CED			l_14F4
  8418 4CED C9 01			cmp #$01
  8419 4CEF D0 33			jne l_14FD
  8420
  8421 				; optimize OK (service.pas), line = 1442
  8422
  8423 4CF1 AD 7A 9B 8D 6A 9B + 	:8 mva adr.PATTERN1+# adr.PATTERN+#
  8424 4D21 4C C6 4D			jmp a_0007
  8425 4D24			l_14FD
  8426 4D24 C9 02			cmp #$02
  8427 4D26 D0 33			jne l_1506
  8428
  8429 				; optimize OK (service.pas), line = 1443
  8430
  8431 4D28 AD 82 9B 8D 6A 9B + 	:8 mva adr.PATTERN2+# adr.PATTERN+#
  8432 4D58 4C C6 4D			jmp a_0007
  8433 4D5B			l_1506
  8434 4D5B C9 03			cmp #$03
  8435 4D5D D0 33			jne l_150F
  8436
  8437 				; optimize OK (service.pas), line = 1444
  8438
  8439 4D5F AD 8A 9B 8D 6A 9B + 	:8 mva adr.PATTERN3+# adr.PATTERN+#
  8440 4D8F 4C C6 4D			jmp a_0007
  8441 4D92			l_150F
  8442 4D92 C9 04			cmp #$04
  8443 4D94 D0 30			jne l_1518
  8444
  8445 				; optimize OK (service.pas), line = 1445
  8446
  8447 4D96 AD 92 9B 8D 6A 9B + 	:8 mva adr.PATTERN4+# adr.PATTERN+#
  8448 4DC6			l_1518
  8449 4DC6			a_0007
  8450
  8451 				; ------------------------------------------------------------
  8452
  8453 = A4DE			X	= DATAORIGIN+$0AC2
  8454 = A4DF			Y	= DATAORIGIN+$0AC3
  8455 = A4E0			WL	= DATAORIGIN+$0AC4
  8456 = A4E1			@CASETMP_0007	= DATAORIGIN+$0AC5
  8457
  8458 = A4DE			@VarData	= X
  8459 = 0004			@VarDataSize	= 4
  8460
  8461 4DC6			@exit
  8462 					.ifdef @new
  8463 					lda <@VarData
  8464 					sta :ztmp
  8465 					lda >@VarData
  8466 					ldy #@VarDataSize-1
  8467 					jmp @FreeMem
  8468 					els
  8469 4DC6 60				rts						; ret
  8470 					eif
  8471 				.endl
  8472
  8473 4DC7			.local	SPLIT_LINE					; FUNCTION
  8474
  8475 				; optimize OK (service.pas), line = 1484
  8476
  8477 4DC7 AC E2 A4 84 84 AC + 	mwy X1 :bp2
  8478 4DD1 A0 00			ldy #$00
  8479 4DD3 B1 84			lda (:bp2),y
  8480 4DD5 18 69 10			add #$10
  8481 4DD8 91 84			sta (:bp2),y
  8482 4DDA C8				iny
  8483 4DDB B1 84			lda (:bp2),y
  8484 4DDD 69 00			adc #$00
  8485 4DDF 91 84			sta (:bp2),y
  8486
  8487 				; optimize OK (service.pas), line = 1485
  8488
  8489 4DE1 AC E4 A4 84 84 AC + 	mwy Y1 :bp2
  8490 4DEB A0 00			ldy #$00
  8491 4DED B1 84			lda (:bp2),y
  8492 4DEF 18 69 18			add #$18
  8493 4DF2 91 84			sta (:bp2),y
  8494 4DF4 C8				iny
  8495 4DF5 B1 84			lda (:bp2),y
  8496 4DF7 69 00			adc #$00
  8497 4DF9 91 84			sta (:bp2),y
  8498
  8499 				; optimize OK (service.pas), line = 1486
  8500
  8501 4DFB AC E6 A4 84 84 AC + 	mwy X2 :bp2
  8502 4E05 A0 00			ldy #$00
  8503 4E07 B1 84			lda (:bp2),y
  8504 4E09 18 69 10			add #$10
  8505 4E0C 91 84			sta (:bp2),y
  8506 4E0E C8				iny
  8507 4E0F B1 84			lda (:bp2),y
  8508 4E11 69 00			adc #$00
  8509 4E13 91 84			sta (:bp2),y
  8510
  8511 				; optimize OK (service.pas), line = 1487
  8512
  8513 4E15 AC E8 A4 84 84 AC + 	mwy Y2 :bp2
  8514 4E1F A0 00			ldy #$00
  8515 4E21 B1 84			lda (:bp2),y
  8516 4E23 18 69 18			add #$18
  8517 4E26 91 84			sta (:bp2),y
  8518 4E28 C8				iny
  8519 4E29 B1 84			lda (:bp2),y
  8520 4E2B 69 00			adc #$00
  8521 4E2D 91 84			sta (:bp2),y
  8522
  8523 				; optimize OK (service.pas), line = 1489
  8524
  8525 4E2F A9 00			lda #$00
  8526 4E31 8D 0B A5			sta COLLISION
  8527
  8528 				; optimize OK (service.pas), line = 1491
  8529
  8530 4E34 AC E2 A4 84 84 AC + 	mwy X1 :bp2
  8531 4E3E A0 00			ldy #$00
  8532 4E40 B1 84			lda (:bp2),y
  8533 4E42 85 9F			sta :STACKORIGIN+9
  8534 4E44 C8				iny
  8535 4E45 B1 84			lda (:bp2),y
  8536 4E47 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  8537 4E49 A0 00			ldy #$00
  8538 4E4B A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  8539 4E4D 10 01			spl
  8540 4E4F 88				dey
  8541 4E50 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  8542 4E52 84 BF			sty :STACKORIGIN+STACKWIDTH*2+9
  8543 4E54 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
  8544 4E56 66 AF			ror :STACKORIGIN+STACKWIDTH+9
  8545 4E58 66 9F			ror :STACKORIGIN+9
  8546 4E5A 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
  8547 4E5C 66 AF			ror :STACKORIGIN+STACKWIDTH+9
  8548 4E5E 66 9F			ror :STACKORIGIN+9
  8549 4E60 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
  8550 4E62 66 AF			ror :STACKORIGIN+STACKWIDTH+9
  8551 4E64 66 9F			ror :STACKORIGIN+9
  8552 4E66 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
  8553 4E68 66 AF			ror :STACKORIGIN+STACKWIDTH+9
  8554 4E6A 66 9F			ror :STACKORIGIN+9
  8555 4E6C A5 9F			lda :STACKORIGIN+9
  8556 4E6E 8D FF A4			sta XP1
  8557 4E71 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  8558 4E73 8D 00 A5			sta XP1+1
  8559
  8560 				; optimize OK (service.pas), line = 1492
  8561
  8562 4E76 AC E4 A4 84 84 AC + 	mwy Y1 :bp2
  8563 4E80 A0 00			ldy #$00
  8564 4E82 B1 84			lda (:bp2),y
  8565 4E84 85 9F			sta :STACKORIGIN+9
  8566 4E86 C8				iny
  8567 4E87 B1 84			lda (:bp2),y
  8568 4E89 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  8569 4E8B A0 00			ldy #$00
  8570 4E8D A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  8571 4E8F 10 01			spl
  8572 4E91 88				dey
  8573 4E92 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  8574 4E94 84 BF			sty :STACKORIGIN+STACKWIDTH*2+9
  8575 4E96 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
  8576 4E98 66 AF			ror :STACKORIGIN+STACKWIDTH+9
  8577 4E9A 66 9F			ror :STACKORIGIN+9
  8578 4E9C 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
  8579 4E9E 66 AF			ror :STACKORIGIN+STACKWIDTH+9
  8580 4EA0 66 9F			ror :STACKORIGIN+9
  8581 4EA2 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
  8582 4EA4 66 AF			ror :STACKORIGIN+STACKWIDTH+9
  8583 4EA6 66 9F			ror :STACKORIGIN+9
  8584 4EA8 A5 9F			lda :STACKORIGIN+9
  8585 4EAA 8D 01 A5			sta YP1
  8586 4EAD A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  8587 4EAF 8D 02 A5			sta YP1+1
  8588
  8589 				; optimize OK (service.pas), line = 1493
  8590
  8591 4EB2 AC E6 A4 84 84 AC + 	mwy X2 :bp2
  8592 4EBC A0 00			ldy #$00
  8593 4EBE B1 84			lda (:bp2),y
  8594 4EC0 85 9F			sta :STACKORIGIN+9
  8595 4EC2 C8				iny
  8596 4EC3 B1 84			lda (:bp2),y
  8597 4EC5 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  8598 4EC7 A0 00			ldy #$00
  8599 4EC9 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  8600 4ECB 10 01			spl
  8601 4ECD 88				dey
  8602 4ECE 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  8603 4ED0 84 BF			sty :STACKORIGIN+STACKWIDTH*2+9
  8604 4ED2 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
  8605 4ED4 66 AF			ror :STACKORIGIN+STACKWIDTH+9
  8606 4ED6 66 9F			ror :STACKORIGIN+9
  8607 4ED8 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
  8608 4EDA 66 AF			ror :STACKORIGIN+STACKWIDTH+9
  8609 4EDC 66 9F			ror :STACKORIGIN+9
  8610 4EDE 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
  8611 4EE0 66 AF			ror :STACKORIGIN+STACKWIDTH+9
  8612 4EE2 66 9F			ror :STACKORIGIN+9
  8613 4EE4 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
  8614 4EE6 66 AF			ror :STACKORIGIN+STACKWIDTH+9
  8615 4EE8 66 9F			ror :STACKORIGIN+9
  8616 4EEA A5 9F			lda :STACKORIGIN+9
  8617 4EEC 8D 03 A5			sta XP2
  8618 4EEF A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  8619 4EF1 8D 04 A5			sta XP2+1
  8620
  8621 				; optimize OK (service.pas), line = 1494
  8622
  8623 4EF4 AC E8 A4 84 84 AC + 	mwy Y2 :bp2
  8624 4EFE A0 00			ldy #$00
  8625 4F00 B1 84			lda (:bp2),y
  8626 4F02 85 9F			sta :STACKORIGIN+9
  8627 4F04 C8				iny
  8628 4F05 B1 84			lda (:bp2),y
  8629 4F07 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  8630 4F09 A0 00			ldy #$00
  8631 4F0B A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  8632 4F0D 10 01			spl
  8633 4F0F 88				dey
  8634 4F10 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  8635 4F12 84 BF			sty :STACKORIGIN+STACKWIDTH*2+9
  8636 4F14 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
  8637 4F16 66 AF			ror :STACKORIGIN+STACKWIDTH+9
  8638 4F18 66 9F			ror :STACKORIGIN+9
  8639 4F1A 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
  8640 4F1C 66 AF			ror :STACKORIGIN+STACKWIDTH+9
  8641 4F1E 66 9F			ror :STACKORIGIN+9
  8642 4F20 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
  8643 4F22 66 AF			ror :STACKORIGIN+STACKWIDTH+9
  8644 4F24 66 9F			ror :STACKORIGIN+9
  8645 4F26 A5 9F			lda :STACKORIGIN+9
  8646 4F28 8D 05 A5			sta YP2
  8647 4F2B A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  8648 4F2D 8D 06 A5			sta YP2+1
  8649
  8650 				; optimize OK (service.pas), line = 1496
  8651
  8652 4F30 AC E2 A4 84 84 AC + 	mwy X1 :bp2
  8653 4F3A A0 00			ldy #$00
  8654 4F3C B1 84			lda (:bp2),y
  8655 4F3E 8D EF A4			sta XK
  8656 4F41 C8				iny
  8657 4F42 B1 84			lda (:bp2),y
  8658 4F44 8D F0 A4			sta XK+1
  8659
  8660 				; optimize OK (service.pas), line = 1497
  8661
  8662 4F47 AC E4 A4 84 84 AC + 	mwy Y1 :bp2
  8663 4F51 A0 00			ldy #$00
  8664 4F53 B1 84			lda (:bp2),y
  8665 4F55 8D F1 A4			sta YK
  8666 4F58 C8				iny
  8667 4F59 B1 84			lda (:bp2),y
  8668 4F5B 8D F2 A4			sta YK+1
  8669
  8670 				; optimize OK (service.pas), line = 1498
  8671
  8672 4F5E AC E6 A4 84 84 AC + 	mwy X2 :bp2
  8673 4F68 A0 00			ldy #$00
  8674 4F6A B1 84			lda (:bp2),y
  8675 4F6C 8D F3 A4			sta XJ
  8676 4F6F C8				iny
  8677 4F70 B1 84			lda (:bp2),y
  8678 4F72 8D F4 A4			sta XJ+1
  8679
  8680 				; optimize OK (service.pas), line = 1499
  8681
  8682 4F75 AC E8 A4 84 84 AC + 	mwy Y2 :bp2
  8683 4F7F A0 00			ldy #$00
  8684 4F81 B1 84			lda (:bp2),y
  8685 4F83 8D F5 A4			sta YJ
  8686 4F86 C8				iny
  8687 4F87 B1 84			lda (:bp2),y
  8688 4F89 8D F6 A4			sta YJ+1
  8689
  8690 				; optimize OK (service.pas), line = 1501
  8691
  8692 4F8C AC E2 A4 84 84 AC + 	mwy X1 :bp2
  8693 4F96 A0 00			ldy #$00
  8694 4F98 B1 84			lda (:bp2),y
  8695 4F9A 8D F7 A4			sta XH
  8696 4F9D C8				iny
  8697 4F9E B1 84			lda (:bp2),y
  8698 4FA0 8D F8 A4			sta XH+1
  8699
  8700 				; optimize OK (service.pas), line = 1502
  8701
  8702 4FA3 AC E4 A4 84 84 AC + 	mwy Y1 :bp2
  8703 4FAD A0 00			ldy #$00
  8704 4FAF B1 84			lda (:bp2),y
  8705 4FB1 8D F9 A4			sta YH
  8706 4FB4 C8				iny
  8707 4FB5 B1 84			lda (:bp2),y
  8708 4FB7 8D FA A4			sta YH+1
  8709
  8710 				; optimize OK (service.pas), line = 1503
  8711
  8712 4FBA AC E6 A4 84 84 AC + 	mwy X2 :bp2
  8713 4FC4 A0 00			ldy #$00
  8714 4FC6 B1 84			lda (:bp2),y
  8715 4FC8 8D FB A4			sta XN
  8716 4FCB C8				iny
  8717 4FCC B1 84			lda (:bp2),y
  8718 4FCE 8D FC A4			sta XN+1
  8719
  8720 				; optimize OK (service.pas), line = 1504
  8721
  8722 4FD1 AC E8 A4 84 84 AC + 	mwy Y2 :bp2
  8723 4FDB A0 00			ldy #$00
  8724 4FDD B1 84			lda (:bp2),y
  8725 4FDF 8D FD A4			sta YN
  8726 4FE2 C8				iny
  8727 4FE3 B1 84			lda (:bp2),y
  8728 4FE5 8D FE A4			sta YN+1
  8729
  8730 				; optimize OK (service.pas), line = 1511
  8731
  8732 4FE8 AC E2 A4 84 84 AC + 	mwy X1 :bp2
  8733 4FF2 A0 00			ldy #$00
  8734 4FF4 B1 84			lda (:bp2),y
  8735 4FF6 85 9F			sta :STACKORIGIN+9
  8736 4FF8 C8				iny
  8737 4FF9 B1 84			lda (:bp2),y
  8738 4FFB 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  8739 4FFD AC E6 A4 84 84 AC + 	mwy X2 :bp2
  8740 5007 A0 00			ldy #$00
  8741 5009 B1 84			lda (:bp2),y
  8742 500B 85 A0			sta :STACKORIGIN+10
  8743 500D C8				iny
  8744 500E B1 84			lda (:bp2),y
  8745 5010 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  8746 5012 A0 00			ldy #$00
  8747 5014 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  8748 5016 10 01			spl
  8749 5018 88				dey
  8750 5019 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  8751 501B 84 BF			sty :STACKORIGIN+STACKWIDTH*2+9
  8752 501D 84 CF			sty :STACKORIGIN+STACKWIDTH*3+9
  8753 501F A0 00			ldy #$00
  8754 5021 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
  8755 5023 10 01			spl
  8756 5025 88				dey
  8757 5026 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  8758 5028 84 C0			sty :STACKORIGIN+STACKWIDTH*2+10
  8759 502A 84 D0			sty :STACKORIGIN+STACKWIDTH*3+10
  8760 502C A5 9F			lda :STACKORIGIN+9
  8761 502E 38 E5 A0			sub :STACKORIGIN+10
  8762 5031 85 8A			sta SYSTEM.ABS.@010185000.X
  8763 5033 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  8764 5035 E5 B0			sbc :STACKORIGIN+STACKWIDTH+10
  8765 5037 85 8B			sta SYSTEM.ABS.@010185000.X+1
  8766 5039 A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
  8767 503B E5 C0			sbc :STACKORIGIN+STACKWIDTH*2+10
  8768 503D 85 8C			sta SYSTEM.ABS.@010185000.X+2
  8769 503F A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
  8770 5041 E5 D0			sbc :STACKORIGIN+STACKWIDTH*3+10
  8771 5043 85 8D			sta SYSTEM.ABS.@010185000.X+3
  8772 5045 20 85 1B			jsr SYSTEM.ABS.@010185000
  8773 5048 E8				inx
  8774 5049 A0 01			ldy #1
  8775 504B				.LOCAL
  8776 504B A5 95			lda SYSTEM.ABS.@010185000.RESULT+3
  8777 504D 38 E9 00			sub #$00
  8778 5050 D0 1C			bne L4
  8779 5052 A5 94			lda SYSTEM.ABS.@010185000.RESULT+2
  8780 5054 C9 00			cmp #$00
  8781 5056 D0 0A			bne L1
  8782 5058 A5 93			lda SYSTEM.ABS.@010185000.RESULT+1
  8783 505A C9 00			cmp #$00
  8784 505C D0 04			bne L1
  8785 505E A5 92			lda SYSTEM.ABS.@010185000.RESULT
  8786 5060 C9 10			cmp #$10
  8787 5062 F0 10		L1	beq L5
  8788 5064 B0 04			bcs L3
  8789 5066 A9 FF			lda #$FF
  8790 5068 D0 0A			bne L5
  8791 506A A9 01		L3	lda #$01
  8792 506C D0 06			bne L5
  8793 506E 50 04		L4	bvc L5
  8794 5070 49 FF			eor #$FF
  8795 5072 09 01			ora #$01
  8796 5074			L5
  8797 					.ENDL
  8798 5074 F0 02			seq
  8799 5076 10 01			bpl @+
  8800 5078 88				dey
  8801 				@
  8802 5079 94 96			sty :STACKORIGIN,x
  8803 507B AC E8 A4 84 84 AC + 	mwy Y2 :bp2
  8804 5085 A0 00			ldy #$00
  8805 5087 B1 84			lda (:bp2),y
  8806 5089 85 9F			sta :STACKORIGIN+9
  8807 508B C8				iny
  8808 508C B1 84			lda (:bp2),y
  8809 508E 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  8810 5090 AC E4 A4 84 84 AC + 	mwy Y1 :bp2
  8811 509A A0 00			ldy #$00
  8812 509C B1 84			lda (:bp2),y
  8813 509E 85 A0			sta :STACKORIGIN+10
  8814 50A0 C8				iny
  8815 50A1 B1 84			lda (:bp2),y
  8816 50A3 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  8817 50A5 A0 00			ldy #$00
  8818 50A7 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  8819 50A9 10 01			spl
  8820 50AB 88				dey
  8821 50AC 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  8822 50AE 84 BF			sty :STACKORIGIN+STACKWIDTH*2+9
  8823 50B0 84 CF			sty :STACKORIGIN+STACKWIDTH*3+9
  8824 50B2 A0 00			ldy #$00
  8825 50B4 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
  8826 50B6 10 01			spl
  8827 50B8 88				dey
  8828 50B9 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  8829 50BB 84 C0			sty :STACKORIGIN+STACKWIDTH*2+10
  8830 50BD 84 D0			sty :STACKORIGIN+STACKWIDTH*3+10
  8831 50BF A5 9F			lda :STACKORIGIN+9
  8832 50C1 38 E5 A0			sub :STACKORIGIN+10
  8833 50C4 85 8A			sta SYSTEM.ABS.@010185000.X
  8834 50C6 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  8835 50C8 E5 B0			sbc :STACKORIGIN+STACKWIDTH+10
  8836 50CA 85 8B			sta SYSTEM.ABS.@010185000.X+1
  8837 50CC A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
  8838 50CE E5 C0			sbc :STACKORIGIN+STACKWIDTH*2+10
  8839 50D0 85 8C			sta SYSTEM.ABS.@010185000.X+2
  8840 50D2 A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
  8841 50D4 E5 D0			sbc :STACKORIGIN+STACKWIDTH*3+10
  8842 50D6 85 8D			sta SYSTEM.ABS.@010185000.X+3
  8843 50D8 20 85 1B			jsr SYSTEM.ABS.@010185000
  8844 50DB CA				dex
  8845 50DC A0 01			ldy #1
  8846 50DE				.LOCAL
  8847 50DE A5 95			lda SYSTEM.ABS.@010185000.RESULT+3
  8848 50E0 38 E9 00			sub #$00
  8849 50E3 D0 1C			bne L4
  8850 50E5 A5 94			lda SYSTEM.ABS.@010185000.RESULT+2
  8851 50E7 C9 00			cmp #$00
  8852 50E9 D0 0A			bne L1
  8853 50EB A5 93			lda SYSTEM.ABS.@010185000.RESULT+1
  8854 50ED C9 00			cmp #$00
  8855 50EF D0 04			bne L1
  8856 50F1 A5 92			lda SYSTEM.ABS.@010185000.RESULT
  8857 50F3 C9 08			cmp #$08
  8858 50F5 F0 10		L1	beq L5
  8859 50F7 B0 04			bcs L3
  8860 50F9 A9 FF			lda #$FF
  8861 50FB D0 0A			bne L5
  8862 50FD A9 01		L3	lda #$01
  8863 50FF D0 06			bne L5
  8864 5101 50 04		L4	bvc L5
  8865 5103 49 FF			eor #$FF
  8866 5105 09 01			ora #$01
  8867 5107			L5
  8868 					.ENDL
  8869 5107 F0 02			seq
  8870 5109 10 01			bpl @+
  8871 510B 88				dey
  8872 				@
  8873 510C 98				tya
  8874 510D 15 97			ora :STACKORIGIN+1,x
  8875 510F F0 05			jeq l_15A1
  8876
  8877 				; optimize OK (service.pas), line = 1512
  8878
  8879 5111 A9 01			lda #$01
  8880 5113 20 F4 26			jsr FATAL_ERROR
  8881 5116			l_15A1
  8882
  8883 				; optimize OK (service.pas), line = 1515
  8884
  8885 5116 AD 00 A5			lda XP1+1
  8886 5119 CD 04 A5			cmp XP2+1
  8887 511C D0 06			bne @+
  8888 511E AD FF A4			lda XP1
  8889 5121 CD 03 A5			cmp XP2
  8890 				@
  8891 5124 D0 13			jne l_15C4x
  8892 5126 AD 02 A5			lda YP1+1
  8893 5129 CD 06 A5			cmp YP2+1
  8894 512C D0 06			bne @+
  8895 512E AD 01 A5			lda YP1
  8896 5131 CD 05 A5			cmp YP2
  8897 				@
  8898 5134 D0 03 4C 9D 54		jeq l_15C4
  8899 5139			l_15C4x
  8900
  8901 				; optimize OK (service.pas), line = 1517
  8902
  8903 5139 AD 02 A5			lda YP1+1
  8904 513C CD 06 A5			cmp YP2+1
  8905 513F D0 06			bne @+
  8906 5141 AD 01 A5			lda YP1
  8907 5144 CD 05 A5			cmp YP2
  8908 				@
  8909 5147 D0 03 4C 95 52		jeq l_15D7
  8910
  8911 				; optimize OK (service.pas), line = 1519
  8912
  8913 514C AD 0B A5			lda COLLISION
  8914 514F 09 01			ora #$01
  8915 5151 8D 0B A5			sta COLLISION
  8916
  8917 				; --- WhileProlog
  8918 5154 4C 6F 52			jmp l_15E4
  8919 5157			l_15E5
  8920
  8921 				; optimize OK (service.pas), line = 1523
  8922
  8923 5157 AD F7 A4			lda XH
  8924 515A 85 9F			sta :STACKORIGIN+9
  8925 515C A0 00			ldy #$00
  8926 515E AD F8 A4			lda XH+1
  8927 5161 10 01			spl
  8928 5163 88				dey
  8929 5164 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  8930 5166 84 BF			sty :STACKORIGIN+STACKWIDTH*2+9
  8931 5168 84 CF			sty :STACKORIGIN+STACKWIDTH*3+9
  8932 516A AD FB A4			lda XN
  8933 516D 85 A0			sta :STACKORIGIN+10
  8934 516F A0 00			ldy #$00
  8935 5171 AD FC A4			lda XN+1
  8936 5174 10 01			spl
  8937 5176 88				dey
  8938 5177 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  8939 5179 84 C0			sty :STACKORIGIN+STACKWIDTH*2+10
  8940 517B 84 D0			sty :STACKORIGIN+STACKWIDTH*3+10
  8941 517D A5 9F			lda :STACKORIGIN+9
  8942 517F 18 65 A0			add :STACKORIGIN+10
  8943 5182 85 9F			sta :STACKORIGIN+9
  8944 5184 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  8945 5186 65 B0			adc :STACKORIGIN+STACKWIDTH+10
  8946 5188 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  8947 518A A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
  8948 518C 65 C0			adc :STACKORIGIN+STACKWIDTH*2+10
  8949 518E 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
  8950 5190 A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
  8951 5192 65 D0			adc :STACKORIGIN+STACKWIDTH*3+10
  8952 5194 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
  8953 5196 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
  8954 5198 66 AF			ror :STACKORIGIN+STACKWIDTH+9
  8955 519A 66 9F			ror :STACKORIGIN+9
  8956 519C A5 9F			lda :STACKORIGIN+9
  8957 519E 8D EB A4			sta X
  8958 51A1 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  8959 51A3 8D EC A4			sta X+1
  8960
  8961 				; optimize OK (service.pas), line = 1524
  8962
  8963 51A6 AD F9 A4			lda YH
  8964 51A9 85 9F			sta :STACKORIGIN+9
  8965 51AB A0 00			ldy #$00
  8966 51AD AD FA A4			lda YH+1
  8967 51B0 10 01			spl
  8968 51B2 88				dey
  8969 51B3 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  8970 51B5 84 BF			sty :STACKORIGIN+STACKWIDTH*2+9
  8971 51B7 84 CF			sty :STACKORIGIN+STACKWIDTH*3+9
  8972 51B9 AD FD A4			lda YN
  8973 51BC 85 A0			sta :STACKORIGIN+10
  8974 51BE A0 00			ldy #$00
  8975 51C0 AD FE A4			lda YN+1
  8976 51C3 10 01			spl
  8977 51C5 88				dey
  8978 51C6 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  8979 51C8 84 C0			sty :STACKORIGIN+STACKWIDTH*2+10
  8980 51CA 84 D0			sty :STACKORIGIN+STACKWIDTH*3+10
  8981 51CC A5 9F			lda :STACKORIGIN+9
  8982 51CE 18 65 A0			add :STACKORIGIN+10
  8983 51D1 85 9F			sta :STACKORIGIN+9
  8984 51D3 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  8985 51D5 65 B0			adc :STACKORIGIN+STACKWIDTH+10
  8986 51D7 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  8987 51D9 A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
  8988 51DB 65 C0			adc :STACKORIGIN+STACKWIDTH*2+10
  8989 51DD 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
  8990 51DF A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
  8991 51E1 65 D0			adc :STACKORIGIN+STACKWIDTH*3+10
  8992 51E3 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
  8993 51E5 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
  8994 51E7 66 AF			ror :STACKORIGIN+STACKWIDTH+9
  8995 51E9 66 9F			ror :STACKORIGIN+9
  8996 51EB A5 9F			lda :STACKORIGIN+9
  8997 51ED 8D ED A4			sta Y
  8998 51F0 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  8999 51F2 8D EE A4			sta Y+1
  9000
  9001 				; optimize OK (service.pas), line = 1526
  9002
  9003 51F5 AD ED A4			lda Y
  9004 51F8 85 9F			sta :STACKORIGIN+9
  9005 51FA A0 00			ldy #$00
  9006 51FC AD EE A4			lda Y+1
  9007 51FF 10 01			spl
  9008 5201 88				dey
  9009 5202 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  9010 5204 84 BF			sty :STACKORIGIN+STACKWIDTH*2+9
  9011 5206 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
  9012 5208 66 AF			ror :STACKORIGIN+STACKWIDTH+9
  9013 520A 66 9F			ror :STACKORIGIN+9
  9014 520C 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
  9015 520E 66 AF			ror :STACKORIGIN+STACKWIDTH+9
  9016 5210 66 9F			ror :STACKORIGIN+9
  9017 5212 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
  9018 5214 66 AF			ror :STACKORIGIN+STACKWIDTH+9
  9019 5216 66 9F			ror :STACKORIGIN+9
  9020 5218 A5 9F			lda :STACKORIGIN+9
  9021 521A 8D 09 A5			sta YP
  9022 521D A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  9023 521F 8D 0A A5			sta YP+1
  9024
  9025 				; optimize OK (service.pas), line = 1528
  9026
  9027 5222 CD 02 A5			cmp YP1+1
  9028 5225 D0 06			bne @+
  9029 5227 AD 09 A5			lda YP
  9030 522A CD 01 A5			cmp YP1
  9031 				@
  9032 522D D0 18			jne l_161C
  9033
  9034 				; optimize OK (service.pas), line = 1530
  9035
  9036 522F AD EB A4			lda X
  9037 5232 8D F7 A4			sta XH
  9038 5235 AD EC A4			lda X+1
  9039 5238 8D F8 A4			sta XH+1
  9040
  9041 				; optimize OK (service.pas), line = 1531
  9042
  9043 523B AD ED A4			lda Y
  9044 523E 8D F9 A4			sta YH
  9045 5241 AD EE A4			lda Y+1
  9046 5244 8D FA A4			sta YH+1
  9047 5247			l_161C
  9048
  9049 				; optimize OK (service.pas), line = 1534
  9050
  9051 5247 AD 0A A5			lda YP+1
  9052 524A CD 06 A5			cmp YP2+1
  9053 524D D0 06			bne @+
  9054 524F AD 09 A5			lda YP
  9055 5252 CD 05 A5			cmp YP2
  9056 				@
  9057 5255 D0 18			jne l_163B
  9058
  9059 				; optimize OK (service.pas), line = 1536
  9060
  9061 5257 AD EB A4			lda X
  9062 525A 8D FB A4			sta XN
  9063 525D AD EC A4			lda X+1
  9064 5260 8D FC A4			sta XN+1
  9065
  9066 				; optimize OK (service.pas), line = 1537
  9067
  9068 5263 AD ED A4			lda Y
  9069 5266 8D FD A4			sta YN
  9070 5269 AD EE A4			lda Y+1
  9071 526C 8D FE A4			sta YN+1
  9072 526F			l_163B
  9073 526F			l_15E4
  9074
  9075 				; optimize OK (service.pas), line = 1521
  9076
  9077 526F AD FD A4			lda YN
  9078 5272 29 07			and #$07
  9079 5274 85 9F			sta :STACKORIGIN+9
  9080 5276 A0 01			ldy #1
  9081 5278 A9 00			lda #$00
  9082 527A 05 9F			ora :STACKORIGIN+9
  9083 527C D0 01			bne @+
  9084 527E 88				dey
  9085 				@
  9086 527F 84 9F			sty :STACKORIGIN+9
  9087 5281 AD FD A4			lda YN
  9088 5284 A0 01			ldy #1
  9089 5286 29 07			and #$07
  9090 5288 C9 07			cmp #$07
  9091 				@
  9092 528A D0 01			bne @+
  9093 528C 88				dey
  9094 				@
  9095 528D 98				tya
  9096 528E 25 9F			and :STACKORIGIN+9
  9097 5290 F0 03 4C 57 51		jne l_15E5
  9098 5295			l_15D7
  9099
  9100 				; optimize OK (service.pas), line = 1543
  9101
  9102 5295 AD 00 A5			lda XP1+1
  9103 5298 CD 04 A5			cmp XP2+1
  9104 529B D0 06			bne @+
  9105 529D AD FF A4			lda XP1
  9106 52A0 CD 03 A5			cmp XP2
  9107 				@
  9108 52A3 D0 03 4C F7 53		jeq l_167A
  9109
  9110 				; optimize OK (service.pas), line = 1545
  9111
  9112 52A8 AD 0B A5			lda COLLISION
  9113 52AB 09 02			ora #$02
  9114 52AD 8D 0B A5			sta COLLISION
  9115
  9116 				; --- WhileProlog
  9117 52B0 4C D1 53			jmp l_1687
  9118 52B3			l_1688
  9119
  9120 				; optimize OK (service.pas), line = 1549
  9121
  9122 52B3 AD EF A4			lda XK
  9123 52B6 85 9F			sta :STACKORIGIN+9
  9124 52B8 A0 00			ldy #$00
  9125 52BA AD F0 A4			lda XK+1
  9126 52BD 10 01			spl
  9127 52BF 88				dey
  9128 52C0 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  9129 52C2 84 BF			sty :STACKORIGIN+STACKWIDTH*2+9
  9130 52C4 84 CF			sty :STACKORIGIN+STACKWIDTH*3+9
  9131 52C6 AD F3 A4			lda XJ
  9132 52C9 85 A0			sta :STACKORIGIN+10
  9133 52CB A0 00			ldy #$00
  9134 52CD AD F4 A4			lda XJ+1
  9135 52D0 10 01			spl
  9136 52D2 88				dey
  9137 52D3 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  9138 52D5 84 C0			sty :STACKORIGIN+STACKWIDTH*2+10
  9139 52D7 84 D0			sty :STACKORIGIN+STACKWIDTH*3+10
  9140 52D9 A5 9F			lda :STACKORIGIN+9
  9141 52DB 18 65 A0			add :STACKORIGIN+10
  9142 52DE 85 9F			sta :STACKORIGIN+9
  9143 52E0 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  9144 52E2 65 B0			adc :STACKORIGIN+STACKWIDTH+10
  9145 52E4 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  9146 52E6 A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
  9147 52E8 65 C0			adc :STACKORIGIN+STACKWIDTH*2+10
  9148 52EA 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
  9149 52EC A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
  9150 52EE 65 D0			adc :STACKORIGIN+STACKWIDTH*3+10
  9151 52F0 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
  9152 52F2 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
  9153 52F4 66 AF			ror :STACKORIGIN+STACKWIDTH+9
  9154 52F6 66 9F			ror :STACKORIGIN+9
  9155 52F8 A5 9F			lda :STACKORIGIN+9
  9156 52FA 8D EB A4			sta X
  9157 52FD A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  9158 52FF 8D EC A4			sta X+1
  9159
  9160 				; optimize OK (service.pas), line = 1550
  9161
  9162 5302 AD F1 A4			lda YK
  9163 5305 85 9F			sta :STACKORIGIN+9
  9164 5307 A0 00			ldy #$00
  9165 5309 AD F2 A4			lda YK+1
  9166 530C 10 01			spl
  9167 530E 88				dey
  9168 530F 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  9169 5311 84 BF			sty :STACKORIGIN+STACKWIDTH*2+9
  9170 5313 84 CF			sty :STACKORIGIN+STACKWIDTH*3+9
  9171 5315 AD F5 A4			lda YJ
  9172 5318 85 A0			sta :STACKORIGIN+10
  9173 531A A0 00			ldy #$00
  9174 531C AD F6 A4			lda YJ+1
  9175 531F 10 01			spl
  9176 5321 88				dey
  9177 5322 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  9178 5324 84 C0			sty :STACKORIGIN+STACKWIDTH*2+10
  9179 5326 84 D0			sty :STACKORIGIN+STACKWIDTH*3+10
  9180 5328 A5 9F			lda :STACKORIGIN+9
  9181 532A 18 65 A0			add :STACKORIGIN+10
  9182 532D 85 9F			sta :STACKORIGIN+9
  9183 532F A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  9184 5331 65 B0			adc :STACKORIGIN+STACKWIDTH+10
  9185 5333 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  9186 5335 A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
  9187 5337 65 C0			adc :STACKORIGIN+STACKWIDTH*2+10
  9188 5339 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
  9189 533B A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
  9190 533D 65 D0			adc :STACKORIGIN+STACKWIDTH*3+10
  9191 533F 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
  9192 5341 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
  9193 5343 66 AF			ror :STACKORIGIN+STACKWIDTH+9
  9194 5345 66 9F			ror :STACKORIGIN+9
  9195 5347 A5 9F			lda :STACKORIGIN+9
  9196 5349 8D ED A4			sta Y
  9197 534C A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  9198 534E 8D EE A4			sta Y+1
  9199
  9200 				; optimize OK (service.pas), line = 1552
  9201
  9202 5351 AD EB A4			lda X
  9203 5354 85 9F			sta :STACKORIGIN+9
  9204 5356 A0 00			ldy #$00
  9205 5358 AD EC A4			lda X+1
  9206 535B 10 01			spl
  9207 535D 88				dey
  9208 535E 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  9209 5360 84 BF			sty :STACKORIGIN+STACKWIDTH*2+9
  9210 5362 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
  9211 5364 66 AF			ror :STACKORIGIN+STACKWIDTH+9
  9212 5366 66 9F			ror :STACKORIGIN+9
  9213 5368 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
  9214 536A 66 AF			ror :STACKORIGIN+STACKWIDTH+9
  9215 536C 66 9F			ror :STACKORIGIN+9
  9216 536E 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
  9217 5370 66 AF			ror :STACKORIGIN+STACKWIDTH+9
  9218 5372 66 9F			ror :STACKORIGIN+9
  9219 5374 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
  9220 5376 66 AF			ror :STACKORIGIN+STACKWIDTH+9
  9221 5378 66 9F			ror :STACKORIGIN+9
  9222 537A A5 9F			lda :STACKORIGIN+9
  9223 537C 8D 07 A5			sta XP
  9224 537F A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  9225 5381 8D 08 A5			sta XP+1
  9226
  9227 				; optimize OK (service.pas), line = 1554
  9228
  9229 5384 CD 00 A5			cmp XP1+1
  9230 5387 D0 06			bne @+
  9231 5389 AD 07 A5			lda XP
  9232 538C CD FF A4			cmp XP1
  9233 				@
  9234 538F D0 18			jne l_16BF
  9235
  9236 				; optimize OK (service.pas), line = 1556
  9237
  9238 5391 AD EB A4			lda X
  9239 5394 8D EF A4			sta XK
  9240 5397 AD EC A4			lda X+1
  9241 539A 8D F0 A4			sta XK+1
  9242
  9243 				; optimize OK (service.pas), line = 1557
  9244
  9245 539D AD ED A4			lda Y
  9246 53A0 8D F1 A4			sta YK
  9247 53A3 AD EE A4			lda Y+1
  9248 53A6 8D F2 A4			sta YK+1
  9249 53A9			l_16BF
  9250
  9251 				; optimize OK (service.pas), line = 1560
  9252
  9253 53A9 AD 08 A5			lda XP+1
  9254 53AC CD 04 A5			cmp XP2+1
  9255 53AF D0 06			bne @+
  9256 53B1 AD 07 A5			lda XP
  9257 53B4 CD 03 A5			cmp XP2
  9258 				@
  9259 53B7 D0 18			jne l_16DE
  9260
  9261 				; optimize OK (service.pas), line = 1562
  9262
  9263 53B9 AD EB A4			lda X
  9264 53BC 8D F3 A4			sta XJ
  9265 53BF AD EC A4			lda X+1
  9266 53C2 8D F4 A4			sta XJ+1
  9267
  9268 				; optimize OK (service.pas), line = 1563
  9269
  9270 53C5 AD ED A4			lda Y
  9271 53C8 8D F5 A4			sta YJ
  9272 53CB AD EE A4			lda Y+1
  9273 53CE 8D F6 A4			sta YJ+1
  9274 53D1			l_16DE
  9275 53D1			l_1687
  9276
  9277 				; optimize OK (service.pas), line = 1547
  9278
  9279 53D1 AD F3 A4			lda XJ
  9280 53D4 29 0F			and #$0F
  9281 53D6 85 9F			sta :STACKORIGIN+9
  9282 53D8 A0 01			ldy #1
  9283 53DA A9 00			lda #$00
  9284 53DC 05 9F			ora :STACKORIGIN+9
  9285 53DE D0 01			bne @+
  9286 53E0 88				dey
  9287 				@
  9288 53E1 84 9F			sty :STACKORIGIN+9
  9289 53E3 AD F3 A4			lda XJ
  9290 53E6 A0 01			ldy #1
  9291 53E8 29 0F			and #$0F
  9292 53EA C9 0F			cmp #$0F
  9293 				@
  9294 53EC D0 01			bne @+
  9295 53EE 88				dey
  9296 				@
  9297 53EF 98				tya
  9298 53F0 25 9F			and :STACKORIGIN+9
  9299 53F2 F0 03 4C B3 52		jne l_1688
  9300 53F7			l_167A
  9301
  9302 				; optimize OK (service.pas), line = 1574
  9303
  9304 53F7 AD 0B A5			lda COLLISION
  9305 53FA C9 01			cmp #$01
  9306 53FC D0 03			jne l_171D
  9307 				; optimize OK (service.pas), line = 1576
  9308 				; optimize OK (service.pas), line = 1577
  9309 53FE 4C 6C 54			jmp l_1731
  9310 5401			l_171D
  9311
  9312 				; optimize OK (service.pas), line = 1579
  9313
  9314 5401 AD 0B A5			lda COLLISION
  9315 5404 C9 02			cmp #$02
  9316 5406 D0 2F			jne l_1743
  9317
  9318 				; optimize OK (service.pas), line = 1581
  9319
  9320 5408 AC E6 A4 84 84 AC + 	mwy X2 :bp2
  9321 5412 A0 00			ldy #$00
  9322 5414 AD F3 A4			lda XJ
  9323 5417 91 84			sta (:bp2),y
  9324 5419 C8				iny
  9325 541A AD F4 A4			lda XJ+1
  9326 541D 91 84			sta (:bp2),y
  9327
  9328 				; optimize OK (service.pas), line = 1582
  9329
  9330 541F AC E8 A4 84 84 AC + 	mwy Y2 :bp2
  9331 5429 A0 00			ldy #$00
  9332 542B AD F5 A4			lda YJ
  9333 542E 91 84			sta (:bp2),y
  9334 5430 C8				iny
  9335 5431 AD F6 A4			lda YJ+1
  9336 5434 4C 98 54			jmp l_1757
  9337 5437			l_1743
  9338
  9339 				; optimize OK (service.pas), line = 1584
  9340
  9341 5437 AD 0B A5			lda COLLISION
  9342 543A C9 03			cmp #$03
  9343 543C D0 5C			jne l_1769
  9344
  9345 				; optimize OK (service.pas), line = 1586
  9346
  9347 543E AC E2 A4 84 84 AC + 	mwy X1 :bp2
  9348 5448 A0 00			ldy #$00
  9349 544A AD F3 A4			lda XJ
  9350 544D 91 84			sta (:bp2),y
  9351 544F C8				iny
  9352 5450 AD F4 A4			lda XJ+1
  9353 5453 91 84			sta (:bp2),y
  9354
  9355 				; optimize OK (service.pas), line = 1587
  9356
  9357 5455 AC E4 A4 84 84 AC + 	mwy Y1 :bp2
  9358 545F A0 00			ldy #$00
  9359 5461 AD F5 A4			lda YJ
  9360 5464 91 84			sta (:bp2),y
  9361 5466 C8				iny
  9362 5467 AD F6 A4			lda YJ+1
  9363 546A 91 84			sta (:bp2),y
  9364 546C			l_1731
  9365
  9366 				; optimize OK (service.pas), line = 1588
  9367
  9368 546C AC E6 A4 84 84 AC + 	mwy X2 :bp2
  9369 5476 A0 00			ldy #$00
  9370 5478 AD FB A4			lda XN
  9371 547B 91 84			sta (:bp2),y
  9372 547D C8				iny
  9373 547E AD FC A4			lda XN+1
  9374 5481 91 84			sta (:bp2),y
  9375
  9376 				; optimize OK (service.pas), line = 1589
  9377
  9378 5483 AC E8 A4 84 84 AC + 	mwy Y2 :bp2
  9379 548D A0 00			ldy #$00
  9380 548F AD FD A4			lda YN
  9381 5492 91 84			sta (:bp2),y
  9382 5494 C8				iny
  9383 5495 AD FE A4			lda YN+1
  9384 5498			l_1757
  9385 5498 91 84			sta (:bp2),y
  9386 549A			l_1769
  9387 549A 4C A2 54			jmp l_1789
  9388 549D			l_15C4
  9389
  9390 				; optimize OK (service.pas), line = 1594
  9391
  9392 549D A9 02			lda #$02
  9393 549F 20 F4 26			jsr FATAL_ERROR
  9394 54A2			l_1789
  9395
  9396 				; optimize OK (service.pas), line = 1597
  9397
  9398 54A2 AC E2 A4 84 84 AC + 	mwy X1 :bp2
  9399 54AC A0 00			ldy #$00
  9400 54AE B1 84			lda (:bp2),y
  9401 54B0 38 E9 10			sub #$10
  9402 54B3 91 84			sta (:bp2),y
  9403 54B5 C8				iny
  9404 54B6 B1 84			lda (:bp2),y
  9405 54B8 E9 00			sbc #$00
  9406 54BA 91 84			sta (:bp2),y
  9407
  9408 				; optimize OK (service.pas), line = 1598
  9409
  9410 54BC AC E4 A4 84 84 AC + 	mwy Y1 :bp2
  9411 54C6 A0 00			ldy #$00
  9412 54C8 B1 84			lda (:bp2),y
  9413 54CA 38 E9 18			sub #$18
  9414 54CD 91 84			sta (:bp2),y
  9415 54CF C8				iny
  9416 54D0 B1 84			lda (:bp2),y
  9417 54D2 E9 00			sbc #$00
  9418 54D4 91 84			sta (:bp2),y
  9419
  9420 				; optimize OK (service.pas), line = 1599
  9421
  9422 54D6 AC E6 A4 84 84 AC + 	mwy X2 :bp2
  9423 54E0 A0 00			ldy #$00
  9424 54E2 B1 84			lda (:bp2),y
  9425 54E4 38 E9 10			sub #$10
  9426 54E7 91 84			sta (:bp2),y
  9427 54E9 C8				iny
  9428 54EA B1 84			lda (:bp2),y
  9429 54EC E9 00			sbc #$00
  9430 54EE 91 84			sta (:bp2),y
  9431
  9432 				; optimize OK (service.pas), line = 1600
  9433
  9434 54F0 AC E8 A4 84 84 AC + 	mwy Y2 :bp2
  9435 54FA A0 00			ldy #$00
  9436 54FC B1 84			lda (:bp2),y
  9437 54FE 38 E9 18			sub #$18
  9438 5501 91 84			sta (:bp2),y
  9439 5503 C8				iny
  9440 5504 B1 84			lda (:bp2),y
  9441 5506 E9 00			sbc #$00
  9442 5508 91 84			sta (:bp2),y
  9443
  9444 				; optimize OK (service.pas), line = 1603
  9445
  9446 550A AC E2 A4 84 84 AC + 	mwy X1 :bp2
  9447 5514 A0 00			ldy #$00
  9448 5516 B1 84			lda (:bp2),y
  9449 5518 8D 13 A4			sta MAX.B
  9450 551B C8				iny
  9451 551C B1 84			lda (:bp2),y
  9452 551E 8D 14 A4			sta MAX.B+1
  9453 5521 A9 00			lda #$00
  9454 5523 8D 11 A4			sta MAX.A
  9455 5526 8D 12 A4			sta MAX.A+1
  9456 5529 20 9E 26			jsr MAX
  9457 552C A9 CF			lda #$CF
  9458 552E 8D 17 A4			sta MIN.A
  9459 5531 A9 00			lda #$00
  9460 5533 8D 18 A4			sta MIN.A+1
  9461 5536 AD 15 A4			lda MAX.RESULT
  9462 5539 8D 19 A4			sta MIN.B
  9463 553C AD 16 A4			lda MAX.RESULT+1
  9464 553F 8D 1A A4			sta MIN.B+1
  9465 5542 20 C9 26			jsr MIN
  9466 5545 AC E2 A4 84 84 AC + 	mwy X1 :bp2
  9467 554F A0 00			ldy #$00
  9468 5551 AD 1B A4			lda MIN.RESULT
  9469 5554 91 84			sta (:bp2),y
  9470 5556 C8				iny
  9471 5557 AD 1C A4			lda MIN.RESULT+1
  9472 555A 91 84			sta (:bp2),y
  9473
  9474 				; optimize OK (service.pas), line = 1604
  9475
  9476 555C AC E6 A4 84 84 AC + 	mwy X2 :bp2
  9477 5566 A0 00			ldy #$00
  9478 5568 B1 84			lda (:bp2),y
  9479 556A 8D 13 A4			sta MAX.B
  9480 556D C8				iny
  9481 556E B1 84			lda (:bp2),y
  9482 5570 8D 14 A4			sta MAX.B+1
  9483 5573 A9 00			lda #$00
  9484 5575 8D 11 A4			sta MAX.A
  9485 5578 8D 12 A4			sta MAX.A+1
  9486 557B 20 9E 26			jsr MAX
  9487 557E A9 CF			lda #$CF
  9488 5580 8D 17 A4			sta MIN.A
  9489 5583 A9 00			lda #$00
  9490 5585 8D 18 A4			sta MIN.A+1
  9491 5588 AD 15 A4			lda MAX.RESULT
  9492 558B 8D 19 A4			sta MIN.B
  9493 558E AD 16 A4			lda MAX.RESULT+1
  9494 5591 8D 1A A4			sta MIN.B+1
  9495 5594 20 C9 26			jsr MIN
  9496 5597 AC E6 A4 84 84 AC + 	mwy X2 :bp2
  9497 55A1 A0 00			ldy #$00
  9498 55A3 AD 1B A4			lda MIN.RESULT
  9499 55A6 91 84			sta (:bp2),y
  9500 55A8 C8				iny
  9501 55A9 AD 1C A4			lda MIN.RESULT+1
  9502 55AC 91 84			sta (:bp2),y
  9503
  9504 				; optimize OK (service.pas), line = 1611
  9505
  9506 55AE AD 0B A5			lda COLLISION
  9507 55B1 8D EA A4			sta RESULT
  9508 55B4			@exit
  9509
  9510 				; ------------------------------------------------------------
  9511
  9512 = A4E2			X1	= DATAORIGIN+$0AC6
  9513 = A4E4			Y1	= DATAORIGIN+$0AC8
  9514 = A4E6			X2	= DATAORIGIN+$0ACA
  9515 = A4E8			Y2	= DATAORIGIN+$0ACC
  9516 = A4EA			RESULT	= DATAORIGIN+$0ACE
  9517 = A4EB			X	= DATAORIGIN+$0ACF
  9518 = A4ED			Y	= DATAORIGIN+$0AD1
  9519 = A4EF			XK	= DATAORIGIN+$0AD3
  9520 = A4F1			YK	= DATAORIGIN+$0AD5
  9521 = A4F3			XJ	= DATAORIGIN+$0AD7
  9522 = A4F5			YJ	= DATAORIGIN+$0AD9
  9523 = A4F7			XH	= DATAORIGIN+$0ADB
  9524 = A4F9			YH	= DATAORIGIN+$0ADD
  9525 = A4FB			XN	= DATAORIGIN+$0ADF
  9526 = A4FD			YN	= DATAORIGIN+$0AE1
  9527 = A4FF			XP1	= DATAORIGIN+$0AE3
  9528 = A501			YP1	= DATAORIGIN+$0AE5
  9529 = A503			XP2	= DATAORIGIN+$0AE7
  9530 = A505			YP2	= DATAORIGIN+$0AE9
  9531 = A507			XP	= DATAORIGIN+$0AEB
  9532 = A509			YP	= DATAORIGIN+$0AED
  9533 = A50B			COLLISION	= DATAORIGIN+$0AEF
  9534
  9535 = A4E2			@VarData	= X1
  9536 = 0029			@VarDataSize	= 41
  9537
  9538 55B4 60				rts						; ret
  9539 				.endl
  9540
  9541 55B5			.local	SHOOT_BLOCK					; PROCEDURE
  9542
  9543 				; optimize OK (service.pas), line = 1622
  9544
  9545 55B5 AD 0D A5			lda XB+1
  9546 55B8 10 03 4C CE 57		jmi l_17DD
  9547 55BD AD 0C A5			lda XB
  9548 55C0 C9 0D			cmp #$0D
  9549 55C2 AD 0D A5			lda XB+1
  9550 55C5 E9 00			sbc #$00
  9551 55C7 50 02			svc
  9552 55C9 49 80			eor #$80
  9553 55CB 30 03 4C CE 57		jpl l_17DD
  9554 55D0 AD 0F A5			lda YB+1
  9555 55D3 10 03 4C CE 57		jmi l_17DD
  9556 55D8 AD 0E A5			lda YB
  9557 55DB C9 0F			cmp #$0F
  9558 55DD AD 0F A5			lda YB+1
  9559 55E0 E9 00			sbc #$00
  9560 55E2 50 02			svc
  9561 55E4 49 80			eor #$80
  9562 55E6 30 03 4C CE 57		jpl l_17DD
  9563
  9564 				; optimize OK (service.pas), line = 1625
  9565
  9566 55EB A9 00			lda #$00
  9567 55ED 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  9568 55EF AD 0E A5			lda YB
  9569 55F2 0A				asl @
  9570 55F3 26 B0			rol :STACKORIGIN+STACKWIDTH+10
  9571 55F5 0A				asl @
  9572 55F6 26 B0			rol :STACKORIGIN+STACKWIDTH+10
  9573 55F8 0A				asl @
  9574 55F9 0A				asl @
  9575 55FA 18 6D 0C A5			add XB
  9576 55FE 8D 14 A5			sta I
  9577
  9578 				; optimize OK (service.pas), line = 1627
  9579
  9580 5601 A8				tay
  9581 5602 B9 00 DB			lda adr.WALL,y
  9582 5605 D0 03 4C CE 57		jeq l_1801
  9583
  9584 				; optimize OK (service.pas), line = 1629
  9585
  9586 560A C9 0A			cmp #$0A
  9587 560C 90 03 4C 44 57		jcs l_1817
  9588
  9589 				; optimize OK (service.pas), line = 1631
  9590
  9591 5611 AD 0C A5			lda XB
  9592 5614 8D C0 A4			sta REMOVE_BLOCK.XA
  9593 5617 AD 0E A5			lda YB
  9594 561A 8D C1 A4			sta REMOVE_BLOCK.YA
  9595 561D 20 CC 40			jsr REMOVE_BLOCK
  9596
  9597 				; optimize FAIL (0, service.pas), line = 1632
  9598
  9599 5620 CE 9C 9B			dec REMAIN_BLK
  9600
  9601 				; optimize OK (service.pas), line = 1636
  9602
  9603 5623 AD B9 9B			lda CUR_PLAYER
  9604 5626 0A				asl @
  9605 5627 0A				asl @
  9606 5628 85 9F			sta :STACKORIGIN+9
  9607 562A AC 14 A5			ldy I
  9608 562D B9 00 DB			lda adr.WALL,y
  9609 5630 0A				asl @
  9610 5631 A8				tay
  9611 5632 B9 57 10			lda adr.SCORE_WALL,y
  9612 5635 85 A0			sta :STACKORIGIN+10
  9613 5637 B9 58 10			lda adr.SCORE_WALL+1,y
  9614 563A 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  9615 563C A4 9F			ldy :STACKORIGIN+9
  9616 563E B9 9E 9B			lda adr.SCORE.PLAYER,y
  9617 5641 18 65 A0			add :STACKORIGIN+10
  9618 5644 99 9E 9B			sta adr.SCORE.PLAYER,y
  9619 5647 B9 9F 9B			lda adr.SCORE.PLAYER+1,y
  9620 564A 65 B0			adc :STACKORIGIN+STACKWIDTH+10
  9621 564C 99 9F 9B			sta adr.SCORE.PLAYER+1,y
  9622 564F B9 A0 9B			lda adr.SCORE.PLAYER+2,y
  9623 5652 69 00			adc #$00
  9624 5654 99 A0 9B			sta adr.SCORE.PLAYER+2,y
  9625 5657 B9 A1 9B			lda adr.SCORE.PLAYER+3,y
  9626 565A 69 00			adc #$00
  9627 565C 99 A1 9B			sta adr.SCORE.PLAYER+3,y
  9628
  9629 				; optimize OK (service.pas), line = 1638
  9630
  9631 565F A9 2C			lda #$2C
  9632 5661 8D 62 9A			sta SYSTEM.RANDOM.@010184000.RANGE
  9633 5664 A9 01			lda #$01
  9634 5666 8D 63 9A			sta SYSTEM.RANDOM.@010184000.RANGE+1
  9635 5669 20 0A 24			jsr SYSTEM.RANDOM.@010184000
  9636 566C AD C9 9B			lda LETT.INCOMING
  9637 566F 18 6D 64 9A			add SYSTEM.RANDOM.@010184000.RESULT
  9638 5673 8D C9 9B			sta LETT.INCOMING
  9639 5676 AD CA 9B			lda LETT.INCOMING+1
  9640 5679 6D 65 9A			adc SYSTEM.RANDOM.@010184000.RESULT+1
  9641 567C 8D CA 9B			sta LETT.INCOMING+1
  9642
  9643 				; optimize OK (service.pas), line = 1640
  9644
  9645 567F AD 0C A5			lda XB
  9646 5682 85 9F			sta :STACKORIGIN+9
  9647 5684 A0 00			ldy #$00
  9648 5686 AD 0D A5			lda XB+1
  9649 5689 10 01			spl
  9650 568B 88				dey
  9651 568C 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  9652 568E 84 BF			sty :STACKORIGIN+STACKWIDTH*2+9
  9653 5690 84 CF			sty :STACKORIGIN+STACKWIDTH*3+9
  9654 5692 06 9F			asl :STACKORIGIN+9
  9655 5694 26 AF			rol :STACKORIGIN+STACKWIDTH+9
  9656 5696 26 BF			rol :STACKORIGIN+STACKWIDTH*2+9
  9657 5698 26 CF			rol :STACKORIGIN+STACKWIDTH*3+9
  9658 569A 06 9F			asl :STACKORIGIN+9
  9659 569C 26 AF			rol :STACKORIGIN+STACKWIDTH+9
  9660 569E 06 9F			asl :STACKORIGIN+9
  9661 56A0 26 AF			rol :STACKORIGIN+STACKWIDTH+9
  9662 56A2 06 9F			asl :STACKORIGIN+9
  9663 56A4 26 AF			rol :STACKORIGIN+STACKWIDTH+9
  9664 56A6 A5 9F			lda :STACKORIGIN+9
  9665 56A8 18 69 09			add #$09
  9666 56AB 8D CB 9B			sta LETT.NEXTX
  9667 56AE A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  9668 56B0 69 00			adc #$00
  9669 56B2 8D CC 9B			sta LETT.NEXTX+1
  9670
  9671 				; optimize OK (service.pas), line = 1641
  9672
  9673 56B5 AD 0E A5			lda YB
  9674 56B8 85 9F			sta :STACKORIGIN+9
  9675 56BA A0 00			ldy #$00
  9676 56BC AD 0F A5			lda YB+1
  9677 56BF 10 01			spl
  9678 56C1 88				dey
  9679 56C2 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  9680 56C4 84 BF			sty :STACKORIGIN+STACKWIDTH*2+9
  9681 56C6 84 CF			sty :STACKORIGIN+STACKWIDTH*3+9
  9682 56C8 A5 9F			lda :STACKORIGIN+9
  9683 56CA 18 69 01			add #$01
  9684 56CD 85 9F			sta :STACKORIGIN+9
  9685 56CF A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  9686 56D1 69 00			adc #$00
  9687 56D3 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  9688 56D5 A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
  9689 56D7 69 00			adc #$00
  9690 56D9 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
  9691 56DB A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
  9692 56DD 69 00			adc #$00
  9693 56DF 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
  9694 56E1 06 9F			asl :STACKORIGIN+9
  9695 56E3 26 AF			rol :STACKORIGIN+STACKWIDTH+9
  9696 56E5 06 9F			asl :STACKORIGIN+9
  9697 56E7 26 AF			rol :STACKORIGIN+STACKWIDTH+9
  9698 56E9 06 9F			asl :STACKORIGIN+9
  9699 56EB 26 AF			rol :STACKORIGIN+STACKWIDTH+9
  9700 56ED A5 9F			lda :STACKORIGIN+9
  9701 56EF 18 69 16			add #$16
  9702 56F2 8D CD 9B			sta LETT.NEXTY
  9703 56F5 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  9704 56F7 69 00			adc #$00
  9705 56F9 8D CE 9B			sta LETT.NEXTY+1
  9706
  9707 				; optimize FAIL ('RANDOM_LETTER_DROP', service.pas), line = 1642
  9708
  9709 56FC 20 4B 29			jsr RANDOM_LETTER_DROP
  9710 56FF AD 31 A4			lda RANDOM_LETTER_DROP.RESULT
  9711 5702 8D CF 9B			sta LETT.NEXTTYPE
  9712 5705 AD 32 A4			lda RANDOM_LETTER_DROP.RESULT+1
  9713 5708 8D D0 9B			sta LETT.NEXTTYPE+1
  9714
  9715 				; optimize OK (service.pas), line = 1644
  9716
  9717 570B AC 14 A5			ldy I
  9718 570E A9 00			lda #$00
  9719 5710 99 00 DB			sta adr.WALL,y
  9720
  9721 				; optimize OK (service.pas), line = 1645
  9722
  9723 5713 A9 B8			lda #$B8
  9724 5715 8D CB 9A			sta BALL_BLOCK_SOUND.A
  9725 5718 A9 01			lda #$01
  9726 571A 8D CC 9A			sta BALL_BLOCK_SOUND.A+1
  9727 571D A9 03			lda #$03
  9728 571F 8D CD 9A			sta BALL_BLOCK_SOUND.B
  9729 5722 A9 00			lda #$00
  9730 5724 8D CE 9A			sta BALL_BLOCK_SOUND.B+1
  9731 5727 20 A5 24			jsr BALL_BLOCK_SOUND
  9732
  9733 				; optimize OK (service.pas), line = 1646
  9734
  9735 572A AC 10 A5 84 84 AC + 	mwy BALL :bp2
  9736 5734 A0 14			ldy #BALL.SBD-DATAORIGIN
  9737 5736 A9 00			lda #$00
  9738 5738 91 84			sta (:bp2),y
  9739 573A C8				iny
  9740 573B 91 84			sta (:bp2),y
  9741
  9742 				; optimize OK (service.pas), line = 1647
  9743
  9744 573D A0 16			ldy #BALL.BRWHIT-DATAORIGIN
  9745 573F 91 84			sta (:bp2),y
  9746 5741 4C CE 57			jmp l_186B
  9747 5744			l_1817
  9748
  9749 				; optimize OK (service.pas), line = 1652
  9750
  9751 5744 AC 14 A5			ldy I
  9752 5747 B9 00 DB			lda adr.WALL,y
  9753 574A 29 0F			and #$0F
  9754 574C C9 09			cmp #$09
  9755 574E D0 45			jne l_1884
  9756
  9757 				; optimize OK (service.pas), line = 1654
  9758
  9759 5750 AC 10 A5 84 84 AC + 	mwy BALL :bp2
  9760 575A A0 16			ldy #BALL.BRWHIT-DATAORIGIN
  9761 575C A9 00			lda #$00
  9762 575E 91 84			sta (:bp2),y
  9763
  9764 				; optimize OK (service.pas), line = 1655
  9765
  9766 5760 AC 14 A5			ldy I
  9767 5763 B9 00 DB			lda adr.WALL,y
  9768 5766 38 E9 10			sub #$10
  9769 5769 99 00 DB			sta adr.WALL,y
  9770
  9771 				; optimize OK (service.pas), line = 1657
  9772
  9773 576C A9 72			lda #$72
  9774 576E 8D CB 9A			sta BALL_BLOCK_SOUND.A
  9775 5771 A9 01			lda #$01
  9776 5773 8D CC 9A			sta BALL_BLOCK_SOUND.A+1
  9777 5776 A9 04			lda #$04
  9778 5778 8D CD 9A			sta BALL_BLOCK_SOUND.B
  9779 577B A9 00			lda #$00
  9780 577D 8D CE 9A			sta BALL_BLOCK_SOUND.B+1
  9781 5780 20 A5 24			jsr BALL_BLOCK_SOUND
  9782
  9783 				; optimize OK (service.pas), line = 1658
  9784
  9785 5783 AD 0C A5			lda XB
  9786 5786 8D 2F A4			sta SHINE.XB
  9787 5789 AD 0E A5			lda YB
  9788 578C 8D 30 A4			sta SHINE.YB
  9789 578F 20 0F 29			jsr SHINE
  9790 5792 4C CE 57			jmp l_189E
  9791 5795			l_1884
  9792
  9793 				; optimize OK (service.pas), line = 1662
  9794
  9795 5795 AC 10 A5 84 84 AC + 	mwy BALL :bp2
  9796 579F A0 16			ldy #BALL.BRWHIT-DATAORIGIN
  9797 57A1 B1 84			lda (:bp2),y
  9798 57A3 18 69 01			add #$01
  9799 57A6 91 84			sta (:bp2),y
  9800
  9801 				; optimize OK (service.pas), line = 1663
  9802
  9803 57A8 AD 0C A5			lda XB
  9804 57AB 8D 2F A4			sta SHINE.XB
  9805 57AE AD 0E A5			lda YB
  9806 57B1 8D 30 A4			sta SHINE.YB
  9807 57B4 20 0F 29			jsr SHINE
  9808
  9809 				; optimize OK (service.pas), line = 1665
  9810
  9811 57B7 A9 C8			lda #$C8
  9812 57B9 8D CB 9A			sta BALL_BLOCK_SOUND.A
  9813 57BC A9 00			lda #$00
  9814 57BE 8D CC 9A			sta BALL_BLOCK_SOUND.A+1
  9815 57C1 A9 07			lda #$07
  9816 57C3 8D CD 9A			sta BALL_BLOCK_SOUND.B
  9817 57C6 A9 00			lda #$00
  9818 57C8 8D CE 9A			sta BALL_BLOCK_SOUND.B+1
  9819 57CB 20 A5 24			jsr BALL_BLOCK_SOUND
  9820 57CE			l_189E
  9821 57CE			l_186B
  9822 57CE			l_1801
  9823 57CE			l_17DD
  9824
  9825 				; ------------------------------------------------------------
  9826
  9827 = A50C			XB	= DATAORIGIN+$0AF0
  9828 = A50E			YB	= DATAORIGIN+$0AF2
  9829 = A510			BALL	= DATAORIGIN+$0AF4
  9830 = 9A1C			BALL.X	= DATAORIGIN+$0000
  9831 = 9A1E			BALL.Y	= DATAORIGIN+$0002
  9832 = 9A20			BALL.FINEX	= DATAORIGIN+$0004
  9833 = 9A22			BALL.FINEY	= DATAORIGIN+$0006
  9834 = 9A24			BALL.OLDX	= DATAORIGIN+$0008
  9835 = 9A26			BALL.OLDY	= DATAORIGIN+$000A
  9836 = 9A28			BALL.SPEED	= DATAORIGIN+$000C
  9837 = 9A2A			BALL.FINESPEED	= DATAORIGIN+$000E
  9838 = 9A2C			BALL.SPEEDX	= DATAORIGIN+$0010
  9839 = 9A2E			BALL.SPEEDY	= DATAORIGIN+$0012
  9840 = 9A30			BALL.SBD	= DATAORIGIN+$0014
  9841 = 9A32			BALL.BRWHIT	= DATAORIGIN+$0016
  9842 = 9A33			BALL.INPLAY	= DATAORIGIN+$0017
  9843 = 9A34			BALL.LAUNCH	= DATAORIGIN+$0018
  9844 = 9A35			BALL.ONVAUS	= DATAORIGIN+$0019
  9845 = 9A36			BALL.STM	= DATAORIGIN+$001A
  9846 = A514			I	= DATAORIGIN+$0AF8
  9847
  9848 = A50C			@VarData	= XB
  9849 = 0007			@VarDataSize	= 7
  9850
  9851 57CE			@exit
  9852 					.ifdef @new
  9853 					lda <@VarData
  9854 					sta :ztmp
  9855 					lda >@VarData
  9856 					ldy #@VarDataSize-1
  9857 					jmp @FreeMem
  9858 					els
  9859 57CE 60				rts						; ret
  9860 					eif
  9861 				.endl
  9862
  9863 57CF			.local	SHOOT_BLOCK_WITH_FIRE				; PROCEDURE
  9864
  9865 				; optimize OK (service.pas), line = 1676
  9866
  9867 57CF AD 16 A5			lda XB+1
  9868 57D2 10 03 4C F1 58		jmi l_18E1
  9869 57D7 AD 15 A5			lda XB
  9870 57DA C9 0D			cmp #$0D
  9871 57DC AD 16 A5			lda XB+1
  9872 57DF E9 00			sbc #$00
  9873 57E1 50 02			svc
  9874 57E3 49 80			eor #$80
  9875 57E5 30 03 4C F1 58		jpl l_18E1
  9876 57EA AD 18 A5			lda YB+1
  9877 57ED 10 03 4C F1 58		jmi l_18E1
  9878 57F2 AD 17 A5			lda YB
  9879 57F5 C9 0F			cmp #$0F
  9880 57F7 AD 18 A5			lda YB+1
  9881 57FA E9 00			sbc #$00
  9882 57FC 50 02			svc
  9883 57FE 49 80			eor #$80
  9884 5800 30 03 4C F1 58		jpl l_18E1
  9885
  9886 				; optimize OK (service.pas), line = 1679
  9887
  9888 5805 A9 00			lda #$00
  9889 5807 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  9890 5809 AD 17 A5			lda YB
  9891 580C 0A				asl @
  9892 580D 26 B0			rol :STACKORIGIN+STACKWIDTH+10
  9893 580F 0A				asl @
  9894 5810 26 B0			rol :STACKORIGIN+STACKWIDTH+10
  9895 5812 0A				asl @
  9896 5813 0A				asl @
  9897 5814 18 6D 15 A5			add XB
  9898 5818 8D 19 A5			sta I
  9899
  9900 				; optimize OK (service.pas), line = 1681
  9901
  9902 581B A8				tay
  9903 581C B9 00 DB			lda adr.WALL,y
  9904 581F D0 03 4C F1 58		jeq l_1905
  9905
  9906 				; optimize OK (service.pas), line = 1683
  9907
  9908 5824 C9 0A			cmp #$0A
  9909 5826 B0 65			jcs l_191B
  9910
  9911 				; optimize OK (service.pas), line = 1685
  9912
  9913 5828 AD 15 A5			lda XB
  9914 582B 8D C0 A4			sta REMOVE_BLOCK.XA
  9915 582E AD 17 A5			lda YB
  9916 5831 8D C1 A4			sta REMOVE_BLOCK.YA
  9917 5834 20 CC 40			jsr REMOVE_BLOCK
  9918
  9919 				; optimize FAIL (0, service.pas), line = 1686
  9920
  9921 5837 CE 9C 9B			dec REMAIN_BLK
  9922
  9923 				; optimize OK (service.pas), line = 1687
  9924
  9925 583A AD B9 9B			lda CUR_PLAYER
  9926 583D 0A				asl @
  9927 583E 0A				asl @
  9928 583F 85 9F			sta :STACKORIGIN+9
  9929 5841 AC 19 A5			ldy I
  9930 5844 B9 00 DB			lda adr.WALL,y
  9931 5847 0A				asl @
  9932 5848 A8				tay
  9933 5849 B9 57 10			lda adr.SCORE_WALL,y
  9934 584C 85 A0			sta :STACKORIGIN+10
  9935 584E B9 58 10			lda adr.SCORE_WALL+1,y
  9936 5851 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  9937 5853 A4 9F			ldy :STACKORIGIN+9
  9938 5855 B9 9E 9B			lda adr.SCORE.PLAYER,y
  9939 5858 18 65 A0			add :STACKORIGIN+10
  9940 585B 99 9E 9B			sta adr.SCORE.PLAYER,y
  9941 585E B9 9F 9B			lda adr.SCORE.PLAYER+1,y
  9942 5861 65 B0			adc :STACKORIGIN+STACKWIDTH+10
  9943 5863 99 9F 9B			sta adr.SCORE.PLAYER+1,y
  9944 5866 B9 A0 9B			lda adr.SCORE.PLAYER+2,y
  9945 5869 69 00			adc #$00
  9946 586B 99 A0 9B			sta adr.SCORE.PLAYER+2,y
  9947 586E B9 A1 9B			lda adr.SCORE.PLAYER+3,y
  9948 5871 69 00			adc #$00
  9949 5873 99 A1 9B			sta adr.SCORE.PLAYER+3,y
  9950
  9951 				; optimize OK (service.pas), line = 1688
  9952
  9953 5876 AC 19 A5			ldy I
  9954 5879 A9 00			lda #$00
  9955 587B 99 00 DB			sta adr.WALL,y
  9956
  9957 				; optimize OK (service.pas), line = 1689
  9958
  9959 587E A9 B8			lda #$B8
  9960 5880 8D CB 9A			sta BALL_BLOCK_SOUND.A
  9961 5883 A9 01			lda #$01
  9962 5885 8D CC 9A			sta BALL_BLOCK_SOUND.A+1
  9963 5888 A9 03			lda #$03
  9964 588A 4C E6 58			jmp l_1943
  9965 588D			l_191B
  9966
  9967 				; optimize OK (service.pas), line = 1694
  9968
  9969 588D AC 19 A5			ldy I
  9970 5890 B9 00 DB			lda adr.WALL,y
  9971 5893 29 0F			and #$0F
  9972 5895 C9 09			cmp #$09
  9973 5897 D0 32			jne l_195C
  9974
  9975 				; optimize OK (service.pas), line = 1696
  9976
  9977 5899 B9 00 DB			lda adr.WALL,y
  9978 589C 38 E9 10			sub #$10
  9979 589F 99 00 DB			sta adr.WALL,y
  9980
  9981 				; optimize OK (service.pas), line = 1697
  9982
  9983 58A2 A9 72			lda #$72
  9984 58A4 8D CB 9A			sta BALL_BLOCK_SOUND.A
  9985 58A7 A9 01			lda #$01
  9986 58A9 8D CC 9A			sta BALL_BLOCK_SOUND.A+1
  9987 58AC A9 04			lda #$04
  9988 58AE 8D CD 9A			sta BALL_BLOCK_SOUND.B
  9989 58B1 A9 00			lda #$00
  9990 58B3 8D CE 9A			sta BALL_BLOCK_SOUND.B+1
  9991 58B6 20 A5 24			jsr BALL_BLOCK_SOUND
  9992
  9993 				; optimize OK (service.pas), line = 1698
  9994
  9995 58B9 AD 15 A5			lda XB
  9996 58BC 8D 2F A4			sta SHINE.XB
  9997 58BF AD 17 A5			lda YB
  9998 58C2 8D 30 A4			sta SHINE.YB
  9999 58C5 20 0F 29			jsr SHINE
 10000 58C8 4C F1 58			jmp l_1972
 10001 58CB			l_195C
 10002
 10003 				; optimize OK (service.pas), line = 1702
 10004
 10005 58CB AD 15 A5			lda XB
 10006 58CE 8D 2F A4			sta SHINE.XB
 10007 58D1 AD 17 A5			lda YB
 10008 58D4 8D 30 A4			sta SHINE.YB
 10009 58D7 20 0F 29			jsr SHINE
 10010
 10011 				; optimize OK (service.pas), line = 1703
 10012
 10013 58DA A9 C8			lda #$C8
 10014 58DC 8D CB 9A			sta BALL_BLOCK_SOUND.A
 10015 58DF A9 00			lda #$00
 10016 58E1 8D CC 9A			sta BALL_BLOCK_SOUND.A+1
 10017 58E4 A9 07			lda #$07
 10018 58E6			l_1943
 10019 58E6 8D CD 9A			sta BALL_BLOCK_SOUND.B
 10020 58E9 A9 00			lda #$00
 10021 58EB 8D CE 9A			sta BALL_BLOCK_SOUND.B+1
 10022 58EE 20 A5 24			jsr BALL_BLOCK_SOUND
 10023 58F1			l_1972
 10024 58F1			l_1905
 10025 58F1			l_18E1
 10026
 10027 				; ------------------------------------------------------------
 10028
 10029 = A515			XB	= DATAORIGIN+$0AF9
 10030 = A517			YB	= DATAORIGIN+$0AFB
 10031 = A519			I	= DATAORIGIN+$0AFD
 10032
 10033 = A515			@VarData	= XB
 10034 = 0005			@VarDataSize	= 5
 10035
 10036 58F1			@exit
 10037 					.ifdef @new
 10038 					lda <@VarData
 10039 					sta :ztmp
 10040 					lda >@VarData
 10041 					ldy #@VarDataSize-1
 10042 					jmp @FreeMem
 10043 					els
 10044 58F1 60				rts						; ret
 10045 					eif
 10046 				.endl
 10047
 10048 58F2			.local	BALL_HIT_BLOCK					; PROCEDURE
 10049
 10050 				; optimize OK (service.pas), line = 1735
 10051
 10052 58F2 A9 FF			lda #$FF
 10053 58F4 8D 46 A5			sta EMERGENCY
 10054
 10055 				; optimize OK (service.pas), line = 1737
 10056
 10057 58F7 AC 1A A5 84 84 AC + 	mwy BALL :bp2
 10058 5901 A0 00			ldy #BALL.X-DATAORIGIN
 10059 5903 B1 84			lda (:bp2),y
 10060 5905 38 E9 09			sub #$09
 10061 5908 8D 32 A5			sta NX
 10062 590B C8				iny
 10063 590C B1 84			lda (:bp2),y
 10064 590E E9 00			sbc #$00
 10065 5910 8D 33 A5			sta NX+1
 10066
 10067 				; optimize OK (service.pas), line = 1738
 10068
 10069 5913 A0 02			ldy #BALL.Y-DATAORIGIN
 10070 5915 B1 84			lda (:bp2),y
 10071 5917 38 E9 16			sub #$16
 10072 591A 8D 34 A5			sta NY
 10073 591D C8				iny
 10074 591E B1 84			lda (:bp2),y
 10075 5920 E9 00			sbc #$00
 10076 5922 8D 35 A5			sta NY+1
 10077
 10078 				; optimize OK (service.pas), line = 1741
 10079
 10080 5925 A0 08			ldy #BALL.OLDX-DATAORIGIN
 10081 5927 B1 84			lda (:bp2),y
 10082 5929 38 E9 09			sub #$09
 10083 592C 8D 26 A5			sta OX
 10084 592F C8				iny
 10085 5930 B1 84			lda (:bp2),y
 10086 5932 E9 00			sbc #$00
 10087 5934 8D 27 A5			sta OX+1
 10088
 10089 				; optimize OK (service.pas), line = 1742
 10090
 10091 5937 A0 0A			ldy #BALL.OLDY-DATAORIGIN
 10092 5939 B1 84			lda (:bp2),y
 10093 593B 38 E9 16			sub #$16
 10094 593E 8D 28 A5			sta OY
 10095 5941 C8				iny
 10096 5942 B1 84			lda (:bp2),y
 10097 5944 E9 00			sbc #$00
 10098 5946 8D 29 A5			sta OY+1
 10099
 10100 				; optimize OK (service.pas), line = 1744
 10101
 10102 5949 AD 32 A5			lda NX
 10103 594C 85 9F			sta :STACKORIGIN+9
 10104 594E A0 00			ldy #$00
 10105 5950 AD 33 A5			lda NX+1
 10106 5953 10 01			spl
 10107 5955 88				dey
 10108 5956 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 10109 5958 84 BF			sty :STACKORIGIN+STACKWIDTH*2+9
 10110 595A 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
 10111 595C 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 10112 595E 66 9F			ror :STACKORIGIN+9
 10113 5960 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
 10114 5962 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 10115 5964 66 9F			ror :STACKORIGIN+9
 10116 5966 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
 10117 5968 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 10118 596A 66 9F			ror :STACKORIGIN+9
 10119 596C 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
 10120 596E 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 10121 5970 66 9F			ror :STACKORIGIN+9
 10122 5972 A5 9F			lda :STACKORIGIN+9
 10123 5974 8D 22 A5			sta XB
 10124 5977 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 10125 5979 8D 23 A5			sta XB+1
 10126
 10127 				; optimize OK (service.pas), line = 1745
 10128
 10129 597C AD 34 A5			lda NY
 10130 597F 85 9F			sta :STACKORIGIN+9
 10131 5981 A0 00			ldy #$00
 10132 5983 AD 35 A5			lda NY+1
 10133 5986 10 01			spl
 10134 5988 88				dey
 10135 5989 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 10136 598B 84 BF			sty :STACKORIGIN+STACKWIDTH*2+9
 10137 598D 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
 10138 598F 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 10139 5991 66 9F			ror :STACKORIGIN+9
 10140 5993 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
 10141 5995 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 10142 5997 66 9F			ror :STACKORIGIN+9
 10143 5999 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
 10144 599B 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 10145 599D 66 9F			ror :STACKORIGIN+9
 10146 599F A5 9F			lda :STACKORIGIN+9
 10147 59A1 8D 24 A5			sta YB
 10148 59A4 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 10149 59A6 8D 25 A5			sta YB+1
 10150
 10151 				; optimize OK (service.pas), line = 1749
 10152
 10153 59A9 AD 24 A5			lda YB
 10154 59AC 0A				asl @
 10155 59AD 0A				asl @
 10156 59AE 0A				asl @
 10157 59AF 0A				asl @
 10158 59B0 18 6D 22 A5			add XB
 10159 59B4 A8				tay
 10160 59B5 B9 00 DB			lda adr.WALL,y
 10161 59B8 D0 03 4C B7 6A		jeq l_19D9
 10162
 10163 				; optimize OK (service.pas), line = 1751
 10164
 10165 59BD A9 26			lda <OX
 10166 59BF 8D E2 A4			sta SPLIT_LINE.X1
 10167 59C2 A9 A5			lda >OX
 10168 59C4 8D E3 A4			sta SPLIT_LINE.X1+1
 10169 59C7 A9 28			lda <OY
 10170 59C9 8D E4 A4			sta SPLIT_LINE.Y1
 10171 59CC A9 A5			lda >OY
 10172 59CE 8D E5 A4			sta SPLIT_LINE.Y1+1
 10173 59D1 A9 32			lda <NX
 10174 59D3 8D E6 A4			sta SPLIT_LINE.X2
 10175 59D6 A9 A5			lda >NX
 10176 59D8 8D E7 A4			sta SPLIT_LINE.X2+1
 10177 59DB A9 34			lda <NY
 10178 59DD 8D E8 A4			sta SPLIT_LINE.Y2
 10179 59E0 A9 A5			lda >NY
 10180 59E2 8D E9 A4			sta SPLIT_LINE.Y2+1
 10181 59E5 20 C7 4D			jsr SPLIT_LINE
 10182 59E8 AD EA A4			lda SPLIT_LINE.RESULT
 10183 59EB 8D 47 A5			sta COLLISION
 10184
 10185 				; optimize OK (service.pas), line = 1757
 10186
 10187 59EE C9 03			cmp #$03
 10188 59F0 F0 03 4C 46 5E		jne l_19F4
 10189
 10190 				; optimize OK (service.pas), line = 1759
 10191
 10192 59F5 AC 1A A5 84 84 AC + 	mwy BALL :bp2
 10193 59FF A0 08			ldy #BALL.OLDX-DATAORIGIN
 10194 5A01 B1 84			lda (:bp2),y
 10195 5A03 38 ED 26 A5			sub OX
 10196 5A07 85 9F			sta :STACKORIGIN+9
 10197 5A09 C8				iny
 10198 5A0A B1 84			lda (:bp2),y
 10199 5A0C ED 27 A5			sbc OX+1
 10200 5A0F 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 10201 5A11 A5 9F			lda :STACKORIGIN+9
 10202 5A13 38 E9 09			sub #$09
 10203 5A16 8D 2A A5			sta LX
 10204 5A19 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 10205 5A1B E9 00			sbc #$00
 10206 5A1D 8D 2B A5			sta LX+1
 10207
 10208 				; optimize OK (service.pas), line = 1760
 10209
 10210 5A20 A0 0A			ldy #BALL.OLDY-DATAORIGIN
 10211 5A22 B1 84			lda (:bp2),y
 10212 5A24 38 ED 28 A5			sub OY
 10213 5A28 85 9F			sta :STACKORIGIN+9
 10214 5A2A C8				iny
 10215 5A2B B1 84			lda (:bp2),y
 10216 5A2D ED 29 A5			sbc OY+1
 10217 5A30 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 10218 5A32 A5 9F			lda :STACKORIGIN+9
 10219 5A34 38 E9 16			sub #$16
 10220 5A37 8D 2C A5			sta LY
 10221 5A3A A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 10222 5A3C E9 00			sbc #$00
 10223 5A3E 8D 2D A5			sta LY+1
 10224
 10225 				; optimize OK (service.pas), line = 1762
 10226
 10227 5A41 A0 08			ldy #BALL.OLDX-DATAORIGIN
 10228 5A43 B1 84			lda (:bp2),y
 10229 5A45 38 ED 32 A5			sub NX
 10230 5A49 85 9F			sta :STACKORIGIN+9
 10231 5A4B C8				iny
 10232 5A4C B1 84			lda (:bp2),y
 10233 5A4E ED 33 A5			sbc NX+1
 10234 5A51 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 10235 5A53 A5 9F			lda :STACKORIGIN+9
 10236 5A55 38 E9 09			sub #$09
 10237 5A58 8D 2E A5			sta MX
 10238 5A5B A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 10239 5A5D E9 00			sbc #$00
 10240 5A5F 8D 2F A5			sta MX+1
 10241
 10242 				; optimize OK (service.pas), line = 1763
 10243
 10244 5A62 A0 0A			ldy #BALL.OLDY-DATAORIGIN
 10245 5A64 B1 84			lda (:bp2),y
 10246 5A66 38 ED 34 A5			sub NY
 10247 5A6A 85 9F			sta :STACKORIGIN+9
 10248 5A6C C8				iny
 10249 5A6D B1 84			lda (:bp2),y
 10250 5A6F ED 35 A5			sbc NY+1
 10251 5A72 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 10252 5A74 A5 9F			lda :STACKORIGIN+9
 10253 5A76 38 E9 16			sub #$16
 10254 5A79 8D 30 A5			sta MY
 10255 5A7C A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 10256 5A7E E9 00			sbc #$00
 10257 5A80 8D 31 A5			sta MY+1
 10258
 10259 				; optimize OK (service.pas), line = 1765
 10260
 10261 5A83 AD 2A A5			lda LX
 10262 5A86 85 8E			sta :ecx
 10263 5A88 85 86			sta :eax
 10264 5A8A AD 2B A5			lda LX+1
 10265 5A8D 85 8F			sta :ecx+1
 10266 5A8F 85 87			sta :eax+1
 10267 					.ifdef fmulinit
 10268 					fmulu_16
 10269 					els
 10270 5A91 20 FA 12			imulCX
 10271 					eif
 10272 5A94 A5 86			lda :eax
 10273 5A96 85 9F			sta :STACKORIGIN+9
 10274 5A98 A5 87			lda :eax+1
 10275 5A9A 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 10276 5A9C AD 2C A5			lda LY
 10277 5A9F 85 8E			sta :ecx
 10278 5AA1 85 86			sta :eax
 10279 5AA3 AD 2D A5			lda LY+1
 10280 5AA6 85 8F			sta :ecx+1
 10281 5AA8 85 87			sta :eax+1
 10282 					.ifdef fmulinit
 10283 					fmulu_16
 10284 					els
 10285 5AAA 20 FA 12			imulCX
 10286 					eif
 10287 5AAD A5 86			lda :eax
 10288 5AAF 18 65 9F			add :STACKORIGIN+9
 10289 5AB2 8D 36 A5			sta F1
 10290 5AB5 A5 87			lda :eax+1
 10291 5AB7 65 AF			adc :STACKORIGIN+STACKWIDTH+9
 10292 5AB9 8D 37 A5			sta F1+1
 10293
 10294 				; optimize OK (service.pas), line = 1766
 10295
 10296 5ABC AD 2E A5			lda MX
 10297 5ABF 85 8E			sta :ecx
 10298 5AC1 85 86			sta :eax
 10299 5AC3 AD 2F A5			lda MX+1
 10300 5AC6 85 8F			sta :ecx+1
 10301 5AC8 85 87			sta :eax+1
 10302 					.ifdef fmulinit
 10303 					fmulu_16
 10304 					els
 10305 5ACA 20 FA 12			imulCX
 10306 					eif
 10307 5ACD A5 86			lda :eax
 10308 5ACF 85 9F			sta :STACKORIGIN+9
 10309 5AD1 A5 87			lda :eax+1
 10310 5AD3 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 10311 5AD5 AD 30 A5			lda MY
 10312 5AD8 85 8E			sta :ecx
 10313 5ADA 85 86			sta :eax
 10314 5ADC AD 31 A5			lda MY+1
 10315 5ADF 85 8F			sta :ecx+1
 10316 5AE1 85 87			sta :eax+1
 10317 					.ifdef fmulinit
 10318 					fmulu_16
 10319 					els
 10320 5AE3 20 FA 12			imulCX
 10321 					eif
 10322 5AE6 A5 86			lda :eax
 10323 5AE8 18 65 9F			add :STACKORIGIN+9
 10324 5AEB 8D 38 A5			sta F2
 10325 5AEE A5 87			lda :eax+1
 10326 5AF0 65 AF			adc :STACKORIGIN+STACKWIDTH+9
 10327 5AF2 8D 39 A5			sta F2+1
 10328
 10329 				; optimize OK (service.pas), line = 1768
 10330
 10331 5AF5 AD 36 A5			lda F1
 10332 5AF8 CD 38 A5			cmp F2
 10333 5AFB AD 37 A5			lda F1+1
 10334 5AFE ED 39 A5			sbc F2+1
 10335 5B01 50 02			svc
 10336 5B03 49 80			eor #$80
 10337 5B05 30 03 4C A6 5C		jpl l_1A67
 10338
 10339 				; optimize OK (service.pas), line = 1774
 10340
 10341 5B0A AD 26 A5			lda OX
 10342 5B0D 85 A0			sta :STACKORIGIN+10
 10343 5B0F A0 00			ldy #$00
 10344 5B11 AD 27 A5			lda OX+1
 10345 5B14 10 01			spl
 10346 5B16 88				dey
 10347 5B17 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 10348 5B19 84 C0			sty :STACKORIGIN+STACKWIDTH*2+10
 10349 5B1B 46 C0			lsr :STACKORIGIN+STACKWIDTH*2+10
 10350 5B1D 66 B0			ror :STACKORIGIN+STACKWIDTH+10
 10351 5B1F 66 A0			ror :STACKORIGIN+10
 10352 5B21 46 C0			lsr :STACKORIGIN+STACKWIDTH*2+10
 10353 5B23 66 B0			ror :STACKORIGIN+STACKWIDTH+10
 10354 5B25 66 A0			ror :STACKORIGIN+10
 10355 5B27 46 C0			lsr :STACKORIGIN+STACKWIDTH*2+10
 10356 5B29 66 B0			ror :STACKORIGIN+STACKWIDTH+10
 10357 5B2B 66 A0			ror :STACKORIGIN+10
 10358 5B2D 46 C0			lsr :STACKORIGIN+STACKWIDTH*2+10
 10359 5B2F 66 B0			ror :STACKORIGIN+STACKWIDTH+10
 10360 5B31 66 A0			ror :STACKORIGIN+10
 10361 5B33 A5 A0			lda :STACKORIGIN+10
 10362 5B35 8D 11 A4			sta MAX.A
 10363 5B38 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
 10364 5B3A 8D 12 A4			sta MAX.A+1
 10365 5B3D A9 00			lda #$00
 10366 5B3F 8D 13 A4			sta MAX.B
 10367 5B42 8D 14 A4			sta MAX.B+1
 10368 5B45 20 9E 26			jsr MAX
 10369 5B48 A9 0C			lda #$0C
 10370 5B4A 8D 17 A4			sta MIN.A
 10371 5B4D A9 00			lda #$00
 10372 5B4F 8D 18 A4			sta MIN.A+1
 10373 5B52 AD 15 A4			lda MAX.RESULT
 10374 5B55 8D 19 A4			sta MIN.B
 10375 5B58 AD 16 A4			lda MAX.RESULT+1
 10376 5B5B 8D 1A A4			sta MIN.B+1
 10377 5B5E 20 C9 26			jsr MIN
 10378 5B61 AD 1B A4			lda MIN.RESULT
 10379 5B64 8D 22 A5			sta XB
 10380 5B67 AD 1C A4			lda MIN.RESULT+1
 10381 5B6A 8D 23 A5			sta XB+1
 10382
 10383 				; optimize OK (service.pas), line = 1775
 10384
 10385 5B6D AD 28 A5			lda OY
 10386 5B70 85 9F			sta :STACKORIGIN+9
 10387 5B72 A0 00			ldy #$00
 10388 5B74 AD 29 A5			lda OY+1
 10389 5B77 10 01			spl
 10390 5B79 88				dey
 10391 5B7A 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 10392 5B7C 84 BF			sty :STACKORIGIN+STACKWIDTH*2+9
 10393 5B7E 84 CF			sty :STACKORIGIN+STACKWIDTH*3+9
 10394 5B80 A5 9F			lda :STACKORIGIN+9
 10395 5B82 18 69 18			add #$18
 10396 5B85 85 9F			sta :STACKORIGIN+9
 10397 5B87 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 10398 5B89 69 00			adc #$00
 10399 5B8B 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 10400 5B8D A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
 10401 5B8F 69 00			adc #$00
 10402 5B91 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
 10403 5B93 A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
 10404 5B95 69 00			adc #$00
 10405 5B97 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
 10406 5B99 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
 10407 5B9B 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 10408 5B9D 66 9F			ror :STACKORIGIN+9
 10409 5B9F 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
 10410 5BA1 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 10411 5BA3 66 9F			ror :STACKORIGIN+9
 10412 5BA5 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
 10413 5BA7 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 10414 5BA9 66 9F			ror :STACKORIGIN+9
 10415 5BAB A5 9F			lda :STACKORIGIN+9
 10416 5BAD 38 E9 03			sub #$03
 10417 5BB0 8D 24 A5			sta YB
 10418 5BB3 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 10419 5BB5 E9 00			sbc #$00
 10420 5BB7 8D 25 A5			sta YB+1
 10421
 10422 				; optimize OK (service.pas), line = 1778
 10423
 10424 5BBA AD 24 A5			lda YB
 10425 5BBD 0A				asl @
 10426 5BBE 0A				asl @
 10427 5BBF 0A				asl @
 10428 5BC0 0A				asl @
 10429 5BC1 18 6D 22 A5			add XB
 10430 5BC5 A8				tay
 10431 5BC6 B9 00 DB			lda adr.WALL,y
 10432 5BC9 F0 03 4C 8B 5C		jne l_1AA3
 10433
 10434 				; optimize OK (service.pas), line = 1780
 10435
 10436 5BCE AD 32 A5			lda NX
 10437 5BD1 85 9F			sta :STACKORIGIN+9
 10438 5BD3 A0 00			ldy #$00
 10439 5BD5 AD 33 A5			lda NX+1
 10440 5BD8 10 01			spl
 10441 5BDA 88				dey
 10442 5BDB 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 10443 5BDD 84 BF			sty :STACKORIGIN+STACKWIDTH*2+9
 10444 5BDF 84 CF			sty :STACKORIGIN+STACKWIDTH*3+9
 10445 5BE1 46 CF			lsr :STACKORIGIN+STACKWIDTH*3+9
 10446 5BE3 66 BF			ror :STACKORIGIN+STACKWIDTH*2+9
 10447 5BE5 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 10448 5BE7 66 9F			ror :STACKORIGIN+9
 10449 5BE9 46 CF			lsr :STACKORIGIN+STACKWIDTH*3+9
 10450 5BEB 66 BF			ror :STACKORIGIN+STACKWIDTH*2+9
 10451 5BED 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 10452 5BEF 66 9F			ror :STACKORIGIN+9
 10453 5BF1 46 CF			lsr :STACKORIGIN+STACKWIDTH*3+9
 10454 5BF3 66 BF			ror :STACKORIGIN+STACKWIDTH*2+9
 10455 5BF5 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 10456 5BF7 66 9F			ror :STACKORIGIN+9
 10457 5BF9 46 CF			lsr :STACKORIGIN+STACKWIDTH*3+9
 10458 5BFB 66 BF			ror :STACKORIGIN+STACKWIDTH*2+9
 10459 5BFD 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 10460 5BFF 66 9F			ror :STACKORIGIN+9
 10461 5C01 A9 00			lda #$00
 10462 5C03 8D 11 A4			sta MAX.A
 10463 5C06 8D 12 A4			sta MAX.A+1
 10464 5C09 A5 9F			lda :STACKORIGIN+9
 10465 5C0B 8D 13 A4			sta MAX.B
 10466 5C0E A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 10467 5C10 8D 14 A4			sta MAX.B+1
 10468 5C13 20 9E 26			jsr MAX
 10469 5C16 A9 0C			lda #$0C
 10470 5C18 8D 17 A4			sta MIN.A
 10471 5C1B A9 00			lda #$00
 10472 5C1D 8D 18 A4			sta MIN.A+1
 10473 5C20 AD 15 A4			lda MAX.RESULT
 10474 5C23 8D 19 A4			sta MIN.B
 10475 5C26 AD 16 A4			lda MAX.RESULT+1
 10476 5C29 8D 1A A4			sta MIN.B+1
 10477 5C2C 20 C9 26			jsr MIN
 10478 5C2F AD 1B A4			lda MIN.RESULT
 10479 5C32 8D 22 A5			sta XB
 10480 5C35 AD 1C A4			lda MIN.RESULT+1
 10481 5C38 8D 23 A5			sta XB+1
 10482
 10483 				; optimize OK (service.pas), line = 1781
 10484
 10485 5C3B AD 34 A5			lda NY
 10486 5C3E 85 9F			sta :STACKORIGIN+9
 10487 5C40 A0 00			ldy #$00
 10488 5C42 AD 35 A5			lda NY+1
 10489 5C45 10 01			spl
 10490 5C47 88				dey
 10491 5C48 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 10492 5C4A 84 BF			sty :STACKORIGIN+STACKWIDTH*2+9
 10493 5C4C 84 CF			sty :STACKORIGIN+STACKWIDTH*3+9
 10494 5C4E A5 9F			lda :STACKORIGIN+9
 10495 5C50 18 69 18			add #$18
 10496 5C53 85 9F			sta :STACKORIGIN+9
 10497 5C55 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 10498 5C57 69 00			adc #$00
 10499 5C59 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 10500 5C5B A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
 10501 5C5D 69 00			adc #$00
 10502 5C5F 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
 10503 5C61 A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
 10504 5C63 69 00			adc #$00
 10505 5C65 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
 10506 5C67 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
 10507 5C69 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 10508 5C6B 66 9F			ror :STACKORIGIN+9
 10509 5C6D 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
 10510 5C6F 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 10511 5C71 66 9F			ror :STACKORIGIN+9
 10512 5C73 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
 10513 5C75 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 10514 5C77 66 9F			ror :STACKORIGIN+9
 10515 5C79 A5 9F			lda :STACKORIGIN+9
 10516 5C7B 38 E9 03			sub #$03
 10517 5C7E 8D 24 A5			sta YB
 10518 5C81 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 10519 5C83 E9 00			sbc #$00
 10520 5C85 8D 25 A5			sta YB+1
 10521 5C88 4C A3 5C			jmp l_1ACB
 10522 5C8B			l_1AA3
 10523
 10524 				; optimize OK (service.pas), line = 1785
 10525
 10526 5C8B AD 26 A5			lda OX
 10527 5C8E 8D 32 A5			sta NX
 10528 5C91 AD 27 A5			lda OX+1
 10529 5C94 8D 33 A5			sta NX+1
 10530
 10531 				; optimize OK (service.pas), line = 1786
 10532
 10533 5C97 AD 28 A5			lda OY
 10534 5C9A 8D 34 A5			sta NY
 10535 5C9D AD 29 A5			lda OY+1
 10536 5CA0 8D 35 A5			sta NY+1
 10537 5CA3			l_1ACB
 10538 5CA3 4C 46 5E			jmp l_1ADE
 10539 5CA6			l_1A67
 10540
 10541 				; optimize OK (service.pas), line = 1796
 10542
 10543 5CA6 AD 32 A5			lda NX
 10544 5CA9 85 9F			sta :STACKORIGIN+9
 10545 5CAB A0 00			ldy #$00
 10546 5CAD AD 33 A5			lda NX+1
 10547 5CB0 10 01			spl
 10548 5CB2 88				dey
 10549 5CB3 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 10550 5CB5 84 BF			sty :STACKORIGIN+STACKWIDTH*2+9
 10551 5CB7 84 CF			sty :STACKORIGIN+STACKWIDTH*3+9
 10552 5CB9 46 CF			lsr :STACKORIGIN+STACKWIDTH*3+9
 10553 5CBB 66 BF			ror :STACKORIGIN+STACKWIDTH*2+9
 10554 5CBD 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 10555 5CBF 66 9F			ror :STACKORIGIN+9
 10556 5CC1 46 CF			lsr :STACKORIGIN+STACKWIDTH*3+9
 10557 5CC3 66 BF			ror :STACKORIGIN+STACKWIDTH*2+9
 10558 5CC5 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 10559 5CC7 66 9F			ror :STACKORIGIN+9
 10560 5CC9 46 CF			lsr :STACKORIGIN+STACKWIDTH*3+9
 10561 5CCB 66 BF			ror :STACKORIGIN+STACKWIDTH*2+9
 10562 5CCD 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 10563 5CCF 66 9F			ror :STACKORIGIN+9
 10564 5CD1 46 CF			lsr :STACKORIGIN+STACKWIDTH*3+9
 10565 5CD3 66 BF			ror :STACKORIGIN+STACKWIDTH*2+9
 10566 5CD5 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 10567 5CD7 66 9F			ror :STACKORIGIN+9
 10568 5CD9 A9 00			lda #$00
 10569 5CDB 8D 11 A4			sta MAX.A
 10570 5CDE 8D 12 A4			sta MAX.A+1
 10571 5CE1 A5 9F			lda :STACKORIGIN+9
 10572 5CE3 8D 13 A4			sta MAX.B
 10573 5CE6 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 10574 5CE8 8D 14 A4			sta MAX.B+1
 10575 5CEB 20 9E 26			jsr MAX
 10576 5CEE A9 0C			lda #$0C
 10577 5CF0 8D 17 A4			sta MIN.A
 10578 5CF3 A9 00			lda #$00
 10579 5CF5 8D 18 A4			sta MIN.A+1
 10580 5CF8 AD 15 A4			lda MAX.RESULT
 10581 5CFB 8D 19 A4			sta MIN.B
 10582 5CFE AD 16 A4			lda MAX.RESULT+1
 10583 5D01 8D 1A A4			sta MIN.B+1
 10584 5D04 20 C9 26			jsr MIN
 10585 5D07 AD 1B A4			lda MIN.RESULT
 10586 5D0A 8D 22 A5			sta XB
 10587 5D0D AD 1C A4			lda MIN.RESULT+1
 10588 5D10 8D 23 A5			sta XB+1
 10589
 10590 				; optimize OK (service.pas), line = 1797
 10591
 10592 5D13 AD 34 A5			lda NY
 10593 5D16 85 9F			sta :STACKORIGIN+9
 10594 5D18 A0 00			ldy #$00
 10595 5D1A AD 35 A5			lda NY+1
 10596 5D1D 10 01			spl
 10597 5D1F 88				dey
 10598 5D20 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 10599 5D22 84 BF			sty :STACKORIGIN+STACKWIDTH*2+9
 10600 5D24 84 CF			sty :STACKORIGIN+STACKWIDTH*3+9
 10601 5D26 A5 9F			lda :STACKORIGIN+9
 10602 5D28 18 69 18			add #$18
 10603 5D2B 85 9F			sta :STACKORIGIN+9
 10604 5D2D A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 10605 5D2F 69 00			adc #$00
 10606 5D31 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 10607 5D33 A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
 10608 5D35 69 00			adc #$00
 10609 5D37 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
 10610 5D39 A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
 10611 5D3B 69 00			adc #$00
 10612 5D3D 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
 10613 5D3F 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
 10614 5D41 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 10615 5D43 66 9F			ror :STACKORIGIN+9
 10616 5D45 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
 10617 5D47 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 10618 5D49 66 9F			ror :STACKORIGIN+9
 10619 5D4B 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
 10620 5D4D 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 10621 5D4F 66 9F			ror :STACKORIGIN+9
 10622 5D51 A5 9F			lda :STACKORIGIN+9
 10623 5D53 38 E9 03			sub #$03
 10624 5D56 8D 24 A5			sta YB
 10625 5D59 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 10626 5D5B E9 00			sbc #$00
 10627 5D5D 8D 25 A5			sta YB+1
 10628
 10629 				; optimize OK (service.pas), line = 1799
 10630
 10631 5D60 AD 24 A5			lda YB
 10632 5D63 0A				asl @
 10633 5D64 0A				asl @
 10634 5D65 0A				asl @
 10635 5D66 0A				asl @
 10636 5D67 18 6D 22 A5			add XB
 10637 5D6B A8				tay
 10638 5D6C B9 00 DB			lda adr.WALL,y
 10639 5D6F F0 03 4C 46 5E		jne l_1B19
 10640
 10641 				; optimize OK (service.pas), line = 1801
 10642
 10643 5D74 AD 26 A5			lda OX
 10644 5D77 8D 32 A5			sta NX
 10645 5D7A AD 27 A5			lda OX+1
 10646 5D7D 8D 33 A5			sta NX+1
 10647
 10648 				; optimize OK (service.pas), line = 1802
 10649
 10650 5D80 AD 28 A5			lda OY
 10651 5D83 8D 34 A5			sta NY
 10652 5D86 AD 29 A5			lda OY+1
 10653 5D89 8D 35 A5			sta NY+1
 10654
 10655 				; optimize OK (service.pas), line = 1804
 10656
 10657 5D8C AD 32 A5			lda NX
 10658 5D8F 85 9F			sta :STACKORIGIN+9
 10659 5D91 A0 00			ldy #$00
 10660 5D93 AD 33 A5			lda NX+1
 10661 5D96 10 01			spl
 10662 5D98 88				dey
 10663 5D99 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 10664 5D9B 84 BF			sty :STACKORIGIN+STACKWIDTH*2+9
 10665 5D9D 84 CF			sty :STACKORIGIN+STACKWIDTH*3+9
 10666 5D9F 46 CF			lsr :STACKORIGIN+STACKWIDTH*3+9
 10667 5DA1 66 BF			ror :STACKORIGIN+STACKWIDTH*2+9
 10668 5DA3 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 10669 5DA5 66 9F			ror :STACKORIGIN+9
 10670 5DA7 46 CF			lsr :STACKORIGIN+STACKWIDTH*3+9
 10671 5DA9 66 BF			ror :STACKORIGIN+STACKWIDTH*2+9
 10672 5DAB 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 10673 5DAD 66 9F			ror :STACKORIGIN+9
 10674 5DAF 46 CF			lsr :STACKORIGIN+STACKWIDTH*3+9
 10675 5DB1 66 BF			ror :STACKORIGIN+STACKWIDTH*2+9
 10676 5DB3 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 10677 5DB5 66 9F			ror :STACKORIGIN+9
 10678 5DB7 46 CF			lsr :STACKORIGIN+STACKWIDTH*3+9
 10679 5DB9 66 BF			ror :STACKORIGIN+STACKWIDTH*2+9
 10680 5DBB 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 10681 5DBD 66 9F			ror :STACKORIGIN+9
 10682 5DBF A9 00			lda #$00
 10683 5DC1 8D 11 A4			sta MAX.A
 10684 5DC4 8D 12 A4			sta MAX.A+1
 10685 5DC7 A5 9F			lda :STACKORIGIN+9
 10686 5DC9 8D 13 A4			sta MAX.B
 10687 5DCC A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 10688 5DCE 8D 14 A4			sta MAX.B+1
 10689 5DD1 20 9E 26			jsr MAX
 10690 5DD4 A9 0C			lda #$0C
 10691 5DD6 8D 17 A4			sta MIN.A
 10692 5DD9 A9 00			lda #$00
 10693 5DDB 8D 18 A4			sta MIN.A+1
 10694 5DDE AD 15 A4			lda MAX.RESULT
 10695 5DE1 8D 19 A4			sta MIN.B
 10696 5DE4 AD 16 A4			lda MAX.RESULT+1
 10697 5DE7 8D 1A A4			sta MIN.B+1
 10698 5DEA 20 C9 26			jsr MIN
 10699 5DED AD 1B A4			lda MIN.RESULT
 10700 5DF0 8D 22 A5			sta XB
 10701 5DF3 AD 1C A4			lda MIN.RESULT+1
 10702 5DF6 8D 23 A5			sta XB+1
 10703
 10704 				; optimize OK (service.pas), line = 1805
 10705
 10706 5DF9 AD 34 A5			lda NY
 10707 5DFC 85 9F			sta :STACKORIGIN+9
 10708 5DFE A0 00			ldy #$00
 10709 5E00 AD 35 A5			lda NY+1
 10710 5E03 10 01			spl
 10711 5E05 88				dey
 10712 5E06 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 10713 5E08 84 BF			sty :STACKORIGIN+STACKWIDTH*2+9
 10714 5E0A 84 CF			sty :STACKORIGIN+STACKWIDTH*3+9
 10715 5E0C A5 9F			lda :STACKORIGIN+9
 10716 5E0E 18 69 18			add #$18
 10717 5E11 85 9F			sta :STACKORIGIN+9
 10718 5E13 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 10719 5E15 69 00			adc #$00
 10720 5E17 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 10721 5E19 A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
 10722 5E1B 69 00			adc #$00
 10723 5E1D 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
 10724 5E1F A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
 10725 5E21 69 00			adc #$00
 10726 5E23 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
 10727 5E25 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
 10728 5E27 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 10729 5E29 66 9F			ror :STACKORIGIN+9
 10730 5E2B 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
 10731 5E2D 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 10732 5E2F 66 9F			ror :STACKORIGIN+9
 10733 5E31 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
 10734 5E33 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 10735 5E35 66 9F			ror :STACKORIGIN+9
 10736 5E37 A5 9F			lda :STACKORIGIN+9
 10737 5E39 38 E9 03			sub #$03
 10738 5E3C 8D 24 A5			sta YB
 10739 5E3F A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 10740 5E41 E9 00			sbc #$00
 10741 5E43 8D 25 A5			sta YB+1
 10742 5E46			l_1B19
 10743 5E46			l_1ADE
 10744 5E46			l_19F4
 10745
 10746 				; optimize OK (service.pas), line = 1811
 10747
 10748 5E46 AC 1A A5 84 84 AC + 	mwy BALL :bp2
 10749 5E50 A0 00			ldy #BALL.X-DATAORIGIN
 10750 5E52 AD 32 A5			lda NX
 10751 5E55 18 69 09			add #$09
 10752 5E58 91 84			sta (:bp2),y
 10753 5E5A C8				iny
 10754 5E5B AD 33 A5			lda NX+1
 10755 5E5E 69 00			adc #$00
 10756 5E60 91 84			sta (:bp2),y
 10757
 10758 				; optimize OK (service.pas), line = 1812
 10759
 10760 5E62 A0 02			ldy #BALL.Y-DATAORIGIN
 10761 5E64 AD 34 A5			lda NY
 10762 5E67 18 69 16			add #$16
 10763 5E6A 91 84			sta (:bp2),y
 10764 5E6C C8				iny
 10765 5E6D AD 35 A5			lda NY+1
 10766 5E70 69 00			adc #$00
 10767 5E72 91 84			sta (:bp2),y
 10768
 10769 				; optimize OK (service.pas), line = 1816
 10770
 10771 5E74 AD 22 A5			lda XB
 10772 5E77 8D 0C A5			sta SHOOT_BLOCK.XB
 10773 5E7A AD 23 A5			lda XB+1
 10774 5E7D 8D 0D A5			sta SHOOT_BLOCK.XB+1
 10775 5E80 AD 24 A5			lda YB
 10776 5E83 8D 0E A5			sta SHOOT_BLOCK.YB
 10777 5E86 AD 25 A5			lda YB+1
 10778 5E89 8D 0F A5			sta SHOOT_BLOCK.YB+1
 10779 5E8C AD 1A A5			lda BALL
 10780 5E8F 8D 10 A5			sta SHOOT_BLOCK.BALL
 10781 5E92 AD 1B A5			lda BALL+1
 10782 5E95 8D 11 A5			sta SHOOT_BLOCK.BALL+1
 10783 5E98 20 B5 55			jsr SHOOT_BLOCK
 10784
 10785 				; optimize OK (service.pas), line = 1818
 10786
 10787 5E9B AD 32 A5			lda NX
 10788 5E9E 29 0F			and #$0F
 10789 5EA0 85 9F			sta :STACKORIGIN+9
 10790 5EA2 A9 00			lda #$00
 10791 5EA4 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 10792 5EA6 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
 10793 5EA8 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
 10794 5EAA 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 10795 5EAC 66 9F			ror :STACKORIGIN+9
 10796 5EAE A5 9F			lda :STACKORIGIN+9
 10797 5EB0 8D 1E A5			sta X
 10798 5EB3 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 10799 5EB5 8D 1F A5			sta X+1
 10800
 10801 				; optimize OK (service.pas), line = 1819
 10802
 10803 5EB8 AD 34 A5			lda NY
 10804 5EBB 29 07			and #$07
 10805 5EBD 8D 20 A5			sta Y
 10806 5EC0 A9 00			lda #$00
 10807 5EC2 8D 21 A5			sta Y+1
 10808
 10809 				; optimize OK (service.pas), line = 1831
 10810
 10811 5EC5 AD 1F A5			lda X+1
 10812 5EC8 0D 1E A5			ora X
 10813 5ECB F0 25			jeq l_1BA7
 10814 5ECD AD 1F A5			lda X+1
 10815 5ED0 D0 05			bne @+
 10816 5ED2 AD 1E A5			lda X
 10817 5ED5 C9 07			cmp #$07
 10818 				@
 10819 5ED7 F0 19			jeq l_1BA7
 10820 5ED9 AD 21 A5			lda Y+1
 10821 5EDC 0D 20 A5			ora Y
 10822 5EDF F0 11			jeq l_1BA7
 10823 				@
 10824 5EE1 AD 21 A5			lda Y+1
 10825 5EE4 D0 05			bne @+
 10826 5EE6 AD 20 A5			lda Y
 10827 5EE9 C9 07			cmp #$07
 10828 				@
 10829 5EEB F0 05			jeq l_1BA7
 10830
 10831 				; optimize OK (service.pas), line = 1832
 10832
 10833 5EED A9 03			lda #$03
 10834 5EEF 20 F4 26			jsr FATAL_ERROR
 10835 5EF2			l_1BA7
 10836
 10837 				; optimize OK (service.pas), line = 1847
 10838
 10839 5EF2 AD 20 A5			lda Y
 10840 5EF5 CD 1E A5			cmp X
 10841 5EF8 AD 21 A5			lda Y+1
 10842 5EFB ED 1F A5			sbc X+1
 10843 5EFE 50 02			svc
 10844 5F00 49 80			eor #$80
 10845 5F02 30 03 4C 9B 5F		jpl l_1BCE
 10846 5F07 AD 20 A5			lda Y
 10847 5F0A 85 A2			sta :STACKORIGIN+12
 10848 5F0C A0 00			ldy #$00
 10849 5F0E AD 21 A5			lda Y+1
 10850 5F11 10 01			spl
 10851 5F13 88				dey
 10852 5F14 85 B2			sta :STACKORIGIN+STACKWIDTH+12
 10853 5F16 84 C2			sty :STACKORIGIN+STACKWIDTH*2+12
 10854 5F18 84 D2			sty :STACKORIGIN+STACKWIDTH*3+12
 10855 5F1A A9 07			lda #$07
 10856 5F1C 38 E5 A2			sub :STACKORIGIN+12
 10857 5F1F 85 A1			sta :STACKORIGIN+11
 10858 5F21 A9 00			lda #$00
 10859 5F23 E5 B2			sbc :STACKORIGIN+STACKWIDTH+12
 10860 5F25 85 B1			sta :STACKORIGIN+STACKWIDTH+11
 10861 5F27 A9 00			lda #$00
 10862 5F29 E5 C2			sbc :STACKORIGIN+STACKWIDTH*2+12
 10863 5F2B 85 C1			sta :STACKORIGIN+STACKWIDTH*2+11
 10864 5F2D A9 00			lda #$00
 10865 5F2F E5 D2			sbc :STACKORIGIN+STACKWIDTH*3+12
 10866 5F31 85 D1			sta :STACKORIGIN+STACKWIDTH*3+11
 10867 5F33 AD 1E A5			lda X
 10868 5F36 85 A0			sta :STACKORIGIN+10
 10869 5F38 A0 00			ldy #$00
 10870 5F3A AD 1F A5			lda X+1
 10871 5F3D 10 01			spl
 10872 5F3F 88				dey
 10873 5F40 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 10874 5F42 84 C0			sty :STACKORIGIN+STACKWIDTH*2+10
 10875 5F44 84 D0			sty :STACKORIGIN+STACKWIDTH*3+10
 10876 5F46				.LOCAL
 10877 5F46 A5 D0			lda :STACKORIGIN+STACKWIDTH*3+10
 10878 5F48 38 E5 D1			sub :STACKORIGIN+STACKWIDTH*3+11
 10879 5F4B D0 1C			bne L4
 10880 5F4D A5 C0			lda :STACKORIGIN+STACKWIDTH*2+10
 10881 5F4F C5 C1			cmp :STACKORIGIN+STACKWIDTH*2+11
 10882 5F51 D0 0A			bne L1
 10883 5F53 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
 10884 5F55 C5 B1			cmp :STACKORIGIN+STACKWIDTH+11
 10885 5F57 D0 04			bne L1
 10886 5F59 A5 A0			lda :STACKORIGIN+10
 10887 5F5B C5 A1			cmp :STACKORIGIN+11
 10888 5F5D F0 10		L1	beq L5
 10889 5F5F B0 04			bcs L3
 10890 5F61 A9 FF			lda #$FF
 10891 5F63 D0 0A			bne L5
 10892 5F65 A9 01		L3	lda #$01
 10893 5F67 D0 06			bne L5
 10894 5F69 50 04		L4	bvc L5
 10895 5F6B 49 FF			eor #$FF
 10896 5F6D 09 01			ora #$01
 10897 5F6F			L5
 10898 					.ENDL
 10899 5F6F 10 2A			jpl l_1BCE
 10900
 10901 				; optimize OK (service.pas), line = 1849
 10902
 10903 5F71 AC 1A A5 84 84 AC + 	mwy BALL :bp2
 10904 5F7B A0 12			ldy #BALL.SPEEDY-DATAORIGIN
 10905 5F7D A9 00			lda #$00
 10906 5F7F 38 F1 84			sub (:bp2),y
 10907 5F82 85 9F			sta :STACKORIGIN+9
 10908 5F84 C8				iny
 10909 5F85 A9 00			lda #$00
 10910 5F87 F1 84			sbc (:bp2),y
 10911 5F89 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 10912 5F8B A0 12			ldy #BALL.SPEEDY-DATAORIGIN
 10913 5F8D A5 9F			lda :STACKORIGIN+9
 10914 5F8F 91 84			sta (:bp2),y
 10915 5F91 C8				iny
 10916 5F92 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 10917 5F94 91 84			sta (:bp2),y
 10918
 10919 				; optimize OK (service.pas), line = 1850
 10920
 10921 5F96 A9 01			lda #$01
 10922 5F98 8D 46 A5			sta EMERGENCY
 10923 5F9B			l_1BCE
 10924
 10925 				; optimize OK (service.pas), line = 1854
 10926
 10927 5F9B AD 20 A5			lda Y
 10928 5F9E 85 A0			sta :STACKORIGIN+10
 10929 5FA0 A0 00			ldy #$00
 10930 5FA2 AD 21 A5			lda Y+1
 10931 5FA5 10 01			spl
 10932 5FA7 88				dey
 10933 5FA8 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 10934 5FAA 84 C0			sty :STACKORIGIN+STACKWIDTH*2+10
 10935 5FAC 84 D0			sty :STACKORIGIN+STACKWIDTH*3+10
 10936 5FAE A9 07			lda #$07
 10937 5FB0 38 E5 A0			sub :STACKORIGIN+10
 10938 5FB3 85 9F			sta :STACKORIGIN+9
 10939 5FB5 A9 00			lda #$00
 10940 5FB7 E5 B0			sbc :STACKORIGIN+STACKWIDTH+10
 10941 5FB9 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 10942 5FBB A9 00			lda #$00
 10943 5FBD E5 C0			sbc :STACKORIGIN+STACKWIDTH*2+10
 10944 5FBF 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
 10945 5FC1 A9 00			lda #$00
 10946 5FC3 E5 D0			sbc :STACKORIGIN+STACKWIDTH*3+10
 10947 5FC5 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
 10948 5FC7 AD 1E A5			lda X
 10949 5FCA 85 A0			sta :STACKORIGIN+10
 10950 5FCC A0 00			ldy #$00
 10951 5FCE AD 1F A5			lda X+1
 10952 5FD1 10 01			spl
 10953 5FD3 88				dey
 10954 5FD4 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 10955 5FD6 84 C0			sty :STACKORIGIN+STACKWIDTH*2+10
 10956 5FD8 84 D0			sty :STACKORIGIN+STACKWIDTH*3+10
 10957 5FDA				.LOCAL
 10958 5FDA A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
 10959 5FDC 38 E5 D0			sub :STACKORIGIN+STACKWIDTH*3+10
 10960 5FDF D0 1C			bne L4
 10961 5FE1 A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
 10962 5FE3 C5 C0			cmp :STACKORIGIN+STACKWIDTH*2+10
 10963 5FE5 D0 0A			bne L1
 10964 5FE7 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 10965 5FE9 C5 B0			cmp :STACKORIGIN+STACKWIDTH+10
 10966 5FEB D0 04			bne L1
 10967 5FED A5 9F			lda :STACKORIGIN+9
 10968 5FEF C5 A0			cmp :STACKORIGIN+10
 10969 5FF1 F0 10		L1	beq L5
 10970 5FF3 B0 04			bcs L3
 10971 5FF5 A9 FF			lda #$FF
 10972 5FF7 D0 0A			bne L5
 10973 5FF9 A9 01		L3	lda #$01
 10974 5FFB D0 06			bne L5
 10975 5FFD 50 04		L4	bvc L5
 10976 5FFF 49 FF			eor #$FF
 10977 6001 09 01			ora #$01
 10978 6003			L5
 10979 					.ENDL
 10980 6003 10 3C			jpl l_1BFF
 10981 6005 AD 1E A5			lda X
 10982 6008 CD 20 A5			cmp Y
 10983 600B AD 1F A5			lda X+1
 10984 600E ED 21 A5			sbc Y+1
 10985 6011 50 02			svc
 10986 6013 49 80			eor #$80
 10987 6015 10 2A			jpl l_1BFF
 10988
 10989 				; optimize OK (service.pas), line = 1856
 10990
 10991 6017 AC 1A A5 84 84 AC + 	mwy BALL :bp2
 10992 6021 A0 12			ldy #BALL.SPEEDY-DATAORIGIN
 10993 6023 A9 00			lda #$00
 10994 6025 38 F1 84			sub (:bp2),y
 10995 6028 85 9F			sta :STACKORIGIN+9
 10996 602A C8				iny
 10997 602B A9 00			lda #$00
 10998 602D F1 84			sbc (:bp2),y
 10999 602F 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 11000 6031 A0 12			ldy #BALL.SPEEDY-DATAORIGIN
 11001 6033 A5 9F			lda :STACKORIGIN+9
 11002 6035 91 84			sta (:bp2),y
 11003 6037 C8				iny
 11004 6038 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 11005 603A 91 84			sta (:bp2),y
 11006
 11007 				; optimize OK (service.pas), line = 1857
 11008
 11009 603C A9 03			lda #$03
 11010 603E 8D 46 A5			sta EMERGENCY
 11011 6041			l_1BFF
 11012
 11013 				; optimize OK (service.pas), line = 1861
 11014
 11015 6041 AD 1E A5			lda X
 11016 6044 CD 20 A5			cmp Y
 11017 6047 AD 1F A5			lda X+1
 11018 604A ED 21 A5			sbc Y+1
 11019 604D 50 02			svc
 11020 604F 49 80			eor #$80
 11021 6051 30 03 4C EA 60		jpl l_1C30
 11022 6056 AD 1E A5			lda X
 11023 6059 85 A2			sta :STACKORIGIN+12
 11024 605B A0 00			ldy #$00
 11025 605D AD 1F A5			lda X+1
 11026 6060 10 01			spl
 11027 6062 88				dey
 11028 6063 85 B2			sta :STACKORIGIN+STACKWIDTH+12
 11029 6065 84 C2			sty :STACKORIGIN+STACKWIDTH*2+12
 11030 6067 84 D2			sty :STACKORIGIN+STACKWIDTH*3+12
 11031 6069 A9 07			lda #$07
 11032 606B 38 E5 A2			sub :STACKORIGIN+12
 11033 606E 85 A1			sta :STACKORIGIN+11
 11034 6070 A9 00			lda #$00
 11035 6072 E5 B2			sbc :STACKORIGIN+STACKWIDTH+12
 11036 6074 85 B1			sta :STACKORIGIN+STACKWIDTH+11
 11037 6076 A9 00			lda #$00
 11038 6078 E5 C2			sbc :STACKORIGIN+STACKWIDTH*2+12
 11039 607A 85 C1			sta :STACKORIGIN+STACKWIDTH*2+11
 11040 607C A9 00			lda #$00
 11041 607E E5 D2			sbc :STACKORIGIN+STACKWIDTH*3+12
 11042 6080 85 D1			sta :STACKORIGIN+STACKWIDTH*3+11
 11043 6082 AD 20 A5			lda Y
 11044 6085 85 A0			sta :STACKORIGIN+10
 11045 6087 A0 00			ldy #$00
 11046 6089 AD 21 A5			lda Y+1
 11047 608C 10 01			spl
 11048 608E 88				dey
 11049 608F 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 11050 6091 84 C0			sty :STACKORIGIN+STACKWIDTH*2+10
 11051 6093 84 D0			sty :STACKORIGIN+STACKWIDTH*3+10
 11052 6095				.LOCAL
 11053 6095 A5 D0			lda :STACKORIGIN+STACKWIDTH*3+10
 11054 6097 38 E5 D1			sub :STACKORIGIN+STACKWIDTH*3+11
 11055 609A D0 1C			bne L4
 11056 609C A5 C0			lda :STACKORIGIN+STACKWIDTH*2+10
 11057 609E C5 C1			cmp :STACKORIGIN+STACKWIDTH*2+11
 11058 60A0 D0 0A			bne L1
 11059 60A2 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
 11060 60A4 C5 B1			cmp :STACKORIGIN+STACKWIDTH+11
 11061 60A6 D0 04			bne L1
 11062 60A8 A5 A0			lda :STACKORIGIN+10
 11063 60AA C5 A1			cmp :STACKORIGIN+11
 11064 60AC F0 10		L1	beq L5
 11065 60AE B0 04			bcs L3
 11066 60B0 A9 FF			lda #$FF
 11067 60B2 D0 0A			bne L5
 11068 60B4 A9 01		L3	lda #$01
 11069 60B6 D0 06			bne L5
 11070 60B8 50 04		L4	bvc L5
 11071 60BA 49 FF			eor #$FF
 11072 60BC 09 01			ora #$01
 11073 60BE			L5
 11074 					.ENDL
 11075 60BE 10 2A			jpl l_1C30
 11076
 11077 				; optimize OK (service.pas), line = 1863
 11078
 11079 60C0 AC 1A A5 84 84 AC + 	mwy BALL :bp2
 11080 60CA A0 10			ldy #BALL.SPEEDX-DATAORIGIN
 11081 60CC A9 00			lda #$00
 11082 60CE 38 F1 84			sub (:bp2),y
 11083 60D1 85 9F			sta :STACKORIGIN+9
 11084 60D3 C8				iny
 11085 60D4 A9 00			lda #$00
 11086 60D6 F1 84			sbc (:bp2),y
 11087 60D8 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 11088 60DA A0 10			ldy #BALL.SPEEDX-DATAORIGIN
 11089 60DC A5 9F			lda :STACKORIGIN+9
 11090 60DE 91 84			sta (:bp2),y
 11091 60E0 C8				iny
 11092 60E1 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 11093 60E3 91 84			sta (:bp2),y
 11094
 11095 				; optimize OK (service.pas), line = 1864
 11096
 11097 60E5 A9 02			lda #$02
 11098 60E7 8D 46 A5			sta EMERGENCY
 11099 60EA			l_1C30
 11100
 11101 				; optimize OK (service.pas), line = 1868
 11102
 11103 60EA AD 1E A5			lda X
 11104 60ED 85 A0			sta :STACKORIGIN+10
 11105 60EF A0 00			ldy #$00
 11106 60F1 AD 1F A5			lda X+1
 11107 60F4 10 01			spl
 11108 60F6 88				dey
 11109 60F7 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 11110 60F9 84 C0			sty :STACKORIGIN+STACKWIDTH*2+10
 11111 60FB 84 D0			sty :STACKORIGIN+STACKWIDTH*3+10
 11112 60FD A9 07			lda #$07
 11113 60FF 38 E5 A0			sub :STACKORIGIN+10
 11114 6102 85 9F			sta :STACKORIGIN+9
 11115 6104 A9 00			lda #$00
 11116 6106 E5 B0			sbc :STACKORIGIN+STACKWIDTH+10
 11117 6108 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 11118 610A A9 00			lda #$00
 11119 610C E5 C0			sbc :STACKORIGIN+STACKWIDTH*2+10
 11120 610E 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
 11121 6110 A9 00			lda #$00
 11122 6112 E5 D0			sbc :STACKORIGIN+STACKWIDTH*3+10
 11123 6114 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
 11124 6116 AD 20 A5			lda Y
 11125 6119 85 A0			sta :STACKORIGIN+10
 11126 611B A0 00			ldy #$00
 11127 611D AD 21 A5			lda Y+1
 11128 6120 10 01			spl
 11129 6122 88				dey
 11130 6123 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 11131 6125 84 C0			sty :STACKORIGIN+STACKWIDTH*2+10
 11132 6127 84 D0			sty :STACKORIGIN+STACKWIDTH*3+10
 11133 6129				.LOCAL
 11134 6129 A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
 11135 612B 38 E5 D0			sub :STACKORIGIN+STACKWIDTH*3+10
 11136 612E D0 1C			bne L4
 11137 6130 A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
 11138 6132 C5 C0			cmp :STACKORIGIN+STACKWIDTH*2+10
 11139 6134 D0 0A			bne L1
 11140 6136 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 11141 6138 C5 B0			cmp :STACKORIGIN+STACKWIDTH+10
 11142 613A D0 04			bne L1
 11143 613C A5 9F			lda :STACKORIGIN+9
 11144 613E C5 A0			cmp :STACKORIGIN+10
 11145 6140 F0 10		L1	beq L5
 11146 6142 B0 04			bcs L3
 11147 6144 A9 FF			lda #$FF
 11148 6146 D0 0A			bne L5
 11149 6148 A9 01		L3	lda #$01
 11150 614A D0 06			bne L5
 11151 614C 50 04		L4	bvc L5
 11152 614E 49 FF			eor #$FF
 11153 6150 09 01			ora #$01
 11154 6152			L5
 11155 					.ENDL
 11156 6152 10 3C			jpl l_1C61
 11157 6154 AD 20 A5			lda Y
 11158 6157 CD 1E A5			cmp X
 11159 615A AD 21 A5			lda Y+1
 11160 615D ED 1F A5			sbc X+1
 11161 6160 50 02			svc
 11162 6162 49 80			eor #$80
 11163 6164 10 2A			jpl l_1C61
 11164
 11165 				; optimize OK (service.pas), line = 1870
 11166
 11167 6166 AC 1A A5 84 84 AC + 	mwy BALL :bp2
 11168 6170 A0 10			ldy #BALL.SPEEDX-DATAORIGIN
 11169 6172 A9 00			lda #$00
 11170 6174 38 F1 84			sub (:bp2),y
 11171 6177 85 9F			sta :STACKORIGIN+9
 11172 6179 C8				iny
 11173 617A A9 00			lda #$00
 11174 617C F1 84			sbc (:bp2),y
 11175 617E 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 11176 6180 A0 10			ldy #BALL.SPEEDX-DATAORIGIN
 11177 6182 A5 9F			lda :STACKORIGIN+9
 11178 6184 91 84			sta (:bp2),y
 11179 6186 C8				iny
 11180 6187 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 11181 6189 91 84			sta (:bp2),y
 11182
 11183 				; optimize OK (service.pas), line = 1871
 11184
 11185 618B A9 04			lda #$04
 11186 618D 8D 46 A5			sta EMERGENCY
 11187 6190			l_1C61
 11188
 11189 				; optimize OK (service.pas), line = 1875
 11190
 11191 6190 AD 1F A5			lda X+1
 11192 6193 CD 21 A5			cmp Y+1
 11193 6196 D0 06			bne @+
 11194 6198 AD 1E A5			lda X
 11195 619B CD 20 A5			cmp Y
 11196 				@
 11197 619E F0 5A			jeq l_1C92x
 11198 61A0 AD 20 A5			lda Y
 11199 61A3 85 A2			sta :STACKORIGIN+12
 11200 61A5 A0 00			ldy #$00
 11201 61A7 AD 21 A5			lda Y+1
 11202 61AA 10 01			spl
 11203 61AC 88				dey
 11204 61AD 85 B2			sta :STACKORIGIN+STACKWIDTH+12
 11205 61AF 84 C2			sty :STACKORIGIN+STACKWIDTH*2+12
 11206 61B1 84 D2			sty :STACKORIGIN+STACKWIDTH*3+12
 11207 61B3 A9 07			lda #$07
 11208 61B5 38 E5 A2			sub :STACKORIGIN+12
 11209 61B8 85 A1			sta :STACKORIGIN+11
 11210 61BA A9 00			lda #$00
 11211 61BC E5 B2			sbc :STACKORIGIN+STACKWIDTH+12
 11212 61BE 85 B1			sta :STACKORIGIN+STACKWIDTH+11
 11213 61C0 A9 00			lda #$00
 11214 61C2 E5 C2			sbc :STACKORIGIN+STACKWIDTH*2+12
 11215 61C4 85 C1			sta :STACKORIGIN+STACKWIDTH*2+11
 11216 61C6 A9 00			lda #$00
 11217 61C8 E5 D2			sbc :STACKORIGIN+STACKWIDTH*3+12
 11218 61CA 85 D1			sta :STACKORIGIN+STACKWIDTH*3+11
 11219 61CC AD 1E A5			lda X
 11220 61CF 85 A0			sta :STACKORIGIN+10
 11221 61D1 A0 00			ldy #$00
 11222 61D3 AD 1F A5			lda X+1
 11223 61D6 10 01			spl
 11224 61D8 88				dey
 11225 61D9 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 11226 61DB 84 C0			sty :STACKORIGIN+STACKWIDTH*2+10
 11227 61DD 84 D0			sty :STACKORIGIN+STACKWIDTH*3+10
 11228 61DF A5 D0			lda :STACKORIGIN+STACKWIDTH*3+10
 11229 61E1 C5 D1			cmp :STACKORIGIN+STACKWIDTH*3+11
 11230 61E3 D0 10			bne @+
 11231 61E5 A5 C0			lda :STACKORIGIN+STACKWIDTH*2+10
 11232 61E7 C5 C1			cmp :STACKORIGIN+STACKWIDTH*2+11
 11233 61E9 D0 0A			bne @+
 11234 61EB A5 B0			lda :STACKORIGIN+STACKWIDTH+10
 11235 61ED C5 B1			cmp :STACKORIGIN+STACKWIDTH+11
 11236 61EF D0 04			bne @+
 11237 61F1 A5 A0			lda :STACKORIGIN+10
 11238 61F3 C5 A1			cmp :STACKORIGIN+11
 11239 				@
 11240 61F5 F0 03 4C B7 6A		jne l_1C92
 11241 61FA			l_1C92x
 11242
 11243 				; optimize OK (service.pas), line = 1877
 11244
 11245 61FA A9 00			lda #$00
 11246 61FC 8D 3A A5			sta DEFLECT
 11247 61FF 8D 3B A5			sta DEFLECT+1
 11248
 11249 				; optimize OK (service.pas), line = 1878
 11250
 11251 6202 8D 48 A5			sta TOUCH
 11252
 11253 				; optimize OK (service.pas), line = 1886
 11254
 11255 6205 AD 1E A5			lda X
 11256 6208 C9 05			cmp #$05
 11257 620A AD 1F A5			lda X+1
 11258 620D E9 00			sbc #$00
 11259 620F 50 02			svc
 11260 6211 49 80			eor #$80
 11261 6213 30 08			jmi l_1CAC
 11262 6215 AD 48 A5			lda TOUCH
 11263 6218 09 01			ora #$01
 11264 621A 8D 48 A5			sta TOUCH
 11265 621D			l_1CAC
 11266
 11267 				; optimize OK (service.pas), line = 1887
 11268
 11269 621D AD 20 A5			lda Y
 11270 6220 C9 05			cmp #$05
 11271 6222 AD 21 A5			lda Y+1
 11272 6225 E9 00			sbc #$00
 11273 6227 50 02			svc
 11274 6229 49 80			eor #$80
 11275 622B 30 08			jmi l_1CCA
 11276 622D AD 48 A5			lda TOUCH
 11277 6230 09 02			ora #$02
 11278 6232 8D 48 A5			sta TOUCH
 11279 6235			l_1CCA
 11280
 11281 				; optimize OK (service.pas), line = 1897
 11282
 11283 6235 A9 FF			lda #$FF
 11284 6237 8D 2A A5			sta LX
 11285 623A 8D 2B A5			sta LX+1
 11286
 11287 623D			l_1CE0
 11288 				; --- ForToDoCondition
 11289 623D AD 2A A5			lda LX
 11290 6240 C9 02			cmp #$02
 11291 6242 AD 2B A5			lda LX+1
 11292 6245 E9 00			sbc #$00
 11293 6247 50 02			svc
 11294 6249 49 80			eor #$80
 11295 624B 0A				asl @
 11296 624C B0 03 4C C4 64		jcc l_1CEC
 11297
 11298 				; optimize OK (service.pas), line = 1898
 11299
 11300 6251 A9 FF			lda #$FF
 11301 6253 8D 2C A5			sta LY
 11302 6256 8D 2D A5			sta LY+1
 11303
 11304 6259			l_1CF5
 11305 				; --- ForToDoCondition
 11306 6259 AD 2C A5			lda LY
 11307 625C C9 02			cmp #$02
 11308 625E AD 2D A5			lda LY+1
 11309 6261 E9 00			sbc #$00
 11310 6263 50 02			svc
 11311 6265 49 80			eor #$80
 11312 6267 0A				asl @
 11313 6268 B0 03 4C B6 64		jcc l_1D01
 11314
 11315 				; optimize FAIL (1, service.pas), line = 1900
 11316
 11317 626D E8				inx
 11318 626E A9 00 95 96			mva #$00 :STACKORIGIN,x
 11319 6272 95 A6			sta :STACKORIGIN+STACKWIDTH,x
 11320 6274 E8				inx
 11321 6275 A9 0C 95 96			mva #$0C :STACKORIGIN,x
 11322 6279 A9 00 95 A6			mva #$00 :STACKORIGIN+STACKWIDTH,x
 11323 627D AD 22 A5			lda XB
 11324 6280 18 6D 2A A5			add LX
 11325 6284 8D 17 A4			sta MIN.A
 11326 6287 AD 23 A5			lda XB+1
 11327 628A 6D 2B A5			adc LX+1
 11328 628D 8D 18 A4			sta MIN.A+1
 11329 6290 B5 96			lda :STACKORIGIN,x
 11330 6292 8D 19 A4			sta MIN.B
 11331 6295 B5 A6			lda :STACKORIGIN+STACKWIDTH,x
 11332 6297 8D 1A A4			sta MIN.B+1
 11333 629A CA				dex
 11334 629B 20 C9 26			jsr MIN
 11335 629E AD 1B A4			lda MIN.RESULT
 11336 62A1 8D 11 A4			sta MAX.A
 11337 62A4 AD 1C A4			lda MIN.RESULT+1
 11338 62A7 8D 12 A4			sta MAX.A+1
 11339 62AA B5 96			lda :STACKORIGIN,x
 11340 62AC 8D 13 A4			sta MAX.B
 11341 62AF B5 A6			lda :STACKORIGIN+STACKWIDTH,x
 11342 62B1 8D 14 A4			sta MAX.B+1
 11343 62B4 CA				dex
 11344 62B5 20 9E 26			jsr MAX
 11345 62B8 AD 15 A4			lda MAX.RESULT
 11346 62BB 8D 2E A5			sta MX
 11347 62BE AD 16 A4			lda MAX.RESULT+1
 11348 62C1 8D 2F A5			sta MX+1
 11349
 11350 				; optimize OK (service.pas), line = 1901
 11351
 11352 62C4 AD 24 A5			lda YB
 11353 62C7 18 6D 2C A5			add LY
 11354 62CB 8D 30 A5			sta MY
 11355 62CE AD 25 A5			lda YB+1
 11356 62D1 6D 2D A5			adc LY+1
 11357 62D4 8D 31 A5			sta MY+1
 11358
 11359 				; optimize OK (service.pas), line = 1905
 11360
 11361 62D7 AD 22 A5			lda XB
 11362 62DA 85 9F			sta :STACKORIGIN+9
 11363 62DC A0 00			ldy #$00
 11364 62DE AD 23 A5			lda XB+1
 11365 62E1 10 01			spl
 11366 62E3 88				dey
 11367 62E4 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 11368 62E6 84 BF			sty :STACKORIGIN+STACKWIDTH*2+9
 11369 62E8 84 CF			sty :STACKORIGIN+STACKWIDTH*3+9
 11370 62EA AD 2A A5			lda LX
 11371 62ED 85 A0			sta :STACKORIGIN+10
 11372 62EF A0 00			ldy #$00
 11373 62F1 AD 2B A5			lda LX+1
 11374 62F4 10 01			spl
 11375 62F6 88				dey
 11376 62F7 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 11377 62F9 84 C0			sty :STACKORIGIN+STACKWIDTH*2+10
 11378 62FB 84 D0			sty :STACKORIGIN+STACKWIDTH*3+10
 11379 62FD A5 9F			lda :STACKORIGIN+9
 11380 62FF 18 65 A0			add :STACKORIGIN+10
 11381 6302 F0 03 4C 10 64		jne l_1D56x
 11382 6307 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 11383 6309 65 B0			adc :STACKORIGIN+STACKWIDTH+10
 11384 630B 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 11385 630D A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
 11386 630F 65 C0			adc :STACKORIGIN+STACKWIDTH*2+10
 11387 6311 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
 11388 6313 A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
 11389 6315 65 D0			adc :STACKORIGIN+STACKWIDTH*3+10
 11390 6317 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
 11391 6319 10 03 4C 10 64		jmi l_1D56x
 11392 631E AD 22 A5			lda XB
 11393 6321 85 A0			sta :STACKORIGIN+10
 11394 6323 A0 00			ldy #$00
 11395 6325 AD 23 A5			lda XB+1
 11396 6328 10 01			spl
 11397 632A 88				dey
 11398 632B 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 11399 632D 84 C0			sty :STACKORIGIN+STACKWIDTH*2+10
 11400 632F 84 D0			sty :STACKORIGIN+STACKWIDTH*3+10
 11401 6331 AD 2A A5			lda LX
 11402 6334 85 A1			sta :STACKORIGIN+11
 11403 6336 A0 00			ldy #$00
 11404 6338 AD 2B A5			lda LX+1
 11405 633B 10 01			spl
 11406 633D 88				dey
 11407 633E 85 B1			sta :STACKORIGIN+STACKWIDTH+11
 11408 6340 84 C1			sty :STACKORIGIN+STACKWIDTH*2+11
 11409 6342 84 D1			sty :STACKORIGIN+STACKWIDTH*3+11
 11410 6344 A5 A0			lda :STACKORIGIN+10
 11411 6346 18 65 A1			add :STACKORIGIN+11
 11412 6349 85 A0			sta :STACKORIGIN+10
 11413 634B A5 B0			lda :STACKORIGIN+STACKWIDTH+10
 11414 634D 65 B1			adc :STACKORIGIN+STACKWIDTH+11
 11415 634F 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 11416 6351 A5 C0			lda :STACKORIGIN+STACKWIDTH*2+10
 11417 6353 65 C1			adc :STACKORIGIN+STACKWIDTH*2+11
 11418 6355 85 C0			sta :STACKORIGIN+STACKWIDTH*2+10
 11419 6357 A5 D0			lda :STACKORIGIN+STACKWIDTH*3+10
 11420 6359 65 D1			adc :STACKORIGIN+STACKWIDTH*3+11
 11421 635B 85 D0			sta :STACKORIGIN+STACKWIDTH*3+10
 11422 635D				.LOCAL
 11423 635D A5 D0			lda :STACKORIGIN+STACKWIDTH*3+10
 11424 635F 38 E9 00			sub #$00
 11425 6362 D0 1C			bne L4
 11426 6364 A5 C0			lda :STACKORIGIN+STACKWIDTH*2+10
 11427 6366 C9 00			cmp #$00
 11428 6368 D0 0A			bne L1
 11429 636A A5 B0			lda :STACKORIGIN+STACKWIDTH+10
 11430 636C C9 00			cmp #$00
 11431 636E D0 04			bne L1
 11432 6370 A5 A0			lda :STACKORIGIN+10
 11433 6372 C9 0C			cmp #$0C
 11434 6374 F0 10		L1	beq L5
 11435 6376 B0 04			bcs L3
 11436 6378 A9 FF			lda #$FF
 11437 637A D0 0A			bne L5
 11438 637C A9 01		L3	lda #$01
 11439 637E D0 06			bne L5
 11440 6380 50 04		L4	bvc L5
 11441 6382 49 FF			eor #$FF
 11442 6384 09 01			ora #$01
 11443 6386			L5
 11444 					.ENDL
 11445 6386 F0 02			seq
 11446 6388 10 03			bpl @+
 11447 638A 4C 90 63			jmp *+6
 11448 638D 4C 10 64		@	jmp l_1D56x
 11449 6390 A9 10			lda #$10
 11450 6392 85 8E			sta :ecx
 11451 6394 85 92			sta :ztmp8
 11452 6396 A9 00			lda #$00
 11453 6398 85 8F			sta :ecx+1
 11454 639A 85 93			sta :ztmp9
 11455 639C AD 30 A5			lda MY
 11456 639F 85 86			sta :eax
 11457 63A1 85 94			sta :ztmp10
 11458 63A3 AD 31 A5			lda MY+1
 11459 63A6 85 87			sta :eax+1
 11460 63A8 85 95			sta :ztmp11
 11461 					.ifdef fmulinit
 11462 					fmulu_16
 11463 					els
 11464 63AA 20 FA 12			imulCX
 11465 					eif
 11466 63AD A5 95			lda :ztmp11
 11467 63AF 10 0D			bpl @+
 11468 63B1 A5 88			lda :eax+2
 11469 63B3 38 E5 92			sub :ztmp8
 11470 63B6 85 88			sta :eax+2
 11471 63B8 A5 89			lda :eax+3
 11472 63BA E5 93			sbc :ztmp9
 11473 63BC 85 89			sta :eax+3
 11474 				@
 11475 63BE A5 93			lda :ztmp9
 11476 63C0 10 0D			bpl @+
 11477 63C2 A5 88			lda :eax+2
 11478 63C4 38 E5 94			sub :ztmp10
 11479 63C7 85 88			sta :eax+2
 11480 63C9 A5 89			lda :eax+3
 11481 63CB E5 95			sbc :ztmp11
 11482 63CD 85 89			sta :eax+3
 11483 				@
 11484 63CF A5 86			lda :eax
 11485 63D1 85 A1			sta :STACKORIGIN+11
 11486 63D3 A5 87			lda :eax+1
 11487 63D5 85 B1			sta :STACKORIGIN+STACKWIDTH+11
 11488 63D7 A5 88			lda :eax+2
 11489 63D9 85 C1			sta :STACKORIGIN+STACKWIDTH*2+11
 11490 63DB A5 89			lda :eax+3
 11491 63DD 85 D1			sta :STACKORIGIN+STACKWIDTH*3+11
 11492 63DF AD 2E A5			lda MX
 11493 63E2 85 A0			sta :STACKORIGIN+10
 11494 63E4 A0 00			ldy #$00
 11495 63E6 AD 2F A5			lda MX+1
 11496 63E9 10 01			spl
 11497 63EB 88				dey
 11498 63EC 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 11499 63EE 84 C0			sty :STACKORIGIN+STACKWIDTH*2+10
 11500 63F0 84 D0			sty :STACKORIGIN+STACKWIDTH*3+10
 11501 63F2 A5 A0			lda :STACKORIGIN+10
 11502 63F4 18 65 A1			add :STACKORIGIN+11
 11503 63F7 85 A0			sta :STACKORIGIN+10
 11504 63F9 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
 11505 63FB 65 B1			adc :STACKORIGIN+STACKWIDTH+11
 11506 63FD 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 11507 63FF A5 A0			lda :STACKORIGIN+10
 11508 6401 18 69 00			add #$00
 11509 6404 A8				tay
 11510 6405 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
 11511 6407 69 00			adc #$00
 11512 6409 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 11513 640B B9 00 DB			lda adr.WALL,y
 11514 640E F0 4D			jeq l_1D56
 11515 				@
 11516 6410			l_1D56x
 11517
 11518 				; optimize OK (service.pas), line = 1908
 11519
 11520 6410 AD 2A A5			lda LX
 11521 6413 18 69 01			add #$01
 11522 6416 85 86			sta :eax
 11523 6418 AD 2B A5			lda LX+1
 11524 641B 69 00			adc #$00
 11525 641D 85 87			sta :eax+1
 11526 641F A9 06			lda #$06
 11527 6421 85 8E			sta :ecx
 11528 6423 A9 00			lda #$00
 11529 6425 85 8F			sta :ecx+1
 11530 					.ifdef fmulinit
 11531 					fmulu_16
 11532 					els
 11533 6427 20 FA 12			imulCX
 11534 					eif
 11535 642A AD 2C A5			lda LY
 11536 642D 18 69 01			add #$01
 11537 6430 85 A0			sta :STACKORIGIN+10
 11538 6432 AD 2D A5			lda LY+1
 11539 6435 69 00			adc #$00
 11540 6437 06 A0			asl :STACKORIGIN+10
 11541 6439 2A				rol @
 11542 643A 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 11543 643C A5 86			lda :eax
 11544 643E 18 65 A0			add :STACKORIGIN+10
 11545 6441 85 9F			sta :STACKORIGIN+9
 11546 6443 A5 87			lda :eax+1
 11547 6445 65 B0			adc :STACKORIGIN+STACKWIDTH+10
 11548 6447 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 11549 6449 A5 9F			lda :STACKORIGIN+9
 11550 644B 18 69 00			add #$00
 11551 644E A8				tay
 11552 644F A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 11553 6451 69 00			adc #$00
 11554 6453 A9 01			lda #$01
 11555 6455 99 49 A5			sta adr.ADJW,y
 11556 6458 A9 00			lda #$00
 11557 645A 4C A5 64			jmp l_1D77
 11558 645D			l_1D56
 11559
 11560 				; optimize OK (service.pas), line = 1910
 11561
 11562 645D AD 2A A5			lda LX
 11563 6460 18 69 01			add #$01
 11564 6463 85 86			sta :eax
 11565 6465 AD 2B A5			lda LX+1
 11566 6468 69 00			adc #$00
 11567 646A 85 87			sta :eax+1
 11568 646C A9 06			lda #$06
 11569 646E 85 8E			sta :ecx
 11570 6470 A9 00			lda #$00
 11571 6472 85 8F			sta :ecx+1
 11572 					.ifdef fmulinit
 11573 					fmulu_16
 11574 					els
 11575 6474 20 FA 12			imulCX
 11576 					eif
 11577 6477 AD 2C A5			lda LY
 11578 647A 18 69 01			add #$01
 11579 647D 85 A0			sta :STACKORIGIN+10
 11580 647F AD 2D A5			lda LY+1
 11581 6482 69 00			adc #$00
 11582 6484 06 A0			asl :STACKORIGIN+10
 11583 6486 2A				rol @
 11584 6487 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 11585 6489 A5 86			lda :eax
 11586 648B 18 65 A0			add :STACKORIGIN+10
 11587 648E 85 9F			sta :STACKORIGIN+9
 11588 6490 A5 87			lda :eax+1
 11589 6492 65 B0			adc :STACKORIGIN+STACKWIDTH+10
 11590 6494 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 11591 6496 A5 9F			lda :STACKORIGIN+9
 11592 6498 18 69 00			add #$00
 11593 649B A8				tay
 11594 649C A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 11595 649E 69 00			adc #$00
 11596 64A0 A9 00			lda #$00
 11597 64A2 99 49 A5			sta adr.ADJW,y
 11598 64A5			l_1D77
 11599 64A5 99 4A A5			sta adr.ADJW+1,y
 11600
 11601 				; --- ForToDoEpilog
 11602 64A8 EE 2C A5			inc LY
 11603 64AB F0 03 4C 59 62		jne l_1CF5
 11604 64B0 EE 2D A5			inc LY+1
 11605 64B3 4C 59 62			jmp l_1CF5
 11606 64B6			l_1D01
 11607
 11608 				; --- ForToDoEpilog
 11609 64B6 EE 2A A5			inc LX
 11610 64B9 F0 03 4C 3D 62		jne l_1CE0
 11611 64BE EE 2B A5			inc LX+1
 11612 64C1 4C 3D 62			jmp l_1CE0
 11613 64C4			l_1CEC
 11614
 11615 				; optimize OK (service.pas), line = 1929
 11616
 11617 64C4 AD 49 A5			lda adr.ADJW
 11618 64C7 85 9F			sta :STACKORIGIN+9
 11619 64C9 AD 4A A5			lda adr.ADJW+1
 11620 64CC 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 11621 64CE AD 4F A5			lda adr.ADJW+$06
 11622 64D1 85 A0			sta :STACKORIGIN+10
 11623 64D3 AD 50 A5			lda adr.ADJW+1+$06
 11624 64D6 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 11625 64D8 06 A0			asl :STACKORIGIN+10
 11626 64DA 26 B0			rol :STACKORIGIN+STACKWIDTH+10
 11627 64DC A5 9F			lda :STACKORIGIN+9
 11628 64DE 18 65 A0			add :STACKORIGIN+10
 11629 64E1 85 9F			sta :STACKORIGIN+9
 11630 64E3 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 11631 64E5 65 B0			adc :STACKORIGIN+STACKWIDTH+10
 11632 64E7 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 11633 64E9 AD 55 A5			lda adr.ADJW+$0C
 11634 64EC 85 A0			sta :STACKORIGIN+10
 11635 64EE AD 56 A5			lda adr.ADJW+1+$0C
 11636 64F1 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 11637 64F3 06 A0			asl :STACKORIGIN+10
 11638 64F5 26 B0			rol :STACKORIGIN+STACKWIDTH+10
 11639 64F7 06 A0			asl :STACKORIGIN+10
 11640 64F9 26 B0			rol :STACKORIGIN+STACKWIDTH+10
 11641 64FB A5 9F			lda :STACKORIGIN+9
 11642 64FD 18 65 A0			add :STACKORIGIN+10
 11643 6500 85 9F			sta :STACKORIGIN+9
 11644 6502 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 11645 6504 65 B0			adc :STACKORIGIN+STACKWIDTH+10
 11646 6506 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 11647 6508 AD 57 A5			lda adr.ADJW+$0E
 11648 650B 85 A0			sta :STACKORIGIN+10
 11649 650D AD 58 A5			lda adr.ADJW+1+$0E
 11650 6510 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 11651 6512 06 A0			asl :STACKORIGIN+10
 11652 6514 26 B0			rol :STACKORIGIN+STACKWIDTH+10
 11653 6516 06 A0			asl :STACKORIGIN+10
 11654 6518 26 B0			rol :STACKORIGIN+STACKWIDTH+10
 11655 651A 06 A0			asl :STACKORIGIN+10
 11656 651C 26 B0			rol :STACKORIGIN+STACKWIDTH+10
 11657 651E A5 9F			lda :STACKORIGIN+9
 11658 6520 18 65 A0			add :STACKORIGIN+10
 11659 6523 85 9F			sta :STACKORIGIN+9
 11660 6525 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 11661 6527 65 B0			adc :STACKORIGIN+STACKWIDTH+10
 11662 6529 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 11663 652B AD 59 A5			lda adr.ADJW+$10
 11664 652E 85 A0			sta :STACKORIGIN+10
 11665 6530 AD 5A A5			lda adr.ADJW+1+$10
 11666 6533 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 11667 6535 06 A0			asl :STACKORIGIN+10
 11668 6537 26 B0			rol :STACKORIGIN+STACKWIDTH+10
 11669 6539 06 A0			asl :STACKORIGIN+10
 11670 653B 26 B0			rol :STACKORIGIN+STACKWIDTH+10
 11671 653D 06 A0			asl :STACKORIGIN+10
 11672 653F 26 B0			rol :STACKORIGIN+STACKWIDTH+10
 11673 6541 06 A0			asl :STACKORIGIN+10
 11674 6543 26 B0			rol :STACKORIGIN+STACKWIDTH+10
 11675 6545 A5 9F			lda :STACKORIGIN+9
 11676 6547 18 65 A0			add :STACKORIGIN+10
 11677 654A 85 9F			sta :STACKORIGIN+9
 11678 654C A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 11679 654E 65 B0			adc :STACKORIGIN+STACKWIDTH+10
 11680 6550 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 11681 6552 AD 53 A5			lda adr.ADJW+$0A
 11682 6555 85 A0			sta :STACKORIGIN+10
 11683 6557 AD 54 A5			lda adr.ADJW+1+$0A
 11684 655A 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 11685 655C 06 A0			asl :STACKORIGIN+10
 11686 655E 26 B0			rol :STACKORIGIN+STACKWIDTH+10
 11687 6560 06 A0			asl :STACKORIGIN+10
 11688 6562 26 B0			rol :STACKORIGIN+STACKWIDTH+10
 11689 6564 06 A0			asl :STACKORIGIN+10
 11690 6566 26 B0			rol :STACKORIGIN+STACKWIDTH+10
 11691 6568 06 A0			asl :STACKORIGIN+10
 11692 656A 26 B0			rol :STACKORIGIN+STACKWIDTH+10
 11693 656C 06 A0			asl :STACKORIGIN+10
 11694 656E 26 B0			rol :STACKORIGIN+STACKWIDTH+10
 11695 6570 A5 9F			lda :STACKORIGIN+9
 11696 6572 18 65 A0			add :STACKORIGIN+10
 11697 6575 85 9F			sta :STACKORIGIN+9
 11698 6577 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 11699 6579 65 B0			adc :STACKORIGIN+STACKWIDTH+10
 11700 657B 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 11701 657D AD 4D A5			lda adr.ADJW+$04
 11702 6580 85 A0			sta :STACKORIGIN+10
 11703 6582 AD 4E A5			lda adr.ADJW+1+$04
 11704 6585 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 11705 6587 06 A0			asl :STACKORIGIN+10
 11706 6589 26 B0			rol :STACKORIGIN+STACKWIDTH+10
 11707 658B 06 A0			asl :STACKORIGIN+10
 11708 658D 26 B0			rol :STACKORIGIN+STACKWIDTH+10
 11709 658F 06 A0			asl :STACKORIGIN+10
 11710 6591 26 B0			rol :STACKORIGIN+STACKWIDTH+10
 11711 6593 06 A0			asl :STACKORIGIN+10
 11712 6595 26 B0			rol :STACKORIGIN+STACKWIDTH+10
 11713 6597 06 A0			asl :STACKORIGIN+10
 11714 6599 26 B0			rol :STACKORIGIN+STACKWIDTH+10
 11715 659B 06 A0			asl :STACKORIGIN+10
 11716 659D 26 B0			rol :STACKORIGIN+STACKWIDTH+10
 11717 659F A5 9F			lda :STACKORIGIN+9
 11718 65A1 18 65 A0			add :STACKORIGIN+10
 11719 65A4 85 9F			sta :STACKORIGIN+9
 11720 65A6 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 11721 65A8 65 B0			adc :STACKORIGIN+STACKWIDTH+10
 11722 65AA 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 11723 65AC AD 4B A5			lda adr.ADJW+$02
 11724 65AF 85 A0			sta :STACKORIGIN+10
 11725 65B1 AD 4C A5			lda adr.ADJW+1+$02
 11726 65B4 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 11727 65B6 06 A0			asl :STACKORIGIN+10
 11728 65B8 26 B0			rol :STACKORIGIN+STACKWIDTH+10
 11729 65BA 06 A0			asl :STACKORIGIN+10
 11730 65BC 26 B0			rol :STACKORIGIN+STACKWIDTH+10
 11731 65BE 06 A0			asl :STACKORIGIN+10
 11732 65C0 26 B0			rol :STACKORIGIN+STACKWIDTH+10
 11733 65C2 06 A0			asl :STACKORIGIN+10
 11734 65C4 26 B0			rol :STACKORIGIN+STACKWIDTH+10
 11735 65C6 06 A0			asl :STACKORIGIN+10
 11736 65C8 26 B0			rol :STACKORIGIN+STACKWIDTH+10
 11737 65CA 06 A0			asl :STACKORIGIN+10
 11738 65CC 26 B0			rol :STACKORIGIN+STACKWIDTH+10
 11739 65CE 06 A0			asl :STACKORIGIN+10
 11740 65D0 26 B0			rol :STACKORIGIN+STACKWIDTH+10
 11741 65D2 A5 9F			lda :STACKORIGIN+9
 11742 65D4 18 65 A0			add :STACKORIGIN+10
 11743 65D7 8D 3C A5			sta AROUND
 11744 65DA A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 11745 65DC 65 B0			adc :STACKORIGIN+STACKWIDTH+10
 11746 65DE 8D 3D A5			sta AROUND+1
 11747
 11748 				; optimize OK (service.pas), line = 1960
 11749
 11750 65E1 AD 48 A5			lda TOUCH
 11751 65E4 F0 03 4C A2 66		jne l_1E16
 11752
 11753 				; optimize OK (service.pas), line = 1962
 11754
 11755 65E9 AD 3C A5			lda AROUND
 11756 65EC 29 83			and #$83
 11757 65EE D0 0A			jne l_1E2C
 11758 65F0 A9 11			lda #$11
 11759 65F2 8D 3A A5			sta DEFLECT
 11760 65F5 A9 00			lda #$00
 11761 65F7 8D 3B A5			sta DEFLECT+1
 11762 65FA			l_1E2C
 11763
 11764 				; optimize OK (service.pas), line = 1963
 11765
 11766 65FA AD 3C A5			lda AROUND
 11767 65FD 29 83			and #$83
 11768 65FF C9 01			cmp #$01
 11769 6601 D0 0A			jne l_1E48
 11770 6603 A9 33			lda #$33
 11771 6605 8D 3A A5			sta DEFLECT
 11772 6608 A9 00			lda #$00
 11773 660A 8D 3B A5			sta DEFLECT+1
 11774 660D			l_1E48
 11775
 11776 				; optimize OK (service.pas), line = 1964
 11777
 11778 660D AD 3C A5			lda AROUND
 11779 6610 29 83			and #$83
 11780 6612 C9 02			cmp #$02
 11781 6614 D0 0A			jne l_1E64
 11782 6616 A9 10			lda #$10
 11783 6618 8D 3A A5			sta DEFLECT
 11784 661B A9 00			lda #$00
 11785 661D 8D 3B A5			sta DEFLECT+1
 11786 6620			l_1E64
 11787
 11788 				; optimize OK (service.pas), line = 1965
 11789
 11790 6620 AD 3C A5			lda AROUND
 11791 6623 29 83			and #$83
 11792 6625 C9 03			cmp #$03
 11793 6627 D0 0A			jne l_1E80
 11794 6629 A9 12			lda #$12
 11795 662B 8D 3A A5			sta DEFLECT
 11796 662E A9 00			lda #$00
 11797 6630 8D 3B A5			sta DEFLECT+1
 11798 6633			l_1E80
 11799
 11800 				; optimize OK (service.pas), line = 1966
 11801
 11802 6633 AD 3C A5			lda AROUND
 11803 6636 29 83			and #$83
 11804 6638 C9 80			cmp #$80
 11805 663A D0 0A			jne l_1E9C
 11806 663C A9 01			lda #$01
 11807 663E 8D 3A A5			sta DEFLECT
 11808 6641 A9 00			lda #$00
 11809 6643 8D 3B A5			sta DEFLECT+1
 11810 6646			l_1E9C
 11811
 11812 				; optimize OK (service.pas), line = 1967
 11813
 11814 6646 AD 3C A5			lda AROUND
 11815 6649 29 83			and #$83
 11816 664B C9 81			cmp #$81
 11817 664D D0 0A			jne l_1EB8
 11818 664F A9 21			lda #$21
 11819 6651 8D 3A A5			sta DEFLECT
 11820 6654 A9 00			lda #$00
 11821 6656 8D 3B A5			sta DEFLECT+1
 11822 6659			l_1EB8
 11823
 11824 				; optimize OK (service.pas), line = 1968
 11825
 11826 6659 AD 3C A5			lda AROUND
 11827 665C 29 83			and #$83
 11828 665E C9 82			cmp #$82
 11829 6660 D0 0A			jne l_1ED4
 11830 6662 A9 11			lda #$11
 11831 6664 8D 3A A5			sta DEFLECT
 11832 6667 A9 00			lda #$00
 11833 6669 8D 3B A5			sta DEFLECT+1
 11834 666C			l_1ED4
 11835
 11836 				; optimize OK (service.pas), line = 1970
 11837
 11838 666C A9 05			lda #$05
 11839 666E 8D 46 A5			sta EMERGENCY
 11840
 11841 				; optimize OK (service.pas), line = 1971
 11842
 11843 6671 AD 24 A5			lda YB
 11844 6674 38 E9 01			sub #$01
 11845 6677 8D 0E A5			sta SHOOT_BLOCK.YB
 11846 667A AD 25 A5			lda YB+1
 11847 667D E9 00			sbc #$00
 11848 667F 8D 0F A5			sta SHOOT_BLOCK.YB+1
 11849 6682 AD 22 A5			lda XB
 11850 6685 38 E9 01			sub #$01
 11851 6688 8D 0C A5			sta SHOOT_BLOCK.XB
 11852 668B AD 23 A5			lda XB+1
 11853 668E E9 00			sbc #$00
 11854 6690 8D 0D A5			sta SHOOT_BLOCK.XB+1
 11855 6693 AD 1A A5			lda BALL
 11856 6696 8D 10 A5			sta SHOOT_BLOCK.BALL
 11857 6699 AD 1B A5			lda BALL+1
 11858 669C 8D 11 A5			sta SHOOT_BLOCK.BALL+1
 11859 669F 20 B5 55			jsr SHOOT_BLOCK
 11860 66A2			l_1E16
 11861
 11862 				; optimize OK (service.pas), line = 1976
 11863
 11864 66A2 AD 48 A5			lda TOUCH
 11865 66A5 C9 01			cmp #$01
 11866 66A7 F0 03 4C 65 67		jne l_1F02
 11867
 11868 				; optimize OK (service.pas), line = 1978
 11869
 11870 66AC AD 3C A5			lda AROUND
 11871 66AF 29 0E			and #$0E
 11872 66B1 D0 0A			jne l_1F18
 11873 66B3 A9 21			lda #$21
 11874 66B5 8D 3A A5			sta DEFLECT
 11875 66B8 A9 00			lda #$00
 11876 66BA 8D 3B A5			sta DEFLECT+1
 11877 66BD			l_1F18
 11878
 11879 				; optimize OK (service.pas), line = 1979
 11880
 11881 66BD AD 3C A5			lda AROUND
 11882 66C0 29 0E			and #$0E
 11883 66C2 C9 02			cmp #$02
 11884 66C4 D0 0A			jne l_1F34
 11885 66C6 A9 20			lda #$20
 11886 66C8 8D 3A A5			sta DEFLECT
 11887 66CB A9 00			lda #$00
 11888 66CD 8D 3B A5			sta DEFLECT+1
 11889 66D0			l_1F34
 11890
 11891 				; optimize OK (service.pas), line = 1980
 11892
 11893 66D0 AD 3C A5			lda AROUND
 11894 66D3 29 0E			and #$0E
 11895 66D5 C9 04			cmp #$04
 11896 66D7 D0 0A			jne l_1F50
 11897 66D9 A9 33			lda #$33
 11898 66DB 8D 3A A5			sta DEFLECT
 11899 66DE A9 00			lda #$00
 11900 66E0 8D 3B A5			sta DEFLECT+1
 11901 66E3			l_1F50
 11902
 11903 				; optimize OK (service.pas), line = 1981
 11904
 11905 66E3 AD 3C A5			lda AROUND
 11906 66E6 29 0E			and #$0E
 11907 66E8 C9 06			cmp #$06
 11908 66EA D0 0A			jne l_1F6C
 11909 66EC A9 22			lda #$22
 11910 66EE 8D 3A A5			sta DEFLECT
 11911 66F1 A9 00			lda #$00
 11912 66F3 8D 3B A5			sta DEFLECT+1
 11913 66F6			l_1F6C
 11914
 11915 				; optimize OK (service.pas), line = 1982
 11916
 11917 66F6 AD 3C A5			lda AROUND
 11918 66F9 29 0E			and #$0E
 11919 66FB C9 08			cmp #$08
 11920 66FD D0 0A			jne l_1F88
 11921 66FF A9 01			lda #$01
 11922 6701 8D 3A A5			sta DEFLECT
 11923 6704 A9 00			lda #$00
 11924 6706 8D 3B A5			sta DEFLECT+1
 11925 6709			l_1F88
 11926
 11927 				; optimize OK (service.pas), line = 1983
 11928
 11929 6709 AD 3C A5			lda AROUND
 11930 670C 29 0E			and #$0E
 11931 670E C9 0A			cmp #$0A
 11932 6710 D0 0A			jne l_1FA4
 11933 6712 A9 21			lda #$21
 11934 6714 8D 3A A5			sta DEFLECT
 11935 6717 A9 00			lda #$00
 11936 6719 8D 3B A5			sta DEFLECT+1
 11937 671C			l_1FA4
 11938
 11939 				; optimize OK (service.pas), line = 1984
 11940
 11941 671C AD 3C A5			lda AROUND
 11942 671F 29 0E			and #$0E
 11943 6721 C9 0C			cmp #$0C
 11944 6723 D0 0A			jne l_1FC0
 11945 6725 A9 11			lda #$11
 11946 6727 8D 3A A5			sta DEFLECT
 11947 672A A9 00			lda #$00
 11948 672C 8D 3B A5			sta DEFLECT+1
 11949 672F			l_1FC0
 11950
 11951 				; optimize OK (service.pas), line = 1986
 11952
 11953 672F A9 08			lda #$08
 11954 6731 8D 46 A5			sta EMERGENCY
 11955
 11956 				; optimize OK (service.pas), line = 1987
 11957
 11958 6734 AD 24 A5			lda YB
 11959 6737 38 E9 01			sub #$01
 11960 673A 8D 0E A5			sta SHOOT_BLOCK.YB
 11961 673D AD 25 A5			lda YB+1
 11962 6740 E9 00			sbc #$00
 11963 6742 8D 0F A5			sta SHOOT_BLOCK.YB+1
 11964 6745 AD 22 A5			lda XB
 11965 6748 18 69 01			add #$01
 11966 674B 8D 0C A5			sta SHOOT_BLOCK.XB
 11967 674E AD 23 A5			lda XB+1
 11968 6751 69 00			adc #$00
 11969 6753 8D 0D A5			sta SHOOT_BLOCK.XB+1
 11970 6756 AD 1A A5			lda BALL
 11971 6759 8D 10 A5			sta SHOOT_BLOCK.BALL
 11972 675C AD 1B A5			lda BALL+1
 11973 675F 8D 11 A5			sta SHOOT_BLOCK.BALL+1
 11974 6762 20 B5 55			jsr SHOOT_BLOCK
 11975 6765			l_1F02
 11976
 11977 				; optimize OK (service.pas), line = 1990
 11978
 11979 6765 AD 48 A5			lda TOUCH
 11980 6768 C9 02			cmp #$02
 11981 676A F0 03 4C 28 68		jne l_1FEE
 11982
 11983 				; optimize OK (service.pas), line = 1992
 11984
 11985 676F AD 3C A5			lda AROUND
 11986 6772 29 E0			and #$E0
 11987 6774 D0 0A			jne l_2004
 11988 6776 A9 12			lda #$12
 11989 6778 8D 3A A5			sta DEFLECT
 11990 677B A9 00			lda #$00
 11991 677D 8D 3B A5			sta DEFLECT+1
 11992 6780			l_2004
 11993
 11994 				; optimize OK (service.pas), line = 1993
 11995
 11996 6780 AD 3C A5			lda AROUND
 11997 6783 29 E0			and #$E0
 11998 6785 C9 20			cmp #$20
 11999 6787 D0 0A			jne l_2020
 12000 6789 A9 10			lda #$10
 12001 678B 8D 3A A5			sta DEFLECT
 12002 678E A9 00			lda #$00
 12003 6790 8D 3B A5			sta DEFLECT+1
 12004 6793			l_2020
 12005
 12006 				; optimize OK (service.pas), line = 1994
 12007
 12008 6793 AD 3C A5			lda AROUND
 12009 6796 29 E0			and #$E0
 12010 6798 C9 40			cmp #$40
 12011 679A D0 0A			jne l_203C
 12012 679C A9 33			lda #$33
 12013 679E 8D 3A A5			sta DEFLECT
 12014 67A1 A9 00			lda #$00
 12015 67A3 8D 3B A5			sta DEFLECT+1
 12016 67A6			l_203C
 12017
 12018 				; optimize OK (service.pas), line = 1995
 12019
 12020 67A6 AD 3C A5			lda AROUND
 12021 67A9 29 E0			and #$E0
 12022 67AB C9 60			cmp #$60
 12023 67AD D0 0A			jne l_2058
 12024 67AF A9 11			lda #$11
 12025 67B1 8D 3A A5			sta DEFLECT
 12026 67B4 A9 00			lda #$00
 12027 67B6 8D 3B A5			sta DEFLECT+1
 12028 67B9			l_2058
 12029
 12030 				; optimize OK (service.pas), line = 1996
 12031
 12032 67B9 AD 3C A5			lda AROUND
 12033 67BC 29 E0			and #$E0
 12034 67BE C9 80			cmp #$80
 12035 67C0 D0 0A			jne l_2074
 12036 67C2 A9 02			lda #$02
 12037 67C4 8D 3A A5			sta DEFLECT
 12038 67C7 A9 00			lda #$00
 12039 67C9 8D 3B A5			sta DEFLECT+1
 12040 67CC			l_2074
 12041
 12042 				; optimize OK (service.pas), line = 1997
 12043
 12044 67CC AD 3C A5			lda AROUND
 12045 67CF 29 E0			and #$E0
 12046 67D1 C9 A0			cmp #$A0
 12047 67D3 D0 0A			jne l_2090
 12048 67D5 A9 12			lda #$12
 12049 67D7 8D 3A A5			sta DEFLECT
 12050 67DA A9 00			lda #$00
 12051 67DC 8D 3B A5			sta DEFLECT+1
 12052 67DF			l_2090
 12053
 12054 				; optimize OK (service.pas), line = 1998
 12055
 12056 67DF AD 3C A5			lda AROUND
 12057 67E2 29 E0			and #$E0
 12058 67E4 C9 C0			cmp #$C0
 12059 67E6 D0 0A			jne l_20AC
 12060 67E8 A9 22			lda #$22
 12061 67EA 8D 3A A5			sta DEFLECT
 12062 67ED A9 00			lda #$00
 12063 67EF 8D 3B A5			sta DEFLECT+1
 12064 67F2			l_20AC
 12065
 12066 				; optimize OK (service.pas), line = 2000
 12067
 12068 67F2 A9 06			lda #$06
 12069 67F4 8D 46 A5			sta EMERGENCY
 12070
 12071 				; optimize OK (service.pas), line = 2001
 12072
 12073 67F7 AD 24 A5			lda YB
 12074 67FA 18 69 01			add #$01
 12075 67FD 8D 0E A5			sta SHOOT_BLOCK.YB
 12076 6800 AD 25 A5			lda YB+1
 12077 6803 69 00			adc #$00
 12078 6805 8D 0F A5			sta SHOOT_BLOCK.YB+1
 12079 6808 AD 22 A5			lda XB
 12080 680B 38 E9 01			sub #$01
 12081 680E 8D 0C A5			sta SHOOT_BLOCK.XB
 12082 6811 AD 23 A5			lda XB+1
 12083 6814 E9 00			sbc #$00
 12084 6816 8D 0D A5			sta SHOOT_BLOCK.XB+1
 12085 6819 AD 1A A5			lda BALL
 12086 681C 8D 10 A5			sta SHOOT_BLOCK.BALL
 12087 681F AD 1B A5			lda BALL+1
 12088 6822 8D 11 A5			sta SHOOT_BLOCK.BALL+1
 12089 6825 20 B5 55			jsr SHOOT_BLOCK
 12090 6828			l_1FEE
 12091
 12092 				; optimize OK (service.pas), line = 2004
 12093
 12094 6828 AD 48 A5			lda TOUCH
 12095 682B C9 03			cmp #$03
 12096 682D F0 03 4C EB 68		jne l_20DA
 12097
 12098 				; optimize OK (service.pas), line = 2006
 12099
 12100 6832 AD 3C A5			lda AROUND
 12101 6835 29 38			and #$38
 12102 6837 D0 0A			jne l_20F0
 12103 6839 A9 22			lda #$22
 12104 683B 8D 3A A5			sta DEFLECT
 12105 683E A9 00			lda #$00
 12106 6840 8D 3B A5			sta DEFLECT+1
 12107 6843			l_20F0
 12108
 12109 				; optimize OK (service.pas), line = 2007
 12110
 12111 6843 AD 3C A5			lda AROUND
 12112 6846 29 38			and #$38
 12113 6848 C9 08			cmp #$08
 12114 684A D0 0A			jne l_210C
 12115 684C A9 02			lda #$02
 12116 684E 8D 3A A5			sta DEFLECT
 12117 6851 A9 00			lda #$00
 12118 6853 8D 3B A5			sta DEFLECT+1
 12119 6856			l_210C
 12120
 12121 				; optimize OK (service.pas), line = 2008
 12122
 12123 6856 AD 3C A5			lda AROUND
 12124 6859 29 38			and #$38
 12125 685B C9 10			cmp #$10
 12126 685D D0 0A			jne l_2128
 12127 685F A9 33			lda #$33
 12128 6861 8D 3A A5			sta DEFLECT
 12129 6864 A9 00			lda #$00
 12130 6866 8D 3B A5			sta DEFLECT+1
 12131 6869			l_2128
 12132
 12133 				; optimize OK (service.pas), line = 2009
 12134
 12135 6869 AD 3C A5			lda AROUND
 12136 686C 29 38			and #$38
 12137 686E C9 18			cmp #$18
 12138 6870 D0 0A			jne l_2144
 12139 6872 A9 12			lda #$12
 12140 6874 8D 3A A5			sta DEFLECT
 12141 6877 A9 00			lda #$00
 12142 6879 8D 3B A5			sta DEFLECT+1
 12143 687C			l_2144
 12144
 12145 				; optimize OK (service.pas), line = 2010
 12146
 12147 687C AD 3C A5			lda AROUND
 12148 687F 29 38			and #$38
 12149 6881 C9 20			cmp #$20
 12150 6883 D0 0A			jne l_2160
 12151 6885 A9 20			lda #$20
 12152 6887 8D 3A A5			sta DEFLECT
 12153 688A A9 00			lda #$00
 12154 688C 8D 3B A5			sta DEFLECT+1
 12155 688F			l_2160
 12156
 12157 				; optimize OK (service.pas), line = 2011
 12158
 12159 688F AD 3C A5			lda AROUND
 12160 6892 29 38			and #$38
 12161 6894 C9 28			cmp #$28
 12162 6896 D0 0A			jne l_217C
 12163 6898 A9 22			lda #$22
 12164 689A 8D 3A A5			sta DEFLECT
 12165 689D A9 00			lda #$00
 12166 689F 8D 3B A5			sta DEFLECT+1
 12167 68A2			l_217C
 12168
 12169 				; optimize OK (service.pas), line = 2012
 12170
 12171 68A2 AD 3C A5			lda AROUND
 12172 68A5 29 38			and #$38
 12173 68A7 C9 30			cmp #$30
 12174 68A9 D0 0A			jne l_2198
 12175 68AB A9 21			lda #$21
 12176 68AD 8D 3A A5			sta DEFLECT
 12177 68B0 A9 00			lda #$00
 12178 68B2 8D 3B A5			sta DEFLECT+1
 12179 68B5			l_2198
 12180
 12181 				; optimize OK (service.pas), line = 2014
 12182
 12183 68B5 A9 07			lda #$07
 12184 68B7 8D 46 A5			sta EMERGENCY
 12185
 12186 				; optimize OK (service.pas), line = 2015
 12187
 12188 68BA AD 24 A5			lda YB
 12189 68BD 18 69 01			add #$01
 12190 68C0 8D 0E A5			sta SHOOT_BLOCK.YB
 12191 68C3 AD 25 A5			lda YB+1
 12192 68C6 69 00			adc #$00
 12193 68C8 8D 0F A5			sta SHOOT_BLOCK.YB+1
 12194 68CB AD 22 A5			lda XB
 12195 68CE 18 69 01			add #$01
 12196 68D1 8D 0C A5			sta SHOOT_BLOCK.XB
 12197 68D4 AD 23 A5			lda XB+1
 12198 68D7 69 00			adc #$00
 12199 68D9 8D 0D A5			sta SHOOT_BLOCK.XB+1
 12200 68DC AD 1A A5			lda BALL
 12201 68DF 8D 10 A5			sta SHOOT_BLOCK.BALL
 12202 68E2 AD 1B A5			lda BALL+1
 12203 68E5 8D 11 A5			sta SHOOT_BLOCK.BALL+1
 12204 68E8 20 B5 55			jsr SHOOT_BLOCK
 12205 68EB			l_20DA
 12206
 12207 				; optimize OK (service.pas), line = 2021
 12208
 12209 68EB AD 3A A5			lda DEFLECT
 12210 68EE 85 9F			sta :STACKORIGIN+9
 12211 68F0 A0 00			ldy #$00
 12212 68F2 AD 3B A5			lda DEFLECT+1
 12213 68F5 10 01			spl
 12214 68F7 88				dey
 12215 68F8 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 12216 68FA 84 BF			sty :STACKORIGIN+STACKWIDTH*2+9
 12217 68FC 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
 12218 68FE 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 12219 6900 66 9F			ror :STACKORIGIN+9
 12220 6902 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
 12221 6904 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 12222 6906 66 9F			ror :STACKORIGIN+9
 12223 6908 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
 12224 690A 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 12225 690C 66 9F			ror :STACKORIGIN+9
 12226 690E 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
 12227 6910 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 12228 6912 66 9F			ror :STACKORIGIN+9
 12229 6914 A5 9F			lda :STACKORIGIN+9
 12230 6916 8D 42 A5			sta MYX
 12231 6919 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 12232 691B 8D 43 A5			sta MYX+1
 12233
 12234 				; optimize OK (service.pas), line = 2022
 12235
 12236 691E AD 3A A5			lda DEFLECT
 12237 6921 29 0F			and #$0F
 12238 6923 8D 44 A5			sta MYY
 12239 6926 A9 00			lda #$00
 12240 6928 8D 45 A5			sta MYY+1
 12241
 12242 				; optimize OK (service.pas), line = 2024
 12243
 12244 692B AD 43 A5			lda MYX+1
 12245 692E D0 05			bne @+
 12246 6930 AD 42 A5			lda MYX
 12247 6933 C9 01			cmp #$01
 12248 				@
 12249 6935 D0 50			jne l_21D7
 12250 6937 AC 1A A5 84 84 AC + 	mwy BALL :bp2
 12251 6941 A0 10			ldy #BALL.SPEEDX-DATAORIGIN
 12252 6943 B1 84			lda (:bp2),y
 12253 6945 85 8A			sta SYSTEM.ABS.@010184000.X
 12254 6947 C8				iny
 12255 6948 B1 84			lda (:bp2),y
 12256 694A 85 8B			sta SYSTEM.ABS.@010184000.X+1
 12257 694C 20 6D 1B			jsr SYSTEM.ABS.@010184000
 12258 694F E8				inx
 12259 6950 A5 92 95 96			mva SYSTEM.ABS.@010184000.RESULT :STACKORIGIN,x
 12260 6954 A5 93 95 A6			mva SYSTEM.ABS.@010184000.RESULT+1 :STACKORIGIN+STACKWIDTH,x
 12261 6958 A9 00			lda #$00
 12262 695A 38 F5 96			sub :STACKORIGIN,x
 12263 695D 95 96			sta :STACKORIGIN,x
 12264 695F A9 00			lda #$00
 12265 6961 F5 A6			sbc :STACKORIGIN+STACKWIDTH,x
 12266 6963 95 A6			sta :STACKORIGIN+STACKWIDTH,x
 12267 6965 A9 00			lda #$00
 12268 6967 E9 00			sbc #$00
 12269 6969 95 B6			sta :STACKORIGIN+STACKWIDTH*2,x
 12270 696B A9 00			lda #$00
 12271 696D E9 00			sbc #$00
 12272 696F 95 C6			sta :STACKORIGIN+STACKWIDTH*3,x
 12273 6971 AC 1A A5 84 84 AC + 	mwy BALL :bp2
 12274 697B A0 10			ldy #BALL.SPEEDX-DATAORIGIN
 12275 697D B5 96			lda :STACKORIGIN,x
 12276 697F 91 84			sta (:bp2),y
 12277 6981 C8				iny
 12278 6982 B5 A6			lda :STACKORIGIN+STACKWIDTH,x
 12279 6984 91 84			sta (:bp2),y
 12280 6986 CA				dex
 12281 6987			l_21D7
 12282
 12283 				; optimize OK (service.pas), line = 2025
 12284
 12285 6987 AD 43 A5			lda MYX+1
 12286 698A D0 05			bne @+
 12287 698C AD 42 A5			lda MYX
 12288 698F C9 02			cmp #$02
 12289 				@
 12290 6991 D0 2D			jne l_21F4
 12291 6993 AC 1A A5 84 84 AC + 	mwy BALL :bp2
 12292 699D A0 10			ldy #BALL.SPEEDX-DATAORIGIN
 12293 699F B1 84			lda (:bp2),y
 12294 69A1 85 8A			sta SYSTEM.ABS.@010184000.X
 12295 69A3 C8				iny
 12296 69A4 B1 84			lda (:bp2),y
 12297 69A6 85 8B			sta SYSTEM.ABS.@010184000.X+1
 12298 69A8 20 6D 1B			jsr SYSTEM.ABS.@010184000
 12299 69AB AC 1A A5 84 84 AC + 	mwy BALL :bp2
 12300 69B5 A0 10			ldy #BALL.SPEEDX-DATAORIGIN
 12301 69B7 A5 92			lda SYSTEM.ABS.@010184000.RESULT
 12302 69B9 91 84			sta (:bp2),y
 12303 69BB C8				iny
 12304 69BC A5 93			lda SYSTEM.ABS.@010184000.RESULT+1
 12305 69BE 91 84			sta (:bp2),y
 12306 69C0			l_21F4
 12307
 12308 				; optimize OK (service.pas), line = 2026
 12309
 12310 69C0 AD 43 A5			lda MYX+1
 12311 69C3 D0 05			bne @+
 12312 69C5 AD 42 A5			lda MYX
 12313 69C8 C9 03			cmp #$03
 12314 				@
 12315 69CA D0 25			jne l_220E
 12316 69CC AC 1A A5 84 84 AC + 	mwy BALL :bp2
 12317 69D6 A0 10			ldy #BALL.SPEEDX-DATAORIGIN
 12318 69D8 A9 00			lda #$00
 12319 69DA 38 F1 84			sub (:bp2),y
 12320 69DD 85 9F			sta :STACKORIGIN+9
 12321 69DF C8				iny
 12322 69E0 A9 00			lda #$00
 12323 69E2 F1 84			sbc (:bp2),y
 12324 69E4 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 12325 69E6 A0 10			ldy #BALL.SPEEDX-DATAORIGIN
 12326 69E8 A5 9F			lda :STACKORIGIN+9
 12327 69EA 91 84			sta (:bp2),y
 12328 69EC C8				iny
 12329 69ED A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 12330 69EF 91 84			sta (:bp2),y
 12331 69F1			l_220E
 12332
 12333 				; optimize OK (service.pas), line = 2028
 12334
 12335 69F1 AD 45 A5			lda MYY+1
 12336 69F4 D0 05			bne @+
 12337 69F6 AD 44 A5			lda MYY
 12338 69F9 C9 01			cmp #$01
 12339 				@
 12340 69FB D0 50			jne l_222A
 12341 69FD AC 1A A5 84 84 AC + 	mwy BALL :bp2
 12342 6A07 A0 12			ldy #BALL.SPEEDY-DATAORIGIN
 12343 6A09 B1 84			lda (:bp2),y
 12344 6A0B 85 8A			sta SYSTEM.ABS.@010184000.X
 12345 6A0D C8				iny
 12346 6A0E B1 84			lda (:bp2),y
 12347 6A10 85 8B			sta SYSTEM.ABS.@010184000.X+1
 12348 6A12 20 6D 1B			jsr SYSTEM.ABS.@010184000
 12349 6A15 E8				inx
 12350 6A16 A5 92 95 96			mva SYSTEM.ABS.@010184000.RESULT :STACKORIGIN,x
 12351 6A1A A5 93 95 A6			mva SYSTEM.ABS.@010184000.RESULT+1 :STACKORIGIN+STACKWIDTH,x
 12352 6A1E A9 00			lda #$00
 12353 6A20 38 F5 96			sub :STACKORIGIN,x
 12354 6A23 95 96			sta :STACKORIGIN,x
 12355 6A25 A9 00			lda #$00
 12356 6A27 F5 A6			sbc :STACKORIGIN+STACKWIDTH,x
 12357 6A29 95 A6			sta :STACKORIGIN+STACKWIDTH,x
 12358 6A2B A9 00			lda #$00
 12359 6A2D E9 00			sbc #$00
 12360 6A2F 95 B6			sta :STACKORIGIN+STACKWIDTH*2,x
 12361 6A31 A9 00			lda #$00
 12362 6A33 E9 00			sbc #$00
 12363 6A35 95 C6			sta :STACKORIGIN+STACKWIDTH*3,x
 12364 6A37 AC 1A A5 84 84 AC + 	mwy BALL :bp2
 12365 6A41 A0 12			ldy #BALL.SPEEDY-DATAORIGIN
 12366 6A43 B5 96			lda :STACKORIGIN,x
 12367 6A45 91 84			sta (:bp2),y
 12368 6A47 C8				iny
 12369 6A48 B5 A6			lda :STACKORIGIN+STACKWIDTH,x
 12370 6A4A 91 84			sta (:bp2),y
 12371 6A4C CA				dex
 12372 6A4D			l_222A
 12373
 12374 				; optimize OK (service.pas), line = 2029
 12375
 12376 6A4D AD 45 A5			lda MYY+1
 12377 6A50 D0 05			bne @+
 12378 6A52 AD 44 A5			lda MYY
 12379 6A55 C9 02			cmp #$02
 12380 				@
 12381 6A57 D0 2D			jne l_2247
 12382 6A59 AC 1A A5 84 84 AC + 	mwy BALL :bp2
 12383 6A63 A0 12			ldy #BALL.SPEEDY-DATAORIGIN
 12384 6A65 B1 84			lda (:bp2),y
 12385 6A67 85 8A			sta SYSTEM.ABS.@010184000.X
 12386 6A69 C8				iny
 12387 6A6A B1 84			lda (:bp2),y
 12388 6A6C 85 8B			sta SYSTEM.ABS.@010184000.X+1
 12389 6A6E 20 6D 1B			jsr SYSTEM.ABS.@010184000
 12390 6A71 AC 1A A5 84 84 AC + 	mwy BALL :bp2
 12391 6A7B A0 12			ldy #BALL.SPEEDY-DATAORIGIN
 12392 6A7D A5 92			lda SYSTEM.ABS.@010184000.RESULT
 12393 6A7F 91 84			sta (:bp2),y
 12394 6A81 C8				iny
 12395 6A82 A5 93			lda SYSTEM.ABS.@010184000.RESULT+1
 12396 6A84 91 84			sta (:bp2),y
 12397 6A86			l_2247
 12398
 12399 				; optimize OK (service.pas), line = 2030
 12400
 12401 6A86 AD 45 A5			lda MYY+1
 12402 6A89 D0 05			bne @+
 12403 6A8B AD 44 A5			lda MYY
 12404 6A8E C9 03			cmp #$03
 12405 				@
 12406 6A90 D0 25			jne l_2261
 12407 6A92 AC 1A A5 84 84 AC + 	mwy BALL :bp2
 12408 6A9C A0 12			ldy #BALL.SPEEDY-DATAORIGIN
 12409 6A9E A9 00			lda #$00
 12410 6AA0 38 F1 84			sub (:bp2),y
 12411 6AA3 85 9F			sta :STACKORIGIN+9
 12412 6AA5 C8				iny
 12413 6AA6 A9 00			lda #$00
 12414 6AA8 F1 84			sbc (:bp2),y
 12415 6AAA 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 12416 6AAC A0 12			ldy #BALL.SPEEDY-DATAORIGIN
 12417 6AAE A5 9F			lda :STACKORIGIN+9
 12418 6AB0 91 84			sta (:bp2),y
 12419 6AB2 C8				iny
 12420 6AB3 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 12421 6AB5 91 84			sta (:bp2),y
 12422 6AB7			l_2261
 12423 6AB7			l_1C92
 12424 6AB7			l_19D9
 12425
 12426 				; optimize OK (service.pas), line = 2040
 12427
 12428 6AB7 AC 1A A5 84 84 AC + 	mwy BALL :bp2
 12429 6AC1 A0 16			ldy #BALL.BRWHIT-DATAORIGIN
 12430 6AC3 B1 84			lda (:bp2),y
 12431 6AC5 C9 65			cmp #$65
 12432 6AC7 B0 03 4C EB 6C		jcc l_2282
 12433
 12434 				; optimize OK (service.pas), line = 2043
 12435
 12436 6ACC AD 46 A5			lda EMERGENCY
 12437 6ACF C9 FF			cmp #$FF
 12438 6AD1 D0 05			jne l_2295
 12439 6AD3 A9 04			lda #$04
 12440 6AD5 20 F4 26			jsr FATAL_ERROR
 12441 6AD8			l_2295
 12442
 12443 				; optimize OK (service.pas), line = 2045
 12444
 12445 6AD8 AC 46 A5			ldy EMERGENCY
 12446 6ADB B9 6D 10			lda adr.EMERG_DEV,y
 12447 6ADE 8D 3E A5			sta MIMAX
 12448 6AE1 A9 00			lda #$00
 12449 6AE3 8D 3F A5			sta MIMAX+1
 12450
 12451 				; optimize OK (service.pas), line = 2071
 12452
 12453 6AE6 AD 46 A5			lda EMERGENCY
 12454 6AE9 8D 5B A5			sta @CASETMP_0008
 12455 6AEC C9 05			cmp #$05
 12456 6AEE D0 2F			jne l_22AE
 12457 				@
 12458
 12459 				; optimize OK (service.pas), line = 2074
 12460
 12461 6AF0 AD 4F A5			lda adr.ADJW+$06
 12462 6AF3 0D 50 A5			ora adr.ADJW+1+$06
 12463 6AF6 D0 0D			jne l_22C4
 12464 6AF8 AD 3E A5			lda MIMAX
 12465 6AFB 29 0F			and #$0F
 12466 6AFD 8D 3E A5			sta MIMAX
 12467 6B00 A9 00			lda #$00
 12468 6B02 8D 3F A5			sta MIMAX+1
 12469 6B05			l_22C4
 12470
 12471 				; optimize OK (service.pas), line = 2075
 12472
 12473 6B05 AD 4B A5			lda adr.ADJW+$02
 12474 6B08 0D 4C A5			ora adr.ADJW+1+$02
 12475 6B0B D0 0F			jne l_22EA
 12476 6B0D AD 3E A5			lda MIMAX
 12477 6B10 29 F0			and #$F0
 12478 6B12 09 03			ora #$03
 12479 6B14 8D 3E A5			sta MIMAX
 12480 6B17 A9 00			lda #$00
 12481 6B19 8D 3F A5			sta MIMAX+1
 12482 6B1C			l_22EA
 12483 6B1C 4C BB 6B			jmp a_0008
 12484 6B1F			l_22AE
 12485 6B1F C9 06			cmp #$06
 12486 6B21 D0 31			jne l_2301
 12487
 12488 				; optimize OK (service.pas), line = 2079
 12489
 12490 6B23 AD 4B A5			lda adr.ADJW+$02
 12491 6B26 0D 4C A5			ora adr.ADJW+1+$02
 12492 6B29 D0 0F			jne l_2317
 12493 6B2B AD 3E A5			lda MIMAX
 12494 6B2E 29 0F			and #$0F
 12495 6B30 09 10			ora #$10
 12496 6B32 8D 3E A5			sta MIMAX
 12497 6B35 A9 00			lda #$00
 12498 6B37 8D 3F A5			sta MIMAX+1
 12499 6B3A			l_2317
 12500
 12501 				; optimize OK (service.pas), line = 2080
 12502
 12503 6B3A AD 53 A5			lda adr.ADJW+$0A
 12504 6B3D 0D 54 A5			ora adr.ADJW+1+$0A
 12505 6B40 D0 0F			jne l_233D
 12506 6B42 AD 3E A5			lda MIMAX
 12507 6B45 29 F0			and #$F0
 12508 6B47 09 04			ora #$04
 12509 6B49 8D 3E A5			sta MIMAX
 12510 6B4C A9 00			lda #$00
 12511 6B4E 8D 3F A5			sta MIMAX+1
 12512 6B51			l_233D
 12513 6B51 4C BB 6B			jmp a_0008
 12514 6B54			l_2301
 12515 6B54 C9 07			cmp #$07
 12516 6B56 D0 31			jne l_2354
 12517
 12518 				; optimize OK (service.pas), line = 2084
 12519
 12520 6B58 AD 53 A5			lda adr.ADJW+$0A
 12521 6B5B 0D 54 A5			ora adr.ADJW+1+$0A
 12522 6B5E D0 0F			jne l_236A
 12523 6B60 AD 3E A5			lda MIMAX
 12524 6B63 29 0F			and #$0F
 12525 6B65 09 20			ora #$20
 12526 6B67 8D 3E A5			sta MIMAX
 12527 6B6A A9 00			lda #$00
 12528 6B6C 8D 3F A5			sta MIMAX+1
 12529 6B6F			l_236A
 12530
 12531 				; optimize OK (service.pas), line = 2085
 12532
 12533 6B6F AD 57 A5			lda adr.ADJW+$0E
 12534 6B72 0D 58 A5			ora adr.ADJW+1+$0E
 12535 6B75 D0 0F			jne l_2390
 12536 6B77 AD 3E A5			lda MIMAX
 12537 6B7A 29 F0			and #$F0
 12538 6B7C 09 05			ora #$05
 12539 6B7E 8D 3E A5			sta MIMAX
 12540 6B81 A9 00			lda #$00
 12541 6B83 8D 3F A5			sta MIMAX+1
 12542 6B86			l_2390
 12543 6B86 4C BB 6B			jmp a_0008
 12544 6B89			l_2354
 12545 6B89 C9 08			cmp #$08
 12546 6B8B D0 2E			jne l_23A7
 12547
 12548 				; optimize OK (service.pas), line = 2089
 12549
 12550 6B8D AD 57 A5			lda adr.ADJW+$0E
 12551 6B90 0D 58 A5			ora adr.ADJW+1+$0E
 12552 6B93 D0 0F			jne l_23BD
 12553 6B95 AD 3E A5			lda MIMAX
 12554 6B98 29 0F			and #$0F
 12555 6B9A 09 30			ora #$30
 12556 6B9C 8D 3E A5			sta MIMAX
 12557 6B9F A9 00			lda #$00
 12558 6BA1 8D 3F A5			sta MIMAX+1
 12559 6BA4			l_23BD
 12560
 12561 				; optimize OK (service.pas), line = 2090
 12562
 12563 6BA4 AD 4F A5			lda adr.ADJW+$06
 12564 6BA7 0D 50 A5			ora adr.ADJW+1+$06
 12565 6BAA D0 0F			jne l_23E3
 12566 6BAC AD 3E A5			lda MIMAX
 12567 6BAF 29 F0			and #$F0
 12568 6BB1 09 06			ora #$06
 12569 6BB3 8D 3E A5			sta MIMAX
 12570 6BB6 A9 00			lda #$00
 12571 6BB8 8D 3F A5			sta MIMAX+1
 12572 6BBB			l_23E3
 12573 6BBB			l_23A7
 12574 6BBB			a_0008
 12575
 12576 				; --- RepeatUntilProlog
 12577 6BBB			l_23FA
 12578
 12579 				; optimize OK (service.pas), line = 2097
 12580
 12581 6BBB AD 3E A5			lda MIMAX
 12582 6BBE 85 A0			sta :STACKORIGIN+10
 12583 6BC0 AD 3F A5			lda MIMAX+1
 12584 6BC3 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 12585 6BC5 46 B0			lsr :STACKORIGIN+STACKWIDTH+10
 12586 6BC7 66 A0			ror :STACKORIGIN+10
 12587 6BC9 46 B0			lsr :STACKORIGIN+STACKWIDTH+10
 12588 6BCB 66 A0			ror :STACKORIGIN+10
 12589 6BCD 46 B0			lsr :STACKORIGIN+STACKWIDTH+10
 12590 6BCF 66 A0			ror :STACKORIGIN+10
 12591 6BD1 46 B0			lsr :STACKORIGIN+STACKWIDTH+10
 12592 6BD3 66 A0			ror :STACKORIGIN+10
 12593 6BD5 A9 5A			lda #$5A
 12594 6BD7 85 8E			sta :ecx
 12595 6BD9 A9 00			lda #$00
 12596 6BDB 85 8F			sta :ecx+1
 12597 6BDD A5 A0			lda :STACKORIGIN+10
 12598 6BDF 85 86			sta :eax
 12599 6BE1 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
 12600 6BE3 85 87			sta :eax+1
 12601 					.ifdef fmulinit
 12602 					fmulu_16
 12603 					els
 12604 6BE5 20 FA 12			imulCX
 12605 					eif
 12606 6BE8 A5 86			lda :eax
 12607 6BEA 8D 2A A5			sta LX
 12608 6BED A5 87			lda :eax+1
 12609 6BEF 8D 2B A5			sta LX+1
 12610
 12611 				; optimize OK (service.pas), line = 2098
 12612
 12613 6BF2 AD 3E A5			lda MIMAX
 12614 6BF5 29 0F			and #$0F
 12615 6BF7 85 86			sta :eax
 12616 6BF9 A9 00			lda #$00
 12617 6BFB 85 87			sta :eax+1
 12618 6BFD A9 5A			lda #$5A
 12619 6BFF 85 8E			sta :ecx
 12620 6C01 A9 00			lda #$00
 12621 6C03 85 8F			sta :ecx+1
 12622 					.ifdef fmulinit
 12623 					fmulu_16
 12624 					els
 12625 6C05 20 3E 13			imulCX_AL
 12626 					eif
 12627 6C08 A5 86			lda :eax
 12628 6C0A 8D 2E A5			sta MX
 12629 6C0D A5 87			lda :eax+1
 12630 6C0F 8D 2F A5			sta MX+1
 12631
 12632 				; optimize OK (service.pas), line = 2099
 12633
 12634 6C12 AD 2E A5			lda MX
 12635 6C15 38 ED 2A A5			sub LX
 12636 6C19 8D 62 9A			sta SYSTEM.RANDOM.@010184000.RANGE
 12637 6C1C AD 2F A5			lda MX+1
 12638 6C1F ED 2B A5			sbc LX+1
 12639 6C22 8D 63 9A			sta SYSTEM.RANDOM.@010184000.RANGE+1
 12640 6C25 20 0A 24			jsr SYSTEM.RANDOM.@010184000
 12641 6C28 AD 64 9A			lda SYSTEM.RANDOM.@010184000.RESULT
 12642 6C2B 18 6D 2A A5			add LX
 12643 6C2F 8D 40 A5			sta ANGLE
 12644 6C32 AD 65 9A			lda SYSTEM.RANDOM.@010184000.RESULT+1
 12645 6C35 6D 2B A5			adc LX+1
 12646 6C38 8D 41 A5			sta ANGLE+1
 12647
 12648 				; optimize OK (service.pas), line = 2102
 12649
 12650 6C3B A9 5A			lda #$5A
 12651 6C3D 85 8E			sta @SMALLINT.MOD.B
 12652 6C3F A9 00			lda #$00
 12653 6C41 85 8F			sta @SMALLINT.MOD.B+1
 12654 6C43 AD 40 A5			lda ANGLE
 12655 6C46 85 86			sta @SMALLINT.MOD.A
 12656 6C48 AD 41 A5			lda ANGLE+1
 12657 6C4B 85 87			sta @SMALLINT.MOD.A+1
 12658 6C4D 20 3F 12			jsr @SMALLINT.MOD
 12659 6C50 A5 92			lda @SMALLINT.MOD.RESULT
 12660 6C52 C9 1F			cmp #$1F
 12661 6C54 A5 93			lda @SMALLINT.MOD.RESULT+1
 12662 6C56 E9 00			sbc #$00
 12663 6C58 50 02			svc
 12664 6C5A 49 80			eor #$80
 12665 6C5C 10 03 4C BB 6B		jmi l_23FA
 12666 6C61 A9 5A			lda #$5A
 12667 6C63 85 8E			sta @SMALLINT.MOD.B
 12668 6C65 A9 00			lda #$00
 12669 6C67 85 8F			sta @SMALLINT.MOD.B+1
 12670 6C69 AD 40 A5			lda ANGLE
 12671 6C6C 85 86			sta @SMALLINT.MOD.A
 12672 6C6E AD 41 A5			lda ANGLE+1
 12673 6C71 85 87			sta @SMALLINT.MOD.A+1
 12674 6C73 20 3F 12			jsr @SMALLINT.MOD
 12675 6C76 A5 92			lda @SMALLINT.MOD.RESULT
 12676 6C78 C9 3C			cmp #$3C
 12677 6C7A A5 93			lda @SMALLINT.MOD.RESULT+1
 12678 6C7C E9 00			sbc #$00
 12679 6C7E 50 02			svc
 12680 6C80 49 80			eor #$80
 12681 6C82 30 03 4C BB 6B		jpl l_23FA
 12682
 12683 				; optimize OK (service.pas), line = 2106
 12684
 12685 6C87 A9 68			lda #$68
 12686 6C89 85 8E			sta @SMALLINT.MOD.B
 12687 6C8B A9 01			lda #$01
 12688 6C8D 85 8F			sta @SMALLINT.MOD.B+1
 12689 6C8F AD 40 A5			lda ANGLE
 12690 6C92 85 86			sta @SMALLINT.MOD.A
 12691 6C94 AD 41 A5			lda ANGLE+1
 12692 6C97 85 87			sta @SMALLINT.MOD.A+1
 12693 6C99 20 3F 12			jsr @SMALLINT.MOD
 12694 6C9C A5 92			lda @SMALLINT.MOD.RESULT
 12695 6C9E 8D 7D A4			sta SET_BALL_DIRECTION.ANGLE
 12696 6CA1 A5 93			lda @SMALLINT.MOD.RESULT+1
 12697 6CA3 8D 7E A4			sta SET_BALL_DIRECTION.ANGLE+1
 12698 6CA6 AD 1A A5			lda BALL
 12699 6CA9 8D 79 A4			sta SET_BALL_DIRECTION.BALL
 12700 6CAC AD 1B A5			lda BALL+1
 12701 6CAF 8D 7A A4			sta SET_BALL_DIRECTION.BALL+1
 12702 6CB2 20 E1 31			jsr SET_BALL_DIRECTION
 12703
 12704 				; optimize OK (service.pas), line = 2107
 12705
 12706 6CB5 AC 1A A5 84 84 AC + 	mwy BALL :bp2
 12707 6CBF A0 0C			ldy #BALL.SPEED-DATAORIGIN
 12708 6CC1 B1 84			lda (:bp2),y
 12709 6CC3 8D 6F A4			sta SET_BALL_SPEED.SPEED
 12710 6CC6 C8				iny
 12711 6CC7 B1 84			lda (:bp2),y
 12712 6CC9 8D 70 A4			sta SET_BALL_SPEED.SPEED+1
 12713 6CCC AD 1A A5			lda BALL
 12714 6CCF 8D 6B A4			sta SET_BALL_SPEED.BALL
 12715 6CD2 AD 1B A5			lda BALL+1
 12716 6CD5 8D 6C A4			sta SET_BALL_SPEED.BALL+1
 12717 6CD8 20 D1 2F			jsr SET_BALL_SPEED
 12718
 12719 				; optimize OK (service.pas), line = 2109
 12720
 12721 6CDB AC 1A A5 84 84 AC + 	mwy BALL :bp2
 12722 6CE5 A0 16			ldy #BALL.BRWHIT-DATAORIGIN
 12723 6CE7 A9 00			lda #$00
 12724 6CE9 91 84			sta (:bp2),y
 12725 6CEB			l_2282
 12726
 12727 				; ------------------------------------------------------------
 12728
 12729 = A51A			BALL	= DATAORIGIN+$0AFE
 12730 = 9A1C			BALL.X	= DATAORIGIN+$0000
 12731 = 9A1E			BALL.Y	= DATAORIGIN+$0002
 12732 = 9A20			BALL.FINEX	= DATAORIGIN+$0004
 12733 = 9A22			BALL.FINEY	= DATAORIGIN+$0006
 12734 = 9A24			BALL.OLDX	= DATAORIGIN+$0008
 12735 = 9A26			BALL.OLDY	= DATAORIGIN+$000A
 12736 = 9A28			BALL.SPEED	= DATAORIGIN+$000C
 12737 = 9A2A			BALL.FINESPEED	= DATAORIGIN+$000E
 12738 = 9A2C			BALL.SPEEDX	= DATAORIGIN+$0010
 12739 = 9A2E			BALL.SPEEDY	= DATAORIGIN+$0012
 12740 = 9A30			BALL.SBD	= DATAORIGIN+$0014
 12741 = 9A32			BALL.BRWHIT	= DATAORIGIN+$0016
 12742 = 9A33			BALL.INPLAY	= DATAORIGIN+$0017
 12743 = 9A34			BALL.LAUNCH	= DATAORIGIN+$0018
 12744 = 9A35			BALL.ONVAUS	= DATAORIGIN+$0019
 12745 = 9A36			BALL.STM	= DATAORIGIN+$001A
 12746 = A51E			X	= DATAORIGIN+$0B02
 12747 = A520			Y	= DATAORIGIN+$0B04
 12748 = A522			XB	= DATAORIGIN+$0B06
 12749 = A524			YB	= DATAORIGIN+$0B08
 12750 = A526			OX	= DATAORIGIN+$0B0A
 12751 = A528			OY	= DATAORIGIN+$0B0C
 12752 = A52A			LX	= DATAORIGIN+$0B0E
 12753 = A52C			LY	= DATAORIGIN+$0B10
 12754 = A52E			MX	= DATAORIGIN+$0B12
 12755 = A530			MY	= DATAORIGIN+$0B14
 12756 = A532			NX	= DATAORIGIN+$0B16
 12757 = A534			NY	= DATAORIGIN+$0B18
 12758 = A536			F1	= DATAORIGIN+$0B1A
 12759 = A538			F2	= DATAORIGIN+$0B1C
 12760 = A53A			DEFLECT	= DATAORIGIN+$0B1E
 12761 = A53C			AROUND	= DATAORIGIN+$0B20
 12762 = A53E			MIMAX	= DATAORIGIN+$0B22
 12763 = A540			ANGLE	= DATAORIGIN+$0B24
 12764 = A542			MYX	= DATAORIGIN+$0B26
 12765 = A544			MYY	= DATAORIGIN+$0B28
 12766 = A546			EMERGENCY	= DATAORIGIN+$0B2A
 12767 = A547			COLLISION	= DATAORIGIN+$0B2B
 12768 = A548			TOUCH	= DATAORIGIN+$0B2C
 12769 = A549			adr.ADJW	= [DATAORIGIN+$0B2D] .array [3] [3] .word
 12770 6CEB			.var ADJW	= adr.ADJW .word
 12771 = A55B			@CASETMP_0008	= DATAORIGIN+$0B3F
 12772
 12773 = A51A			@VarData	= BALL
 12774 = 0034			@VarDataSize	= 52
 12775
 12776 6CEB			@exit
 12777 					.ifdef @new
 12778 					lda <@VarData
 12779 					sta :ztmp
 12780 					lda >@VarData
 12781 					ldy #@VarDataSize-1
 12782 					jmp @FreeMem
 12783 					els
 12784 6CEB 60				rts						; ret
 12785 					eif
 12786 = 6CEC 49 A5		ADJW
 12786 				.endl
 12787
 12788 6CEE			.local	FILL_PICTURE_WITH_PATTERN			; PROCEDURE
 12789
 12790 				; optimize OK (service.pas), line = 2124
 12791
 12792 6CEE A9 00			lda #$00
 12793 6CF0 8D 62 A5			sta K
 12794 6CF3 8D 63 A5			sta K+1
 12795
 12796 6CF6			l_2464
 12797 				; --- ForToDoCondition
 12798 6CF6 AD 63 A5			lda K+1
 12799 6CF9 C9 01			cmp #$01
 12800 6CFB 90 0B			bcc @+
 12801 6CFD D0 49			jne l_2470
 12802 6CFF AD 62 A5			lda K
 12803 6D02 C9 3F			cmp #$3F
 12804 6D04 90 02			bcc @+
 12805 6D06 D0 40			jne l_2470
 12806 				@
 12807
 12808 				; optimize OK (service.pas), line = 2125
 12809
 12810 6D08 AC 5C A5 84 84 AC + 	mwy PATT :bp2
 12811 6D12 A0 00			ldy #PATT.WIDTH-DATAORIGIN
 12812 6D14 B1 84			lda (:bp2),y
 12813 6D16 85 8E			sta @WORD.MOD.B
 12814 6D18 C8				iny
 12815 6D19 B1 84			lda (:bp2),y
 12816 6D1B 85 8F			sta @WORD.MOD.B+1
 12817 6D1D AD 62 A5			lda K
 12818 6D20 85 86			sta @WORD.MOD.A
 12819 6D22 AD 63 A5			lda K+1
 12820 6D25 85 87			sta @WORD.MOD.A+1
 12821 6D27 20 8F 13			jsr @WORD.MOD
 12822 6D2A AD 1E 99			lda MODX
 12823 6D2D 18 6D 62 A5			add K
 12824 6D31 A8				tay
 12825 6D32 AD 1F 99			lda MODX+1
 12826 6D35 6D 63 A5			adc K+1
 12827 6D38 85 83			sta :bp+1
 12828 6D3A A5 92			lda @WORD.MOD.RESULT
 12829 6D3C 91 82			sta (:bp),y
 12830
 12831 				; --- ForToDoEpilog
 12832 6D3E EE 62 A5			inc K
 12833 6D41 D0 B3			jne l_2464
 12834 6D43 EE 63 A5			inc K+1
 12835 6D46 D0 AE			jne l_2464
 12836 6D48			l_2470
 12837
 12838 				; optimize OK (service.pas), line = 2129
 12839
 12840 6D48 A9 00			lda #$00
 12841 6D4A 8D 65 A5			sta Y
 12842
 12843 6D4D			l_248A
 12844 				; --- ForToDoCondition
 12845 6D4D AD 65 A5			lda Y
 12846 6D50 C9 C8			cmp #$C8
 12847 6D52 B0 2E			jcs l_2498
 12848
 12849 				; optimize OK (service.pas), line = 2130
 12850
 12851 6D54 AC 5C A5 84 84 AC + 	mwy PATT :bp2
 12852 6D5E A0 02			ldy #PATT.HEIGHT-DATAORIGIN
 12853 6D60 B1 84			lda (:bp2),y
 12854 6D62 85 8E			sta @WORD.MOD.B
 12855 6D64 C8				iny
 12856 6D65 B1 84			lda (:bp2),y
 12857 6D67 85 8F			sta @WORD.MOD.B+1
 12858 6D69 AD 65 A5			lda Y
 12859 6D6C 85 86			sta @WORD.MOD.A
 12860 6D6E A9 00			lda #$00
 12861 6D70 85 87			sta @WORD.MOD.A+1
 12862 6D72 20 8F 13			jsr @WORD.MOD
 12863 6D75 A5 92			lda @WORD.MOD.RESULT
 12864 6D77 AC 65 A5			ldy Y
 12865 6D7A 99 12 A3			sta adr.MODY,y
 12866
 12867 				; --- ForToDoEpilog
 12868 6D7D EE 65 A5			inc Y
 12869 6D80 D0 CB			jne l_248A
 12870 6D82			l_2498
 12871
 12872 				; optimize OK (service.pas), line = 2135
 12873
 12874 6D82 A9 0A			lda #$0A
 12875 6D84 8D 65 A5			sta Y
 12876
 12877 6D87			l_24B4
 12878 				; --- ForToDoCondition
 12879 6D87 AC 65 A5			ldy Y
 12880 6D8A C0 C7			cpy #$C7
 12881 6D8C 90 03 4C CD 6E		jcs l_24C2
 12882
 12883 				; optimize OK (service.pas), line = 2137
 12884
 12885 6D91 B9 12 A3			lda adr.MODY,y
 12886 6D94 85 86			sta :eax
 12887 6D96 AC 5C A5 84 84 AC + 	mwy PATT :bp2
 12888 6DA0 A0 00			ldy #PATT.WIDTH-DATAORIGIN
 12889 6DA2 B1 84			lda (:bp2),y
 12890 6DA4 85 8E			sta :ecx
 12891 6DA6 C8				iny
 12892 6DA7 B1 84			lda (:bp2),y
 12893 6DA9 85 8F			sta :ecx+1
 12894 6DAB A9 00			lda #$00
 12895 6DAD 85 87			sta :eax+1
 12896 					.ifdef fmulinit
 12897 					fmulu_16
 12898 					els
 12899 6DAF 20 FA 12			imulCX
 12900 					eif
 12901 6DB2 A5 86			lda :eax
 12902 6DB4 8D 60 A5			sta YB
 12903 6DB7 A5 87			lda :eax+1
 12904 6DB9 8D 61 A5			sta YB+1
 12905
 12906 				; optimize OK (service.pas), line = 2138
 12907
 12908 6DBC A9 00			lda #$00
 12909 6DBE 8D 62 A5			sta K
 12910 6DC1 8D 63 A5			sta K+1
 12911
 12912 				; optimize OK (service.pas), line = 2139
 12913
 12914 6DC4 A9 09			lda #$09
 12915 6DC6 8D 64 A5			sta X
 12916
 12917 6DC9			l_24DD
 12918 				; --- ForToDoCondition
 12919 6DC9 AD 64 A5			lda X
 12920 6DCC C9 D8			cmp #$D8
 12921 6DCE 90 03 4C 76 6E		jcs l_24EB
 12922
 12923 				; optimize OK (service.pas), line = 2142
 12924
 12925 6DD3 AC 5C A5 84 84 AC + 	mwy PATT :bp2
 12926 6DDD A0 04			ldy #PATT.OFS-DATAORIGIN
 12927 6DDF B1 84			lda (:bp2),y
 12928 6DE1 85 9F			sta :STACKORIGIN+9
 12929 6DE3 C8				iny
 12930 6DE4 B1 84			lda (:bp2),y
 12931 6DE6 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 12932 6DE8 C8				iny
 12933 6DE9 B1 84			lda (:bp2),y
 12934 6DEB 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
 12935 6DED C8				iny
 12936 6DEE B1 84			lda (:bp2),y
 12937 6DF0 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
 12938 6DF2 AC 1E 99 84 84 AC + 	mwy MODX :bp2
 12939 6DFC AC 64 A5			ldy X
 12940 6DFF A5 9F			lda :STACKORIGIN+9
 12941 6E01 18 71 84			add (:bp2),y
 12942 6E04 85 9F			sta :STACKORIGIN+9
 12943 6E06 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 12944 6E08 69 00			adc #$00
 12945 6E0A 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 12946 6E0C A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
 12947 6E0E 69 00			adc #$00
 12948 6E10 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
 12949 6E12 A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
 12950 6E14 69 00			adc #$00
 12951 6E16 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
 12952 6E18 A5 9F			lda :STACKORIGIN+9
 12953 6E1A 18 6D 60 A5			add YB
 12954 6E1E 8D 0A A4			sta GETBYTE.SRC
 12955 6E21 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 12956 6E23 6D 61 A5			adc YB+1
 12957 6E26 8D 0B A4			sta GETBYTE.SRC+1
 12958 6E29 A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
 12959 6E2B 69 00			adc #$00
 12960 6E2D 8D 0C A4			sta GETBYTE.SRC+2
 12961 6E30 A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
 12962 6E32 69 00			adc #$00
 12963 6E34 8D 0D A4			sta GETBYTE.SRC+3
 12964 6E37 20 86 26			jsr GETBYTE
 12965 6E3A AD 0E A4			lda GETBYTE.RESULT
 12966 6E3D 8D 66 A5			sta CL
 12967
 12968 				; optimize OK (service.pas), line = 2144
 12969
 12970 6E40 A9 80			lda #$80
 12971 6E42 8D 67 A5			sta SHADOW
 12972
 12973 				; optimize OK (service.pas), line = 2149
 12974
 12975 6E45 AD 65 A5			lda Y
 12976 6E48 C9 10			cmp #$10
 12977 6E4A 90 07			jcc l_2520x
 12978 6E4C AD 64 A5			lda X
 12979 6E4F C9 12			cmp #$12
 12980 6E51 B0 05			jcs l_2520
 12981 6E53			l_2520x
 12982 6E53 A9 00			lda #$00
 12983 6E55 8D 67 A5			sta SHADOW
 12984 6E58			l_2520
 12985
 12986 				; optimize OK (service.pas), line = 2154
 12987
 12988 6E58 AD 66 A5			lda CL
 12989 6E5B 29 7F			and #$7F
 12990 6E5D 0D 67 A5			ora SHADOW
 12991 6E60 AC 62 A5			ldy K
 12992 6E63 99 DC 9E			sta adr.TMP,y
 12993
 12994 				; optimize FAIL (0, service.pas), line = 2155
 12995
 12996 6E66 EE 62 A5			inc K
 12997 6E69 D0 03			sne
 12998 6E6B EE 63 A5			inc K+1
 12999
 13000 				; --- ForToDoEpilog
 13001 6E6E EE 64 A5			inc X
 13002 6E71 F0 03 4C C9 6D		jne l_24DD
 13003 6E76			l_24EB
 13004
 13005 				; optimize OK (service.pas), line = 2158
 13006
 13007 6E76 AD E9 9A			lda PLAYSCREEN.OFS
 13008 6E79 18 69 09			add #$09
 13009 6E7C 85 A0			sta :STACKORIGIN+10
 13010 6E7E AD EA 9A			lda PLAYSCREEN.OFS+1
 13011 6E81 69 00			adc #$00
 13012 6E83 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 13013 6E85 AD EB 9A			lda PLAYSCREEN.OFS+2
 13014 6E88 69 00			adc #$00
 13015 6E8A 85 C0			sta :STACKORIGIN+STACKWIDTH*2+10
 13016 6E8C AD EC 9A			lda PLAYSCREEN.OFS+3
 13017 6E8F 69 00			adc #$00
 13018 6E91 85 D0			sta :STACKORIGIN+STACKWIDTH*3+10
 13019 6E93 AD 65 A5			lda Y
 13020 6E96 85 86			sta :eax
 13021 6E98 A9 00			lda #$00
 13022 6E9A 85 87			sta :eax+1
 13023 6E9C 20 28 19			jsr @mul320
 13024 6E9F A5 A0			lda :STACKORIGIN+10
 13025 6EA1 18 65 86			add :eax
 13026 6EA4 8D E8 A3			sta BLITTMP.DST
 13027 6EA7 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
 13028 6EA9 65 87			adc :eax+1
 13029 6EAB 8D E9 A3			sta BLITTMP.DST+1
 13030 6EAE A5 C0			lda :STACKORIGIN+STACKWIDTH*2+10
 13031 6EB0 65 88			adc :eax+2
 13032 6EB2 8D EA A3			sta BLITTMP.DST+2
 13033 6EB5 A5 D0			lda :STACKORIGIN+STACKWIDTH*3+10
 13034 6EB7 65 89			adc :eax+3
 13035 6EB9 8D EB A3			sta BLITTMP.DST+3
 13036 6EBC AD 62 A5			lda K
 13037 6EBF 8D EC A3			sta BLITTMP.SIZE
 13038 6EC2 20 8C 25			jsr BLITTMP
 13039
 13040 				; --- ForToDoEpilog
 13041 6EC5 EE 65 A5			inc Y
 13042 6EC8 F0 03 4C 87 6D		jne l_24B4
 13043 6ECD			l_24C2
 13044
 13045 				; ------------------------------------------------------------
 13046
 13047 = A55C			PATT	= DATAORIGIN+$0B40
 13048 = 9A1C			PATT.WIDTH	= DATAORIGIN+$0000
 13049 = 9A1E			PATT.HEIGHT	= DATAORIGIN+$0002
 13050 = 9A20			PATT.OFS	= DATAORIGIN+$0004
 13051 = A560			YB	= DATAORIGIN+$0B44
 13052 = A562			K	= DATAORIGIN+$0B46
 13053 = A564			X	= DATAORIGIN+$0B48
 13054 = A565			Y	= DATAORIGIN+$0B49
 13055 = A566			CL	= DATAORIGIN+$0B4A
 13056 = A567			SHADOW	= DATAORIGIN+$0B4B
 13057
 13058 = A55C			@VarData	= PATT
 13059 = 000A			@VarDataSize	= 10
 13060
 13061 6ECD			@exit
 13062 					.ifdef @new
 13063 					lda <@VarData
 13064 					sta :ztmp
 13065 					lda >@VarData
 13066 					ldy #@VarDataSize-1
 13067 					jmp @FreeMem
 13068 					els
 13069 6ECD 60				rts						; ret
 13070 					eif
 13071 				.endl
 13072
 13073 6ECE			.local	WRITE_ROUND_LEVEL				; PROCEDURE
 13074
 13075 				; ------------------------------------------------------------
 13076
 13077 = A568			X	= DATAORIGIN+$0B4C
 13078 = A56A			Y	= DATAORIGIN+$0B4E
 13079
 13080 = A568			@VarData	= X
 13081 = 0004			@VarDataSize	= 4
 13082
 13083 6ECE			@exit
 13084 					.ifdef @new
 13085 					lda <@VarData
 13086 					sta :ztmp
 13087 					lda >@VarData
 13088 					ldy #@VarDataSize-1
 13089 					jmp @FreeMem
 13090 					els
 13091 6ECE 60				rts						; ret
 13092 					eif
 13093 				.endl
 13094
 13095 6ECF			.local	REMOVE_ROUND_LEVEL				; PROCEDURE
 13096
 13097 				; optimize OK (service.pas), line = 2273
 13098
 13099 6ECF A9 81			lda #$81
 13100 6ED1 8D 6C A5			sta Y
 13101
 13102 6ED4			l_256E
 13103 				; --- ForToDoCondition
 13104 6ED4 AD 6C A5			lda Y
 13105 6ED7 C9 A1			cmp #$A1
 13106 6ED9 90 03 4C 7E 6F		jcs l_257C
 13107
 13108 				; optimize OK (service.pas), line = 2276
 13109
 13110 6EDE A9 00			lda #$00
 13111 6EE0 85 B1			sta :STACKORIGIN+STACKWIDTH+11
 13112 6EE2 AD 6C A5			lda Y
 13113 6EE5 0A				asl @
 13114 6EE6 26 B1			rol :STACKORIGIN+STACKWIDTH+11
 13115 6EE8 18 6D 1C 99			add ROW
 13116 6EEC 85 84			sta :bp2
 13117 6EEE AD 1D 99			lda ROW+1
 13118 6EF1 65 B1			adc :STACKORIGIN+STACKWIDTH+11
 13119 6EF3 85 85			sta :bp2+1
 13120 6EF5 A0 00			ldy #$00
 13121 6EF7 A9 48			lda #$48
 13122 6EF9 18 71 84			add (:bp2),y
 13123 6EFC 8D F3 A3			sta BLITROW.DST
 13124 6EFF C8				iny
 13125 6F00 A9 00			lda #$00
 13126 6F02 71 84			adc (:bp2),y
 13127 6F04 8D F4 A3			sta BLITROW.DST+1
 13128 6F07 A9 00			lda #$00
 13129 6F09 69 00			adc #$00
 13130 6F0B 8D F5 A3			sta BLITROW.DST+2
 13131 6F0E A9 00			lda #$00
 13132 6F10 69 00			adc #$00
 13133 6F12 8D F6 A3			sta BLITROW.DST+3
 13134 6F15 AD E9 9A			lda PLAYSCREEN.OFS
 13135 6F18 18 69 48			add #$48
 13136 6F1B 85 A1			sta :STACKORIGIN+11
 13137 6F1D AD EA 9A			lda PLAYSCREEN.OFS+1
 13138 6F20 69 00			adc #$00
 13139 6F22 85 B1			sta :STACKORIGIN+STACKWIDTH+11
 13140 6F24 AD EB 9A			lda PLAYSCREEN.OFS+2
 13141 6F27 69 00			adc #$00
 13142 6F29 85 C1			sta :STACKORIGIN+STACKWIDTH*2+11
 13143 6F2B AD EC 9A			lda PLAYSCREEN.OFS+3
 13144 6F2E 69 00			adc #$00
 13145 6F30 85 D1			sta :STACKORIGIN+STACKWIDTH*3+11
 13146 6F32 A9 00			lda #$00
 13147 6F34 85 B2			sta :STACKORIGIN+STACKWIDTH+12
 13148 6F36 AD 6C A5			lda Y
 13149 6F39 0A				asl @
 13150 6F3A 26 B2			rol :STACKORIGIN+STACKWIDTH+12
 13151 6F3C 18 6D 1C 99			add ROW
 13152 6F40 85 84			sta :bp2
 13153 6F42 AD 1D 99			lda ROW+1
 13154 6F45 65 B2			adc :STACKORIGIN+STACKWIDTH+12
 13155 6F47 85 85			sta :bp2+1
 13156 6F49 A0 00			ldy #$00
 13157 6F4B A5 A1			lda :STACKORIGIN+11
 13158 6F4D 18 71 84			add (:bp2),y
 13159 6F50 8D EF A3			sta BLITROW.SRC
 13160 6F53 C8				iny
 13161 6F54 A5 B1			lda :STACKORIGIN+STACKWIDTH+11
 13162 6F56 71 84			adc (:bp2),y
 13163 6F58 8D F0 A3			sta BLITROW.SRC+1
 13164 6F5B A5 C1			lda :STACKORIGIN+STACKWIDTH*2+11
 13165 6F5D 69 00			adc #$00
 13166 6F5F 8D F1 A3			sta BLITROW.SRC+2
 13167 6F62 A5 D1			lda :STACKORIGIN+STACKWIDTH*3+11
 13168 6F64 69 00			adc #$00
 13169 6F66 8D F2 A3			sta BLITROW.SRC+3
 13170 6F69 A9 58			lda #$58
 13171 6F6B 8D F7 A3			sta BLITROW.SIZE
 13172 6F6E A9 00			lda #$00
 13173 6F70 8D F8 A3			sta BLITROW.SIZE+1
 13174 6F73 20 CF 25			jsr BLITROW
 13175
 13176 				; --- ForToDoEpilog
 13177 6F76 EE 6C A5			inc Y
 13178 6F79 F0 03 4C D4 6E		jne l_256E
 13179 6F7E			l_257C
 13180
 13181 				; ------------------------------------------------------------
 13182
 13183 = A56C			Y	= DATAORIGIN+$0B50
 13184
 13185 = A56C			@VarData	= Y
 13186 = 0001			@VarDataSize	= 1
 13187
 13188 6F7E			@exit
 13189 					.ifdef @new
 13190 					lda <@VarData
 13191 					sta :ztmp
 13192 					lda >@VarData
 13193 					ldy #@VarDataSize-1
 13194 					jmp @FreeMem
 13195 					els
 13196 6F7E 60				rts						; ret
 13197 					eif
 13198 				.endl
 13199
 13200 6F7F			.local	GAME_OVER					; PROCEDURE
 13201
 13202 				; ------------------------------------------------------------
 13203
 13204 = A56D			X	= DATAORIGIN+$0B51
 13205 = A56F			Y	= DATAORIGIN+$0B53
 13206 = A571			adr.SC	= [DATAORIGIN+$0B55] .array [21]
 13207 6F7F			.var SC	= adr.SC .word
 13208
 13209 = A56D			@VarData	= X
 13210 = 0019			@VarDataSize	= 25
 13211
 13212 6F7F			@exit
 13213 					.ifdef @new
 13214 					lda <@VarData
 13215 					sta :ztmp
 13216 					lda >@VarData
 13217 					ldy #@VarDataSize-1
 13218 					jmp @FreeMem
 13219 					els
 13220 6F7F 60				rts						; ret
 13221 					eif
 13222 = 6F80 71 A5		SC
 13222 				.endl
 13223
 13224 6F82			.local	DESTROY_VAUS					; PROCEDURE
 13225
 13226 				; optimize OK (service.pas), line = 2320
 13227
 13228 6F82 AD F5 9A 8D ED 9A + 	:8 mva adr.NORMAL+# adr.PLAYVAUS+#
 13229
 13230 				; optimize FAIL ('MODIFY_VAUS', service.pas), line = 2321
 13231
 13232 6FB2 20 80 3C			jsr MODIFY_VAUS
 13233
 13234 				; optimize OK (service.pas), line = 2323
 13235
 13236 6FB5 AD 5D 9B			lda VAUS.X
 13237 6FB8 8D BC A4			sta MOVE_VAUS.X
 13238 6FBB A9 00			lda #$00
 13239 6FBD 8D BD A4			sta MOVE_VAUS.X+1
 13240 6FC0 AD 5E 9B			lda VAUS.Y
 13241 6FC3 8D BE A4			sta MOVE_VAUS.Y
 13242 6FC6 A9 00			lda #$00
 13243 6FC8 8D BF A4			sta MOVE_VAUS.Y+1
 13244 6FCB 20 F2 3F			jsr MOVE_VAUS
 13245
 13246 				; optimize OK (service.pas), line = 2325
 13247
 13248 6FCE AD 5D 9B			lda VAUS.X
 13249 6FD1 38 E9 04			sub #$04
 13250 6FD4 8D 88 A5			sta A
 13251 6FD7 A9 00			lda #$00
 13252 6FD9 E9 00			sbc #$00
 13253 6FDB 8D 89 A5			sta A+1
 13254
 13255 				; optimize OK (service.pas), line = 2326
 13256
 13257 6FDE AD 5E 9B			lda VAUS.Y
 13258 6FE1 38 E9 05			sub #$05
 13259 6FE4 8D 8A A5			sta B
 13260 6FE7 A9 00			lda #$00
 13261 6FE9 E9 00			sbc #$00
 13262 6FEB 8D 8B A5			sta B+1
 13263
 13264 				; optimize OK (service.pas), line = 2329
 13265
 13266 6FEE A9 00			lda #$00
 13267 6FF0 8D 8C A5			sta W
 13268
 13269 6FF3			l_25CC
 13270 				; --- ForToDoCondition
 13271 6FF3 AD 8C A5			lda W
 13272 6FF6 C9 07			cmp #$07
 13273 6FF8 90 03 4C 61 72		jcs l_25DA
 13274
 13275 				; optimize OK (service.pas), line = 2331
 13276
 13277 6FFD A9 00			lda #$00
 13278 6FFF 8D 8E A5			sta Y
 13279
 13280 7002			l_25E3
 13281 				; --- ForToDoCondition
 13282 7002 AD 8E A5			lda Y
 13283 7005 C9 10			cmp #$10
 13284 7007 90 03 4C 4B 72		jcs l_25F1
 13285
 13286 				; optimize OK (service.pas), line = 2333
 13287
 13288 700C AD 0D 9B			lda EXPLOSION.WIDTH
 13289 700F 85 8E			sta :ecx
 13290 7011 AD 0E 9B			lda EXPLOSION.WIDTH+1
 13291 7014 85 8F			sta :ecx+1
 13292 7016 AD 8E A5			lda Y
 13293 7019 85 86			sta :eax
 13294 701B A9 00			lda #$00
 13295 701D 85 87			sta :eax+1
 13296 					.ifdef fmulinit
 13297 					fmulu_16
 13298 					els
 13299 701F 20 3E 13			imulCX_AL
 13300 					eif
 13301 7022 A5 86			lda :eax
 13302 7024 85 9F			sta :STACKORIGIN+9
 13303 7026 A5 87			lda :eax+1
 13304 7028 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 13305 702A AD 0D 9B			lda EXPLOSION.WIDTH
 13306 702D 85 A1			sta :STACKORIGIN+11
 13307 702F AD 0E 9B			lda EXPLOSION.WIDTH+1
 13308 7032 06 A1			asl :STACKORIGIN+11
 13309 7034 2A				rol @
 13310 7035 06 A1			asl :STACKORIGIN+11
 13311 7037 2A				rol @
 13312 7038 06 A1			asl :STACKORIGIN+11
 13313 703A 2A				rol @
 13314 703B 06 A1			asl :STACKORIGIN+11
 13315 703D 2A				rol @
 13316 703E 85 8F			sta :ecx+1
 13317 7040 A5 A1			lda :STACKORIGIN+11
 13318 7042 85 8E			sta :ecx
 13319 7044 AD 8C A5			lda W
 13320 7047 85 86			sta :eax
 13321 7049 A9 00			lda #$00
 13322 704B 85 87			sta :eax+1
 13323 					.ifdef fmulinit
 13324 					fmulu_16
 13325 					els
 13326 704D 20 FA 12			imulCX
 13327 					eif
 13328 7050 A5 86			lda :eax
 13329 7052 18 65 9F			add :STACKORIGIN+9
 13330 7055 8D 86 A5			sta Z
 13331 7058 A5 87			lda :eax+1
 13332 705A 65 AF			adc :STACKORIGIN+STACKWIDTH+9
 13333 705C 8D 87 A5			sta Z+1
 13334
 13335 				; optimize OK (service.pas), line = 2334
 13336
 13337 705F A9 00			lda #$00
 13338 7061 8D 8D A5			sta X
 13339 7064 AC 0D 9B			ldy EXPLOSION.WIDTH
 13340 7067 88				dey
 13341 7068 8C 6C 70			sty @FORTMP_2616_0
 13342
 13343 706B			l_2619
 13344 				; --- ForToDoCondition
 13345 706B A9 00			lda @FORTMP_2616_0::#$00
 13346 706D CD 8D A5			cmp X
 13347 7070 B0 03 4C 43 72		jcc l_2627
 13348
 13349 				; optimize FAIL (1, service.pas), line = 2338
 13350
 13351 7075 E8				inx
 13352 7076 A0 01			ldy #1
 13353 7078 AD 8C A5			lda W
 13354 707B C9 06			cmp #$06
 13355 707D F0 01			beq @+
 13356 707F 88				dey
 13357 				@
 13358 7080 94 96			sty :STACKORIGIN,x
 13359 7082 AD 11 9B			lda EXPLOSION.OFS
 13360 7085 18 6D 8D A5			add X
 13361 7089 85 9F			sta :STACKORIGIN+9
 13362 708B AD 12 9B			lda EXPLOSION.OFS+1
 13363 708E 69 00			adc #$00
 13364 7090 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 13365 7092 AD 13 9B			lda EXPLOSION.OFS+2
 13366 7095 69 00			adc #$00
 13367 7097 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
 13368 7099 AD 14 9B			lda EXPLOSION.OFS+3
 13369 709C 69 00			adc #$00
 13370 709E 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
 13371 70A0 A5 9F			lda :STACKORIGIN+9
 13372 70A2 18 6D 86 A5			add Z
 13373 70A6 8D 0A A4			sta GETBYTE.SRC
 13374 70A9 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 13375 70AB 6D 87 A5			adc Z+1
 13376 70AE 8D 0B A4			sta GETBYTE.SRC+1
 13377 70B1 A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
 13378 70B3 69 00			adc #$00
 13379 70B5 8D 0C A4			sta GETBYTE.SRC+2
 13380 70B8 A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
 13381 70BA 69 00			adc #$00
 13382 70BC 8D 0D A4			sta GETBYTE.SRC+3
 13383 70BF 20 86 26			jsr GETBYTE
 13384 70C2 CA				dex
 13385 70C3 A0 01			ldy #1
 13386 70C5 AD 0E A4			lda GETBYTE.RESULT
 13387 70C8 F0 01			beq @+
 13388 70CA 88				dey
 13389 				@
 13390 70CB 98				tya
 13391 70CC 15 97			ora :STACKORIGIN+1,x
 13392 70CE D0 03 4C 9D 71		jeq l_264F
 13393
 13394 				; optimize OK (service.pas), line = 2340
 13395
 13396 70D3 AD 8D A5			lda X
 13397 70D6 18 6D 88 A5			add A
 13398 70DA 85 9F			sta :STACKORIGIN+9
 13399 70DC A9 00			lda #$00
 13400 70DE 6D 89 A5			adc A+1
 13401 70E1 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 13402 70E3 A9 00			lda #$00
 13403 70E5 69 00			adc #$00
 13404 70E7 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
 13405 70E9 A9 00			lda #$00
 13406 70EB 69 00			adc #$00
 13407 70ED 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
 13408 70EF AD 8E A5			lda Y
 13409 70F2 18 6D 8A A5			add B
 13410 70F6 85 A0			sta :STACKORIGIN+10
 13411 70F8 A9 00			lda #$00
 13412 70FA 6D 8B A5			adc B+1
 13413 70FD 06 A0			asl :STACKORIGIN+10
 13414 70FF 2A				rol @
 13415 7100 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 13416 7102 AD 1C 99			lda ROW
 13417 7105 18 65 A0			add :STACKORIGIN+10
 13418 7108 85 84			sta :bp2
 13419 710A AD 1D 99			lda ROW+1
 13420 710D 65 B0			adc :STACKORIGIN+STACKWIDTH+10
 13421 710F 85 85			sta :bp2+1
 13422 7111 A0 00			ldy #$00
 13423 7113 A5 9F			lda :STACKORIGIN+9
 13424 7115 18 71 84			add (:bp2),y
 13425 7118 8D 01 A4			sta BLITBYTE.DST
 13426 711B C8				iny
 13427 711C A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 13428 711E 71 84			adc (:bp2),y
 13429 7120 8D 02 A4			sta BLITBYTE.DST+1
 13430 7123 A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
 13431 7125 69 00			adc #$00
 13432 7127 8D 03 A4			sta BLITBYTE.DST+2
 13433 712A A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
 13434 712C 69 00			adc #$00
 13435 712E 8D 04 A4			sta BLITBYTE.DST+3
 13436 7131 AD E9 9A			lda PLAYSCREEN.OFS
 13437 7134 18 6D 8D A5			add X
 13438 7138 85 A0			sta :STACKORIGIN+10
 13439 713A AD EA 9A			lda PLAYSCREEN.OFS+1
 13440 713D 69 00			adc #$00
 13441 713F 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 13442 7141 AD EB 9A			lda PLAYSCREEN.OFS+2
 13443 7144 69 00			adc #$00
 13444 7146 85 C0			sta :STACKORIGIN+STACKWIDTH*2+10
 13445 7148 AD EC 9A			lda PLAYSCREEN.OFS+3
 13446 714B 69 00			adc #$00
 13447 714D 85 D0			sta :STACKORIGIN+STACKWIDTH*3+10
 13448 714F A5 A0			lda :STACKORIGIN+10
 13449 7151 18 6D 88 A5			add A
 13450 7155 85 A0			sta :STACKORIGIN+10
 13451 7157 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
 13452 7159 6D 89 A5			adc A+1
 13453 715C 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 13454 715E A5 C0			lda :STACKORIGIN+STACKWIDTH*2+10
 13455 7160 69 00			adc #$00
 13456 7162 85 C0			sta :STACKORIGIN+STACKWIDTH*2+10
 13457 7164 A5 D0			lda :STACKORIGIN+STACKWIDTH*3+10
 13458 7166 69 00			adc #$00
 13459 7168 85 D0			sta :STACKORIGIN+STACKWIDTH*3+10
 13460 716A AD 8E A5			lda Y
 13461 716D 18 6D 8A A5			add B
 13462 7171 85 A1			sta :STACKORIGIN+11
 13463 7173 A9 00			lda #$00
 13464 7175 6D 8B A5			adc B+1
 13465 7178 06 A1			asl :STACKORIGIN+11
 13466 717A 2A				rol @
 13467 717B 85 B1			sta :STACKORIGIN+STACKWIDTH+11
 13468 717D AD 1C 99			lda ROW
 13469 7180 18 65 A1			add :STACKORIGIN+11
 13470 7183 85 84			sta :bp2
 13471 7185 AD 1D 99			lda ROW+1
 13472 7188 65 B1			adc :STACKORIGIN+STACKWIDTH+11
 13473 718A 85 85			sta :bp2+1
 13474 718C 88				dey
 13475 718D A5 A0			lda :STACKORIGIN+10
 13476 718F 18 71 84			add (:bp2),y
 13477 7192 8D FD A3			sta BLITBYTE.SRC
 13478 7195 C8				iny
 13479 7196 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
 13480 7198 71 84			adc (:bp2),y
 13481 719A 4C 27 72			jmp l_268C
 13482 719D			l_264F
 13483
 13484 				; optimize OK (service.pas), line = 2343
 13485
 13486 719D AD 8D A5			lda X
 13487 71A0 18 6D 88 A5			add A
 13488 71A4 85 9F			sta :STACKORIGIN+9
 13489 71A6 A9 00			lda #$00
 13490 71A8 6D 89 A5			adc A+1
 13491 71AB 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 13492 71AD A9 00			lda #$00
 13493 71AF 69 00			adc #$00
 13494 71B1 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
 13495 71B3 A9 00			lda #$00
 13496 71B5 69 00			adc #$00
 13497 71B7 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
 13498 71B9 AD 8E A5			lda Y
 13499 71BC 18 6D 8A A5			add B
 13500 71C0 85 A0			sta :STACKORIGIN+10
 13501 71C2 A9 00			lda #$00
 13502 71C4 6D 8B A5			adc B+1
 13503 71C7 06 A0			asl :STACKORIGIN+10
 13504 71C9 2A				rol @
 13505 71CA 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 13506 71CC AD 1C 99			lda ROW
 13507 71CF 18 65 A0			add :STACKORIGIN+10
 13508 71D2 85 84			sta :bp2
 13509 71D4 AD 1D 99			lda ROW+1
 13510 71D7 65 B0			adc :STACKORIGIN+STACKWIDTH+10
 13511 71D9 85 85			sta :bp2+1
 13512 71DB A0 00			ldy #$00
 13513 71DD A5 9F			lda :STACKORIGIN+9
 13514 71DF 18 71 84			add (:bp2),y
 13515 71E2 8D 01 A4			sta BLITBYTE.DST
 13516 71E5 C8				iny
 13517 71E6 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 13518 71E8 71 84			adc (:bp2),y
 13519 71EA 8D 02 A4			sta BLITBYTE.DST+1
 13520 71ED A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
 13521 71EF 69 00			adc #$00
 13522 71F1 8D 03 A4			sta BLITBYTE.DST+2
 13523 71F4 A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
 13524 71F6 69 00			adc #$00
 13525 71F8 8D 04 A4			sta BLITBYTE.DST+3
 13526 71FB AD 11 9B			lda EXPLOSION.OFS
 13527 71FE 18 6D 8D A5			add X
 13528 7202 85 A0			sta :STACKORIGIN+10
 13529 7204 AD 12 9B			lda EXPLOSION.OFS+1
 13530 7207 69 00			adc #$00
 13531 7209 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 13532 720B AD 13 9B			lda EXPLOSION.OFS+2
 13533 720E 69 00			adc #$00
 13534 7210 85 C0			sta :STACKORIGIN+STACKWIDTH*2+10
 13535 7212 AD 14 9B			lda EXPLOSION.OFS+3
 13536 7215 69 00			adc #$00
 13537 7217 85 D0			sta :STACKORIGIN+STACKWIDTH*3+10
 13538 7219 A5 A0			lda :STACKORIGIN+10
 13539 721B 18 6D 86 A5			add Z
 13540 721F 8D FD A3			sta BLITBYTE.SRC
 13541 7222 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
 13542 7224 6D 87 A5			adc Z+1
 13543 7227			l_268C
 13544 7227 8D FE A3			sta BLITBYTE.SRC+1
 13545 722A A5 C0			lda :STACKORIGIN+STACKWIDTH*2+10
 13546 722C 69 00			adc #$00
 13547 722E 8D FF A3			sta BLITBYTE.SRC+2
 13548 7231 A5 D0			lda :STACKORIGIN+STACKWIDTH*3+10
 13549 7233 69 00			adc #$00
 13550 7235 8D 00 A4			sta BLITBYTE.SRC+3
 13551 7238 20 47 26			jsr BLITBYTE
 13552
 13553 				; --- ForToDoEpilog
 13554 723B EE 8D A5			inc X
 13555 723E F0 03 4C 6B 70		jne l_2619
 13556 7243			l_2627
 13557
 13558 				; --- ForToDoEpilog
 13559 7243 EE 8E A5			inc Y
 13560 7246 F0 03 4C 02 70		jne l_25E3
 13561 724B			l_25F1
 13562
 13563 				; optimize OK (service.pas), line = 2347
 13564
 13565 724B AD 8C A5			lda W
 13566 724E 8D C9 9A			sta DEATH_SOUND.A
 13567 7251 A9 00			lda #$00
 13568 7253 8D CA 9A			sta DEATH_SOUND.A+1
 13569 7256 20 A4 24			jsr DEATH_SOUND
 13570
 13571 				; --- ForToDoEpilog
 13572 7259 EE 8C A5			inc W
 13573 725C F0 03 4C F3 6F		jne l_25CC
 13574 7261			l_25DA
 13575
 13576 				; optimize OK (service.pas), line = 2351
 13577
 13578 7261 A9 07			lda #$07
 13579 7263 8D C9 9A			sta DEATH_SOUND.A
 13580 7266 A9 00			lda #$00
 13581 7268 8D CA 9A			sta DEATH_SOUND.A+1
 13582 726B 20 A4 24			jsr DEATH_SOUND
 13583
 13584 				; optimize OK (service.pas), line = 2352
 13585
 13586 726E A9 96			lda #$96
 13587 7270 8D 0F A4			sta MYDELAY.A
 13588 7273 A9 00			lda #$00
 13589 7275 8D 10 A4			sta MYDELAY.A+1
 13590 7278 20 9D 26			jsr MYDELAY
 13591
 13592 				; optimize FAIL ('DISABLE_LETTER', service.pas), line = 2353
 13593
 13594 727B 20 88 2B			jsr DISABLE_LETTER
 13595
 13596 				; ------------------------------------------------------------
 13597
 13598 = A586			Z	= DATAORIGIN+$0B6A
 13599 = A588			A	= DATAORIGIN+$0B6C
 13600 = A58A			B	= DATAORIGIN+$0B6E
 13601 = A58C			W	= DATAORIGIN+$0B70
 13602 = A58D			X	= DATAORIGIN+$0B71
 13603 = A58E			Y	= DATAORIGIN+$0B72
 13604
 13605 = A586			@VarData	= Z
 13606 = 0009			@VarDataSize	= 9
 13607
 13608 727E			@exit
 13609 					.ifdef @new
 13610 					lda <@VarData
 13611 					sta :ztmp
 13612 					lda >@VarData
 13613 					ldy #@VarDataSize-1
 13614 					jmp @FreeMem
 13615 					els
 13616 727E 60				rts						; ret
 13617 					eif
 13618 				.endl
 13619
 13620 727F			.local	CREATE_VAUS					; PROCEDURE
 13621
 13622 				; optimize FAIL ('NOSOUND', service.pas), line = 2364
 13623
 13624 727F 20 9C 26			jsr NOSOUND
 13625
 13626 				; optimize OK (service.pas), line = 2365
 13627
 13628 7282 A9 5B			lda #$5B
 13629 7284 8D 95 A5			sta A
 13630 7287 A9 00			lda #$00
 13631 7289 8D 96 A5			sta A+1
 13632
 13633 				; optimize OK (service.pas), line = 2366
 13634
 13635 728C A9 B3			lda #$B3
 13636 728E 8D 97 A5			sta B
 13637 7291 A9 00			lda #$00
 13638 7293 8D 98 A5			sta B+1
 13639
 13640 				; optimize OK (service.pas), line = 2368
 13641
 13642 7296 A9 0B			lda #$0B
 13643 7298 8D 92 A5			sta W
 13644
 13645 729B			l_26E0
 13646 				; --- ForToDoCondition
 13647 729B A9 00			lda #$00
 13648 729D 8D 91 A5			sta Y
 13649
 13650 72A0			l_26F7
 13651 				; --- ForToDoCondition
 13652 72A0 AD 91 A5			lda Y
 13653 72A3 C9 10			cmp #$10
 13654 72A5 90 03 4C D6 74		jcs l_2705
 13655
 13656 				; optimize OK (service.pas), line = 2372
 13657
 13658 72AA AD 15 9B			lda NEWVAUS.WIDTH
 13659 72AD 85 8E			sta :ecx
 13660 72AF AD 16 9B			lda NEWVAUS.WIDTH+1
 13661 72B2 85 8F			sta :ecx+1
 13662 72B4 AD 91 A5			lda Y
 13663 72B7 85 86			sta :eax
 13664 72B9 A9 00			lda #$00
 13665 72BB 85 87			sta :eax+1
 13666 					.ifdef fmulinit
 13667 					fmulu_16
 13668 					els
 13669 72BD 20 3E 13			imulCX_AL
 13670 					eif
 13671 72C0 A5 86			lda :eax
 13672 72C2 85 9F			sta :STACKORIGIN+9
 13673 72C4 A5 87			lda :eax+1
 13674 72C6 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 13675 72C8 A9 10			lda #$10
 13676 72CA 85 8E			sta :ecx
 13677 72CC A9 00			lda #$00
 13678 72CE 85 8F			sta :ecx+1
 13679 72D0 AD 15 9B			lda NEWVAUS.WIDTH
 13680 72D3 85 86			sta :eax
 13681 72D5 AD 16 9B			lda NEWVAUS.WIDTH+1
 13682 72D8 85 87			sta :eax+1
 13683 					.ifdef fmulinit
 13684 					fmulu_16
 13685 					els
 13686 72DA 20 FA 12			imulCX
 13687 					eif
 13688 72DD A5 86			lda :eax
 13689 72DF 85 8E			sta :ecx
 13690 72E1 A5 87			lda :eax+1
 13691 72E3 85 8F			sta :ecx+1
 13692 72E5 AD 92 A5			lda W
 13693 72E8 85 86			sta :eax
 13694 72EA A9 00			lda #$00
 13695 72EC 85 87			sta :eax+1
 13696 					.ifdef fmulinit
 13697 					fmulu_16
 13698 					els
 13699 72EE 20 3E 13			imulCX_AL
 13700 					eif
 13701 72F1 A5 86			lda :eax
 13702 72F3 18 65 9F			add :STACKORIGIN+9
 13703 72F6 8D 93 A5			sta Z
 13704 72F9 A5 87			lda :eax+1
 13705 72FB 65 AF			adc :STACKORIGIN+STACKWIDTH+9
 13706 72FD 8D 94 A5			sta Z+1
 13707
 13708 				; optimize OK (service.pas), line = 2373
 13709
 13710 7300 A9 00			lda #$00
 13711 7302 8D 90 A5			sta X
 13712 7305 AC 15 9B			ldy NEWVAUS.WIDTH
 13713 7308 88				dey
 13714 7309 8C 0D 73			sty @FORTMP_272A_0
 13715
 13716 730C			l_272D
 13717 				; --- ForToDoCondition
 13718 730C A9 00			lda @FORTMP_272A_0::#$00
 13719 730E CD 90 A5			cmp X
 13720 7311 B0 03 4C CE 74		jcc l_273B
 13721
 13722 				; optimize OK (service.pas), line = 2375
 13723
 13724 7316 AD 19 9B			lda NEWVAUS.OFS
 13725 7319 18 6D 90 A5			add X
 13726 731D 85 9F			sta :STACKORIGIN+9
 13727 731F AD 1A 9B			lda NEWVAUS.OFS+1
 13728 7322 69 00			adc #$00
 13729 7324 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 13730 7326 AD 1B 9B			lda NEWVAUS.OFS+2
 13731 7329 69 00			adc #$00
 13732 732B 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
 13733 732D AD 1C 9B			lda NEWVAUS.OFS+3
 13734 7330 69 00			adc #$00
 13735 7332 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
 13736 7334 A5 9F			lda :STACKORIGIN+9
 13737 7336 18 6D 93 A5			add Z
 13738 733A 8D 0A A4			sta GETBYTE.SRC
 13739 733D A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 13740 733F 6D 94 A5			adc Z+1
 13741 7342 8D 0B A4			sta GETBYTE.SRC+1
 13742 7345 A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
 13743 7347 69 00			adc #$00
 13744 7349 8D 0C A4			sta GETBYTE.SRC+2
 13745 734C A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
 13746 734E 69 00			adc #$00
 13747 7350 8D 0D A4			sta GETBYTE.SRC+3
 13748 7353 20 86 26			jsr GETBYTE
 13749 7356 AD 0E A4			lda GETBYTE.RESULT
 13750 7359 F0 03 4C 28 74		jne l_2757
 13751
 13752 				; optimize OK (service.pas), line = 2377
 13753
 13754 735E AD 90 A5			lda X
 13755 7361 18 6D 95 A5			add A
 13756 7365 85 9F			sta :STACKORIGIN+9
 13757 7367 A9 00			lda #$00
 13758 7369 6D 96 A5			adc A+1
 13759 736C 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 13760 736E A9 00			lda #$00
 13761 7370 69 00			adc #$00
 13762 7372 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
 13763 7374 A9 00			lda #$00
 13764 7376 69 00			adc #$00
 13765 7378 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
 13766 737A AD 91 A5			lda Y
 13767 737D 18 6D 97 A5			add B
 13768 7381 85 A0			sta :STACKORIGIN+10
 13769 7383 A9 00			lda #$00
 13770 7385 6D 98 A5			adc B+1
 13771 7388 06 A0			asl :STACKORIGIN+10
 13772 738A 2A				rol @
 13773 738B 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 13774 738D AD 1C 99			lda ROW
 13775 7390 18 65 A0			add :STACKORIGIN+10
 13776 7393 85 84			sta :bp2
 13777 7395 AD 1D 99			lda ROW+1
 13778 7398 65 B0			adc :STACKORIGIN+STACKWIDTH+10
 13779 739A 85 85			sta :bp2+1
 13780 739C A0 00			ldy #$00
 13781 739E A5 9F			lda :STACKORIGIN+9
 13782 73A0 18 71 84			add (:bp2),y
 13783 73A3 8D 01 A4			sta BLITBYTE.DST
 13784 73A6 C8				iny
 13785 73A7 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 13786 73A9 71 84			adc (:bp2),y
 13787 73AB 8D 02 A4			sta BLITBYTE.DST+1
 13788 73AE A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
 13789 73B0 69 00			adc #$00
 13790 73B2 8D 03 A4			sta BLITBYTE.DST+2
 13791 73B5 A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
 13792 73B7 69 00			adc #$00
 13793 73B9 8D 04 A4			sta BLITBYTE.DST+3
 13794 73BC AD E9 9A			lda PLAYSCREEN.OFS
 13795 73BF 18 6D 90 A5			add X
 13796 73C3 85 A0			sta :STACKORIGIN+10
 13797 73C5 AD EA 9A			lda PLAYSCREEN.OFS+1
 13798 73C8 69 00			adc #$00
 13799 73CA 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 13800 73CC AD EB 9A			lda PLAYSCREEN.OFS+2
 13801 73CF 69 00			adc #$00
 13802 73D1 85 C0			sta :STACKORIGIN+STACKWIDTH*2+10
 13803 73D3 AD EC 9A			lda PLAYSCREEN.OFS+3
 13804 73D6 69 00			adc #$00
 13805 73D8 85 D0			sta :STACKORIGIN+STACKWIDTH*3+10
 13806 73DA A5 A0			lda :STACKORIGIN+10
 13807 73DC 18 6D 95 A5			add A
 13808 73E0 85 A0			sta :STACKORIGIN+10
 13809 73E2 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
 13810 73E4 6D 96 A5			adc A+1
 13811 73E7 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 13812 73E9 A5 C0			lda :STACKORIGIN+STACKWIDTH*2+10
 13813 73EB 69 00			adc #$00
 13814 73ED 85 C0			sta :STACKORIGIN+STACKWIDTH*2+10
 13815 73EF A5 D0			lda :STACKORIGIN+STACKWIDTH*3+10
 13816 73F1 69 00			adc #$00
 13817 73F3 85 D0			sta :STACKORIGIN+STACKWIDTH*3+10
 13818 73F5 AD 91 A5			lda Y
 13819 73F8 18 6D 97 A5			add B
 13820 73FC 85 A1			sta :STACKORIGIN+11
 13821 73FE A9 00			lda #$00
 13822 7400 6D 98 A5			adc B+1
 13823 7403 06 A1			asl :STACKORIGIN+11
 13824 7405 2A				rol @
 13825 7406 85 B1			sta :STACKORIGIN+STACKWIDTH+11
 13826 7408 AD 1C 99			lda ROW
 13827 740B 18 65 A1			add :STACKORIGIN+11
 13828 740E 85 84			sta :bp2
 13829 7410 AD 1D 99			lda ROW+1
 13830 7413 65 B1			adc :STACKORIGIN+STACKWIDTH+11
 13831 7415 85 85			sta :bp2+1
 13832 7417 88				dey
 13833 7418 A5 A0			lda :STACKORIGIN+10
 13834 741A 18 71 84			add (:bp2),y
 13835 741D 8D FD A3			sta BLITBYTE.SRC
 13836 7420 C8				iny
 13837 7421 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
 13838 7423 71 84			adc (:bp2),y
 13839 7425 4C B2 74			jmp l_2794
 13840 7428			l_2757
 13841
 13842 				; optimize OK (service.pas), line = 2380
 13843
 13844 7428 AD 90 A5			lda X
 13845 742B 18 6D 95 A5			add A
 13846 742F 85 9F			sta :STACKORIGIN+9
 13847 7431 A9 00			lda #$00
 13848 7433 6D 96 A5			adc A+1
 13849 7436 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 13850 7438 A9 00			lda #$00
 13851 743A 69 00			adc #$00
 13852 743C 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
 13853 743E A9 00			lda #$00
 13854 7440 69 00			adc #$00
 13855 7442 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
 13856 7444 AD 91 A5			lda Y
 13857 7447 18 6D 97 A5			add B
 13858 744B 85 A0			sta :STACKORIGIN+10
 13859 744D A9 00			lda #$00
 13860 744F 6D 98 A5			adc B+1
 13861 7452 06 A0			asl :STACKORIGIN+10
 13862 7454 2A				rol @
 13863 7455 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 13864 7457 AD 1C 99			lda ROW
 13865 745A 18 65 A0			add :STACKORIGIN+10
 13866 745D 85 84			sta :bp2
 13867 745F AD 1D 99			lda ROW+1
 13868 7462 65 B0			adc :STACKORIGIN+STACKWIDTH+10
 13869 7464 85 85			sta :bp2+1
 13870 7466 A0 00			ldy #$00
 13871 7468 A5 9F			lda :STACKORIGIN+9
 13872 746A 18 71 84			add (:bp2),y
 13873 746D 8D 01 A4			sta BLITBYTE.DST
 13874 7470 C8				iny
 13875 7471 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 13876 7473 71 84			adc (:bp2),y
 13877 7475 8D 02 A4			sta BLITBYTE.DST+1
 13878 7478 A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
 13879 747A 69 00			adc #$00
 13880 747C 8D 03 A4			sta BLITBYTE.DST+2
 13881 747F A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
 13882 7481 69 00			adc #$00
 13883 7483 8D 04 A4			sta BLITBYTE.DST+3
 13884 7486 AD 19 9B			lda NEWVAUS.OFS
 13885 7489 18 6D 90 A5			add X
 13886 748D 85 A0			sta :STACKORIGIN+10
 13887 748F AD 1A 9B			lda NEWVAUS.OFS+1
 13888 7492 69 00			adc #$00
 13889 7494 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 13890 7496 AD 1B 9B			lda NEWVAUS.OFS+2
 13891 7499 69 00			adc #$00
 13892 749B 85 C0			sta :STACKORIGIN+STACKWIDTH*2+10
 13893 749D AD 1C 9B			lda NEWVAUS.OFS+3
 13894 74A0 69 00			adc #$00
 13895 74A2 85 D0			sta :STACKORIGIN+STACKWIDTH*3+10
 13896 74A4 A5 A0			lda :STACKORIGIN+10
 13897 74A6 18 6D 93 A5			add Z
 13898 74AA 8D FD A3			sta BLITBYTE.SRC
 13899 74AD A5 B0			lda :STACKORIGIN+STACKWIDTH+10
 13900 74AF 6D 94 A5			adc Z+1
 13901 74B2			l_2794
 13902 74B2 8D FE A3			sta BLITBYTE.SRC+1
 13903 74B5 A5 C0			lda :STACKORIGIN+STACKWIDTH*2+10
 13904 74B7 69 00			adc #$00
 13905 74B9 8D FF A3			sta BLITBYTE.SRC+2
 13906 74BC A5 D0			lda :STACKORIGIN+STACKWIDTH*3+10
 13907 74BE 69 00			adc #$00
 13908 74C0 8D 00 A4			sta BLITBYTE.SRC+3
 13909 74C3 20 47 26			jsr BLITBYTE
 13910
 13911 				; --- ForToDoEpilog
 13912 74C6 EE 90 A5			inc X
 13913 74C9 F0 03 4C 0C 73		jne l_272D
 13914 74CE			l_273B
 13915
 13916 				; --- ForToDoEpilog
 13917 74CE EE 91 A5			inc Y
 13918 74D1 F0 03 4C A0 72		jne l_26F7
 13919 74D6			l_2705
 13920
 13921 				; optimize OK (service.pas), line = 2384
 13922
 13923 74D6 A9 01			lda #$01
 13924 74D8 8D 0F A4			sta MYDELAY.A
 13925 74DB A9 00			lda #$00
 13926 74DD 8D 10 A4			sta MYDELAY.A+1
 13927 74E0 20 9D 26			jsr MYDELAY
 13928
 13929 				; --- ForToDoEpilog
 13930 74E3 CE 92 A5			dec W
 13931 74E6 30 03 4C 9B 72		jpl l_26E0
 13932 74EB			l_26EE
 13933
 13934 				; ------------------------------------------------------------
 13935
 13936 = A590			X	= DATAORIGIN+$0B74
 13937 = A591			Y	= DATAORIGIN+$0B75
 13938 = A592			W	= DATAORIGIN+$0B76
 13939 = A593			Z	= DATAORIGIN+$0B77
 13940 = A595			A	= DATAORIGIN+$0B79
 13941 = A597			B	= DATAORIGIN+$0B7B
 13942
 13943 = A590			@VarData	= X
 13944 = 0009			@VarDataSize	= 9
 13945
 13946 74EB			@exit
 13947 					.ifdef @new
 13948 					lda <@VarData
 13949 					sta :ztmp
 13950 					lda >@VarData
 13951 					ldy #@VarDataSize-1
 13952 					jmp @FreeMem
 13953 					els
 13954 74EB 60				rts						; ret
 13955 					eif
 13956 				.endl
 13957
 13958 74EC			.local	PUT_DIGIT					; PROCEDURE
 13959
 13960 				; optimize OK (service.pas), line = 2394
 13961
 13962 74EC A9 DE			lda #$DE
 13963 74EE 8D A2 A5			sta A
 13964
 13965 				; optimize OK (service.pas), line = 2418
 13966
 13967 74F1 AC 9E A5			ldy NUM
 13968 74F4 B9 84 10			lda adr.DIGITS,y
 13969 74F7 29 01			and #$01
 13970 74F9 C9 01			cmp #$01
 13971 74FB D0 05			jne l_27EB
 13972 74FD A9 DF			lda #$DF
 13973 74FF 8D A2 A5			sta A
 13974 7502			l_27EB
 13975
 13976 				; optimize OK (service.pas), line = 2419
 13977
 13978 7502 A9 01			lda #$01
 13979 7504 8D A0 A5			sta X
 13980
 13981 7507			l_27FB
 13982 				; --- ForToDoCondition
 13983 7507 AD A0 A5			lda X
 13984 750A C9 05			cmp #$05
 13985 750C B0 61			jcs l_2809
 13986
 13987 				; optimize OK (service.pas), line = 2421
 13988
 13989 750E AD 9A A5			lda PX
 13990 7511 6D A0 A5			adc X
 13991 7514 85 A0			sta :STACKORIGIN+10
 13992 7516 AD 9B A5			lda PX+1
 13993 7519 69 00			adc #$00
 13994 751B 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 13995 751D A9 00			lda #$00
 13996 751F 69 00			adc #$00
 13997 7521 85 C0			sta :STACKORIGIN+STACKWIDTH*2+10
 13998 7523 A9 00			lda #$00
 13999 7525 69 00			adc #$00
 14000 7527 85 D0			sta :STACKORIGIN+STACKWIDTH*3+10
 14001 7529 AD 9D A5			lda PY+1
 14002 752C 85 B1			sta :STACKORIGIN+STACKWIDTH+11
 14003 752E AD 9C A5			lda PY
 14004 7531 0A				asl @
 14005 7532 26 B1			rol :STACKORIGIN+STACKWIDTH+11
 14006 7534 18 6D 1C 99			add ROW
 14007 7538 85 84			sta :bp2
 14008 753A AD 1D 99			lda ROW+1
 14009 753D 65 B1			adc :STACKORIGIN+STACKWIDTH+11
 14010 753F 85 85			sta :bp2+1
 14011 7541 A0 00			ldy #$00
 14012 7543 A5 A0			lda :STACKORIGIN+10
 14013 7545 18 71 84			add (:bp2),y
 14014 7548 8D 05 A4			sta PUTBYTE.DST
 14015 754B C8				iny
 14016 754C A5 B0			lda :STACKORIGIN+STACKWIDTH+10
 14017 754E 71 84			adc (:bp2),y
 14018 7550 8D 06 A4			sta PUTBYTE.DST+1
 14019 7553 A5 C0			lda :STACKORIGIN+STACKWIDTH*2+10
 14020 7555 69 00			adc #$00
 14021 7557 8D 07 A4			sta PUTBYTE.DST+2
 14022 755A A5 D0			lda :STACKORIGIN+STACKWIDTH*3+10
 14023 755C 69 00			adc #$00
 14024 755E 8D 08 A4			sta PUTBYTE.DST+3
 14025 7561 AD A2 A5			lda A
 14026 7564 8D 09 A4			sta PUTBYTE.V
 14027 7567 20 70 26			jsr PUTBYTE
 14028
 14029 				; --- ForToDoEpilog
 14030 756A EE A0 A5			inc X
 14031 756D D0 98			jne l_27FB
 14032 756F			l_2809
 14033
 14034 				; optimize OK (service.pas), line = 2425
 14035
 14036 756F A9 DE			lda #$DE
 14037 7571 8D A2 A5			sta A
 14038
 14039 				; optimize OK (service.pas), line = 2426
 14040
 14041 7574 AC 9E A5			ldy NUM
 14042 7577 B9 84 10			lda adr.DIGITS,y
 14043 757A 29 02			and #$02
 14044 757C C9 02			cmp #$02
 14045 757E D0 05			jne l_2841
 14046 7580 A9 DF			lda #$DF
 14047 7582 8D A2 A5			sta A
 14048 7585			l_2841
 14049
 14050 				; optimize OK (service.pas), line = 2427
 14051
 14052 7585 A9 01			lda #$01
 14053 7587 8D A0 A5			sta X
 14054
 14055 758A			l_2851
 14056 				; --- ForToDoCondition
 14057 758A AD A0 A5			lda X
 14058 758D C9 05			cmp #$05
 14059 758F B0 61			jcs l_285F
 14060
 14061 				; optimize OK (service.pas), line = 2429
 14062
 14063 7591 AD 9A A5			lda PX
 14064 7594 6D A0 A5			adc X
 14065 7597 85 A0			sta :STACKORIGIN+10
 14066 7599 AD 9B A5			lda PX+1
 14067 759C 69 00			adc #$00
 14068 759E 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 14069 75A0 A9 00			lda #$00
 14070 75A2 69 00			adc #$00
 14071 75A4 85 C0			sta :STACKORIGIN+STACKWIDTH*2+10
 14072 75A6 A9 00			lda #$00
 14073 75A8 69 00			adc #$00
 14074 75AA 85 D0			sta :STACKORIGIN+STACKWIDTH*3+10
 14075 75AC AD 9D A5			lda PY+1
 14076 75AF 85 B1			sta :STACKORIGIN+STACKWIDTH+11
 14077 75B1 AD 9C A5			lda PY
 14078 75B4 0A				asl @
 14079 75B5 26 B1			rol :STACKORIGIN+STACKWIDTH+11
 14080 75B7 18 6D 1C 99			add ROW
 14081 75BB 85 84			sta :bp2
 14082 75BD AD 1D 99			lda ROW+1
 14083 75C0 65 B1			adc :STACKORIGIN+STACKWIDTH+11
 14084 75C2 85 85			sta :bp2+1
 14085 75C4 A0 0A			ldy #$0A
 14086 75C6 A5 A0			lda :STACKORIGIN+10
 14087 75C8 18 71 84			add (:bp2),y
 14088 75CB 8D 05 A4			sta PUTBYTE.DST
 14089 75CE C8				iny
 14090 75CF A5 B0			lda :STACKORIGIN+STACKWIDTH+10
 14091 75D1 71 84			adc (:bp2),y
 14092 75D3 8D 06 A4			sta PUTBYTE.DST+1
 14093 75D6 A5 C0			lda :STACKORIGIN+STACKWIDTH*2+10
 14094 75D8 69 00			adc #$00
 14095 75DA 8D 07 A4			sta PUTBYTE.DST+2
 14096 75DD A5 D0			lda :STACKORIGIN+STACKWIDTH*3+10
 14097 75DF 69 00			adc #$00
 14098 75E1 8D 08 A4			sta PUTBYTE.DST+3
 14099 75E4 AD A2 A5			lda A
 14100 75E7 8D 09 A4			sta PUTBYTE.V
 14101 75EA 20 70 26			jsr PUTBYTE
 14102
 14103 				; --- ForToDoEpilog
 14104 75ED EE A0 A5			inc X
 14105 75F0 D0 98			jne l_2851
 14106 75F2			l_285F
 14107
 14108 				; optimize OK (service.pas), line = 2433
 14109
 14110 75F2 A9 DE			lda #$DE
 14111 75F4 8D A2 A5			sta A
 14112
 14113 				; optimize OK (service.pas), line = 2434
 14114
 14115 75F7 AC 9E A5			ldy NUM
 14116 75FA B9 84 10			lda adr.DIGITS,y
 14117 75FD 29 04			and #$04
 14118 75FF C9 04			cmp #$04
 14119 7601 D0 05			jne l_289B
 14120 7603 A9 DF			lda #$DF
 14121 7605 8D A2 A5			sta A
 14122 7608			l_289B
 14123
 14124 				; optimize OK (service.pas), line = 2435
 14125
 14126 7608 A9 01			lda #$01
 14127 760A 8D A0 A5			sta X
 14128
 14129 760D			l_28AB
 14130 				; --- ForToDoCondition
 14131 760D AD A0 A5			lda X
 14132 7610 C9 05			cmp #$05
 14133 7612 B0 61			jcs l_28B9
 14134
 14135 				; optimize OK (service.pas), line = 2437
 14136
 14137 7614 AD 9A A5			lda PX
 14138 7617 6D A0 A5			adc X
 14139 761A 85 A0			sta :STACKORIGIN+10
 14140 761C AD 9B A5			lda PX+1
 14141 761F 69 00			adc #$00
 14142 7621 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 14143 7623 A9 00			lda #$00
 14144 7625 69 00			adc #$00
 14145 7627 85 C0			sta :STACKORIGIN+STACKWIDTH*2+10
 14146 7629 A9 00			lda #$00
 14147 762B 69 00			adc #$00
 14148 762D 85 D0			sta :STACKORIGIN+STACKWIDTH*3+10
 14149 762F AD 9D A5			lda PY+1
 14150 7632 85 B1			sta :STACKORIGIN+STACKWIDTH+11
 14151 7634 AD 9C A5			lda PY
 14152 7637 0A				asl @
 14153 7638 26 B1			rol :STACKORIGIN+STACKWIDTH+11
 14154 763A 18 6D 1C 99			add ROW
 14155 763E 85 84			sta :bp2
 14156 7640 AD 1D 99			lda ROW+1
 14157 7643 65 B1			adc :STACKORIGIN+STACKWIDTH+11
 14158 7645 85 85			sta :bp2+1
 14159 7647 A0 14			ldy #$14
 14160 7649 A5 A0			lda :STACKORIGIN+10
 14161 764B 18 71 84			add (:bp2),y
 14162 764E 8D 05 A4			sta PUTBYTE.DST
 14163 7651 C8				iny
 14164 7652 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
 14165 7654 71 84			adc (:bp2),y
 14166 7656 8D 06 A4			sta PUTBYTE.DST+1
 14167 7659 A5 C0			lda :STACKORIGIN+STACKWIDTH*2+10
 14168 765B 69 00			adc #$00
 14169 765D 8D 07 A4			sta PUTBYTE.DST+2
 14170 7660 A5 D0			lda :STACKORIGIN+STACKWIDTH*3+10
 14171 7662 69 00			adc #$00
 14172 7664 8D 08 A4			sta PUTBYTE.DST+3
 14173 7667 AD A2 A5			lda A
 14174 766A 8D 09 A4			sta PUTBYTE.V
 14175 766D 20 70 26			jsr PUTBYTE
 14176
 14177 				; --- ForToDoEpilog
 14178 7670 EE A0 A5			inc X
 14179 7673 D0 98			jne l_28AB
 14180 7675			l_28B9
 14181
 14182 				; optimize OK (service.pas), line = 2440
 14183
 14184 7675 A9 DE			lda #$DE
 14185 7677 8D A2 A5			sta A
 14186
 14187 				; optimize OK (service.pas), line = 2441
 14188
 14189 767A AC 9E A5			ldy NUM
 14190 767D B9 84 10			lda adr.DIGITS,y
 14191 7680 29 08			and #$08
 14192 7682 C9 08			cmp #$08
 14193 7684 D0 05			jne l_28F5
 14194 7686 A9 DF			lda #$DF
 14195 7688 8D A2 A5			sta A
 14196 768B			l_28F5
 14197
 14198 				; optimize OK (service.pas), line = 2442
 14199
 14200 768B A9 01			lda #$01
 14201 768D 8D A1 A5			sta Y
 14202
 14203 7690			l_2905
 14204 				; --- ForToDoCondition
 14205 7690 AD A1 A5			lda Y
 14206 7693 C9 05			cmp #$05
 14207 7695 B0 51			jcs l_2913
 14208
 14209 				; optimize OK (service.pas), line = 2444
 14210
 14211 7697 AD 9C A5			lda PY
 14212 769A 6D A1 A5			adc Y
 14213 769D 85 A1			sta :STACKORIGIN+11
 14214 769F AD 9D A5			lda PY+1
 14215 76A2 69 00			adc #$00
 14216 76A4 06 A1			asl :STACKORIGIN+11
 14217 76A6 2A				rol @
 14218 76A7 85 B1			sta :STACKORIGIN+STACKWIDTH+11
 14219 76A9 AD 1C 99			lda ROW
 14220 76AC 18 65 A1			add :STACKORIGIN+11
 14221 76AF 85 84			sta :bp2
 14222 76B1 AD 1D 99			lda ROW+1
 14223 76B4 65 B1			adc :STACKORIGIN+STACKWIDTH+11
 14224 76B6 85 85			sta :bp2+1
 14225 76B8 A0 00			ldy #$00
 14226 76BA AD 9A A5			lda PX
 14227 76BD 18 71 84			add (:bp2),y
 14228 76C0 8D 05 A4			sta PUTBYTE.DST
 14229 76C3 C8				iny
 14230 76C4 AD 9B A5			lda PX+1
 14231 76C7 71 84			adc (:bp2),y
 14232 76C9 8D 06 A4			sta PUTBYTE.DST+1
 14233 76CC A9 00			lda #$00
 14234 76CE 69 00			adc #$00
 14235 76D0 8D 07 A4			sta PUTBYTE.DST+2
 14236 76D3 A9 00			lda #$00
 14237 76D5 69 00			adc #$00
 14238 76D7 8D 08 A4			sta PUTBYTE.DST+3
 14239 76DA AD A2 A5			lda A
 14240 76DD 8D 09 A4			sta PUTBYTE.V
 14241 76E0 20 70 26			jsr PUTBYTE
 14242
 14243 				; --- ForToDoEpilog
 14244 76E3 EE A1 A5			inc Y
 14245 76E6 D0 A8			jne l_2905
 14246 76E8			l_2913
 14247
 14248 				; optimize OK (service.pas), line = 2447
 14249
 14250 76E8 A9 DE			lda #$DE
 14251 76EA 8D A2 A5			sta A
 14252
 14253 				; optimize OK (service.pas), line = 2448
 14254
 14255 76ED AC 9E A5			ldy NUM
 14256 76F0 B9 84 10			lda adr.DIGITS,y
 14257 76F3 29 10			and #$10
 14258 76F5 C9 10			cmp #$10
 14259 76F7 D0 05			jne l_294B
 14260 76F9 A9 DF			lda #$DF
 14261 76FB 8D A2 A5			sta A
 14262 76FE			l_294B
 14263
 14264 				; optimize OK (service.pas), line = 2449
 14265
 14266 76FE A9 01			lda #$01
 14267 7700 8D A1 A5			sta Y
 14268
 14269 7703			l_295B
 14270 				; --- ForToDoCondition
 14271 7703 AD A1 A5			lda Y
 14272 7706 C9 05			cmp #$05
 14273 7708 B0 5E			jcs l_2969
 14274
 14275 				; optimize OK (service.pas), line = 2451
 14276
 14277 770A AD 9C A5			lda PY
 14278 770D 6D A1 A5			adc Y
 14279 7710 85 A1			sta :STACKORIGIN+11
 14280 7712 AD 9D A5			lda PY+1
 14281 7715 69 00			adc #$00
 14282 7717 85 B1			sta :STACKORIGIN+STACKWIDTH+11
 14283 7719 A5 A1			lda :STACKORIGIN+11
 14284 771B 18 69 05			add #$05
 14285 771E 85 A1			sta :STACKORIGIN+11
 14286 7720 A5 B1			lda :STACKORIGIN+STACKWIDTH+11
 14287 7722 69 00			adc #$00
 14288 7724 06 A1			asl :STACKORIGIN+11
 14289 7726 2A				rol @
 14290 7727 85 B1			sta :STACKORIGIN+STACKWIDTH+11
 14291 7729 AD 1C 99			lda ROW
 14292 772C 18 65 A1			add :STACKORIGIN+11
 14293 772F 85 84			sta :bp2
 14294 7731 AD 1D 99			lda ROW+1
 14295 7734 65 B1			adc :STACKORIGIN+STACKWIDTH+11
 14296 7736 85 85			sta :bp2+1
 14297 7738 A0 00			ldy #$00
 14298 773A AD 9A A5			lda PX
 14299 773D 18 71 84			add (:bp2),y
 14300 7740 8D 05 A4			sta PUTBYTE.DST
 14301 7743 C8				iny
 14302 7744 AD 9B A5			lda PX+1
 14303 7747 71 84			adc (:bp2),y
 14304 7749 8D 06 A4			sta PUTBYTE.DST+1
 14305 774C A9 00			lda #$00
 14306 774E 69 00			adc #$00
 14307 7750 8D 07 A4			sta PUTBYTE.DST+2
 14308 7753 A9 00			lda #$00
 14309 7755 69 00			adc #$00
 14310 7757 8D 08 A4			sta PUTBYTE.DST+3
 14311 775A AD A2 A5			lda A
 14312 775D 8D 09 A4			sta PUTBYTE.V
 14313 7760 20 70 26			jsr PUTBYTE
 14314
 14315 				; --- ForToDoEpilog
 14316 7763 EE A1 A5			inc Y
 14317 7766 D0 9B			jne l_295B
 14318 7768			l_2969
 14319
 14320 				; optimize OK (service.pas), line = 2454
 14321
 14322 7768 A9 DE			lda #$DE
 14323 776A 8D A2 A5			sta A
 14324
 14325 				; optimize OK (service.pas), line = 2455
 14326
 14327 776D AC 9E A5			ldy NUM
 14328 7770 B9 84 10			lda adr.DIGITS,y
 14329 7773 29 20			and #$20
 14330 7775 C9 20			cmp #$20
 14331 7777 D0 05			jne l_29A5
 14332 7779 A9 DF			lda #$DF
 14333 777B 8D A2 A5			sta A
 14334 777E			l_29A5
 14335
 14336 				; optimize OK (service.pas), line = 2456
 14337
 14338 777E A9 01			lda #$01
 14339 7780 8D A1 A5			sta Y
 14340
 14341 7783			l_29B5
 14342 				; --- ForToDoCondition
 14343 7783 AD A1 A5			lda Y
 14344 7786 C9 05			cmp #$05
 14345 7788 B0 6A			jcs l_29C3
 14346
 14347 				; optimize OK (service.pas), line = 2458
 14348
 14349 778A A9 05			lda #$05
 14350 778C 6D 9A A5			adc PX
 14351 778F 85 A0			sta :STACKORIGIN+10
 14352 7791 A9 00			lda #$00
 14353 7793 6D 9B A5			adc PX+1
 14354 7796 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 14355 7798 A9 00			lda #$00
 14356 779A 69 00			adc #$00
 14357 779C 85 C0			sta :STACKORIGIN+STACKWIDTH*2+10
 14358 779E A9 00			lda #$00
 14359 77A0 69 00			adc #$00
 14360 77A2 85 D0			sta :STACKORIGIN+STACKWIDTH*3+10
 14361 77A4 AD 9C A5			lda PY
 14362 77A7 18 6D A1 A5			add Y
 14363 77AB 85 A1			sta :STACKORIGIN+11
 14364 77AD AD 9D A5			lda PY+1
 14365 77B0 69 00			adc #$00
 14366 77B2 06 A1			asl :STACKORIGIN+11
 14367 77B4 2A				rol @
 14368 77B5 85 B1			sta :STACKORIGIN+STACKWIDTH+11
 14369 77B7 AD 1C 99			lda ROW
 14370 77BA 18 65 A1			add :STACKORIGIN+11
 14371 77BD 85 84			sta :bp2
 14372 77BF AD 1D 99			lda ROW+1
 14373 77C2 65 B1			adc :STACKORIGIN+STACKWIDTH+11
 14374 77C4 85 85			sta :bp2+1
 14375 77C6 A0 00			ldy #$00
 14376 77C8 A5 A0			lda :STACKORIGIN+10
 14377 77CA 18 71 84			add (:bp2),y
 14378 77CD 8D 05 A4			sta PUTBYTE.DST
 14379 77D0 C8				iny
 14380 77D1 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
 14381 77D3 71 84			adc (:bp2),y
 14382 77D5 8D 06 A4			sta PUTBYTE.DST+1
 14383 77D8 A5 C0			lda :STACKORIGIN+STACKWIDTH*2+10
 14384 77DA 69 00			adc #$00
 14385 77DC 8D 07 A4			sta PUTBYTE.DST+2
 14386 77DF A5 D0			lda :STACKORIGIN+STACKWIDTH*3+10
 14387 77E1 69 00			adc #$00
 14388 77E3 8D 08 A4			sta PUTBYTE.DST+3
 14389 77E6 AD A2 A5			lda A
 14390 77E9 8D 09 A4			sta PUTBYTE.V
 14391 77EC 20 70 26			jsr PUTBYTE
 14392
 14393 				; --- ForToDoEpilog
 14394 77EF EE A1 A5			inc Y
 14395 77F2 D0 8F			jne l_29B5
 14396 77F4			l_29C3
 14397
 14398 				; optimize OK (service.pas), line = 2461
 14399
 14400 77F4 A9 DE			lda #$DE
 14401 77F6 8D A2 A5			sta A
 14402
 14403 				; optimize OK (service.pas), line = 2462
 14404
 14405 77F9 AC 9E A5			ldy NUM
 14406 77FC B9 84 10			lda adr.DIGITS,y
 14407 77FF 29 40			and #$40
 14408 7801 C9 40			cmp #$40
 14409 7803 D0 05			jne l_29FF
 14410 7805 A9 DF			lda #$DF
 14411 7807 8D A2 A5			sta A
 14412 780A			l_29FF
 14413
 14414 				; optimize OK (service.pas), line = 2463
 14415
 14416 780A A9 01			lda #$01
 14417 780C 8D A1 A5			sta Y
 14418
 14419 780F			l_2A0F
 14420 				; --- ForToDoCondition
 14421 780F AD A1 A5			lda Y
 14422 7812 C9 05			cmp #$05
 14423 7814 B0 77			jcs l_2A1D
 14424
 14425 				; optimize OK (service.pas), line = 2465
 14426
 14427 7816 A9 05			lda #$05
 14428 7818 6D 9A A5			adc PX
 14429 781B 85 A0			sta :STACKORIGIN+10
 14430 781D A9 00			lda #$00
 14431 781F 6D 9B A5			adc PX+1
 14432 7822 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 14433 7824 A9 00			lda #$00
 14434 7826 69 00			adc #$00
 14435 7828 85 C0			sta :STACKORIGIN+STACKWIDTH*2+10
 14436 782A A9 00			lda #$00
 14437 782C 69 00			adc #$00
 14438 782E 85 D0			sta :STACKORIGIN+STACKWIDTH*3+10
 14439 7830 AD 9C A5			lda PY
 14440 7833 18 6D A1 A5			add Y
 14441 7837 85 A1			sta :STACKORIGIN+11
 14442 7839 AD 9D A5			lda PY+1
 14443 783C 69 00			adc #$00
 14444 783E 85 B1			sta :STACKORIGIN+STACKWIDTH+11
 14445 7840 A5 A1			lda :STACKORIGIN+11
 14446 7842 18 69 05			add #$05
 14447 7845 85 A1			sta :STACKORIGIN+11
 14448 7847 A5 B1			lda :STACKORIGIN+STACKWIDTH+11
 14449 7849 69 00			adc #$00
 14450 784B 06 A1			asl :STACKORIGIN+11
 14451 784D 2A				rol @
 14452 784E 85 B1			sta :STACKORIGIN+STACKWIDTH+11
 14453 7850 AD 1C 99			lda ROW
 14454 7853 18 65 A1			add :STACKORIGIN+11
 14455 7856 85 84			sta :bp2
 14456 7858 AD 1D 99			lda ROW+1
 14457 785B 65 B1			adc :STACKORIGIN+STACKWIDTH+11
 14458 785D 85 85			sta :bp2+1
 14459 785F A0 00			ldy #$00
 14460 7861 A5 A0			lda :STACKORIGIN+10
 14461 7863 18 71 84			add (:bp2),y
 14462 7866 8D 05 A4			sta PUTBYTE.DST
 14463 7869 C8				iny
 14464 786A A5 B0			lda :STACKORIGIN+STACKWIDTH+10
 14465 786C 71 84			adc (:bp2),y
 14466 786E 8D 06 A4			sta PUTBYTE.DST+1
 14467 7871 A5 C0			lda :STACKORIGIN+STACKWIDTH*2+10
 14468 7873 69 00			adc #$00
 14469 7875 8D 07 A4			sta PUTBYTE.DST+2
 14470 7878 A5 D0			lda :STACKORIGIN+STACKWIDTH*3+10
 14471 787A 69 00			adc #$00
 14472 787C 8D 08 A4			sta PUTBYTE.DST+3
 14473 787F AD A2 A5			lda A
 14474 7882 8D 09 A4			sta PUTBYTE.V
 14475 7885 20 70 26			jsr PUTBYTE
 14476
 14477 				; --- ForToDoEpilog
 14478 7888 EE A1 A5			inc Y
 14479 788B D0 82			jne l_2A0F
 14480 788D			l_2A1D
 14481
 14482 				; ------------------------------------------------------------
 14483
 14484 = A59A			PX	= DATAORIGIN+$0B7E
 14485 = A59C			PY	= DATAORIGIN+$0B80
 14486 = A59E			NUM	= DATAORIGIN+$0B82
 14487 = A5A0			X	= DATAORIGIN+$0B84
 14488 = A5A1			Y	= DATAORIGIN+$0B85
 14489 = A5A2			A	= DATAORIGIN+$0B86
 14490
 14491 = A59A			@VarData	= PX
 14492 = 0009			@VarDataSize	= 9
 14493
 14494 788D			@exit
 14495 					.ifdef @new
 14496 					lda <@VarData
 14497 					sta :ztmp
 14498 					lda >@VarData
 14499 					ldy #@VarDataSize-1
 14500 					jmp @FreeMem
 14501 					els
 14502 788D 60				rts						; ret
 14503 					eif
 14504 				.endl
 14505
 14506 788E			.local	WRITE_SCORE					; PROCEDURE
 14507
 14508 				; optimize OK (service.pas), line = 2476
 14509
 14510 788E A9 00			lda #$00
 14511 7890 8D AF A5			sta F
 14512
 14513 				; optimize OK (service.pas), line = 2481
 14514
 14515 7893 A9 A0			lda #$A0
 14516 7895 85 8E			sta @INTEGER.DIV.B
 14517 7897 A9 86			lda #$86
 14518 7899 85 8F			sta @INTEGER.DIV.B+1
 14519 789B A9 01			lda #$01
 14520 789D 85 90			sta @INTEGER.DIV.B+2
 14521 789F A9 00			lda #$00
 14522 78A1 85 91			sta @INTEGER.DIV.B+3
 14523 78A3 AD A7 A5			lda SC
 14524 78A6 85 86			sta @INTEGER.DIV.A
 14525 78A8 AD A8 A5			lda SC+1
 14526 78AB 85 87			sta @INTEGER.DIV.A+1
 14527 78AD AD A9 A5			lda SC+2
 14528 78B0 85 88			sta @INTEGER.DIV.A+2
 14529 78B2 AD AA A5			lda SC+3
 14530 78B5 85 89			sta @INTEGER.DIV.A+3
 14531 78B7 20 62 12			jsr @INTEGER.DIV
 14532 78BA A9 0A			lda #$0A
 14533 78BC 85 8E			sta @INTEGER.MOD.B
 14534 78BE A9 00			lda #$00
 14535 78C0 85 8F			sta @INTEGER.MOD.B+1
 14536 78C2 85 90			sta @INTEGER.MOD.B+2
 14537 78C4 85 91			sta @INTEGER.MOD.B+3
 14538 78C6 20 7F 12			jsr @INTEGER.MOD
 14539 78C9 A5 8A			lda @INTEGER.MOD.RESULT
 14540 78CB 8D AB A5			sta N1
 14541 78CE A5 8B			lda @INTEGER.MOD.RESULT+1
 14542 78D0 8D AC A5			sta N1+1
 14543 78D3 A5 8C			lda @INTEGER.MOD.RESULT+2
 14544 78D5 8D AD A5			sta N1+2
 14545 78D8 A5 8D			lda @INTEGER.MOD.RESULT+3
 14546 78DA 8D AE A5			sta N1+3
 14547
 14548 				; optimize OK (service.pas), line = 2482
 14549
 14550 78DD 30 10			jmi l_2A65
 14551 78DF 0D AD A5			ora N1+2
 14552 78E2 0D AC A5			ora N1+1
 14553 78E5 0D AB A5			ora N1
 14554 78E8 F0 05			jeq l_2A65
 14555 78EA A9 01			lda #$01
 14556 78EC 8D AF A5			sta F
 14557 78EF			l_2A65
 14558
 14559 				; optimize OK (service.pas), line = 2483
 14560
 14561 78EF AD AF A5			lda F
 14562 78F2 F0 24			jeq l_2A78
 14563 78F4 AD A3 A5			lda PX
 14564 78F7 8D 9A A5			sta PUT_DIGIT.PX
 14565 78FA AD A4 A5			lda PX+1
 14566 78FD 8D 9B A5			sta PUT_DIGIT.PX+1
 14567 7900 AD A5 A5			lda PY
 14568 7903 8D 9C A5			sta PUT_DIGIT.PY
 14569 7906 AD A6 A5			lda PY+1
 14570 7909 8D 9D A5			sta PUT_DIGIT.PY+1
 14571 790C AD AB A5			lda N1
 14572 790F 8D 9E A5			sta PUT_DIGIT.NUM
 14573 7912 AD AC A5			lda N1+1
 14574 7915 4C 37 79			jmp l_2A88
 14575 7918			l_2A78
 14576
 14577 				; optimize OK (service.pas), line = 2484
 14578
 14579 7918 AD A3 A5			lda PX
 14580 791B 8D 9A A5			sta PUT_DIGIT.PX
 14581 791E AD A4 A5			lda PX+1
 14582 7921 8D 9B A5			sta PUT_DIGIT.PX+1
 14583 7924 AD A5 A5			lda PY
 14584 7927 8D 9C A5			sta PUT_DIGIT.PY
 14585 792A AD A6 A5			lda PY+1
 14586 792D 8D 9D A5			sta PUT_DIGIT.PY+1
 14587 7930 A9 0A			lda #$0A
 14588 7932 8D 9E A5			sta PUT_DIGIT.NUM
 14589 7935 A9 00			lda #$00
 14590 7937			l_2A88
 14591 7937 8D 9F A5			sta PUT_DIGIT.NUM+1
 14592 793A 20 EC 74			jsr PUT_DIGIT
 14593
 14594 				; optimize OK (service.pas), line = 2487
 14595
 14596 793D A9 10			lda #$10
 14597 793F 85 8E			sta @INTEGER.DIV.B
 14598 7941 A9 27			lda #$27
 14599 7943 85 8F			sta @INTEGER.DIV.B+1
 14600 7945 A9 00			lda #$00
 14601 7947 85 90			sta @INTEGER.DIV.B+2
 14602 7949 85 91			sta @INTEGER.DIV.B+3
 14603 794B AD A7 A5			lda SC
 14604 794E 85 86			sta @INTEGER.DIV.A
 14605 7950 AD A8 A5			lda SC+1
 14606 7953 85 87			sta @INTEGER.DIV.A+1
 14607 7955 AD A9 A5			lda SC+2
 14608 7958 85 88			sta @INTEGER.DIV.A+2
 14609 795A AD AA A5			lda SC+3
 14610 795D 85 89			sta @INTEGER.DIV.A+3
 14611 795F 20 62 12			jsr @INTEGER.DIV
 14612 7962 A9 0A			lda #$0A
 14613 7964 85 8E			sta @INTEGER.MOD.B
 14614 7966 A9 00			lda #$00
 14615 7968 85 8F			sta @INTEGER.MOD.B+1
 14616 796A 85 90			sta @INTEGER.MOD.B+2
 14617 796C 85 91			sta @INTEGER.MOD.B+3
 14618 796E 20 7F 12			jsr @INTEGER.MOD
 14619 7971 A5 8A			lda @INTEGER.MOD.RESULT
 14620 7973 8D AB A5			sta N1
 14621 7976 A5 8B			lda @INTEGER.MOD.RESULT+1
 14622 7978 8D AC A5			sta N1+1
 14623 797B A5 8C			lda @INTEGER.MOD.RESULT+2
 14624 797D 8D AD A5			sta N1+2
 14625 7980 A5 8D			lda @INTEGER.MOD.RESULT+3
 14626 7982 8D AE A5			sta N1+3
 14627
 14628 				; optimize OK (service.pas), line = 2488
 14629
 14630 7985 30 10			jmi l_2AAA
 14631 7987 0D AD A5			ora N1+2
 14632 798A 0D AC A5			ora N1+1
 14633 798D 0D AB A5			ora N1
 14634 7990 F0 05			jeq l_2AAA
 14635 7992 A9 01			lda #$01
 14636 7994 8D AF A5			sta F
 14637 7997			l_2AAA
 14638
 14639 				; optimize OK (service.pas), line = 2489
 14640
 14641 7997 AD AF A5			lda F
 14642 799A F0 29			jeq l_2ABD
 14643 799C AD A3 A5			lda PX
 14644 799F 18 69 07			add #$07
 14645 79A2 8D 9A A5			sta PUT_DIGIT.PX
 14646 79A5 AD A4 A5			lda PX+1
 14647 79A8 69 00			adc #$00
 14648 79AA 8D 9B A5			sta PUT_DIGIT.PX+1
 14649 79AD AD A5 A5			lda PY
 14650 79B0 8D 9C A5			sta PUT_DIGIT.PY
 14651 79B3 AD A6 A5			lda PY+1
 14652 79B6 8D 9D A5			sta PUT_DIGIT.PY+1
 14653 79B9 AD AB A5			lda N1
 14654 79BC 8D 9E A5			sta PUT_DIGIT.NUM
 14655 79BF AD AC A5			lda N1+1
 14656 79C2 4C E9 79			jmp l_2AD1
 14657 79C5			l_2ABD
 14658
 14659 				; optimize OK (service.pas), line = 2490
 14660
 14661 79C5 AD A3 A5			lda PX
 14662 79C8 18 69 07			add #$07
 14663 79CB 8D 9A A5			sta PUT_DIGIT.PX
 14664 79CE AD A4 A5			lda PX+1
 14665 79D1 69 00			adc #$00
 14666 79D3 8D 9B A5			sta PUT_DIGIT.PX+1
 14667 79D6 AD A5 A5			lda PY
 14668 79D9 8D 9C A5			sta PUT_DIGIT.PY
 14669 79DC AD A6 A5			lda PY+1
 14670 79DF 8D 9D A5			sta PUT_DIGIT.PY+1
 14671 79E2 A9 0A			lda #$0A
 14672 79E4 8D 9E A5			sta PUT_DIGIT.NUM
 14673 79E7 A9 00			lda #$00
 14674 79E9			l_2AD1
 14675 79E9 8D 9F A5			sta PUT_DIGIT.NUM+1
 14676 79EC 20 EC 74			jsr PUT_DIGIT
 14677
 14678 				; optimize OK (service.pas), line = 2493
 14679
 14680 79EF A9 E8			lda #$E8
 14681 79F1 85 8E			sta @INTEGER.DIV.B
 14682 79F3 A9 03			lda #$03
 14683 79F5 85 8F			sta @INTEGER.DIV.B+1
 14684 79F7 A9 00			lda #$00
 14685 79F9 85 90			sta @INTEGER.DIV.B+2
 14686 79FB 85 91			sta @INTEGER.DIV.B+3
 14687 79FD AD A7 A5			lda SC
 14688 7A00 85 86			sta @INTEGER.DIV.A
 14689 7A02 AD A8 A5			lda SC+1
 14690 7A05 85 87			sta @INTEGER.DIV.A+1
 14691 7A07 AD A9 A5			lda SC+2
 14692 7A0A 85 88			sta @INTEGER.DIV.A+2
 14693 7A0C AD AA A5			lda SC+3
 14694 7A0F 85 89			sta @INTEGER.DIV.A+3
 14695 7A11 20 62 12			jsr @INTEGER.DIV
 14696 7A14 A9 0A			lda #$0A
 14697 7A16 85 8E			sta @INTEGER.MOD.B
 14698 7A18 A9 00			lda #$00
 14699 7A1A 85 8F			sta @INTEGER.MOD.B+1
 14700 7A1C 85 90			sta @INTEGER.MOD.B+2
 14701 7A1E 85 91			sta @INTEGER.MOD.B+3
 14702 7A20 20 7F 12			jsr @INTEGER.MOD
 14703 7A23 A5 8A			lda @INTEGER.MOD.RESULT
 14704 7A25 8D AB A5			sta N1
 14705 7A28 A5 8B			lda @INTEGER.MOD.RESULT+1
 14706 7A2A 8D AC A5			sta N1+1
 14707 7A2D A5 8C			lda @INTEGER.MOD.RESULT+2
 14708 7A2F 8D AD A5			sta N1+2
 14709 7A32 A5 8D			lda @INTEGER.MOD.RESULT+3
 14710 7A34 8D AE A5			sta N1+3
 14711
 14712 				; optimize OK (service.pas), line = 2494
 14713
 14714 7A37 30 10			jmi l_2AF7
 14715 7A39 0D AD A5			ora N1+2
 14716 7A3C 0D AC A5			ora N1+1
 14717 7A3F 0D AB A5			ora N1
 14718 7A42 F0 05			jeq l_2AF7
 14719 7A44 A9 01			lda #$01
 14720 7A46 8D AF A5			sta F
 14721 7A49			l_2AF7
 14722
 14723 				; optimize OK (service.pas), line = 2495
 14724
 14725 7A49 AD AF A5			lda F
 14726 7A4C F0 29			jeq l_2B0A
 14727 7A4E AD A3 A5			lda PX
 14728 7A51 18 69 0E			add #$0E
 14729 7A54 8D 9A A5			sta PUT_DIGIT.PX
 14730 7A57 AD A4 A5			lda PX+1
 14731 7A5A 69 00			adc #$00
 14732 7A5C 8D 9B A5			sta PUT_DIGIT.PX+1
 14733 7A5F AD A5 A5			lda PY
 14734 7A62 8D 9C A5			sta PUT_DIGIT.PY
 14735 7A65 AD A6 A5			lda PY+1
 14736 7A68 8D 9D A5			sta PUT_DIGIT.PY+1
 14737 7A6B AD AB A5			lda N1
 14738 7A6E 8D 9E A5			sta PUT_DIGIT.NUM
 14739 7A71 AD AC A5			lda N1+1
 14740 7A74 4C 9B 7A			jmp l_2B1E
 14741 7A77			l_2B0A
 14742
 14743 				; optimize OK (service.pas), line = 2496
 14744
 14745 7A77 AD A3 A5			lda PX
 14746 7A7A 18 69 0E			add #$0E
 14747 7A7D 8D 9A A5			sta PUT_DIGIT.PX
 14748 7A80 AD A4 A5			lda PX+1
 14749 7A83 69 00			adc #$00
 14750 7A85 8D 9B A5			sta PUT_DIGIT.PX+1
 14751 7A88 AD A5 A5			lda PY
 14752 7A8B 8D 9C A5			sta PUT_DIGIT.PY
 14753 7A8E AD A6 A5			lda PY+1
 14754 7A91 8D 9D A5			sta PUT_DIGIT.PY+1
 14755 7A94 A9 0A			lda #$0A
 14756 7A96 8D 9E A5			sta PUT_DIGIT.NUM
 14757 7A99 A9 00			lda #$00
 14758 7A9B			l_2B1E
 14759 7A9B 8D 9F A5			sta PUT_DIGIT.NUM+1
 14760 7A9E 20 EC 74			jsr PUT_DIGIT
 14761
 14762 				; optimize OK (service.pas), line = 2499
 14763
 14764 7AA1 A9 64			lda #$64
 14765 7AA3 85 8E			sta @INTEGER.DIV.B
 14766 7AA5 A9 00			lda #$00
 14767 7AA7 85 8F			sta @INTEGER.DIV.B+1
 14768 7AA9 85 90			sta @INTEGER.DIV.B+2
 14769 7AAB 85 91			sta @INTEGER.DIV.B+3
 14770 7AAD AD A7 A5			lda SC
 14771 7AB0 85 86			sta @INTEGER.DIV.A
 14772 7AB2 AD A8 A5			lda SC+1
 14773 7AB5 85 87			sta @INTEGER.DIV.A+1
 14774 7AB7 AD A9 A5			lda SC+2
 14775 7ABA 85 88			sta @INTEGER.DIV.A+2
 14776 7ABC AD AA A5			lda SC+3
 14777 7ABF 85 89			sta @INTEGER.DIV.A+3
 14778 7AC1 20 62 12			jsr @INTEGER.DIV
 14779 7AC4 A9 0A			lda #$0A
 14780 7AC6 85 8E			sta @INTEGER.MOD.B
 14781 7AC8 A9 00			lda #$00
 14782 7ACA 85 8F			sta @INTEGER.MOD.B+1
 14783 7ACC 85 90			sta @INTEGER.MOD.B+2
 14784 7ACE 85 91			sta @INTEGER.MOD.B+3
 14785 7AD0 20 7F 12			jsr @INTEGER.MOD
 14786 7AD3 A5 8A			lda @INTEGER.MOD.RESULT
 14787 7AD5 8D AB A5			sta N1
 14788 7AD8 A5 8B			lda @INTEGER.MOD.RESULT+1
 14789 7ADA 8D AC A5			sta N1+1
 14790 7ADD A5 8C			lda @INTEGER.MOD.RESULT+2
 14791 7ADF 8D AD A5			sta N1+2
 14792 7AE2 A5 8D			lda @INTEGER.MOD.RESULT+3
 14793 7AE4 8D AE A5			sta N1+3
 14794
 14795 				; optimize OK (service.pas), line = 2500
 14796
 14797 7AE7 30 10			jmi l_2B44
 14798 7AE9 0D AD A5			ora N1+2
 14799 7AEC 0D AC A5			ora N1+1
 14800 7AEF 0D AB A5			ora N1
 14801 7AF2 F0 05			jeq l_2B44
 14802 7AF4 A9 01			lda #$01
 14803 7AF6 8D AF A5			sta F
 14804 7AF9			l_2B44
 14805
 14806 				; optimize OK (service.pas), line = 2501
 14807
 14808 7AF9 AD AF A5			lda F
 14809 7AFC F0 29			jeq l_2B57
 14810 7AFE AD A3 A5			lda PX
 14811 7B01 18 69 15			add #$15
 14812 7B04 8D 9A A5			sta PUT_DIGIT.PX
 14813 7B07 AD A4 A5			lda PX+1
 14814 7B0A 69 00			adc #$00
 14815 7B0C 8D 9B A5			sta PUT_DIGIT.PX+1
 14816 7B0F AD A5 A5			lda PY
 14817 7B12 8D 9C A5			sta PUT_DIGIT.PY
 14818 7B15 AD A6 A5			lda PY+1
 14819 7B18 8D 9D A5			sta PUT_DIGIT.PY+1
 14820 7B1B AD AB A5			lda N1
 14821 7B1E 8D 9E A5			sta PUT_DIGIT.NUM
 14822 7B21 AD AC A5			lda N1+1
 14823 7B24 4C 4B 7B			jmp l_2B6B
 14824 7B27			l_2B57
 14825
 14826 				; optimize OK (service.pas), line = 2502
 14827
 14828 7B27 AD A3 A5			lda PX
 14829 7B2A 18 69 15			add #$15
 14830 7B2D 8D 9A A5			sta PUT_DIGIT.PX
 14831 7B30 AD A4 A5			lda PX+1
 14832 7B33 69 00			adc #$00
 14833 7B35 8D 9B A5			sta PUT_DIGIT.PX+1
 14834 7B38 AD A5 A5			lda PY
 14835 7B3B 8D 9C A5			sta PUT_DIGIT.PY
 14836 7B3E AD A6 A5			lda PY+1
 14837 7B41 8D 9D A5			sta PUT_DIGIT.PY+1
 14838 7B44 A9 0A			lda #$0A
 14839 7B46 8D 9E A5			sta PUT_DIGIT.NUM
 14840 7B49 A9 00			lda #$00
 14841 7B4B			l_2B6B
 14842 7B4B 8D 9F A5			sta PUT_DIGIT.NUM+1
 14843 7B4E 20 EC 74			jsr PUT_DIGIT
 14844
 14845 				; optimize OK (service.pas), line = 2505
 14846
 14847 7B51 A9 0A			lda #$0A
 14848 7B53 85 8E			sta @INTEGER.DIV.B
 14849 7B55 A9 00			lda #$00
 14850 7B57 85 8F			sta @INTEGER.DIV.B+1
 14851 7B59 85 90			sta @INTEGER.DIV.B+2
 14852 7B5B 85 91			sta @INTEGER.DIV.B+3
 14853 7B5D AD A7 A5			lda SC
 14854 7B60 85 86			sta @INTEGER.DIV.A
 14855 7B62 AD A8 A5			lda SC+1
 14856 7B65 85 87			sta @INTEGER.DIV.A+1
 14857 7B67 AD A9 A5			lda SC+2
 14858 7B6A 85 88			sta @INTEGER.DIV.A+2
 14859 7B6C AD AA A5			lda SC+3
 14860 7B6F 85 89			sta @INTEGER.DIV.A+3
 14861 7B71 20 62 12			jsr @INTEGER.DIV
 14862 7B74 A9 0A			lda #$0A
 14863 7B76 85 8E			sta @INTEGER.MOD.B
 14864 7B78 A9 00			lda #$00
 14865 7B7A 85 8F			sta @INTEGER.MOD.B+1
 14866 7B7C 85 90			sta @INTEGER.MOD.B+2
 14867 7B7E 85 91			sta @INTEGER.MOD.B+3
 14868 7B80 20 7F 12			jsr @INTEGER.MOD
 14869 7B83 A5 8A			lda @INTEGER.MOD.RESULT
 14870 7B85 8D AB A5			sta N1
 14871 7B88 A5 8B			lda @INTEGER.MOD.RESULT+1
 14872 7B8A 8D AC A5			sta N1+1
 14873 7B8D A5 8C			lda @INTEGER.MOD.RESULT+2
 14874 7B8F 8D AD A5			sta N1+2
 14875 7B92 A5 8D			lda @INTEGER.MOD.RESULT+3
 14876 7B94 8D AE A5			sta N1+3
 14877
 14878 				; optimize OK (service.pas), line = 2506
 14879
 14880 7B97 AD A3 A5			lda PX
 14881 7B9A 18 69 1C			add #$1C
 14882 7B9D 8D 9A A5			sta PUT_DIGIT.PX
 14883 7BA0 AD A4 A5			lda PX+1
 14884 7BA3 69 00			adc #$00
 14885 7BA5 8D 9B A5			sta PUT_DIGIT.PX+1
 14886 7BA8 AD A5 A5			lda PY
 14887 7BAB 8D 9C A5			sta PUT_DIGIT.PY
 14888 7BAE AD A6 A5			lda PY+1
 14889 7BB1 8D 9D A5			sta PUT_DIGIT.PY+1
 14890 7BB4 AD AB A5			lda N1
 14891 7BB7 8D 9E A5			sta PUT_DIGIT.NUM
 14892 7BBA AD AC A5			lda N1+1
 14893 7BBD 8D 9F A5			sta PUT_DIGIT.NUM+1
 14894 7BC0 20 EC 74			jsr PUT_DIGIT
 14895
 14896 				; optimize OK (service.pas), line = 2510
 14897
 14898 7BC3 AD A3 A5			lda PX
 14899 7BC6 18 69 23			add #$23
 14900 7BC9 8D 9A A5			sta PUT_DIGIT.PX
 14901 7BCC AD A4 A5			lda PX+1
 14902 7BCF 69 00			adc #$00
 14903 7BD1 8D 9B A5			sta PUT_DIGIT.PX+1
 14904 7BD4 AD A5 A5			lda PY
 14905 7BD7 8D 9C A5			sta PUT_DIGIT.PY
 14906 7BDA AD A6 A5			lda PY+1
 14907 7BDD 8D 9D A5			sta PUT_DIGIT.PY+1
 14908 7BE0 A9 00			lda #$00
 14909 7BE2 8D 9E A5			sta PUT_DIGIT.NUM
 14910 7BE5 8D 9F A5			sta PUT_DIGIT.NUM+1
 14911 7BE8 20 EC 74			jsr PUT_DIGIT
 14912
 14913 				; ------------------------------------------------------------
 14914
 14915 = A5A3			PX	= DATAORIGIN+$0B87
 14916 = A5A5			PY	= DATAORIGIN+$0B89
 14917 = A5A7			SC	= DATAORIGIN+$0B8B
 14918 = A5AB			N1	= DATAORIGIN+$0B8F
 14919 = A5AF			F	= DATAORIGIN+$0B93
 14920
 14921 = A5A3			@VarData	= PX
 14922 = 000D			@VarDataSize	= 13
 14923
 14924 7BEB			@exit
 14925 					.ifdef @new
 14926 					lda <@VarData
 14927 					sta :ztmp
 14928 					lda >@VarData
 14929 					ldy #@VarDataSize-1
 14930 					jmp @FreeMem
 14931 					els
 14932 7BEB 60				rts						; ret
 14933 					eif
 14934 				.endl
 14935
 14936 7BEC			.local	PLOT_LIVES					; PROCEDURE
 14937
 14938 				; optimize FAIL (0, service.pas), line = 2556
 14939
 14940 7BEC AD B0 A5			lda LIVES
 14941 7BEF D0 03			bne @+
 14942 7BF1 CE B1 A5			dec LIVES+1
 14943 				@
 14944 7BF4 CE B0 A5			dec LIVES
 14945
 14946 				; optimize OK (service.pas), line = 2559
 14947
 14948 7BF7 A9 00			lda #$00
 14949 7BF9 8D B4 A5			sta CN
 14950
 14951 7BFC			l_2BAA
 14952 				; --- ForToDoCondition
 14953 7BFC AD B4 A5			lda CN
 14954 7BFF C9 08			cmp #$08
 14955 7C01 90 03 4C F3 7E		jcs l_2BB8
 14956
 14957 				; optimize OK (service.pas), line = 2560
 14958
 14959 7C06 A9 00			lda #$00
 14960 7C08 8D B3 A5			sta Y
 14961 7C0B AC 37 9B			ldy MINIVAUS.HEIGHT
 14962 7C0E 88				dey
 14963 7C0F 8C 13 7C			sty @FORTMP_2BC3_0
 14964
 14965 7C12			l_2BC6
 14966 				; --- ForToDoCondition
 14967 7C12 A9 00			lda @FORTMP_2BC3_0::#$00
 14968 7C14 CD B3 A5			cmp Y
 14969 7C17 B0 03 4C EB 7E		jcc l_2BD4
 14970
 14971 				; optimize OK (service.pas), line = 2561
 14972
 14973 7C1C A9 00			lda #$00
 14974 7C1E 8D B2 A5			sta X
 14975 7C21 AC 35 9B			ldy MINIVAUS.WIDTH
 14976 7C24 88				dey
 14977 7C25 8C 29 7C			sty @FORTMP_2BDF_0
 14978
 14979 7C28			l_2BE2
 14980 				; --- ForToDoCondition
 14981 7C28 A9 00			lda @FORTMP_2BDF_0::#$00
 14982 7C2A CD B2 A5			cmp X
 14983 7C2D B0 03 4C E3 7E		jcc l_2BF0
 14984
 14985 				; optimize OK (service.pas), line = 2563
 14986
 14987 7C32 AD B2 A5			lda X
 14988 7C35 18 69 0B			add #$0B
 14989 7C38 85 9F			sta :STACKORIGIN+9
 14990 7C3A A9 00			lda #$00
 14991 7C3C 69 00			adc #$00
 14992 7C3E 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 14993 7C40 AD 35 9B			lda MINIVAUS.WIDTH
 14994 7C43 85 8E			sta :ecx
 14995 7C45 AD 36 9B			lda MINIVAUS.WIDTH+1
 14996 7C48 85 8F			sta :ecx+1
 14997 7C4A AD B4 A5			lda CN
 14998 7C4D 85 86			sta :eax
 14999 7C4F A9 00			lda #$00
 15000 7C51 85 87			sta :eax+1
 15001 					.ifdef fmulinit
 15002 					fmulu_16
 15003 					els
 15004 7C53 20 3E 13			imulCX_AL
 15005 					eif
 15006 7C56 A5 86			lda :eax
 15007 7C58 18 65 9F			add :STACKORIGIN+9
 15008 7C5B 8D B9 A5			sta XL
 15009 7C5E A5 87			lda :eax+1
 15010 7C60 65 AF			adc :STACKORIGIN+STACKWIDTH+9
 15011 7C62 8D BA A5			sta XL+1
 15012
 15013 				; optimize OK (service.pas), line = 2564
 15014
 15015 7C65 AD B3 A5			lda Y
 15016 7C68 18 69 C0			add #$C0
 15017 7C6B 8D BB A5			sta YL
 15018 7C6E A9 00			lda #$00
 15019 7C70 69 00			adc #$00
 15020 7C72 8D BC A5			sta YL+1
 15021
 15022 				; optimize OK (service.pas), line = 2566
 15023
 15024 7C75 AD 1E 99			lda MODX
 15025 7C78 18 6D B9 A5			add XL
 15026 7C7C A8				tay
 15027 7C7D AD 1F 99			lda MODX+1
 15028 7C80 6D BA A5			adc XL+1
 15029 7C83 85 83			sta :bp+1
 15030 7C85 B1 82			lda (:bp),y
 15031 7C87 8D B5 A5			sta XP
 15032 7C8A A9 00			lda #$00
 15033 7C8C 8D B6 A5			sta XP+1
 15034
 15035 				; optimize OK (service.pas), line = 2567
 15036
 15037 7C8F AC BB A5			ldy YL
 15038 7C92 B9 12 A3			lda adr.MODY,y
 15039 7C95 85 86			sta :eax
 15040 7C97 A9 00			lda #$00
 15041 7C99 85 87			sta :eax+1
 15042 7C9B AD 6A 9B			lda PATTERN.WIDTH
 15043 7C9E 85 8E			sta :ecx
 15044 7CA0 AD 6B 9B			lda PATTERN.WIDTH+1
 15045 7CA3 85 8F			sta :ecx+1
 15046 					.ifdef fmulinit
 15047 					fmulu_16
 15048 					els
 15049 7CA5 20 3E 13			imulCX_AL
 15050 					eif
 15051 7CA8 A5 86			lda :eax
 15052 7CAA 8D B7 A5			sta YP
 15053 7CAD A5 87			lda :eax+1
 15054 7CAF 8D B8 A5			sta YP+1
 15055
 15056 				; optimize FAIL (1, service.pas), line = 2571
 15057
 15058 7CB2 E8				inx
 15059 7CB3 A0 01			ldy #1
 15060 7CB5 AD B4 A5			lda CN
 15061 7CB8 CD B0 A5			cmp LIVES
 15062 7CBB A9 00			lda #$00
 15063 7CBD ED B1 A5			sbc LIVES+1
 15064 7CC0 50 02			svc
 15065 7CC2 49 80			eor #$80
 15066 7CC4 30 01			bmi @+
 15067 7CC6 88				dey
 15068 				@
 15069 7CC7 94 96			sty :STACKORIGIN,x
 15070 7CC9 AD 39 9B			lda MINIVAUS.OFS
 15071 7CCC 18 6D B2 A5			add X
 15072 7CD0 85 9F			sta :STACKORIGIN+9
 15073 7CD2 AD 3A 9B			lda MINIVAUS.OFS+1
 15074 7CD5 69 00			adc #$00
 15075 7CD7 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 15076 7CD9 AD 3B 9B			lda MINIVAUS.OFS+2
 15077 7CDC 69 00			adc #$00
 15078 7CDE 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
 15079 7CE0 AD 3C 9B			lda MINIVAUS.OFS+3
 15080 7CE3 69 00			adc #$00
 15081 7CE5 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
 15082 7CE7 AD 35 9B			lda MINIVAUS.WIDTH
 15083 7CEA 85 8E			sta :ecx
 15084 7CEC AD 36 9B			lda MINIVAUS.WIDTH+1
 15085 7CEF 85 8F			sta :ecx+1
 15086 7CF1 AD B3 A5			lda Y
 15087 7CF4 85 86			sta :eax
 15088 7CF6 A9 00			lda #$00
 15089 7CF8 85 87			sta :eax+1
 15090 					.ifdef fmulinit
 15091 					fmulu_16
 15092 					els
 15093 7CFA 20 3E 13			imulCX_AL
 15094 					eif
 15095 7CFD A5 9F			lda :STACKORIGIN+9
 15096 7CFF 18 65 86			add :eax
 15097 7D02 8D 0A A4			sta GETBYTE.SRC
 15098 7D05 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 15099 7D07 65 87			adc :eax+1
 15100 7D09 8D 0B A4			sta GETBYTE.SRC+1
 15101 7D0C A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
 15102 7D0E 65 88			adc :eax+2
 15103 7D10 8D 0C A4			sta GETBYTE.SRC+2
 15104 7D13 A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
 15105 7D15 65 89			adc :eax+3
 15106 7D17 8D 0D A4			sta GETBYTE.SRC+3
 15107 7D1A 20 86 26			jsr GETBYTE
 15108 7D1D CA				dex
 15109 7D1E A0 01			ldy #1
 15110 7D20 AD 0E A4			lda GETBYTE.RESULT
 15111 7D23 D0 01			bne @+
 15112 7D25 88				dey
 15113 				@
 15114 7D26 98				tya
 15115 7D27 35 97			and :STACKORIGIN+1,x
 15116 7D29 F0 5D			jeq l_2C53
 15117
 15118 				; optimize OK (service.pas), line = 2574
 15119
 15120 7D2B AD 39 9B			lda MINIVAUS.OFS
 15121 7D2E 18 6D B2 A5			add X
 15122 7D32 85 9F			sta :STACKORIGIN+9
 15123 7D34 AD 3A 9B			lda MINIVAUS.OFS+1
 15124 7D37 69 00			adc #$00
 15125 7D39 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 15126 7D3B AD 3B 9B			lda MINIVAUS.OFS+2
 15127 7D3E 69 00			adc #$00
 15128 7D40 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
 15129 7D42 AD 3C 9B			lda MINIVAUS.OFS+3
 15130 7D45 69 00			adc #$00
 15131 7D47 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
 15132 7D49 AD 35 9B			lda MINIVAUS.WIDTH
 15133 7D4C 85 8E			sta :ecx
 15134 7D4E AD 36 9B			lda MINIVAUS.WIDTH+1
 15135 7D51 85 8F			sta :ecx+1
 15136 7D53 AD B3 A5			lda Y
 15137 7D56 85 86			sta :eax
 15138 7D58 A9 00			lda #$00
 15139 7D5A 85 87			sta :eax+1
 15140 					.ifdef fmulinit
 15141 					fmulu_16
 15142 					els
 15143 7D5C 20 3E 13			imulCX_AL
 15144 					eif
 15145 7D5F A5 9F			lda :STACKORIGIN+9
 15146 7D61 18 65 86			add :eax
 15147 7D64 8D 0A A4			sta GETBYTE.SRC
 15148 7D67 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 15149 7D69 65 87			adc :eax+1
 15150 7D6B 8D 0B A4			sta GETBYTE.SRC+1
 15151 7D6E A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
 15152 7D70 65 88			adc :eax+2
 15153 7D72 8D 0C A4			sta GETBYTE.SRC+2
 15154 7D75 A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
 15155 7D77 65 89			adc :eax+3
 15156 7D79 8D 0D A4			sta GETBYTE.SRC+3
 15157 7D7C 20 86 26			jsr GETBYTE
 15158 7D7F AD 0E A4			lda GETBYTE.RESULT
 15159 7D82 8D BE A5			sta CL
 15160 				; optimize OK (service.pas), line = 2577
 15161 				; optimize OK (service.pas), line = 2580
 15162 7D85 4C 38 7E			jmp l_2C95
 15163 7D88			l_2C53
 15164
 15165 				; optimize OK (service.pas), line = 2589
 15166
 15167 7D88 AD E9 9A			lda PLAYSCREEN.OFS
 15168 7D8B 18 6D B9 A5			add XL
 15169 7D8F 85 9F			sta :STACKORIGIN+9
 15170 7D91 AD EA 9A			lda PLAYSCREEN.OFS+1
 15171 7D94 6D BA A5			adc XL+1
 15172 7D97 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 15173 7D99 AD EB 9A			lda PLAYSCREEN.OFS+2
 15174 7D9C 69 00			adc #$00
 15175 7D9E 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
 15176 7DA0 AD EC 9A			lda PLAYSCREEN.OFS+3
 15177 7DA3 69 00			adc #$00
 15178 7DA5 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
 15179 7DA7 AD BC A5			lda YL+1
 15180 7DAA 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 15181 7DAC AD BB A5			lda YL
 15182 7DAF 0A				asl @
 15183 7DB0 26 B0			rol :STACKORIGIN+STACKWIDTH+10
 15184 7DB2 18 6D 1C 99			add ROW
 15185 7DB6 85 84			sta :bp2
 15186 7DB8 AD 1D 99			lda ROW+1
 15187 7DBB 65 B0			adc :STACKORIGIN+STACKWIDTH+10
 15188 7DBD 85 85			sta :bp2+1
 15189 7DBF A0 00			ldy #$00
 15190 7DC1 A5 9F			lda :STACKORIGIN+9
 15191 7DC3 18 71 84			add (:bp2),y
 15192 7DC6 8D 0A A4			sta GETBYTE.SRC
 15193 7DC9 C8				iny
 15194 7DCA A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 15195 7DCC 71 84			adc (:bp2),y
 15196 7DCE 8D 0B A4			sta GETBYTE.SRC+1
 15197 7DD1 A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
 15198 7DD3 69 00			adc #$00
 15199 7DD5 8D 0C A4			sta GETBYTE.SRC+2
 15200 7DD8 A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
 15201 7DDA 69 00			adc #$00
 15202 7DDC 8D 0D A4			sta GETBYTE.SRC+3
 15203 7DDF 20 86 26			jsr GETBYTE
 15204 7DE2 AD 0E A4			lda GETBYTE.RESULT
 15205 7DE5 29 80			and #$80
 15206 7DE7 8D BD A5			sta SHADOW
 15207
 15208 				; optimize OK (service.pas), line = 2592
 15209
 15210 7DEA AD 6E 9B			lda PATTERN.OFS
 15211 7DED 18 6D B5 A5			add XP
 15212 7DF1 85 9F			sta :STACKORIGIN+9
 15213 7DF3 AD 6F 9B			lda PATTERN.OFS+1
 15214 7DF6 6D B6 A5			adc XP+1
 15215 7DF9 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 15216 7DFB AD 70 9B			lda PATTERN.OFS+2
 15217 7DFE 69 00			adc #$00
 15218 7E00 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
 15219 7E02 AD 71 9B			lda PATTERN.OFS+3
 15220 7E05 69 00			adc #$00
 15221 7E07 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
 15222 7E09 A5 9F			lda :STACKORIGIN+9
 15223 7E0B 18 6D B7 A5			add YP
 15224 7E0F 8D 0A A4			sta GETBYTE.SRC
 15225 7E12 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 15226 7E14 6D B8 A5			adc YP+1
 15227 7E17 8D 0B A4			sta GETBYTE.SRC+1
 15228 7E1A A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
 15229 7E1C 69 00			adc #$00
 15230 7E1E 8D 0C A4			sta GETBYTE.SRC+2
 15231 7E21 A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
 15232 7E23 69 00			adc #$00
 15233 7E25 8D 0D A4			sta GETBYTE.SRC+3
 15234 7E28 20 86 26			jsr GETBYTE
 15235 7E2B E8				inx
 15236 7E2C AD 0E A4			lda GETBYTE.RESULT
 15237 7E2F 29 7F			and #$7F
 15238 7E31 0D BD A5			ora SHADOW
 15239 7E34 8D BE A5			sta CL
 15240 7E37 CA				dex
 15241 7E38			l_2C95
 15242
 15243 				; optimize OK (service.pas), line = 2595
 15244
 15245 7E38 AD BC A5			lda YL+1
 15246 7E3B 85 B1			sta :STACKORIGIN+STACKWIDTH+11
 15247 7E3D AD BB A5			lda YL
 15248 7E40 0A				asl @
 15249 7E41 26 B1			rol :STACKORIGIN+STACKWIDTH+11
 15250 7E43 18 6D 1C 99			add ROW
 15251 7E47 85 84			sta :bp2
 15252 7E49 AD 1D 99			lda ROW+1
 15253 7E4C 65 B1			adc :STACKORIGIN+STACKWIDTH+11
 15254 7E4E 85 85			sta :bp2+1
 15255 7E50 A0 00			ldy #$00
 15256 7E52 AD B9 A5			lda XL
 15257 7E55 18 71 84			add (:bp2),y
 15258 7E58 8D 05 A4			sta PUTBYTE.DST
 15259 7E5B C8				iny
 15260 7E5C AD BA A5			lda XL+1
 15261 7E5F 71 84			adc (:bp2),y
 15262 7E61 8D 06 A4			sta PUTBYTE.DST+1
 15263 7E64 A9 00			lda #$00
 15264 7E66 69 00			adc #$00
 15265 7E68 8D 07 A4			sta PUTBYTE.DST+2
 15266 7E6B A9 00			lda #$00
 15267 7E6D 69 00			adc #$00
 15268 7E6F 8D 08 A4			sta PUTBYTE.DST+3
 15269 7E72 AD BE A5			lda CL
 15270 7E75 8D 09 A4			sta PUTBYTE.V
 15271 7E78 20 70 26			jsr PUTBYTE
 15272
 15273 				; optimize OK (service.pas), line = 2598
 15274
 15275 7E7B AD E9 9A			lda PLAYSCREEN.OFS
 15276 7E7E 18 6D B9 A5			add XL
 15277 7E82 85 A0			sta :STACKORIGIN+10
 15278 7E84 AD EA 9A			lda PLAYSCREEN.OFS+1
 15279 7E87 6D BA A5			adc XL+1
 15280 7E8A 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 15281 7E8C AD EB 9A			lda PLAYSCREEN.OFS+2
 15282 7E8F 69 00			adc #$00
 15283 7E91 85 C0			sta :STACKORIGIN+STACKWIDTH*2+10
 15284 7E93 AD EC 9A			lda PLAYSCREEN.OFS+3
 15285 7E96 69 00			adc #$00
 15286 7E98 85 D0			sta :STACKORIGIN+STACKWIDTH*3+10
 15287 7E9A AD BC A5			lda YL+1
 15288 7E9D 85 B1			sta :STACKORIGIN+STACKWIDTH+11
 15289 7E9F AD BB A5			lda YL
 15290 7EA2 0A				asl @
 15291 7EA3 26 B1			rol :STACKORIGIN+STACKWIDTH+11
 15292 7EA5 18 6D 1C 99			add ROW
 15293 7EA9 85 84			sta :bp2
 15294 7EAB AD 1D 99			lda ROW+1
 15295 7EAE 65 B1			adc :STACKORIGIN+STACKWIDTH+11
 15296 7EB0 85 85			sta :bp2+1
 15297 7EB2 A0 00			ldy #$00
 15298 7EB4 A5 A0			lda :STACKORIGIN+10
 15299 7EB6 18 71 84			add (:bp2),y
 15300 7EB9 8D 05 A4			sta PUTBYTE.DST
 15301 7EBC C8				iny
 15302 7EBD A5 B0			lda :STACKORIGIN+STACKWIDTH+10
 15303 7EBF 71 84			adc (:bp2),y
 15304 7EC1 8D 06 A4			sta PUTBYTE.DST+1
 15305 7EC4 A5 C0			lda :STACKORIGIN+STACKWIDTH*2+10
 15306 7EC6 69 00			adc #$00
 15307 7EC8 8D 07 A4			sta PUTBYTE.DST+2
 15308 7ECB A5 D0			lda :STACKORIGIN+STACKWIDTH*3+10
 15309 7ECD 69 00			adc #$00
 15310 7ECF 8D 08 A4			sta PUTBYTE.DST+3
 15311 7ED2 AD BE A5			lda CL
 15312 7ED5 8D 09 A4			sta PUTBYTE.V
 15313 7ED8 20 70 26			jsr PUTBYTE
 15314
 15315 				; --- ForToDoEpilog
 15316 7EDB EE B2 A5			inc X
 15317 7EDE F0 03 4C 28 7C		jne l_2BE2
 15318 7EE3			l_2BF0
 15319
 15320 				; --- ForToDoEpilog
 15321 7EE3 EE B3 A5			inc Y
 15322 7EE6 F0 03 4C 12 7C		jne l_2BC6
 15323 7EEB			l_2BD4
 15324
 15325 				; --- ForToDoEpilog
 15326 7EEB EE B4 A5			inc CN
 15327 7EEE F0 03 4C FC 7B		jne l_2BAA
 15328 7EF3			l_2BB8
 15329
 15330 				; ------------------------------------------------------------
 15331
 15332 = A5B0			LIVES	= DATAORIGIN+$0B94
 15333 = 000B			XLIVES	= $0B
 15334 = 00C0			YLIVES	= $C0
 15335 = A5B2			X	= DATAORIGIN+$0B96
 15336 = A5B3			Y	= DATAORIGIN+$0B97
 15337 = A5B4			CN	= DATAORIGIN+$0B98
 15338 = A5B5			XP	= DATAORIGIN+$0B99
 15339 = A5B7			YP	= DATAORIGIN+$0B9B
 15340 = A5B9			XL	= DATAORIGIN+$0B9D
 15341 = A5BB			YL	= DATAORIGIN+$0B9F
 15342 = A5BD			SHADOW	= DATAORIGIN+$0BA1
 15343 = A5BE			CL	= DATAORIGIN+$0BA2
 15344
 15345 = A5B0			@VarData	= LIVES
 15346 = 000F			@VarDataSize	= 15
 15347
 15348 7EF3			@exit
 15349 					.ifdef @new
 15350 					lda <@VarData
 15351 					sta :ztmp
 15352 					lda >@VarData
 15353 					ldy #@VarDataSize-1
 15354 					jmp @FreeMem
 15355 					els
 15356 7EF3 60				rts						; ret
 15357 					eif
 15358 				.endl
 15359
 15360 7EF4			.local	PLACE_FIRE					; PROCEDURE
 15361
 15362 				; optimize OK (service.pas), line = 2607
 15363
 15364 7EF4 A9 00			lda #$00
 15365 7EF6 8D C3 A5			sta Y
 15366 7EF9 AC 4F 9B			ldy SHOOTS.HEIGHT
 15367 7EFC 88				dey
 15368 7EFD 8C 01 7F			sty @FORTMP_2D03_0
 15369
 15370 7F00			l_2D06
 15371 				; --- ForToDoCondition
 15372 7F00 A9 00			lda @FORTMP_2D03_0::#$00
 15373 7F02 CD C3 A5			cmp Y
 15374 7F05 B0 03 4C A6 7F		jcc l_2D14
 15375
 15376 				; optimize OK (service.pas), line = 2609
 15377
 15378 7F0A AD C3 A5			lda Y
 15379 7F0D 85 86			sta :eax
 15380 7F0F A9 00			lda #$00
 15381 7F11 85 87			sta :eax+1
 15382 7F13 AD 4D 9B			lda SHOOTS.WIDTH
 15383 7F16 85 8E			sta :ecx
 15384 7F18 AD 4E 9B			lda SHOOTS.WIDTH+1
 15385 7F1B 85 8F			sta :ecx+1
 15386 					.ifdef fmulinit
 15387 					fmulu_16
 15388 					els
 15389 7F1D 20 3E 13			imulCX_AL
 15390 					eif
 15391 7F20 A5 86			lda :eax
 15392 7F22 8D C1 A5			sta FW
 15393 7F25 A5 87			lda :eax+1
 15394 7F27 8D C2 A5			sta FW+1
 15395
 15396 				; optimize OK (service.pas), line = 2611
 15397
 15398 7F2A AD C3 A5			lda Y
 15399 7F2D 18 6D D4 9B			add FIRE.Y
 15400 7F31 85 A1			sta :STACKORIGIN+11
 15401 7F33 A9 00			lda #$00
 15402 7F35 69 00			adc #$00
 15403 7F37 06 A1			asl :STACKORIGIN+11
 15404 7F39 2A				rol @
 15405 7F3A 85 B1			sta :STACKORIGIN+STACKWIDTH+11
 15406 7F3C AD 1C 99			lda ROW
 15407 7F3F 18 65 A1			add :STACKORIGIN+11
 15408 7F42 85 84			sta :bp2
 15409 7F44 AD 1D 99			lda ROW+1
 15410 7F47 65 B1			adc :STACKORIGIN+STACKWIDTH+11
 15411 7F49 85 85			sta :bp2+1
 15412 7F4B A0 00			ldy #$00
 15413 7F4D AD D3 9B			lda FIRE.X
 15414 7F50 18 71 84			add (:bp2),y
 15415 7F53 8D DE A3			sta BLITZERO.DST
 15416 7F56 C8				iny
 15417 7F57 A9 00			lda #$00
 15418 7F59 71 84			adc (:bp2),y
 15419 7F5B 8D DF A3			sta BLITZERO.DST+1
 15420 7F5E A9 00			lda #$00
 15421 7F60 69 00			adc #$00
 15422 7F62 8D E0 A3			sta BLITZERO.DST+2
 15423 7F65 A9 00			lda #$00
 15424 7F67 69 00			adc #$00
 15425 7F69 8D E1 A3			sta BLITZERO.DST+3
 15426 7F6C AD 51 9B			lda SHOOTS.OFS
 15427 7F6F 18 6D C1 A5			add FW
 15428 7F73 8D DA A3			sta BLITZERO.SRC
 15429 7F76 AD 52 9B			lda SHOOTS.OFS+1
 15430 7F79 6D C2 A5			adc FW+1
 15431 7F7C 8D DB A3			sta BLITZERO.SRC+1
 15432 7F7F AD 53 9B			lda SHOOTS.OFS+2
 15433 7F82 69 00			adc #$00
 15434 7F84 8D DC A3			sta BLITZERO.SRC+2
 15435 7F87 AD 54 9B			lda SHOOTS.OFS+3
 15436 7F8A 69 00			adc #$00
 15437 7F8C 8D DD A3			sta BLITZERO.SRC+3
 15438 7F8F AD 4D 9B			lda SHOOTS.WIDTH
 15439 7F92 8D E2 A3			sta BLITZERO.SIZE
 15440 7F95 AD 4E 9B			lda SHOOTS.WIDTH+1
 15441 7F98 8D E3 A3			sta BLITZERO.SIZE+1
 15442 7F9B 20 EE 24			jsr BLITZERO
 15443
 15444 				; --- ForToDoEpilog
 15445 7F9E EE C3 A5			inc Y
 15446 7FA1 F0 03 4C 00 7F		jne l_2D06
 15447 7FA6			l_2D14
 15448
 15449 				; ------------------------------------------------------------
 15450
 15451 = A5C1			FW	= DATAORIGIN+$0BA5
 15452 = A5C3			Y	= DATAORIGIN+$0BA7
 15453
 15454 = A5C1			@VarData	= FW
 15455 = 0003			@VarDataSize	= 3
 15456
 15457 7FA6			@exit
 15458 					.ifdef @new
 15459 					lda <@VarData
 15460 					sta :ztmp
 15461 					lda >@VarData
 15462 					ldy #@VarDataSize-1
 15463 					jmp @FreeMem
 15464 					els
 15465 7FA6 60				rts						; ret
 15466 					eif
 15467 				.endl
 15468
 15469 7FA7			.local	REMOVE_FIRE					; PROCEDURE
 15470
 15471 				; optimize OK (service.pas), line = 2619
 15472
 15473 7FA7 A9 00			lda #$00
 15474 7FA9 8D C5 A5			sta Y
 15475 7FAC AC 4F 9B			ldy SHOOTS.HEIGHT
 15476 7FAF 88				dey
 15477 7FB0 8C B4 7F			sty @FORTMP_2D51_0
 15478
 15479 7FB3			l_2D54
 15480 				; --- ForToDoCondition
 15481 7FB3 A9 00			lda @FORTMP_2D51_0::#$00
 15482 7FB5 CD C5 A5			cmp Y
 15483 7FB8 B0 03 4C 74 80		jcc l_2D62
 15484
 15485 				; optimize OK (service.pas), line = 2623
 15486
 15487 7FBD AD C5 A5			lda Y
 15488 7FC0 18 6D D4 9B			add FIRE.Y
 15489 7FC4 85 A1			sta :STACKORIGIN+11
 15490 7FC6 A9 00			lda #$00
 15491 7FC8 69 00			adc #$00
 15492 7FCA 06 A1			asl :STACKORIGIN+11
 15493 7FCC 2A				rol @
 15494 7FCD 85 B1			sta :STACKORIGIN+STACKWIDTH+11
 15495 7FCF AD 1C 99			lda ROW
 15496 7FD2 18 65 A1			add :STACKORIGIN+11
 15497 7FD5 85 84			sta :bp2
 15498 7FD7 AD 1D 99			lda ROW+1
 15499 7FDA 65 B1			adc :STACKORIGIN+STACKWIDTH+11
 15500 7FDC 85 85			sta :bp2+1
 15501 7FDE A0 00			ldy #$00
 15502 7FE0 AD D3 9B			lda FIRE.X
 15503 7FE3 18 71 84			add (:bp2),y
 15504 7FE6 8D F3 A3			sta BLITROW.DST
 15505 7FE9 C8				iny
 15506 7FEA A9 00			lda #$00
 15507 7FEC 71 84			adc (:bp2),y
 15508 7FEE 8D F4 A3			sta BLITROW.DST+1
 15509 7FF1 A9 00			lda #$00
 15510 7FF3 69 00			adc #$00
 15511 7FF5 8D F5 A3			sta BLITROW.DST+2
 15512 7FF8 A9 00			lda #$00
 15513 7FFA 69 00			adc #$00
 15514 7FFC 8D F6 A3			sta BLITROW.DST+3
 15515 7FFF AD E9 9A			lda PLAYSCREEN.OFS
 15516 8002 18 6D D3 9B			add FIRE.X
 15517 8006 85 A1			sta :STACKORIGIN+11
 15518 8008 AD EA 9A			lda PLAYSCREEN.OFS+1
 15519 800B 69 00			adc #$00
 15520 800D 85 B1			sta :STACKORIGIN+STACKWIDTH+11
 15521 800F AD EB 9A			lda PLAYSCREEN.OFS+2
 15522 8012 69 00			adc #$00
 15523 8014 85 C1			sta :STACKORIGIN+STACKWIDTH*2+11
 15524 8016 AD EC 9A			lda PLAYSCREEN.OFS+3
 15525 8019 69 00			adc #$00
 15526 801B 85 D1			sta :STACKORIGIN+STACKWIDTH*3+11
 15527 801D AD C5 A5			lda Y
 15528 8020 18 6D D4 9B			add FIRE.Y
 15529 8024 85 A2			sta :STACKORIGIN+12
 15530 8026 A9 00			lda #$00
 15531 8028 69 00			adc #$00
 15532 802A 06 A2			asl :STACKORIGIN+12
 15533 802C 2A				rol @
 15534 802D 85 B2			sta :STACKORIGIN+STACKWIDTH+12
 15535 802F AD 1C 99			lda ROW
 15536 8032 18 65 A2			add :STACKORIGIN+12
 15537 8035 85 84			sta :bp2
 15538 8037 AD 1D 99			lda ROW+1
 15539 803A 65 B2			adc :STACKORIGIN+STACKWIDTH+12
 15540 803C 85 85			sta :bp2+1
 15541 803E 88				dey
 15542 803F A5 A1			lda :STACKORIGIN+11
 15543 8041 18 71 84			add (:bp2),y
 15544 8044 8D EF A3			sta BLITROW.SRC
 15545 8047 C8				iny
 15546 8048 A5 B1			lda :STACKORIGIN+STACKWIDTH+11
 15547 804A 71 84			adc (:bp2),y
 15548 804C 8D F0 A3			sta BLITROW.SRC+1
 15549 804F A5 C1			lda :STACKORIGIN+STACKWIDTH*2+11
 15550 8051 69 00			adc #$00
 15551 8053 8D F1 A3			sta BLITROW.SRC+2
 15552 8056 A5 D1			lda :STACKORIGIN+STACKWIDTH*3+11
 15553 8058 69 00			adc #$00
 15554 805A 8D F2 A3			sta BLITROW.SRC+3
 15555 805D AD 4D 9B			lda SHOOTS.WIDTH
 15556 8060 8D F7 A3			sta BLITROW.SIZE
 15557 8063 AD 4E 9B			lda SHOOTS.WIDTH+1
 15558 8066 8D F8 A3			sta BLITROW.SIZE+1
 15559 8069 20 CF 25			jsr BLITROW
 15560
 15561 				; --- ForToDoEpilog
 15562 806C EE C5 A5			inc Y
 15563 806F F0 03 4C B3 7F		jne l_2D54
 15564 8074			l_2D62
 15565
 15566 				; ------------------------------------------------------------
 15567
 15568 = A5C5			Y	= DATAORIGIN+$0BA9
 15569
 15570 = A5C5			@VarData	= Y
 15571 = 0001			@VarDataSize	= 1
 15572
 15573 8074			@exit
 15574 					.ifdef @new
 15575 					lda <@VarData
 15576 					sta :ztmp
 15577 					lda >@VarData
 15578 					ldy #@VarDataSize-1
 15579 					jmp @FreeMem
 15580 					els
 15581 8074 60				rts						; ret
 15582 					eif
 15583 				.endl
 15584
 15585 8075			.local	CHECK_FIRE					; PROCEDURE
 15586
 15587 				; optimize OK (service.pas), line = 2630
 15588
 15589 8075 AD D6 9B			lda FIRE.AVL
 15590 8078 D0 03 4C 7F 82		jeq l_2DA4
 15591
 15592 				; optimize FAIL ('MOUSECLICK', service.pas), line = 2632
 15593
 15594 807D 20 A7 24			jsr MOUSECLICK
 15595 8080 E8				inx
 15596 8081 E8				inx
 15597 8082 A0 01			ldy #1
 15598 8084 AD D0 9A			lda MOUSECLICK.RESULT+1
 15599 8087 C9 00			cmp #$00
 15600 8089 D0 05			bne @+
 15601 808B AD CF 9A			lda MOUSECLICK.RESULT
 15602 808E C9 01			cmp #$01
 15603 				@
 15604 8090 F0 01			beq @+
 15605 8092 88				dey
 15606 				@
 15607 8093 98				tya
 15608 8094 2D D6 9B			and FIRE.AVL
 15609 8097 95 95			sta :STACKORIGIN-1,x
 15610 8099 CA				dex
 15611 809A CA				dex
 15612 809B A0 01			ldy #1
 15613 809D AD D5 9B			lda FIRE.SHOT
 15614 80A0 F0 01			beq @+
 15615 80A2 88				dey
 15616 				@
 15617 80A3 98				tya
 15618 80A4 35 97			and :STACKORIGIN+1,x
 15619 80A6 F0 48			jeq l_2DC4
 15620
 15621 				; optimize OK (service.pas), line = 2634
 15622
 15623 80A8 AD 65 9B			lda VAUS.WIDTH
 15624 80AB 38 ED 4D 9B			sub SHOOTS.WIDTH
 15625 80AF 85 A0			sta :STACKORIGIN+10
 15626 80B1 A9 00			lda #$00
 15627 80B3 ED 4E 9B			sbc SHOOTS.WIDTH+1
 15628 80B6 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 15629 80B8 46 B0			lsr :STACKORIGIN+STACKWIDTH+10
 15630 80BA 66 A0			ror :STACKORIGIN+10
 15631 80BC AD 5D 9B			lda VAUS.X
 15632 80BF 18 65 A0			add :STACKORIGIN+10
 15633 80C2 8D D3 9B			sta FIRE.X
 15634
 15635 				; optimize OK (service.pas), line = 2635
 15636
 15637 80C5 AD 5E 9B			lda VAUS.Y
 15638 80C8 38 ED 4F 9B			sub SHOOTS.HEIGHT
 15639 80CC 8D D4 9B			sta FIRE.Y
 15640
 15641 				; optimize OK (service.pas), line = 2636
 15642
 15643 80CF A9 01			lda #$01
 15644 80D1 8D D5 9B			sta FIRE.SHOT
 15645
 15646 				; optimize OK (service.pas), line = 2637
 15647
 15648 80D4 A9 00			lda #$00
 15649 80D6 8D D7 9B			sta FIRE.NW
 15650
 15651 				; optimize OK (service.pas), line = 2638
 15652
 15653 80D9 A9 BC			lda #$BC
 15654 80DB 8D CB 9A			sta BALL_BLOCK_SOUND.A
 15655 80DE A9 02			lda #$02
 15656 80E0 8D CC 9A			sta BALL_BLOCK_SOUND.A+1
 15657 80E3 A9 05			lda #$05
 15658 80E5 8D CD 9A			sta BALL_BLOCK_SOUND.B
 15659 80E8 A9 00			lda #$00
 15660 80EA 8D CE 9A			sta BALL_BLOCK_SOUND.B+1
 15661 80ED 20 A5 24			jsr BALL_BLOCK_SOUND
 15662 80F0			l_2DC4
 15663
 15664 				; optimize OK (service.pas), line = 2641
 15665
 15666 80F0 AD D5 9B			lda FIRE.SHOT
 15667 80F3 D0 03 4C 7F 82		jeq l_2DFE
 15668
 15669 				; optimize OK (service.pas), line = 2643
 15670
 15671 80F8 AD D7 9B			lda FIRE.NW
 15672 80FB F0 03			jeq l_2E0B
 15673 80FD 20 A7 7F			jsr REMOVE_FIRE
 15674 8100			l_2E0B
 15675
 15676 				; optimize OK (service.pas), line = 2644
 15677
 15678 8100 A9 01			lda #$01
 15679 8102 8D D7 9B			sta FIRE.NW
 15680
 15681 				; optimize OK (service.pas), line = 2646
 15682
 15683 8105 AD D4 9B			lda FIRE.Y
 15684 8108 38 E9 04			sub #$04
 15685 810B 8D D4 9B			sta FIRE.Y
 15686
 15687 				; optimize OK (service.pas), line = 2647
 15688
 15689 810E C9 16			cmp #$16
 15690 8110 B0 08			jcs l_2E26
 15691 8112 A9 00			lda #$00
 15692 8114 8D D5 9B			sta FIRE.SHOT
 15693 8117 4C 7F 82			jmp l_2E34
 15694 811A			l_2E26
 15695
 15696 				; optimize FAIL ('PLACE_FIRE', service.pas), line = 2650
 15697
 15698 811A 20 F4 7E			jsr PLACE_FIRE
 15699
 15700 				; optimize OK (service.pas), line = 2652
 15701
 15702 811D AD D4 9B			lda FIRE.Y
 15703 8120 38 E9 16			sub #$16
 15704 8123 D0 03 4C 7F 82		jeq l_2E5B
 15705 8128 10 03			bpl @+
 15706 812A 4C 7F 82			jmp l_2E5B
 15707 				@
 15708 812D AD D4 9B			lda FIRE.Y
 15709 8130 38 E9 16			sub #$16
 15710 8133 85 A0			sta :STACKORIGIN+10
 15711 8135 A9 00			lda #$00
 15712 8137 E9 00			sbc #$00
 15713 8139 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 15714 813B A5 A0			lda :STACKORIGIN+10
 15715 813D C9 78			cmp #$78
 15716 813F A5 B0			lda :STACKORIGIN+STACKWIDTH+10
 15717 8141 E9 00			sbc #$00
 15718 8143 50 02			svc
 15719 8145 49 80			eor #$80
 15720 8147 30 03 4C 7F 82		jpl l_2E5B
 15721 				@
 15722
 15723 				; optimize OK (service.pas), line = 2654
 15724
 15725 814C AD D3 9B			lda FIRE.X
 15726 814F 38 E9 09			sub #$09
 15727 8152 85 9F			sta :STACKORIGIN+9
 15728 8154 A9 00			lda #$00
 15729 8156 E9 00			sbc #$00
 15730 8158 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 15731 815A A0 00			ldy #$00
 15732 815C A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 15733 815E 10 01			spl
 15734 8160 88				dey
 15735 8161 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 15736 8163 84 BF			sty :STACKORIGIN+STACKWIDTH*2+9
 15737 8165 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
 15738 8167 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 15739 8169 66 9F			ror :STACKORIGIN+9
 15740 816B 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
 15741 816D 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 15742 816F 66 9F			ror :STACKORIGIN+9
 15743 8171 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
 15744 8173 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 15745 8175 66 9F			ror :STACKORIGIN+9
 15746 8177 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
 15747 8179 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 15748 817B 66 9F			ror :STACKORIGIN+9
 15749 817D A5 9F			lda :STACKORIGIN+9
 15750 817F 8D C7 A5			sta X1
 15751 8182 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 15752 8184 8D C8 A5			sta X1+1
 15753
 15754 				; optimize OK (service.pas), line = 2655
 15755
 15756 8187 AD D4 9B			lda FIRE.Y
 15757 818A 38 E9 16			sub #$16
 15758 818D 85 9F			sta :STACKORIGIN+9
 15759 818F A9 00			lda #$00
 15760 8191 E9 00			sbc #$00
 15761 8193 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 15762 8195 A0 00			ldy #$00
 15763 8197 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 15764 8199 10 01			spl
 15765 819B 88				dey
 15766 819C 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 15767 819E 84 BF			sty :STACKORIGIN+STACKWIDTH*2+9
 15768 81A0 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
 15769 81A2 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 15770 81A4 66 9F			ror :STACKORIGIN+9
 15771 81A6 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
 15772 81A8 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 15773 81AA 66 9F			ror :STACKORIGIN+9
 15774 81AC 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
 15775 81AE 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 15776 81B0 66 9F			ror :STACKORIGIN+9
 15777 81B2 A5 9F			lda :STACKORIGIN+9
 15778 81B4 8D CB A5			sta Y1
 15779 81B7 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 15780 81B9 8D CC A5			sta Y1+1
 15781
 15782 				; optimize OK (service.pas), line = 2657
 15783
 15784 81BC AD D3 9B			lda FIRE.X
 15785 81BF 18 6D 4D 9B			add SHOOTS.WIDTH
 15786 81C3 85 9F			sta :STACKORIGIN+9
 15787 81C5 A9 00			lda #$00
 15788 81C7 6D 4E 9B			adc SHOOTS.WIDTH+1
 15789 81CA 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 15790 81CC A9 00			lda #$00
 15791 81CE 69 00			adc #$00
 15792 81D0 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
 15793 81D2 A9 00			lda #$00
 15794 81D4 69 00			adc #$00
 15795 81D6 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
 15796 81D8 A5 9F			lda :STACKORIGIN+9
 15797 81DA 38 E9 09			sub #$09
 15798 81DD 85 9F			sta :STACKORIGIN+9
 15799 81DF A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 15800 81E1 E9 00			sbc #$00
 15801 81E3 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 15802 81E5 A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
 15803 81E7 E9 00			sbc #$00
 15804 81E9 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
 15805 81EB A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
 15806 81ED E9 00			sbc #$00
 15807 81EF 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
 15808 81F1 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
 15809 81F3 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 15810 81F5 66 9F			ror :STACKORIGIN+9
 15811 81F7 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
 15812 81F9 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 15813 81FB 66 9F			ror :STACKORIGIN+9
 15814 81FD 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
 15815 81FF 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 15816 8201 66 9F			ror :STACKORIGIN+9
 15817 8203 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
 15818 8205 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 15819 8207 66 9F			ror :STACKORIGIN+9
 15820 8209 A5 9F			lda :STACKORIGIN+9
 15821 820B 8D C9 A5			sta X2
 15822 820E A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 15823 8210 8D CA A5			sta X2+1
 15824
 15825 				; optimize OK (service.pas), line = 2658
 15826
 15827 8213 AD CB A5			lda Y1
 15828 8216 8D CD A5			sta Y2
 15829 8219 AD CC A5			lda Y1+1
 15830 821C 8D CE A5			sta Y2+1
 15831
 15832 				; optimize OK (service.pas), line = 2660
 15833
 15834 821F AD CB A5			lda Y1
 15835 8222 0A				asl @
 15836 8223 0A				asl @
 15837 8224 0A				asl @
 15838 8225 0A				asl @
 15839 8226 18 6D C7 A5			add X1
 15840 822A A8				tay
 15841 822B B9 00 DB			lda adr.WALL,y
 15842 822E D0 11			jne l_2EC4x
 15843 8230 AD CD A5			lda Y2
 15844 8233 0A				asl @
 15845 8234 0A				asl @
 15846 8235 0A				asl @
 15847 8236 0A				asl @
 15848 8237 18 6D C9 A5			add X2
 15849 823B A8				tay
 15850 823C B9 00 DB			lda adr.WALL,y
 15851 823F F0 3E			jeq l_2EC4
 15852 8241			l_2EC4x
 15853
 15854 				; optimize FAIL ('REMOVE_FIRE', service.pas), line = 2662
 15855
 15856 8241 20 A7 7F			jsr REMOVE_FIRE
 15857
 15858 				; optimize OK (service.pas), line = 2663
 15859
 15860 8244 A9 00			lda #$00
 15861 8246 8D D5 9B			sta FIRE.SHOT
 15862
 15863 				; optimize OK (service.pas), line = 2665
 15864
 15865 8249 AD C7 A5			lda X1
 15866 824C 8D 15 A5			sta SHOOT_BLOCK_WITH_FIRE.XB
 15867 824F AD C8 A5			lda X1+1
 15868 8252 8D 16 A5			sta SHOOT_BLOCK_WITH_FIRE.XB+1
 15869 8255 AD CB A5			lda Y1
 15870 8258 8D 17 A5			sta SHOOT_BLOCK_WITH_FIRE.YB
 15871 825B AD CC A5			lda Y1+1
 15872 825E 8D 18 A5			sta SHOOT_BLOCK_WITH_FIRE.YB+1
 15873 8261 20 CF 57			jsr SHOOT_BLOCK_WITH_FIRE
 15874
 15875 				; optimize OK (service.pas), line = 2666
 15876
 15877 8264 AD C9 A5			lda X2
 15878 8267 8D 15 A5			sta SHOOT_BLOCK_WITH_FIRE.XB
 15879 826A AD CA A5			lda X2+1
 15880 826D 8D 16 A5			sta SHOOT_BLOCK_WITH_FIRE.XB+1
 15881 8270 AD CD A5			lda Y2
 15882 8273 8D 17 A5			sta SHOOT_BLOCK_WITH_FIRE.YB
 15883 8276 AD CE A5			lda Y2+1
 15884 8279 8D 18 A5			sta SHOOT_BLOCK_WITH_FIRE.YB+1
 15885 827C 20 CF 57			jsr SHOOT_BLOCK_WITH_FIRE
 15886 827F			l_2E34
 15887 827F			l_2EC4
 15888 827F			l_2E5B
 15889 827F			l_2DFE
 15890 827F			l_2DA4
 15891
 15892 				; ------------------------------------------------------------
 15893
 15894 = A5C7			X1	= DATAORIGIN+$0BAB
 15895 = A5C9			X2	= DATAORIGIN+$0BAD
 15896 = A5CB			Y1	= DATAORIGIN+$0BAF
 15897 = A5CD			Y2	= DATAORIGIN+$0BB1
 15898
 15899 = A5C7			@VarData	= X1
 15900 = 0008			@VarDataSize	= 8
 15901
 15902 827F			@exit
 15903 					.ifdef @new
 15904 					lda <@VarData
 15905 					sta :ztmp
 15906 					lda >@VarData
 15907 					ldy #@VarDataSize-1
 15908 					jmp @FreeMem
 15909 					els
 15910 827F 60				rts						; ret
 15911 					eif
 15912 				.endl
 15913
 15914 8280			.local	REMOVE_FLUX					; PROCEDURE
 15915
 15916 				; optimize OK (service.pas), line = 2678
 15917
 15918 8280 A9 00			lda #$00
 15919 8282 8D CF A5			sta Y
 15920
 15921 8285			l_2EE9
 15922 				; --- ForToDoCondition
 15923 8285 AD CF A5			lda Y
 15924 8288 C9 14			cmp #$14
 15925 828A 90 03 4C 3D 83		jcs l_2EF7
 15926
 15927 				; optimize OK (service.pas), line = 2680
 15928
 15929 828F 69 B0			adc #$B0
 15930 8291 85 A1			sta :STACKORIGIN+11
 15931 8293 A9 00			lda #$00
 15932 8295 69 00			adc #$00
 15933 8297 06 A1			asl :STACKORIGIN+11
 15934 8299 2A				rol @
 15935 829A 85 B1			sta :STACKORIGIN+STACKWIDTH+11
 15936 829C AD 1C 99			lda ROW
 15937 829F 18 65 A1			add :STACKORIGIN+11
 15938 82A2 85 84			sta :bp2
 15939 82A4 AD 1D 99			lda ROW+1
 15940 82A7 65 B1			adc :STACKORIGIN+STACKWIDTH+11
 15941 82A9 85 85			sta :bp2+1
 15942 82AB A0 00			ldy #$00
 15943 82AD A9 D9			lda #$D9
 15944 82AF 18 71 84			add (:bp2),y
 15945 82B2 8D F3 A3			sta BLITROW.DST
 15946 82B5 C8				iny
 15947 82B6 A9 00			lda #$00
 15948 82B8 71 84			adc (:bp2),y
 15949 82BA 8D F4 A3			sta BLITROW.DST+1
 15950 82BD A9 00			lda #$00
 15951 82BF 69 00			adc #$00
 15952 82C1 8D F5 A3			sta BLITROW.DST+2
 15953 82C4 A9 00			lda #$00
 15954 82C6 69 00			adc #$00
 15955 82C8 8D F6 A3			sta BLITROW.DST+3
 15956 82CB AD E9 9A			lda PLAYSCREEN.OFS
 15957 82CE 18 69 D9			add #$D9
 15958 82D1 85 A1			sta :STACKORIGIN+11
 15959 82D3 AD EA 9A			lda PLAYSCREEN.OFS+1
 15960 82D6 69 00			adc #$00
 15961 82D8 85 B1			sta :STACKORIGIN+STACKWIDTH+11
 15962 82DA AD EB 9A			lda PLAYSCREEN.OFS+2
 15963 82DD 69 00			adc #$00
 15964 82DF 85 C1			sta :STACKORIGIN+STACKWIDTH*2+11
 15965 82E1 AD EC 9A			lda PLAYSCREEN.OFS+3
 15966 82E4 69 00			adc #$00
 15967 82E6 85 D1			sta :STACKORIGIN+STACKWIDTH*3+11
 15968 82E8 AD CF A5			lda Y
 15969 82EB 18 69 B0			add #$B0
 15970 82EE 85 A2			sta :STACKORIGIN+12
 15971 82F0 A9 00			lda #$00
 15972 82F2 69 00			adc #$00
 15973 82F4 06 A2			asl :STACKORIGIN+12
 15974 82F6 2A				rol @
 15975 82F7 85 B2			sta :STACKORIGIN+STACKWIDTH+12
 15976 82F9 AD 1C 99			lda ROW
 15977 82FC 18 65 A2			add :STACKORIGIN+12
 15978 82FF 85 84			sta :bp2
 15979 8301 AD 1D 99			lda ROW+1
 15980 8304 65 B2			adc :STACKORIGIN+STACKWIDTH+12
 15981 8306 85 85			sta :bp2+1
 15982 8308 A0 00			ldy #$00
 15983 830A A5 A1			lda :STACKORIGIN+11
 15984 830C 18 71 84			add (:bp2),y
 15985 830F 8D EF A3			sta BLITROW.SRC
 15986 8312 C8				iny
 15987 8313 A5 B1			lda :STACKORIGIN+STACKWIDTH+11
 15988 8315 71 84			adc (:bp2),y
 15989 8317 8D F0 A3			sta BLITROW.SRC+1
 15990 831A A5 C1			lda :STACKORIGIN+STACKWIDTH*2+11
 15991 831C 69 00			adc #$00
 15992 831E 8D F1 A3			sta BLITROW.SRC+2
 15993 8321 A5 D1			lda :STACKORIGIN+STACKWIDTH*3+11
 15994 8323 69 00			adc #$00
 15995 8325 8D F2 A3			sta BLITROW.SRC+3
 15996 8328 A9 08			lda #$08
 15997 832A 8D F7 A3			sta BLITROW.SIZE
 15998 832D A9 00			lda #$00
 15999 832F 8D F8 A3			sta BLITROW.SIZE+1
 16000 8332 20 CF 25			jsr BLITROW
 16001
 16002 				; --- ForToDoEpilog
 16003 8335 EE CF A5			inc Y
 16004 8338 F0 03 4C 85 82		jne l_2EE9
 16005 833D			l_2EF7
 16006
 16007 				; ------------------------------------------------------------
 16008
 16009 = A5CF			Y	= DATAORIGIN+$0BB3
 16010
 16011 = A5CF			@VarData	= Y
 16012 = 0001			@VarDataSize	= 1
 16013
 16014 833D			@exit
 16015 					.ifdef @new
 16016 					lda <@VarData
 16017 					sta :ztmp
 16018 					lda >@VarData
 16019 					ldy #@VarDataSize-1
 16020 					jmp @FreeMem
 16021 					els
 16022 833D 60				rts						; ret
 16023 					eif
 16024 				.endl
 16025
 16026 833E			.local	CHECK_FLUX					; PROCEDURE
 16027
 16028 				; optimize OK (service.pas), line = 2688
 16029
 16030 833E AD DA 9B			lda SCRFLUXCNT
 16031 8341 8D D1 A5			sta FX
 16032
 16033 				; optimize OK (service.pas), line = 2689
 16034
 16035 8344 AD D9 9B			lda SCRFLUX
 16036 8347 D0 03 4C FE 83		jeq l_2F36
 16037
 16038 				; optimize OK (service.pas), line = 2691
 16039
 16040 834C A9 00			lda #$00
 16041 834E 8D D0 A5			sta Y
 16042
 16043 8351			l_2F40
 16044 				; --- ForToDoCondition
 16045 8351 AD D0 A5			lda Y
 16046 8354 C9 14			cmp #$14
 16047 8356 90 03 4C EF 83		jcs l_2F4E
 16048
 16049 				; optimize OK (service.pas), line = 2693
 16050
 16051 835B 69 B0			adc #$B0
 16052 835D 85 A1			sta :STACKORIGIN+11
 16053 835F A9 00			lda #$00
 16054 8361 69 00			adc #$00
 16055 8363 06 A1			asl :STACKORIGIN+11
 16056 8365 2A				rol @
 16057 8366 85 B1			sta :STACKORIGIN+STACKWIDTH+11
 16058 8368 AD 1C 99			lda ROW
 16059 836B 18 65 A1			add :STACKORIGIN+11
 16060 836E 85 84			sta :bp2
 16061 8370 AD 1D 99			lda ROW+1
 16062 8373 65 B1			adc :STACKORIGIN+STACKWIDTH+11
 16063 8375 85 85			sta :bp2+1
 16064 8377 A0 00			ldy #$00
 16065 8379 A9 D9			lda #$D9
 16066 837B 18 71 84			add (:bp2),y
 16067 837E 8D F3 A3			sta BLITROW.DST
 16068 8381 C8				iny
 16069 8382 A9 00			lda #$00
 16070 8384 71 84			adc (:bp2),y
 16071 8386 8D F4 A3			sta BLITROW.DST+1
 16072 8389 A9 00			lda #$00
 16073 838B 69 00			adc #$00
 16074 838D 8D F5 A3			sta BLITROW.DST+2
 16075 8390 A9 00			lda #$00
 16076 8392 69 00			adc #$00
 16077 8394 8D F6 A3			sta BLITROW.DST+3
 16078 8397 AD D0 A5			lda Y
 16079 839A 18 6D D1 A5			add FX
 16080 839E 85 A2			sta :STACKORIGIN+12
 16081 83A0 A9 00			lda #$00
 16082 83A2 69 00			adc #$00
 16083 83A4 85 B2			sta :STACKORIGIN+STACKWIDTH+12
 16084 83A6 A9 00			lda #$00
 16085 83A8 06 A2			asl :STACKORIGIN+12
 16086 83AA 26 B2			rol :STACKORIGIN+STACKWIDTH+12
 16087 83AC 2A				rol @
 16088 83AD 06 A2			asl :STACKORIGIN+12
 16089 83AF 26 B2			rol :STACKORIGIN+STACKWIDTH+12
 16090 83B1 2A				rol @
 16091 83B2 06 A2			asl :STACKORIGIN+12
 16092 83B4 26 B2			rol :STACKORIGIN+STACKWIDTH+12
 16093 83B6 2A				rol @
 16094 83B7 85 C2			sta :STACKORIGIN+STACKWIDTH*2+12
 16095 83B9 AD 59 9B			lda FLUX.OFS
 16096 83BC 18 65 A2			add :STACKORIGIN+12
 16097 83BF 8D EF A3			sta BLITROW.SRC
 16098 83C2 AD 5A 9B			lda FLUX.OFS+1
 16099 83C5 65 B2			adc :STACKORIGIN+STACKWIDTH+12
 16100 83C7 8D F0 A3			sta BLITROW.SRC+1
 16101 83CA AD 5B 9B			lda FLUX.OFS+2
 16102 83CD 65 C2			adc :STACKORIGIN+STACKWIDTH*2+12
 16103 83CF 8D F1 A3			sta BLITROW.SRC+2
 16104 83D2 AD 5C 9B			lda FLUX.OFS+3
 16105 83D5 69 00			adc #$00
 16106 83D7 8D F2 A3			sta BLITROW.SRC+3
 16107 83DA A9 08			lda #$08
 16108 83DC 8D F7 A3			sta BLITROW.SIZE
 16109 83DF A9 00			lda #$00
 16110 83E1 8D F8 A3			sta BLITROW.SIZE+1
 16111 83E4 20 CF 25			jsr BLITROW
 16112
 16113 				; --- ForToDoEpilog
 16114 83E7 EE D0 A5			inc Y
 16115 83EA F0 03 4C 51 83		jne l_2F40
 16116 83EF			l_2F4E
 16117
 16118 				; optimize FAIL (0, service.pas), line = 2695
 16119
 16120 83EF EE DA 9B			inc SCRFLUXCNT
 16121
 16122 				; optimize OK (service.pas), line = 2696
 16123
 16124 83F2 AD DA 9B			lda SCRFLUXCNT
 16125 83F5 C9 15			cmp #$15
 16126 83F7 90 05			jcc l_2F8D
 16127 83F9 A9 00			lda #$00
 16128 83FB 8D DA 9B			sta SCRFLUXCNT
 16129 83FE			l_2F8D
 16130 83FE			l_2F36
 16131
 16132 				; ------------------------------------------------------------
 16133
 16134 = A5D0			Y	= DATAORIGIN+$0BB4
 16135 = A5D1			FX	= DATAORIGIN+$0BB5
 16136
 16137 = A5D0			@VarData	= Y
 16138 = 0002			@VarDataSize	= 2
 16139
 16140 83FE			@exit
 16141 					.ifdef @new
 16142 					lda <@VarData
 16143 					sta :ztmp
 16144 					lda >@VarData
 16145 					ldy #@VarDataSize-1
 16146 					jmp @FreeMem
 16147 					els
 16148 83FE 60				rts						; ret
 16149 					eif
 16150 				.endl
 16151
 16152 83FF			.local	VAUS_OUT					; PROCEDURE
 16153
 16154 				; optimize FAIL ('NOSOUND', service.pas), line = 2704
 16155
 16156 83FF 20 9C 26			jsr NOSOUND
 16157
 16158 				; optimize OK (service.pas), line = 2706
 16159
 16160 8402 AD B9 9B			lda CUR_PLAYER
 16161 8405 0A				asl @
 16162 8406 0A				asl @
 16163 8407 A8				tay
 16164 8408 B9 9E 9B			lda adr.SCORE.PLAYER,y
 16165 840B 18 69 10			add #$10
 16166 840E 99 9E 9B			sta adr.SCORE.PLAYER,y
 16167 8411 B9 9F 9B			lda adr.SCORE.PLAYER+1,y
 16168 8414 69 27			adc #$27
 16169 8416 99 9F 9B			sta adr.SCORE.PLAYER+1,y
 16170 8419 B9 A0 9B			lda adr.SCORE.PLAYER+2,y
 16171 841C 69 00			adc #$00
 16172 841E 99 A0 9B			sta adr.SCORE.PLAYER+2,y
 16173 8421 B9 A1 9B			lda adr.SCORE.PLAYER+3,y
 16174 8424 69 00			adc #$00
 16175 8426 99 A1 9B			sta adr.SCORE.PLAYER+3,y
 16176
 16177 				; optimize OK (service.pas), line = 2707
 16178
 16179 8429 A9 00			lda #$00
 16180 842B 8D 9C 9B			sta REMAIN_BLK
 16181
 16182 				; optimize OK (service.pas), line = 2709
 16183
 16184 842E AD 5D 9B			lda VAUS.X
 16185 8431 8D D6 A5			sta Z
 16186 8434 A9 00			lda #$00
 16187 8436 8D D7 A5			sta Z+1
 16188
 16189 				; optimize FAIL ('WAIT_VBL', service.pas), line = 2711
 16190
 16191 8439 20 E8 2E			jsr WAIT_VBL
 16192
 16193 				; optimize FAIL ('REMOVE_VAUS', service.pas), line = 2712
 16194
 16195 843C 20 4A 3D			jsr REMOVE_VAUS
 16196
 16197 				; optimize FAIL ('PLACE_VAUS', service.pas), line = 2713
 16198
 16199 843F 20 35 3E			jsr PLACE_VAUS
 16200
 16201 				; optimize OK (service.pas), line = 2715
 16202
 16203 8442 AD D6 A5			lda Z
 16204 8445 8D D2 A5			sta X
 16205 8448 AD D7 A5			lda Z+1
 16206 844B 8D D3 A5			sta X+1
 16207 844E AD D6 A5			lda Z
 16208 8451 18 69 2C			add #$2C
 16209 8454 8D 67 84			sta @FORTMP_2FB8_0
 16210 8457 AD D7 A5			lda Z+1
 16211 845A 69 00			adc #$00
 16212 845C 8D 60 84			sta @FORTMP_2FB8_1
 16213
 16214 845F			l_2FBB
 16215 				; --- ForToDoCondition
 16216 845F A9 00			lda @FORTMP_2FB8_1::#$00
 16217 8461 CD D3 A5			cmp X+1
 16218 8464 D0 05			bne @+
 16219 8466 A9 00			lda @FORTMP_2FB8_0::#$00
 16220 8468 CD D2 A5			cmp X
 16221 				@
 16222 846B B0 03 4C 5C 85		jcc l_2FC7
 16223
 16224 				; optimize FAIL ('WAIT_VBL', service.pas), line = 2717
 16225
 16226 8470 20 E8 2E			jsr WAIT_VBL
 16227
 16228 				; optimize OK (service.pas), line = 2719
 16229
 16230 8473 AD 5D 9B			lda VAUS.X
 16231 8476 8D 5F 9B			sta VAUS.OLDX
 16232 8479 A9 00			lda #$00
 16233 847B 8D 60 9B			sta VAUS.OLDX+1
 16234
 16235 				; optimize OK (service.pas), line = 2720
 16236
 16237 847E AD D2 A5			lda X
 16238 8481 8D 5D 9B			sta VAUS.X
 16239
 16240 				; optimize FAIL ('REMOVE_VAUS', service.pas), line = 2721
 16241
 16242 8484 20 4A 3D			jsr REMOVE_VAUS
 16243
 16244 				; optimize FAIL ('CHECK_FLUX', service.pas), line = 2722
 16245
 16246 8487 20 3E 83			jsr CHECK_FLUX
 16247
 16248 				; optimize FAIL ('PLACE_VAUS', service.pas), line = 2723
 16249
 16250 848A 20 35 3E			jsr PLACE_VAUS
 16251
 16252 				; optimize OK (service.pas), line = 2725
 16253
 16254 848D AD 5E 9B			lda VAUS.Y
 16255 8490 8D D4 A5			sta Y
 16256 8493 A9 00			lda #$00
 16257 8495 8D D5 A5			sta Y+1
 16258 8498 AD 5E 9B			lda VAUS.Y
 16259 849B 18 6D 66 9B			add VAUS.HEIGHT
 16260 849F 8D B1 84			sta @FORTMP_2FE6_0
 16261 84A2 A9 00			lda #$00
 16262 84A4 69 00			adc #$00
 16263 84A6 8D AA 84			sta @FORTMP_2FE6_1
 16264
 16265 84A9			l_2FE9
 16266 				; --- ForToDoCondition
 16267 84A9 A9 00			lda @FORTMP_2FE6_1::#$00
 16268 84AB CD D5 A5			cmp Y+1
 16269 84AE D0 05			bne @+
 16270 84B0 A9 00			lda @FORTMP_2FE6_0::#$00
 16271 84B2 CD D4 A5			cmp Y
 16272 				@
 16273 84B5 B0 03 4C 4C 85		jcc l_2FF5
 16274
 16275 				; optimize OK (service.pas), line = 2727
 16276
 16277 84BA AD D5 A5			lda Y+1
 16278 84BD 85 B1			sta :STACKORIGIN+STACKWIDTH+11
 16279 84BF AD D4 A5			lda Y
 16280 84C2 0A				asl @
 16281 84C3 26 B1			rol :STACKORIGIN+STACKWIDTH+11
 16282 84C5 18 6D 1C 99			add ROW
 16283 84C9 85 84			sta :bp2
 16284 84CB AD 1D 99			lda ROW+1
 16285 84CE 65 B1			adc :STACKORIGIN+STACKWIDTH+11
 16286 84D0 85 85			sta :bp2+1
 16287 84D2 A0 00			ldy #$00
 16288 84D4 A9 E1			lda #$E1
 16289 84D6 18 71 84			add (:bp2),y
 16290 84D9 8D F3 A3			sta BLITROW.DST
 16291 84DC C8				iny
 16292 84DD A9 00			lda #$00
 16293 84DF 71 84			adc (:bp2),y
 16294 84E1 8D F4 A3			sta BLITROW.DST+1
 16295 84E4 A9 00			lda #$00
 16296 84E6 69 00			adc #$00
 16297 84E8 8D F5 A3			sta BLITROW.DST+2
 16298 84EB A9 00			lda #$00
 16299 84ED 69 00			adc #$00
 16300 84EF 8D F6 A3			sta BLITROW.DST+3
 16301 84F2 AD E9 9A			lda PLAYSCREEN.OFS
 16302 84F5 18 69 E1			add #$E1
 16303 84F8 85 A1			sta :STACKORIGIN+11
 16304 84FA AD EA 9A			lda PLAYSCREEN.OFS+1
 16305 84FD 69 00			adc #$00
 16306 84FF 85 B1			sta :STACKORIGIN+STACKWIDTH+11
 16307 8501 AD EB 9A			lda PLAYSCREEN.OFS+2
 16308 8504 69 00			adc #$00
 16309 8506 85 C1			sta :STACKORIGIN+STACKWIDTH*2+11
 16310 8508 AD EC 9A			lda PLAYSCREEN.OFS+3
 16311 850B 69 00			adc #$00
 16312 850D 85 D1			sta :STACKORIGIN+STACKWIDTH*3+11
 16313 850F A0 00			ldy #$00
 16314 8511 A5 A1			lda :STACKORIGIN+11
 16315 8513 18 71 84			add (:bp2),y
 16316 8516 8D EF A3			sta BLITROW.SRC
 16317 8519 C8				iny
 16318 851A A5 B1			lda :STACKORIGIN+STACKWIDTH+11
 16319 851C 71 84			adc (:bp2),y
 16320 851E 8D F0 A3			sta BLITROW.SRC+1
 16321 8521 A5 C1			lda :STACKORIGIN+STACKWIDTH*2+11
 16322 8523 69 00			adc #$00
 16323 8525 8D F1 A3			sta BLITROW.SRC+2
 16324 8528 A5 D1			lda :STACKORIGIN+STACKWIDTH*3+11
 16325 852A 69 00			adc #$00
 16326 852C 8D F2 A3			sta BLITROW.SRC+3
 16327 852F A9 28			lda #$28
 16328 8531 8D F7 A3			sta BLITROW.SIZE
 16329 8534 A9 00			lda #$00
 16330 8536 8D F8 A3			sta BLITROW.SIZE+1
 16331 8539 20 CF 25			jsr BLITROW
 16332
 16333 				; --- ForToDoEpilog
 16334 853C EE D4 A5			inc Y
 16335 853F F0 03 4C A9 84		jne l_2FE9
 16336 8544 EE D5 A5			inc Y+1
 16337 8547 F0 03 4C A9 84		jne l_2FE9
 16338 854C			l_2FF5
 16339
 16340 				; --- ForToDoEpilog
 16341 854C EE D2 A5			inc X
 16342 854F F0 03 4C 5F 84		jne l_2FBB
 16343 8554 EE D3 A5			inc X+1
 16344 8557 F0 03 4C 5F 84		jne l_2FBB
 16345 855C			l_2FC7
 16346
 16347 				; ------------------------------------------------------------
 16348
 16349 = A5D2			X	= DATAORIGIN+$0BB6
 16350 = A5D4			Y	= DATAORIGIN+$0BB8
 16351 = A5D6			Z	= DATAORIGIN+$0BBA
 16352
 16353 = A5D2			@VarData	= X
 16354 = 0006			@VarDataSize	= 6
 16355
 16356 855C			@exit
 16357 					.ifdef @new
 16358 					lda <@VarData
 16359 					sta :ztmp
 16360 					lda >@VarData
 16361 					ldy #@VarDataSize-1
 16362 					jmp @FreeMem
 16363 					els
 16364 855C 60				rts						; ret
 16365 					eif
 16366 				.endl
 16367
 16368 855D			.local	CHECK_BONUS_TYPE				; PROCEDURE
 16369
 16370 				; optimize OK (service.pas), line = 2737
 16371
 16372 855D AD 69 9B			lda VAUS.LETTER
 16373 8560 10 03 4C 13 86		jmi l_302F
 16374 8565 D0 03 4C 13 86		jeq l_302F
 16375
 16376 				; optimize OK (service.pas), line = 2739
 16377
 16378 856A A0 00			ldy #$00
 16379 856C AD 69 9B			lda VAUS.LETTER
 16380 856F 10 01			spl
 16381 8571 88				dey
 16382 8572 38 E9 01			sub #$01
 16383 8575 8D D1 9B			sta LETT.LAST
 16384 8578 98				tya
 16385 8579 E9 00			sbc #$00
 16386 857B 8D D2 9B			sta LETT.LAST+1
 16387
 16388 				; optimize OK (service.pas), line = 2740
 16389
 16390 857E AC E0 A5 84 84 AC + 	mwy B2 :bp2
 16391 8588 A0 17			ldy #B2.INPLAY-DATAORIGIN
 16392 858A B1 84			lda (:bp2),y
 16393 858C F0 0F			jeq l_3046
 16394 858E AD E0 A5			lda B2
 16395 8591 8D 60 A4			sta REMOVE_BALL.BALL
 16396 8594 AD E1 A5			lda B2+1
 16397 8597 8D 61 A4			sta REMOVE_BALL.BALL+1
 16398 859A 20 24 2E			jsr REMOVE_BALL
 16399 859D			l_3046
 16400
 16401 				; optimize OK (service.pas), line = 2741
 16402
 16403 859D AC E4 A5 84 84 AC + 	mwy B3 :bp2
 16404 85A7 A0 17			ldy #B3.INPLAY-DATAORIGIN
 16405 85A9 B1 84			lda (:bp2),y
 16406 85AB F0 0F			jeq l_3058
 16407 85AD AD E4 A5			lda B3
 16408 85B0 8D 60 A4			sta REMOVE_BALL.BALL
 16409 85B3 AD E5 A5			lda B3+1
 16410 85B6 8D 61 A4			sta REMOVE_BALL.BALL+1
 16411 85B9 20 24 2E			jsr REMOVE_BALL
 16412 85BC			l_3058
 16413
 16414 				; optimize OK (service.pas), line = 2742
 16415
 16416 85BC AC E0 A5 84 84 AC + 	mwy B2 :bp2
 16417 85C6 A0 17			ldy #B2.INPLAY-DATAORIGIN
 16418 85C8 A9 00			lda #$00
 16419 85CA 91 84			sta (:bp2),y
 16420
 16421 				; optimize OK (service.pas), line = 2743
 16422
 16423 85CC AC E4 A5 84 84 AC + 	mwy B3 :bp2
 16424 85D6 A0 17			ldy #B3.INPLAY-DATAORIGIN
 16425 85D8 91 84			sta (:bp2),y
 16426
 16427 				; optimize OK (service.pas), line = 2744
 16428
 16429 85DA 8D D9 9B			sta SCRFLUX
 16430
 16431 				; optimize FAIL ('REMOVE_FLUX', service.pas), line = 2745
 16432
 16433 85DD 20 80 82			jsr REMOVE_FLUX
 16434
 16435 				; optimize OK (service.pas), line = 2747
 16436
 16437 85E0 AD 69 9B			lda VAUS.LETTER
 16438 85E3 C9 06			cmp #$06
 16439 85E5 F0 2C			jeq l_307D
 16440
 16441 				; optimize OK (service.pas), line = 2749
 16442
 16443 85E7 AC DC A5 84 84 AC + 	mwy B1 :bp2
 16444 85F1 A0 18			ldy #B1.LAUNCH-DATAORIGIN
 16445 85F3 A9 00			lda #$00
 16446 85F5 91 84			sta (:bp2),y
 16447
 16448 				; optimize OK (service.pas), line = 2750
 16449
 16450 85F7 AC E0 A5 84 84 AC + 	mwy B2 :bp2
 16451 8601 A0 18			ldy #B2.LAUNCH-DATAORIGIN
 16452 8603 91 84			sta (:bp2),y
 16453
 16454 				; optimize OK (service.pas), line = 2751
 16455
 16456 8605 AC E4 A5 84 84 AC + 	mwy B3 :bp2
 16457 860F A0 18			ldy #B3.LAUNCH-DATAORIGIN
 16458 8611 91 84			sta (:bp2),y
 16459 8613			l_307D
 16460 8613			l_302F
 16461
 16462 				; optimize OK (service.pas), line = 2755
 16463
 16464 8613 AD 69 9B			lda VAUS.LETTER
 16465 8616 8D EA A5			sta @CASETMP_0009
 16466 8619 C9 01			cmp #$01
 16467 861B D0 4D			jne l_3099
 16468 				@
 16469
 16470 				; optimize OK (service.pas), line = 2758
 16471
 16472 861D AD D5 9B			lda FIRE.SHOT
 16473 8620 F0 03			jeq l_30A5
 16474 8622 20 A7 7F			jsr REMOVE_FIRE
 16475 8625			l_30A5
 16476
 16477 				; optimize OK (service.pas), line = 2759
 16478
 16479 8625 AD 05 9B 8D ED 9A + 	:8 mva adr.LASERS+# adr.PLAYVAUS+#
 16480
 16481 				; optimize FAIL ('MODIFY_VAUS', service.pas), line = 2760
 16482
 16483 8655 20 80 3C			jsr MODIFY_VAUS
 16484
 16485 				; optimize OK (service.pas), line = 2761
 16486
 16487 8658 A9 00			lda #$00
 16488 865A 8D 69 9B			sta VAUS.LETTER
 16489
 16490 				; optimize OK (service.pas), line = 2762
 16491
 16492 865D A9 01			lda #$01
 16493 865F 8D D6 9B			sta FIRE.AVL
 16494
 16495 				; optimize OK (service.pas), line = 2763
 16496
 16497 8662 A9 00			lda #$00
 16498 8664 8D D5 9B			sta FIRE.SHOT
 16499 8667 4C 98 88			jmp a_0009
 16500 866A			l_3099
 16501 866A C9 02			cmp #$02
 16502 866C D0 46			jne l_30BF
 16503
 16504 				; optimize OK (service.pas), line = 2767
 16505
 16506 866E AD D5 9B			lda FIRE.SHOT
 16507 8671 F0 03			jeq l_30CB
 16508 8673 20 A7 7F			jsr REMOVE_FIRE
 16509 8676			l_30CB
 16510
 16511 				; optimize OK (service.pas), line = 2768
 16512
 16513 8676 AD FD 9A 8D ED 9A + 	:8 mva adr.ENLARGED+# adr.PLAYVAUS+#
 16514
 16515 				; optimize FAIL ('MODIFY_VAUS', service.pas), line = 2769
 16516
 16517 86A6 20 80 3C			jsr MODIFY_VAUS
 16518
 16519 				; optimize OK (service.pas), line = 2770
 16520
 16521 86A9 A9 00			lda #$00
 16522 86AB 8D 69 9B			sta VAUS.LETTER
 16523
 16524 				; optimize OK (service.pas), line = 2771
 16525
 16526 86AE 8D D6 9B			sta FIRE.AVL
 16527 86B1 4C 98 88			jmp a_0009
 16528 86B4			l_30BF
 16529 86B4 C9 03			cmp #$03
 16530 86B6 D0 4B			jne l_30E1
 16531
 16532 				; optimize OK (service.pas), line = 2775
 16533
 16534 86B8 AD D5 9B			lda FIRE.SHOT
 16535 86BB F0 03			jeq l_30ED
 16536 86BD 20 A7 7F			jsr REMOVE_FIRE
 16537 86C0			l_30ED
 16538
 16539 				; optimize OK (service.pas), line = 2776
 16540
 16541 86C0 AD F5 9A 8D ED 9A + 	:8 mva adr.NORMAL+# adr.PLAYVAUS+#
 16542
 16543 				; optimize FAIL ('MODIFY_VAUS', service.pas), line = 2777
 16544
 16545 86F0 20 80 3C			jsr MODIFY_VAUS
 16546
 16547 				; optimize OK (service.pas), line = 2778
 16548
 16549 86F3 A9 00			lda #$00
 16550 86F5 8D 69 9B			sta VAUS.LETTER
 16551
 16552 				; optimize OK (service.pas), line = 2779
 16553
 16554 86F8 8D D6 9B			sta FIRE.AVL
 16555
 16556 				; optimize OK (service.pas), line = 2780
 16557
 16558 86FB A9 01			lda #$01
 16559 86FD 8D D9 9B			sta SCRFLUX
 16560 8700 4C 98 88			jmp a_0009
 16561 8703			l_30E1
 16562 8703 C9 04			cmp #$04
 16563 8705 D0 3E			jne l_3107
 16564
 16565 				; optimize OK (service.pas), line = 2784
 16566
 16567 8707 AD D5 9B			lda FIRE.SHOT
 16568 870A F0 03			jeq l_3113
 16569 870C 20 A7 7F			jsr REMOVE_FIRE
 16570 870F			l_3113
 16571
 16572 				; optimize OK (service.pas), line = 2785
 16573
 16574 870F AD F5 9A 8D ED 9A + 	:8 mva adr.NORMAL+# adr.PLAYVAUS+#
 16575
 16576 				; optimize FAIL ('MODIFY_VAUS', service.pas), line = 2786
 16577
 16578 873F 20 80 3C			jsr MODIFY_VAUS
 16579 				; optimize OK (service.pas), line = 2787
 16580 8742 4C DC 87			jmp s_3150
 16581 8745			l_3107
 16582 8745 C9 05			cmp #$05
 16583 8747 F0 03 4C DF 87		jne l_3125
 16584
 16585 				; optimize OK (service.pas), line = 2791
 16586
 16587 874C AD D5 9B			lda FIRE.SHOT
 16588 874F F0 03			jeq l_3131
 16589 8751 20 A7 7F			jsr REMOVE_FIRE
 16590 8754			l_3131
 16591
 16592 				; optimize OK (service.pas), line = 2792
 16593
 16594 8754 AD F5 9A 8D ED 9A + 	:8 mva adr.NORMAL+# adr.PLAYVAUS+#
 16595
 16596 				; optimize FAIL ('MODIFY_VAUS', service.pas), line = 2793
 16597
 16598 8784 20 80 3C			jsr MODIFY_VAUS
 16599
 16600 				; optimize OK (service.pas), line = 2794
 16601
 16602 8787 A9 00			lda #$00
 16603 8789 8D 69 9B			sta VAUS.LETTER
 16604
 16605 				; optimize OK (service.pas), line = 2795
 16606
 16607 878C AC DC A5 84 84 AC + 	mwy B1 :bp2
 16608 8796 A0 0C			ldy #B1.SPEED-DATAORIGIN
 16609 8798 B1 84			lda (:bp2),y
 16610 879A 38 E9 F4			sub #$F4
 16611 879D 8D 11 A4			sta MAX.A
 16612 87A0 C8				iny
 16613 87A1 B1 84			lda (:bp2),y
 16614 87A3 E9 01			sbc #$01
 16615 87A5 8D 12 A4			sta MAX.A+1
 16616 87A8 A9 F4			lda #$F4
 16617 87AA 8D 13 A4			sta MAX.B
 16618 87AD A9 01			lda #$01
 16619 87AF 8D 14 A4			sta MAX.B+1
 16620 87B2 20 9E 26			jsr MAX
 16621 87B5 AD 15 A4			lda MAX.RESULT
 16622 87B8 8D E8 A5			sta X
 16623 87BB AD 16 A4			lda MAX.RESULT+1
 16624 87BE 8D E9 A5			sta X+1
 16625
 16626 				; optimize OK (service.pas), line = 2796
 16627
 16628 87C1 AD DC A5			lda B1
 16629 87C4 8D 6B A4			sta SET_BALL_SPEED.BALL
 16630 87C7 AD DD A5			lda B1+1
 16631 87CA 8D 6C A4			sta SET_BALL_SPEED.BALL+1
 16632 87CD AD E8 A5			lda X
 16633 87D0 8D 6F A4			sta SET_BALL_SPEED.SPEED
 16634 87D3 AD E9 A5			lda X+1
 16635 87D6 8D 70 A4			sta SET_BALL_SPEED.SPEED+1
 16636 87D9 20 D1 2F			jsr SET_BALL_SPEED
 16637 87DC			s_3150
 16638 				; optimize OK (service.pas), line = 2797
 16639 87DC 4C 1E 88			jmp s_316E
 16640 87DF			l_3125
 16641 87DF C9 06			cmp #$06
 16642 87E1 D0 3E			jne l_3157
 16643
 16644 				; optimize OK (service.pas), line = 2801
 16645
 16646 87E3 AD D5 9B			lda FIRE.SHOT
 16647 87E6 F0 03			jeq l_3163
 16648 87E8 20 A7 7F			jsr REMOVE_FIRE
 16649 87EB			l_3163
 16650
 16651 				; optimize OK (service.pas), line = 2802
 16652
 16653 87EB AD F5 9A 8D ED 9A + 	:8 mva adr.NORMAL+# adr.PLAYVAUS+#
 16654
 16655 				; optimize FAIL ('MODIFY_VAUS', service.pas), line = 2803
 16656
 16657 881B 20 80 3C			jsr MODIFY_VAUS
 16658 881E			s_316E
 16659 				; optimize OK (service.pas), line = 2804
 16660 881E 4C 93 88			jmp s_319E
 16661 8821			l_3157
 16662 8821 C9 07			cmp #$07
 16663 8823 D0 73			jne l_3175
 16664
 16665 				; optimize OK (service.pas), line = 2808
 16666
 16667 8825 AD D5 9B			lda FIRE.SHOT
 16668 8828 F0 03			jeq l_3181
 16669 882A 20 A7 7F			jsr REMOVE_FIRE
 16670 882D			l_3181
 16671
 16672 				; optimize OK (service.pas), line = 2809
 16673
 16674 882D AD F5 9A 8D ED 9A + 	:8 mva adr.NORMAL+# adr.PLAYVAUS+#
 16675
 16676 				; optimize FAIL ('MODIFY_VAUS', service.pas), line = 2810
 16677
 16678 885D 20 80 3C			jsr MODIFY_VAUS
 16679
 16680 				; optimize OK (service.pas), line = 2811
 16681
 16682 8860 A9 00			lda #$00
 16683 8862 8D 69 9B			sta VAUS.LETTER
 16684
 16685 				; optimize OK (service.pas), line = 2812
 16686
 16687 8865 AC B9 9B			ldy CUR_PLAYER
 16688 8868 B9 AD 9B			lda adr.SCORE.LIVES,y
 16689 886B 18 69 01			add #$01
 16690 886E 99 AD 9B			sta adr.SCORE.LIVES,y
 16691
 16692 				; optimize OK (service.pas), line = 2813
 16693
 16694 8871 8D B0 A5			sta PLOT_LIVES.LIVES
 16695 8874 A9 00			lda #$00
 16696 8876 8D B1 A5			sta PLOT_LIVES.LIVES+1
 16697 8879 20 EC 7B			jsr PLOT_LIVES
 16698
 16699 				; optimize OK (service.pas), line = 2814
 16700
 16701 887C A9 D0			lda #$D0
 16702 887E 8D CB 9A			sta BALL_BLOCK_SOUND.A
 16703 8881 A9 07			lda #$07
 16704 8883 8D CC 9A			sta BALL_BLOCK_SOUND.A+1
 16705 8886 A9 0A			lda #$0A
 16706 8888 8D CD 9A			sta BALL_BLOCK_SOUND.B
 16707 888B A9 00			lda #$00
 16708 888D 8D CE 9A			sta BALL_BLOCK_SOUND.B+1
 16709 8890 20 A5 24			jsr BALL_BLOCK_SOUND
 16710 8893			s_319E
 16711
 16712 				; optimize OK (service.pas), line = 2815
 16713
 16714 8893 A9 00			lda #$00
 16715 8895 8D D6 9B			sta FIRE.AVL
 16716 8898			l_3175
 16717 8898			a_0009
 16718
 16719 				; ------------------------------------------------------------
 16720
 16721 = A5DC			B1	= DATAORIGIN+$0BC0
 16722 = 9A1C			B1.X	= DATAORIGIN+$0000
 16723 = 9A1E			B1.Y	= DATAORIGIN+$0002
 16724 = 9A20			B1.FINEX	= DATAORIGIN+$0004
 16725 = 9A22			B1.FINEY	= DATAORIGIN+$0006
 16726 = 9A24			B1.OLDX	= DATAORIGIN+$0008
 16727 = 9A26			B1.OLDY	= DATAORIGIN+$000A
 16728 = 9A28			B1.SPEED	= DATAORIGIN+$000C
 16729 = 9A2A			B1.FINESPEED	= DATAORIGIN+$000E
 16730 = 9A2C			B1.SPEEDX	= DATAORIGIN+$0010
 16731 = 9A2E			B1.SPEEDY	= DATAORIGIN+$0012
 16732 = 9A30			B1.SBD	= DATAORIGIN+$0014
 16733 = 9A32			B1.BRWHIT	= DATAORIGIN+$0016
 16734 = 9A33			B1.INPLAY	= DATAORIGIN+$0017
 16735 = 9A34			B1.LAUNCH	= DATAORIGIN+$0018
 16736 = 9A35			B1.ONVAUS	= DATAORIGIN+$0019
 16737 = 9A36			B1.STM	= DATAORIGIN+$001A
 16738 = A5E0			B2	= DATAORIGIN+$0BC4
 16739 = 9A1C			B2.X	= DATAORIGIN+$0000
 16740 = 9A1E			B2.Y	= DATAORIGIN+$0002
 16741 = 9A20			B2.FINEX	= DATAORIGIN+$0004
 16742 = 9A22			B2.FINEY	= DATAORIGIN+$0006
 16743 = 9A24			B2.OLDX	= DATAORIGIN+$0008
 16744 = 9A26			B2.OLDY	= DATAORIGIN+$000A
 16745 = 9A28			B2.SPEED	= DATAORIGIN+$000C
 16746 = 9A2A			B2.FINESPEED	= DATAORIGIN+$000E
 16747 = 9A2C			B2.SPEEDX	= DATAORIGIN+$0010
 16748 = 9A2E			B2.SPEEDY	= DATAORIGIN+$0012
 16749 = 9A30			B2.SBD	= DATAORIGIN+$0014
 16750 = 9A32			B2.BRWHIT	= DATAORIGIN+$0016
 16751 = 9A33			B2.INPLAY	= DATAORIGIN+$0017
 16752 = 9A34			B2.LAUNCH	= DATAORIGIN+$0018
 16753 = 9A35			B2.ONVAUS	= DATAORIGIN+$0019
 16754 = 9A36			B2.STM	= DATAORIGIN+$001A
 16755 = A5E4			B3	= DATAORIGIN+$0BC8
 16756 = 9A1C			B3.X	= DATAORIGIN+$0000
 16757 = 9A1E			B3.Y	= DATAORIGIN+$0002
 16758 = 9A20			B3.FINEX	= DATAORIGIN+$0004
 16759 = 9A22			B3.FINEY	= DATAORIGIN+$0006
 16760 = 9A24			B3.OLDX	= DATAORIGIN+$0008
 16761 = 9A26			B3.OLDY	= DATAORIGIN+$000A
 16762 = 9A28			B3.SPEED	= DATAORIGIN+$000C
 16763 = 9A2A			B3.FINESPEED	= DATAORIGIN+$000E
 16764 = 9A2C			B3.SPEEDX	= DATAORIGIN+$0010
 16765 = 9A2E			B3.SPEEDY	= DATAORIGIN+$0012
 16766 = 9A30			B3.SBD	= DATAORIGIN+$0014
 16767 = 9A32			B3.BRWHIT	= DATAORIGIN+$0016
 16768 = 9A33			B3.INPLAY	= DATAORIGIN+$0017
 16769 = 9A34			B3.LAUNCH	= DATAORIGIN+$0018
 16770 = 9A35			B3.ONVAUS	= DATAORIGIN+$0019
 16771 = 9A36			B3.STM	= DATAORIGIN+$001A
 16772 = A5E8			X	= DATAORIGIN+$0BCC
 16773 = A5EA			@CASETMP_0009	= DATAORIGIN+$0BCE
 16774
 16775 = A5DC			@VarData	= B1
 16776 = 0009			@VarDataSize	= 9
 16777
 16778 8898			@exit
 16779 					.ifdef @new
 16780 					lda <@VarData
 16781 					sta :ztmp
 16782 					lda >@VarData
 16783 					ldy #@VarDataSize-1
 16784 					jmp @FreeMem
 16785 					els
 16786 8898 60				rts						; ret
 16787 					eif
 16788 				.endl
 16789
 16790 8899			.local	DEVIATE_BALL					; PROCEDURE
 16791
 16792 				; --- RepeatUntilProlog
 16793 8899			l_31AC
 16794
 16795 				; optimize OK (service.pas), line = 2828
 16796
 16797 8899 AD EB A5			lda BALL
 16798 889C 8D 83 A4			sta GET_BALL_DIRECTION.BALL
 16799 889F AD EC A5			lda BALL+1
 16800 88A2 8D 84 A4			sta GET_BALL_DIRECTION.BALL+1
 16801 88A5 20 6C 33			jsr GET_BALL_DIRECTION
 16802 88A8 E8				inx
 16803 88A9 AD 87 A4 95 96		mva GET_BALL_DIRECTION.RESULT :STACKORIGIN,x
 16804 88AE AD 88 A4 95 A6		mva GET_BALL_DIRECTION.RESULT+1 :STACKORIGIN+STACKWIDTH,x
 16805 88B3 A9 1E			lda #$1E
 16806 88B5 20 F3 23			jsr SYSTEM.RANDOM.@010180000
 16807 88B8 E8				inx
 16808 88B9 AD 61 9A 95 96		mva SYSTEM.RANDOM.@010180000.RESULT :STACKORIGIN,x
 16809 88BE A9 00 95 A6			mva #$00 :STACKORIGIN+STACKWIDTH,x
 16810 88C2 20 A3 10			jsr addAX_CX
 16811 88C5 B5 95			lda :STACKORIGIN-1,x
 16812 88C7 38 E9 0F			sub #$0F
 16813 88CA 8D EF A5			sta TEMP
 16814 88CD B5 A5			lda :STACKORIGIN-1+STACKWIDTH,x
 16815 88CF E9 00			sbc #$00
 16816 88D1 8D F0 A5			sta TEMP+1
 16817 88D4 CA				dex
 16818 88D5 CA				dex
 16819
 16820 				; optimize OK (service.pas), line = 2829
 16821
 16822 88D6 A9 5A			lda #$5A
 16823 88D8 85 8E			sta @SMALLINT.MOD.B
 16824 88DA A9 00			lda #$00
 16825 88DC 85 8F			sta @SMALLINT.MOD.B+1
 16826 88DE AD EF A5			lda TEMP
 16827 88E1 85 86			sta @SMALLINT.MOD.A
 16828 88E3 AD F0 A5			lda TEMP+1
 16829 88E6 85 87			sta @SMALLINT.MOD.A+1
 16830 88E8 20 3F 12			jsr @SMALLINT.MOD
 16831 88EB A5 92			lda @SMALLINT.MOD.RESULT
 16832 88ED C9 1F			cmp #$1F
 16833 88EF A5 93			lda @SMALLINT.MOD.RESULT+1
 16834 88F1 E9 00			sbc #$00
 16835 88F3 50 02			svc
 16836 88F5 49 80			eor #$80
 16837 88F7 30 A0			jmi l_31AC
 16838 88F9 A9 5A			lda #$5A
 16839 88FB 85 8E			sta @SMALLINT.MOD.B
 16840 88FD A9 00			lda #$00
 16841 88FF 85 8F			sta @SMALLINT.MOD.B+1
 16842 8901 AD EF A5			lda TEMP
 16843 8904 85 86			sta @SMALLINT.MOD.A
 16844 8906 AD F0 A5			lda TEMP+1
 16845 8909 85 87			sta @SMALLINT.MOD.A+1
 16846 890B 20 3F 12			jsr @SMALLINT.MOD
 16847 890E A5 92			lda @SMALLINT.MOD.RESULT
 16848 8910 C9 3C			cmp #$3C
 16849 8912 A5 93			lda @SMALLINT.MOD.RESULT+1
 16850 8914 E9 00			sbc #$00
 16851 8916 50 02			svc
 16852 8918 49 80			eor #$80
 16853 891A 30 03 4C 99 88		jpl l_31AC
 16854
 16855 				; optimize OK (service.pas), line = 2831
 16856
 16857 891F AD EB A5			lda BALL
 16858 8922 8D 79 A4			sta SET_BALL_DIRECTION.BALL
 16859 8925 AD EC A5			lda BALL+1
 16860 8928 8D 7A A4			sta SET_BALL_DIRECTION.BALL+1
 16861 892B AD EF A5			lda TEMP
 16862 892E 8D 7D A4			sta SET_BALL_DIRECTION.ANGLE
 16863 8931 AD F0 A5			lda TEMP+1
 16864 8934 8D 7E A4			sta SET_BALL_DIRECTION.ANGLE+1
 16865 8937 20 E1 31			jsr SET_BALL_DIRECTION
 16866
 16867 				; optimize OK (service.pas), line = 2832
 16868
 16869 893A AC EB A5 84 84 AC + 	mwy BALL :bp2
 16870 8944 A0 0C			ldy #BALL.SPEED-DATAORIGIN
 16871 8946 B1 84			lda (:bp2),y
 16872 8948 8D 6F A4			sta SET_BALL_SPEED.SPEED
 16873 894B C8				iny
 16874 894C B1 84			lda (:bp2),y
 16875 894E 8D 70 A4			sta SET_BALL_SPEED.SPEED+1
 16876 8951 AD EB A5			lda BALL
 16877 8954 8D 6B A4			sta SET_BALL_SPEED.BALL
 16878 8957 AD EC A5			lda BALL+1
 16879 895A 8D 6C A4			sta SET_BALL_SPEED.BALL+1
 16880 895D 20 D1 2F			jsr SET_BALL_SPEED
 16881
 16882 				; optimize OK (service.pas), line = 2833
 16883
 16884 8960 AC EB A5 84 84 AC + 	mwy BALL :bp2
 16885 896A A0 14			ldy #BALL.SBD-DATAORIGIN
 16886 896C A9 00			lda #$00
 16887 896E 91 84			sta (:bp2),y
 16888 8970 C8				iny
 16889 8971 91 84			sta (:bp2),y
 16890
 16891 				; ------------------------------------------------------------
 16892
 16893 = A5EB			BALL	= DATAORIGIN+$0BCF
 16894 = 9A1C			BALL.X	= DATAORIGIN+$0000
 16895 = 9A1E			BALL.Y	= DATAORIGIN+$0002
 16896 = 9A20			BALL.FINEX	= DATAORIGIN+$0004
 16897 = 9A22			BALL.FINEY	= DATAORIGIN+$0006
 16898 = 9A24			BALL.OLDX	= DATAORIGIN+$0008
 16899 = 9A26			BALL.OLDY	= DATAORIGIN+$000A
 16900 = 9A28			BALL.SPEED	= DATAORIGIN+$000C
 16901 = 9A2A			BALL.FINESPEED	= DATAORIGIN+$000E
 16902 = 9A2C			BALL.SPEEDX	= DATAORIGIN+$0010
 16903 = 9A2E			BALL.SPEEDY	= DATAORIGIN+$0012
 16904 = 9A30			BALL.SBD	= DATAORIGIN+$0014
 16905 = 9A32			BALL.BRWHIT	= DATAORIGIN+$0016
 16906 = 9A33			BALL.INPLAY	= DATAORIGIN+$0017
 16907 = 9A34			BALL.LAUNCH	= DATAORIGIN+$0018
 16908 = 9A35			BALL.ONVAUS	= DATAORIGIN+$0019
 16909 = 9A36			BALL.STM	= DATAORIGIN+$001A
 16910 = A5EF			TEMP	= DATAORIGIN+$0BD3
 16911
 16912 = A5EB			@VarData	= BALL
 16913 = 0004			@VarDataSize	= 4
 16914
 16915 8973			@exit
 16916 					.ifdef @new
 16917 					lda <@VarData
 16918 					sta :ztmp
 16919 					lda >@VarData
 16920 					ldy #@VarDataSize-1
 16921 					jmp @FreeMem
 16922 					els
 16923 8973 60				rts						; ret
 16924 					eif
 16925 				.endl
 16926
 16927 8974			.local	BOUNCEBALL					; FUNCTION
 16928
 16929 8974 4C E9 8A			jmp l_31EC
 16930
 16931 8977			.local	CHECK_BALL					; PROCEDURE
 16932
 16933 				; optimize OK (service.pas), line = 2863
 16934
 16935 8977 AC 50 A6 84 84 AC + 	mwy BALL :bp2
 16936 8981 A0 17			ldy #BALL.INPLAY-DATAORIGIN
 16937 8983 B1 84			lda (:bp2),y
 16938 8985 F0 65			jeq l_31FB
 16939
 16940 				; optimize OK (service.pas), line = 2866
 16941
 16942 8987 A0 02			ldy #BALL.Y-DATAORIGIN
 16943 8989 B1 84			lda (:bp2),y
 16944 898B C8				iny
 16945 898C C9 16			cmp #$16
 16946 898E B1 84			lda (:bp2),y
 16947 8990 E9 00			sbc #$00
 16948 8992 50 02			svc
 16949 8994 49 80			eor #$80
 16950 8996 30 20			jmi l_3218
 16951 8998 A0 02			ldy #BALL.Y-DATAORIGIN
 16952 899A B1 84			lda (:bp2),y
 16953 899C C8				iny
 16954 899D C9 8E			cmp #$8E
 16955 899F B1 84			lda (:bp2),y
 16956 89A1 E9 00			sbc #$00
 16957 89A3 50 02			svc
 16958 89A5 49 80			eor #$80
 16959 89A7 10 0F			jpl l_3218
 16960
 16961 				; optimize OK (service.pas), line = 2867
 16962
 16963 89A9 AD 50 A6			lda BALL
 16964 89AC 8D 1A A5			sta BALL_HIT_BLOCK.BALL
 16965 89AF AD 51 A6			lda BALL+1
 16966 89B2 8D 1B A5			sta BALL_HIT_BLOCK.BALL+1
 16967 89B5 20 F2 58			jsr BALL_HIT_BLOCK
 16968 89B8			l_3218
 16969
 16970 				; optimize OK (service.pas), line = 2869
 16971
 16972 89B8 AD 50 A6			lda BALL
 16973 89BB 8D 67 A4			sta SET_BALL.BALL
 16974 89BE AD 51 A6			lda BALL+1
 16975 89C1 8D 68 A4			sta SET_BALL.BALL+1
 16976 89C4 20 EC 2E			jsr SET_BALL
 16977
 16978 				; optimize FAIL ('BALL_SPEED', service.pas), line = 2870
 16979
 16980 89C7 E8				inx
 16981 89C8 AD 50 A6 95 96		mva BALL :STACKORIGIN,x
 16982 89CD AD 51 A6 95 A6		mva BALL+1 :STACKORIGIN+STACKWIDTH,x
 16983 89D2 20 79 35			jsr BALL_SPEED
 16984 89D5 AC 50 A6 84 84 AC + 	mwy BALL :bp2
 16985 89DF A0 0C			ldy #BALL.SPEED-DATAORIGIN
 16986 89E1 AD AA A4			lda BALL_SPEED.RESULT
 16987 89E4 91 84			sta (:bp2),y
 16988 89E6 C8				iny
 16989 89E7 AD AB A4			lda BALL_SPEED.RESULT+1
 16990 89EA 91 84			sta (:bp2),y
 16991 89EC			l_31FB
 16992
 16993 				; ------------------------------------------------------------
 16994
 16995 = A650			BALL	= DATAORIGIN+$0C34
 16996 = 9A1C			BALL.X	= DATAORIGIN+$0000
 16997 = 9A1E			BALL.Y	= DATAORIGIN+$0002
 16998 = 9A20			BALL.FINEX	= DATAORIGIN+$0004
 16999 = 9A22			BALL.FINEY	= DATAORIGIN+$0006
 17000 = 9A24			BALL.OLDX	= DATAORIGIN+$0008
 17001 = 9A26			BALL.OLDY	= DATAORIGIN+$000A
 17002 = 9A28			BALL.SPEED	= DATAORIGIN+$000C
 17003 = 9A2A			BALL.FINESPEED	= DATAORIGIN+$000E
 17004 = 9A2C			BALL.SPEEDX	= DATAORIGIN+$0010
 17005 = 9A2E			BALL.SPEEDY	= DATAORIGIN+$0012
 17006 = 9A30			BALL.SBD	= DATAORIGIN+$0014
 17007 = 9A32			BALL.BRWHIT	= DATAORIGIN+$0016
 17008 = 9A33			BALL.INPLAY	= DATAORIGIN+$0017
 17009 = 9A34			BALL.LAUNCH	= DATAORIGIN+$0018
 17010 = 9A35			BALL.ONVAUS	= DATAORIGIN+$0019
 17011 = 9A36			BALL.STM	= DATAORIGIN+$001A
 17012
 17013 = A650			@VarData	= BALL
 17014 = 0002			@VarDataSize	= 2
 17015
 17016 89EC			@exit
 17017 					.ifdef @new
 17018 					lda <@VarData
 17019 					sta :ztmp
 17020 					lda >@VarData
 17021 					ldy #@VarDataSize-1
 17022 					jmp @FreeMem
 17023 					els
 17024 89EC 60				rts						; ret
 17025 					eif
 17026 				.endl
 17027
 17028 89ED			.local	TEST_BALL					; PROCEDURE
 17029
 17030 				; optimize OK (service.pas), line = 2878
 17031
 17032 89ED AC 54 A6 84 84 AC + 	mwy BALL :bp2
 17033 89F7 A0 17			ldy #BALL.INPLAY-DATAORIGIN
 17034 89F9 B1 84			lda (:bp2),y
 17035 89FB D0 03 4C E8 8A		jeq l_3239
 17036
 17037 				; optimize OK (service.pas), line = 2880
 17038
 17039 8A00 A0 0E			ldy #BALL.FINESPEED-DATAORIGIN
 17040 8A02 B1 84			lda (:bp2),y
 17041 8A04 18 69 01			add #$01
 17042 8A07 91 84			sta (:bp2),y
 17043 8A09 C8				iny
 17044 8A0A B1 84			lda (:bp2),y
 17045 8A0C 69 00			adc #$00
 17046 8A0E 91 84			sta (:bp2),y
 17047
 17048 				; optimize OK (service.pas), line = 2882
 17049
 17050 8A10 A0 0E			ldy #BALL.FINESPEED-DATAORIGIN
 17051 8A12 B1 84			lda (:bp2),y
 17052 8A14 85 9F			sta :STACKORIGIN+9
 17053 8A16 C8				iny
 17054 8A17 B1 84			lda (:bp2),y
 17055 8A19 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 17056 8A1B AD BF 9B			lda LV
 17057 8A1E 0A				asl @
 17058 8A1F A8				tay
 17059 8A20 B9 8F 10			lda adr.LEVEL,y
 17060 8A23 85 A0			sta :STACKORIGIN+10
 17061 8A25 B9 90 10			lda adr.LEVEL+1,y
 17062 8A28 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 17063 8A2A A0 00			ldy #$00
 17064 8A2C A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 17065 8A2E 10 01			spl
 17066 8A30 88				dey
 17067 8A31 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 17068 8A33 84 BF			sty :STACKORIGIN+STACKWIDTH*2+9
 17069 8A35 84 CF			sty :STACKORIGIN+STACKWIDTH*3+9
 17070 8A37				.LOCAL
 17071 8A37 A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
 17072 8A39 38 E9 00			sub #$00
 17073 8A3C D0 1C			bne L4
 17074 8A3E A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
 17075 8A40 C9 00			cmp #$00
 17076 8A42 D0 0A			bne L1
 17077 8A44 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 17078 8A46 C5 B0			cmp :STACKORIGIN+STACKWIDTH+10
 17079 8A48 D0 04			bne L1
 17080 8A4A A5 9F			lda :STACKORIGIN+9
 17081 8A4C C5 A0			cmp :STACKORIGIN+10
 17082 8A4E F0 10		L1	beq L5
 17083 8A50 B0 04			bcs L3
 17084 8A52 A9 FF			lda #$FF
 17085 8A54 D0 0A			bne L5
 17086 8A56 A9 01		L3	lda #$01
 17087 8A58 D0 06			bne L5
 17088 8A5A 50 04		L4	bvc L5
 17089 8A5C 49 FF			eor #$FF
 17090 8A5E 09 01			ora #$01
 17091 8A60			L5
 17092 					.ENDL
 17093 8A60 30 48			jmi l_324F
 17094 8A62 F0 46			jeq l_324F
 17095
 17096 				; optimize OK (service.pas), line = 2884
 17097
 17098 8A64 A0 0E			ldy #BALL.FINESPEED-DATAORIGIN
 17099 8A66 A9 00			lda #$00
 17100 8A68 91 84			sta (:bp2),y
 17101 8A6A C8				iny
 17102 8A6B 91 84			sta (:bp2),y
 17103
 17104 				; optimize OK (service.pas), line = 2887
 17105
 17106 8A6D A0 0C			ldy #BALL.SPEED-DATAORIGIN
 17107 8A6F B1 84			lda (:bp2),y
 17108 8A71 C8				iny
 17109 8A72 C9 D0			cmp #$D0
 17110 8A74 B1 84			lda (:bp2),y
 17111 8A76 E9 07			sbc #$07
 17112 8A78 50 02			svc
 17113 8A7A 49 80			eor #$80
 17114 8A7C 10 2C			jpl l_3265
 17115
 17116 				; optimize OK (service.pas), line = 2889
 17117
 17118 8A7E A0 0C			ldy #BALL.SPEED-DATAORIGIN
 17119 8A80 B1 84			lda (:bp2),y
 17120 8A82 18 69 0A			add #$0A
 17121 8A85 91 84			sta (:bp2),y
 17122 8A87 C8				iny
 17123 8A88 B1 84			lda (:bp2),y
 17124 8A8A 69 00			adc #$00
 17125 8A8C 91 84			sta (:bp2),y
 17126
 17127 				; optimize OK (service.pas), line = 2890
 17128
 17129 8A8E A0 0C			ldy #BALL.SPEED-DATAORIGIN
 17130 8A90 B1 84			lda (:bp2),y
 17131 8A92 8D 6F A4			sta SET_BALL_SPEED.SPEED
 17132 8A95 C8				iny
 17133 8A96 B1 84			lda (:bp2),y
 17134 8A98 8D 70 A4			sta SET_BALL_SPEED.SPEED+1
 17135 8A9B AD 54 A6			lda BALL
 17136 8A9E 8D 6B A4			sta SET_BALL_SPEED.BALL
 17137 8AA1 AD 55 A6			lda BALL+1
 17138 8AA4 8D 6C A4			sta SET_BALL_SPEED.BALL+1
 17139 8AA7 20 D1 2F			jsr SET_BALL_SPEED
 17140 8AAA			l_3265
 17141 8AAA			l_324F
 17142
 17143 				; optimize OK (service.pas), line = 2894
 17144
 17145 8AAA AC 54 A6 84 84 AC + 	mwy BALL :bp2
 17146 8AB4 A0 14			ldy #BALL.SBD-DATAORIGIN
 17147 8AB6 B1 84			lda (:bp2),y
 17148 8AB8 18 69 01			add #$01
 17149 8ABB 91 84			sta (:bp2),y
 17150 8ABD C8				iny
 17151 8ABE B1 84			lda (:bp2),y
 17152 8AC0 69 00			adc #$00
 17153 8AC2 91 84			sta (:bp2),y
 17154
 17155 				; optimize OK (service.pas), line = 2898
 17156
 17157 8AC4 A0 15			ldy #BALL.SBD-DATAORIGIN+$01
 17158 8AC6 B1 84			lda (:bp2),y
 17159 8AC8 C9 02			cmp #$02
 17160 8ACA D0 05			bne @+
 17161 8ACC 88				dey
 17162 8ACD B1 84			lda (:bp2),y
 17163 8ACF C9 58			cmp #$58
 17164 				@
 17165 8AD1 90 15			jcc l_328D
 17166 				@
 17167 8AD3 A0 00			ldy #$00
 17168 8AD5 B1 84			lda (:bp2),y
 17169 8AD7 10 0F			jpl l_328D
 17170 				@
 17171
 17172 				; optimize OK (service.pas), line = 2899
 17173
 17174 8AD9 AD 54 A6			lda BALL
 17175 8ADC 8D EB A5			sta DEVIATE_BALL.BALL
 17176 8ADF AD 55 A6			lda BALL+1
 17177 8AE2 8D EC A5			sta DEVIATE_BALL.BALL+1
 17178 8AE5 20 99 88			jsr DEVIATE_BALL
 17179 8AE8			l_328D
 17180 8AE8			l_3239
 17181
 17182 				; ------------------------------------------------------------
 17183
 17184 = A654			BALL	= DATAORIGIN+$0C38
 17185 = 9A1C			BALL.X	= DATAORIGIN+$0000
 17186 = 9A1E			BALL.Y	= DATAORIGIN+$0002
 17187 = 9A20			BALL.FINEX	= DATAORIGIN+$0004
 17188 = 9A22			BALL.FINEY	= DATAORIGIN+$0006
 17189 = 9A24			BALL.OLDX	= DATAORIGIN+$0008
 17190 = 9A26			BALL.OLDY	= DATAORIGIN+$000A
 17191 = 9A28			BALL.SPEED	= DATAORIGIN+$000C
 17192 = 9A2A			BALL.FINESPEED	= DATAORIGIN+$000E
 17193 = 9A2C			BALL.SPEEDX	= DATAORIGIN+$0010
 17194 = 9A2E			BALL.SPEEDY	= DATAORIGIN+$0012
 17195 = 9A30			BALL.SBD	= DATAORIGIN+$0014
 17196 = 9A32			BALL.BRWHIT	= DATAORIGIN+$0016
 17197 = 9A33			BALL.INPLAY	= DATAORIGIN+$0017
 17198 = 9A34			BALL.LAUNCH	= DATAORIGIN+$0018
 17199 = 9A35			BALL.ONVAUS	= DATAORIGIN+$0019
 17200 = 9A36			BALL.STM	= DATAORIGIN+$001A
 17201
 17202 = A654			@VarData	= BALL
 17203 = 0002			@VarDataSize	= 2
 17204
 17205 8AE8			@exit
 17206 					.ifdef @new
 17207 					lda <@VarData
 17208 					sta :ztmp
 17209 					lda >@VarData
 17210 					ldy #@VarDataSize-1
 17211 					jmp @FreeMem
 17212 					els
 17213 8AE8 60				rts						; ret
 17214 					eif
 17215 				.endl
 17216 8AE9			l_31EC
 17217
 17218 				; optimize OK (service.pas), line = 2907
 17219
 17220 8AE9 A9 00			lda #$00
 17221 8AEB 8D DA 9B			sta SCRFLUXCNT
 17222
 17223 				; optimize OK (service.pas), line = 2908
 17224
 17225 8AEE 8D D9 9B			sta SCRFLUX
 17226
 17227 				; optimize OK (service.pas), line = 2910
 17228
 17229 8AF1 A9 01			lda #$01
 17230 8AF3 8D D8 9B			sta BALLS_IN_PLAY
 17231
 17232 				; optimize OK (service.pas), line = 2912
 17233
 17234 8AF6 A9 00			lda #$00
 17235 8AF8 8D D6 9B			sta FIRE.AVL
 17236
 17237 				; optimize OK (service.pas), line = 2913
 17238
 17239 8AFB AD F5 9A 8D ED 9A + 	:8 mva adr.NORMAL+# adr.PLAYVAUS+#
 17240
 17241 				; optimize OK (service.pas), line = 2915
 17242
 17243 8B2B A9 FF			lda #$FF
 17244 8B2D 8D D1 9B			sta LETT.LAST
 17245 8B30 8D D2 9B			sta LETT.LAST+1
 17246
 17247 				; optimize OK (service.pas), line = 2916
 17248
 17249 8B33 A9 00			lda #$00
 17250 8B35 8D C8 9B			sta LETT.ACTIVE
 17251
 17252 				; optimize OK (service.pas), line = 2919
 17253
 17254 8B38 AD F6 98			lda PATTERN
 17255 8B3B 8D 5C A5			sta FILL_PICTURE_WITH_PATTERN.PATT
 17256 8B3E AD F7 98			lda PATTERN+1
 17257 8B41 8D 5D A5			sta FILL_PICTURE_WITH_PATTERN.PATT+1
 17258 8B44 20 EE 6C			jsr FILL_PICTURE_WITH_PATTERN
 17259
 17260 				; optimize FAIL ('SHOWBTMPICTURE', service.pas), line = 2922
 17261
 17262 8B47 E8				inx
 17263 8B48 AD D6 98 95 96		mva PLAYSCREEN :STACKORIGIN,x
 17264 8B4D AD D7 98 95 A6		mva PLAYSCREEN+1 :STACKORIGIN+STACKWIDTH,x
 17265 8B52 20 F6 2C			jsr SHOWBTMPICTURE
 17266
 17267 				; optimize OK (service.pas), line = 2926
 17268
 17269 8B55 AC B9 9B			ldy CUR_PLAYER
 17270 8B58 B9 AD 9B			lda adr.SCORE.LIVES,y
 17271 8B5B 8D B0 A5			sta PLOT_LIVES.LIVES
 17272 8B5E A9 00			lda #$00
 17273 8B60 8D B1 A5			sta PLOT_LIVES.LIVES+1
 17274 8B63 20 EC 7B			jsr PLOT_LIVES
 17275
 17276 				; optimize OK (service.pas), line = 2929
 17277
 17278 8B66 AD D6 98			lda PLAYSCREEN
 17279 8B69 8D 55 A4			sta SETPALETTE.BTM
 17280 8B6C AD D7 98			lda PLAYSCREEN+1
 17281 8B6F 8D 56 A4			sta SETPALETTE.BTM+1
 17282 8B72 20 56 2D			jsr SETPALETTE
 17283
 17284 				; optimize OK (service.pas), line = 2932
 17285
 17286 8B75 AD A2 9B			lda adr.SCORE.PLAYER+$04
 17287 8B78 8D A7 A5			sta WRITE_SCORE.SC
 17288 8B7B AD A3 9B			lda adr.SCORE.PLAYER+1+$04
 17289 8B7E 8D A8 A5			sta WRITE_SCORE.SC+1
 17290 8B81 AD A4 9B			lda adr.SCORE.PLAYER+2+$04
 17291 8B84 8D A9 A5			sta WRITE_SCORE.SC+2
 17292 8B87 AD A5 9B			lda adr.SCORE.PLAYER+3+$04
 17293 8B8A 8D AA A5			sta WRITE_SCORE.SC+3
 17294 8B8D A9 FD			lda #$FD
 17295 8B8F 8D A3 A5			sta WRITE_SCORE.PX
 17296 8B92 A9 00			lda #$00
 17297 8B94 8D A4 A5			sta WRITE_SCORE.PX+1
 17298 8B97 A9 3C			lda #$3C
 17299 8B99 8D A5 A5			sta WRITE_SCORE.PY
 17300 8B9C A9 00			lda #$00
 17301 8B9E 8D A6 A5			sta WRITE_SCORE.PY+1
 17302 8BA1 20 8E 78			jsr WRITE_SCORE
 17303
 17304 				; optimize OK (service.pas), line = 2933
 17305
 17306 8BA4 AD A6 9B			lda adr.SCORE.PLAYER+$08
 17307 8BA7 8D A7 A5			sta WRITE_SCORE.SC
 17308 8BAA AD A7 9B			lda adr.SCORE.PLAYER+1+$08
 17309 8BAD 8D A8 A5			sta WRITE_SCORE.SC+1
 17310 8BB0 AD A8 9B			lda adr.SCORE.PLAYER+2+$08
 17311 8BB3 8D A9 A5			sta WRITE_SCORE.SC+2
 17312 8BB6 AD A9 9B			lda adr.SCORE.PLAYER+3+$08
 17313 8BB9 8D AA A5			sta WRITE_SCORE.SC+3
 17314 8BBC A9 FD			lda #$FD
 17315 8BBE 8D A3 A5			sta WRITE_SCORE.PX
 17316 8BC1 A9 00			lda #$00
 17317 8BC3 8D A4 A5			sta WRITE_SCORE.PX+1
 17318 8BC6 A9 5D			lda #$5D
 17319 8BC8 8D A5 A5			sta WRITE_SCORE.PY
 17320 8BCB A9 00			lda #$00
 17321 8BCD 8D A6 A5			sta WRITE_SCORE.PY+1
 17322 8BD0 20 8E 78			jsr WRITE_SCORE
 17323
 17324 				; optimize OK (service.pas), line = 2934
 17325
 17326 8BD3 A9 FD			lda #$FD
 17327 8BD5 8D A3 A5			sta WRITE_SCORE.PX
 17328 8BD8 A9 00			lda #$00
 17329 8BDA 8D A4 A5			sta WRITE_SCORE.PX+1
 17330 8BDD A9 80			lda #$80
 17331 8BDF 8D A5 A5			sta WRITE_SCORE.PY
 17332 8BE2 A9 00			lda #$00
 17333 8BE4 8D A6 A5			sta WRITE_SCORE.PY+1
 17334 8BE7 AD B0 9B			lda SCORE.HISCORE
 17335 8BEA 8D A7 A5			sta WRITE_SCORE.SC
 17336 8BED AD B1 9B			lda SCORE.HISCORE+1
 17337 8BF0 8D A8 A5			sta WRITE_SCORE.SC+1
 17338 8BF3 AD B2 9B			lda SCORE.HISCORE+2
 17339 8BF6 8D A9 A5			sta WRITE_SCORE.SC+2
 17340 8BF9 AD B3 9B			lda SCORE.HISCORE+3
 17341 8BFC 8D AA A5			sta WRITE_SCORE.SC+3
 17342 8BFF 20 8E 78			jsr WRITE_SCORE
 17343
 17344 				; optimize FAIL ('PUT_WALL', service.pas), line = 2937
 17345
 17346 8C02 20 E9 4B			jsr PUT_WALL
 17347
 17348 				; optimize FAIL ('MOUSERESET', service.pas), line = 2941
 17349
 17350 8C05 20 A6 24			jsr MOUSERESET
 17351
 17352 				; optimize OK (service.pas), line = 2944
 17353
 17354 8C08 A9 01			lda #$01
 17355 8C0A 8D 16 A6			sta BALL0.INPLAY
 17356
 17357 				; optimize OK (service.pas), line = 2945
 17358
 17359 8C0D 8D 17 A6			sta BALL0.LAUNCH
 17360
 17361 				; optimize OK (service.pas), line = 2948
 17362
 17363 8C10 A9 6F			lda #$6F
 17364 8C12 8D FF A5			sta BALL0.X
 17365 8C15 A9 00			lda #$00
 17366 8C17 8D 00 A6			sta BALL0.X+1
 17367
 17368 				; optimize OK (service.pas), line = 2949
 17369
 17370 8C1A A9 B5			lda #$B5
 17371 8C1C 8D 01 A6			sta BALL0.Y
 17372 8C1F A9 00			lda #$00
 17373 8C21 8D 02 A6			sta BALL0.Y+1
 17374
 17375 				; optimize OK (service.pas), line = 2952
 17376
 17377 8C24 A9 FF			lda #$FF
 17378 8C26 8D 07 A6			sta BALL0.OLDX
 17379 8C29 8D 08 A6			sta BALL0.OLDX+1
 17380
 17381 				; optimize OK (service.pas), line = 2953
 17382
 17383 8C2C 8D 09 A6			sta BALL0.OLDY
 17384 8C2F 8D 0A A6			sta BALL0.OLDY+1
 17385
 17386 				; optimize OK (service.pas), line = 2956
 17387
 17388 8C32 A9 00			lda #$00
 17389 8C34 8D 13 A6			sta BALL0.SBD
 17390 8C37 8D 14 A6			sta BALL0.SBD+1
 17391
 17392 				; optimize OK (service.pas), line = 2960
 17393
 17394 8C3A A9 10			lda #$10
 17395 8C3C 8D 18 A6			sta BALL0.ONVAUS
 17396
 17397 				; optimize OK (service.pas), line = 2965
 17398
 17399 8C3F A9 00			lda #$00
 17400 8C41 8D 19 A6			sta BALL0.STM
 17401
 17402 				; optimize OK (service.pas), line = 2969
 17403
 17404 8C44 A9 E8			lda #$E8
 17405 8C46 8D 62 9A			sta SYSTEM.RANDOM.@010184000.RANGE
 17406 8C49 A9 03			lda #$03
 17407 8C4B 8D 63 9A			sta SYSTEM.RANDOM.@010184000.RANGE+1
 17408 8C4E 20 0A 24			jsr SYSTEM.RANDOM.@010184000
 17409 8C51 AD 64 9A			lda SYSTEM.RANDOM.@010184000.RESULT
 17410 8C54 8D C9 9B			sta LETT.INCOMING
 17411 8C57 AD 65 9A			lda SYSTEM.RANDOM.@010184000.RESULT+1
 17412 8C5A 8D CA 9B			sta LETT.INCOMING+1
 17413
 17414 				; optimize FAIL ('CREATE_VAUS', service.pas), line = 2972
 17415
 17416 8C5D 20 7F 72			jsr CREATE_VAUS
 17417
 17418 				; optimize FAIL ('WRITE_ROUND_LEVEL', service.pas), line = 2975
 17419
 17420 8C60 20 CE 6E			jsr WRITE_ROUND_LEVEL
 17421
 17422 				; optimize FAIL ('SET_VAUS', service.pas), line = 2977
 17423
 17424 8C63 20 98 3C			jsr SET_VAUS
 17425
 17426 				; optimize FAIL ('START_VAUS', service.pas), line = 2978
 17427
 17428 8C66 20 D5 3C			jsr START_VAUS
 17429
 17430 				; optimize OK (service.pas), line = 2979
 17431
 17432 8C69 AD 5D 9B			lda VAUS.X
 17433 8C6C 8D BC A4			sta MOVE_VAUS.X
 17434 8C6F A9 00			lda #$00
 17435 8C71 8D BD A4			sta MOVE_VAUS.X+1
 17436 8C74 A9 B8			lda #$B8
 17437 8C76 8D BE A4			sta MOVE_VAUS.Y
 17438 8C79 A9 00			lda #$00
 17439 8C7B 8D BF A4			sta MOVE_VAUS.Y+1
 17440 8C7E 20 F2 3F			jsr MOVE_VAUS
 17441
 17442 				; optimize FAIL ('START_LEVEL', service.pas), line = 2980
 17443
 17444 8C81 20 A3 24			jsr START_LEVEL
 17445
 17446 				; optimize FAIL ('START_VAUS', service.pas), line = 2981
 17447
 17448 8C84 20 D5 3C			jsr START_VAUS
 17449
 17450 				; optimize FAIL ('REMOVE_ROUND_LEVEL', service.pas), line = 2982
 17451
 17452 8C87 20 CF 6E			jsr REMOVE_ROUND_LEVEL
 17453
 17454 				; optimize OK (service.pas), line = 2983
 17455
 17456 8C8A AD 9A 91			lda BALL0
 17457 8C8D 8D 67 A4			sta SET_BALL.BALL
 17458 8C90 AD 9B 91			lda BALL0+1
 17459 8C93 8D 68 A4			sta SET_BALL.BALL+1
 17460 8C96 20 EC 2E			jsr SET_BALL
 17461
 17462 				; optimize OK (service.pas), line = 2990
 17463
 17464 8C99 A9 0F			lda #$0F
 17465 8C9B 20 F3 23			jsr SYSTEM.RANDOM.@010180000
 17466 8C9E E8				inx
 17467 8C9F E8				inx
 17468 8CA0 AD 61 9A			lda SYSTEM.RANDOM.@010180000.RESULT
 17469 8CA3 18 69 3C			add #$3C
 17470 8CA6 95 95			sta :STACKORIGIN-1,x
 17471 8CA8 A9 00			lda #$00
 17472 8CAA 69 00			adc #$00
 17473 8CAC 95 A5			sta :STACKORIGIN-1+STACKWIDTH,x
 17474 8CAE AD 9A 91			lda BALL0
 17475 8CB1 8D 79 A4			sta SET_BALL_DIRECTION.BALL
 17476 8CB4 AD 9B 91			lda BALL0+1
 17477 8CB7 8D 7A A4			sta SET_BALL_DIRECTION.BALL+1
 17478 8CBA CA				dex
 17479 8CBB B5 96			lda :STACKORIGIN,x
 17480 8CBD 8D 7D A4			sta SET_BALL_DIRECTION.ANGLE
 17481 8CC0 B5 A6			lda :STACKORIGIN+STACKWIDTH,x
 17482 8CC2 8D 7E A4			sta SET_BALL_DIRECTION.ANGLE+1
 17483 8CC5 CA				dex
 17484 8CC6 20 E1 31			jsr SET_BALL_DIRECTION
 17485
 17486 				; optimize OK (service.pas), line = 2992
 17487
 17488 8CC9 AD 9A 91			lda BALL0
 17489 8CCC 8D 6B A4			sta SET_BALL_SPEED.BALL
 17490 8CCF AD 9B 91			lda BALL0+1
 17491 8CD2 8D 6C A4			sta SET_BALL_SPEED.BALL+1
 17492 8CD5 A9 F4			lda #$F4
 17493 8CD7 8D 6F A4			sta SET_BALL_SPEED.SPEED
 17494 8CDA A9 01			lda #$01
 17495 8CDC 8D 70 A4			sta SET_BALL_SPEED.SPEED+1
 17496 8CDF 20 D1 2F			jsr SET_BALL_SPEED
 17497
 17498 				; optimize OK (service.pas), line = 2995
 17499
 17500 8CE2 A9 00			lda #$00
 17501 8CE4 8D 0D A6			sta BALL0.FINESPEED
 17502 8CE7 8D 0E A6			sta BALL0.FINESPEED+1
 17503
 17504 				; optimize OK (service.pas), line = 2997
 17505
 17506 8CEA 8D 31 A6			sta BALL1.INPLAY
 17507
 17508 				; optimize OK (service.pas), line = 2998
 17509
 17510 8CED 8D 4C A6			sta BALL2.INPLAY
 17511
 17512 				; --- WhileProlog
 17513 8CF0 4C 78 91			jmp l_3323
 17514 8CF3			l_3324
 17515
 17516 				; optimize FAIL ('WAIT_VBL', service.pas), line = 3002
 17517
 17518 8CF3 20 E8 2E			jsr WAIT_VBL
 17519
 17520 				; optimize OK (service.pas), line = 3011
 17521
 17522 8CF6 AD FF A5			lda BALL0.X
 17523 8CF9 8D C4 9A			sta MOUS.X
 17524 8CFC AD 00 A6			lda BALL0.X+1
 17525 8CFF 8D C5 9A			sta MOUS.X+1
 17526
 17527 				; optimize OK (service.pas), line = 3013
 17528
 17529 8D02 A9 F2			lda <X
 17530 8D04 8D D1 9A			sta MOUSECOORDS.X
 17531 8D07 A9 A5			lda >X
 17532 8D09 8D D2 9A			sta MOUSECOORDS.X+1
 17533 8D0C A9 F4			lda <Y
 17534 8D0E 8D D3 9A			sta MOUSECOORDS.Y
 17535 8D11 A9 A5			lda >Y
 17536 8D13 8D D4 9A			sta MOUSECOORDS.Y+1
 17537 8D16 20 BF 24			jsr MOUSECOORDS
 17538
 17539 				; optimize OK (service.pas), line = 3018
 17540
 17541 8D19 AD C1 9B			lda TRAINER
 17542 8D1C D0 19			jne l_333F
 17543 8D1E AD F2 A5			lda X
 17544 8D21 8D BC A4			sta MOVE_VAUS.X
 17545 8D24 AD F3 A5			lda X+1
 17546 8D27 8D BD A4			sta MOVE_VAUS.X+1
 17547 8D2A A9 B8			lda #$B8
 17548 8D2C 8D BE A4			sta MOVE_VAUS.Y
 17549 8D2F A9 00			lda #$00
 17550 8D31 8D BF A4			sta MOVE_VAUS.Y+1
 17551 8D34 4C A0 8D			jmp l_334D
 17552 8D37			l_333F
 17553
 17554 				; optimize OK (service.pas), line = 3024
 17555
 17556 8D37 AD C1 9B			lda TRAINER
 17557 8D3A C9 01			cmp #$01
 17558 8D3C D0 65			jne l_335F
 17559
 17560 				; optimize FAIL (1, service.pas), line = 3025
 17561
 17562 8D3E E8				inx
 17563 8D3F A9 B8 95 96			mva #$B8 :STACKORIGIN,x
 17564 8D43 A9 00 95 A6			mva #$00 :STACKORIGIN+STACKWIDTH,x
 17565 8D47 E8				inx
 17566 8D48 A9 0A 95 96			mva #$0A :STACKORIGIN,x
 17567 8D4C A9 00 95 A6			mva #$00 :STACKORIGIN+STACKWIDTH,x
 17568 8D50 AD FF A5			lda BALL0.X
 17569 8D53 38 ED 18 A6			sub BALL0.ONVAUS
 17570 8D57 8D 11 A4			sta MAX.A
 17571 8D5A AD 00 A6			lda BALL0.X+1
 17572 8D5D E9 00			sbc #$00
 17573 8D5F 8D 12 A4			sta MAX.A+1
 17574 8D62 B5 96			lda :STACKORIGIN,x
 17575 8D64 8D 13 A4			sta MAX.B
 17576 8D67 B5 A6			lda :STACKORIGIN+STACKWIDTH,x
 17577 8D69 8D 14 A4			sta MAX.B+1
 17578 8D6C CA				dex
 17579 8D6D 20 9E 26			jsr MAX
 17580 8D70 A9 B8			lda #$B8
 17581 8D72 8D 17 A4			sta MIN.A
 17582 8D75 A9 00			lda #$00
 17583 8D77 8D 18 A4			sta MIN.A+1
 17584 8D7A AD 15 A4			lda MAX.RESULT
 17585 8D7D 8D 19 A4			sta MIN.B
 17586 8D80 AD 16 A4			lda MAX.RESULT+1
 17587 8D83 8D 1A A4			sta MIN.B+1
 17588 8D86 20 C9 26			jsr MIN
 17589 8D89 AD 1B A4			lda MIN.RESULT
 17590 8D8C 8D BC A4			sta MOVE_VAUS.X
 17591 8D8F AD 1C A4			lda MIN.RESULT+1
 17592 8D92 8D BD A4			sta MOVE_VAUS.X+1
 17593 8D95 B5 96			lda :STACKORIGIN,x
 17594 8D97 8D BE A4			sta MOVE_VAUS.Y
 17595 8D9A B5 A6			lda :STACKORIGIN+STACKWIDTH,x
 17596 8D9C 8D BF A4			sta MOVE_VAUS.Y+1
 17597 8D9F CA				dex
 17598 8DA0			l_334D
 17599 8DA0 20 F2 3F			jsr MOVE_VAUS
 17600 8DA3			l_335F
 17601
 17602 				; optimize OK (service.pas), line = 3030
 17603
 17604 8DA3 AD 17 A6			lda BALL0.LAUNCH
 17605 8DA6 C9 01			cmp #$01
 17606 8DA8 D0 35			jne l_3382
 17607
 17608 				; optimize FAIL (0, service.pas), line = 3032
 17609
 17610 8DAA EE 19 A6			inc BALL0.STM
 17611
 17612 				; optimize OK (service.pas), line = 3037
 17613
 17614 8DAD AD 19 A6			lda BALL0.STM
 17615 8DB0 C9 FA			cmp #$FA
 17616 8DB2 D0 05			jne l_3399
 17617 8DB4 A9 00			lda #$00
 17618 8DB6 8D 17 A6			sta BALL0.LAUNCH
 17619 8DB9			l_3399
 17620
 17621 				; optimize OK (service.pas), line = 3040
 17622
 17623 8DB9 AD 9A 91			lda BALL0
 17624 8DBC 8D 8B A4			sta START_BALL.BALL
 17625 8DBF AD 9B 91			lda BALL0+1
 17626 8DC2 8D 8C A4			sta START_BALL.BALL+1
 17627 8DC5 20 27 35			jsr START_BALL
 17628
 17629 				; optimize FAIL ('MOUSECLICK', service.pas), line = 3043
 17630
 17631 8DC8 20 A7 24			jsr MOUSECLICK
 17632 8DCB AD D0 9A			lda MOUSECLICK.RESULT+1
 17633 8DCE D0 05			bne @+
 17634 8DD0 AD CF 9A			lda MOUSECLICK.RESULT
 17635 8DD3 C9 01			cmp #$01
 17636 				@
 17637 8DD5 D0 05			jne l_33B3
 17638 8DD7 A9 00			lda #$00
 17639 8DD9 8D 17 A6			sta BALL0.LAUNCH
 17640 8DDC			l_33B3
 17641 8DDC 4C F3 8D			jmp l_33C3
 17642 8DDF			l_3382
 17643
 17644 				; optimize OK (service.pas), line = 3051
 17645
 17646 8DDF AD 16 A6			lda BALL0.INPLAY
 17647 8DE2 F0 0F			jeq l_33CF
 17648 8DE4 AD 9A 91			lda BALL0
 17649 8DE7 8D AC A4			sta MOVE_BALL.BALL
 17650 8DEA AD 9B 91			lda BALL0+1
 17651 8DED 8D AD A4			sta MOVE_BALL.BALL+1
 17652 8DF0 20 64 36			jsr MOVE_BALL
 17653 8DF3			l_33CF
 17654 8DF3			l_33C3
 17655
 17656 				; optimize OK (service.pas), line = 3052
 17657
 17658 8DF3 AD 31 A6			lda BALL1.INPLAY
 17659 8DF6 F0 0F			jeq l_33E1
 17660 8DF8 AD 9C 91			lda BALL1
 17661 8DFB 8D AC A4			sta MOVE_BALL.BALL
 17662 8DFE AD 9D 91			lda BALL1+1
 17663 8E01 8D AD A4			sta MOVE_BALL.BALL+1
 17664 8E04 20 64 36			jsr MOVE_BALL
 17665 8E07			l_33E1
 17666
 17667 				; optimize OK (service.pas), line = 3053
 17668
 17669 8E07 AD 4C A6			lda BALL2.INPLAY
 17670 8E0A F0 0F			jeq l_33F3
 17671 8E0C AD 9E 91			lda BALL2
 17672 8E0F 8D AC A4			sta MOVE_BALL.BALL
 17673 8E12 AD 9F 91			lda BALL2+1
 17674 8E15 8D AD A4			sta MOVE_BALL.BALL+1
 17675 8E18 20 64 36			jsr MOVE_BALL
 17676 8E1B			l_33F3
 17677
 17678 				; optimize OK (service.pas), line = 3059
 17679
 17680 8E1B AD 9A 91			lda BALL0
 17681 8E1E 8D 50 A6			sta CHECK_BALL.BALL
 17682 8E21 AD 9B 91			lda BALL0+1
 17683 8E24 8D 51 A6			sta CHECK_BALL.BALL+1
 17684 8E27 20 77 89			jsr CHECK_BALL
 17685
 17686 				; optimize OK (service.pas), line = 3060
 17687
 17688 8E2A AD 9C 91			lda BALL1
 17689 8E2D 8D 50 A6			sta CHECK_BALL.BALL
 17690 8E30 AD 9D 91			lda BALL1+1
 17691 8E33 8D 51 A6			sta CHECK_BALL.BALL+1
 17692 8E36 20 77 89			jsr CHECK_BALL
 17693
 17694 				; optimize OK (service.pas), line = 3061
 17695
 17696 8E39 AD 9E 91			lda BALL2
 17697 8E3C 8D 50 A6			sta CHECK_BALL.BALL
 17698 8E3F AD 9F 91			lda BALL2+1
 17699 8E42 8D 51 A6			sta CHECK_BALL.BALL+1
 17700 8E45 20 77 89			jsr CHECK_BALL
 17701
 17702 				; optimize FAIL ('CHECKSHINE', service.pas), line = 3076
 17703
 17704 8E48 20 40 29			jsr CHECKSHINE
 17705
 17706 				; optimize FAIL ('CHECK_LETTER', service.pas), line = 3077
 17707
 17708 8E4B 20 BF 2B			jsr CHECK_LETTER
 17709
 17710 				; optimize OK (service.pas), line = 3078
 17711
 17712 8E4E AD 9A 91			lda BALL0
 17713 8E51 8D DC A5			sta CHECK_BONUS_TYPE.B1
 17714 8E54 AD 9B 91			lda BALL0+1
 17715 8E57 8D DD A5			sta CHECK_BONUS_TYPE.B1+1
 17716 8E5A AD 9C 91			lda BALL1
 17717 8E5D 8D E0 A5			sta CHECK_BONUS_TYPE.B2
 17718 8E60 AD 9D 91			lda BALL1+1
 17719 8E63 8D E1 A5			sta CHECK_BONUS_TYPE.B2+1
 17720 8E66 AD 9E 91			lda BALL2
 17721 8E69 8D E4 A5			sta CHECK_BONUS_TYPE.B3
 17722 8E6C AD 9F 91			lda BALL2+1
 17723 8E6F 8D E5 A5			sta CHECK_BONUS_TYPE.B3+1
 17724 8E72 20 5D 85			jsr CHECK_BONUS_TYPE
 17725
 17726 				; optimize FAIL ('CHECK_FIRE', service.pas), line = 3079
 17727
 17728 8E75 20 75 80			jsr CHECK_FIRE
 17729
 17730 				; optimize FAIL ('CHECK_FLUX', service.pas), line = 3080
 17731
 17732 8E78 20 3E 83			jsr CHECK_FLUX
 17733
 17734 				; optimize OK (service.pas), line = 3082
 17735
 17736 8E7B AD 5D 9B			lda VAUS.X
 17737 8E7E 18 6D 65 9B			add VAUS.WIDTH
 17738 8E82 85 9F			sta :STACKORIGIN+9
 17739 8E84 A9 00			lda #$00
 17740 8E86 69 00			adc #$00
 17741 8E88 A0 01			ldy #1
 17742 8E8A C9 00			cmp #$00
 17743 8E8C D0 04			bne @+
 17744 8E8E A5 9F			lda :STACKORIGIN+9
 17745 8E90 C9 D7			cmp #$D7
 17746 				@
 17747 8E92 F0 01			beq @+
 17748 8E94 88				dey
 17749 				@
 17750 8E95 98				tya
 17751 8E96 2D D9 9B			and SCRFLUX
 17752 8E99 F0 03			jeq l_342B
 17753 8E9B 20 FF 83			jsr VAUS_OUT
 17754 8E9E			l_342B
 17755
 17756 				; optimize OK (service.pas), line = 3084
 17757
 17758 8E9E AD 69 9B			lda VAUS.LETTER
 17759 8EA1 C9 04			cmp #$04
 17760 8EA3 F0 03 4C E8 8F		jne l_3441
 17761
 17762 				; optimize OK (service.pas), line = 3086
 17763
 17764 8EA8 A9 03			lda #$03
 17765 8EAA 8D D8 9B			sta BALLS_IN_PLAY
 17766
 17767 				; optimize OK (service.pas), line = 3088
 17768
 17769 8EAD AC 9C 91 84 84 AC + 	mwy BALL1 :bp2
 17770 8EB7 A0 1A			ldy #$1A
 17771 8EB9 B9 FF A5 91 84 88 + 	mva:rpl adr.BALL0,y (:bp2),y-
 17772
 17773 				; optimize OK (service.pas), line = 3089
 17774
 17775 8EC1 AC 9E 91 84 84 AC + 	mwy BALL2 :bp2
 17776 8ECB A0 1A			ldy #$1A
 17777 8ECD B9 FF A5 91 84 88 + 	mva:rpl adr.BALL0,y (:bp2),y-
 17778
 17779 				; optimize OK (service.pas), line = 3091
 17780
 17781 8ED5 AD 9A 91			lda BALL0
 17782 8ED8 8D 83 A4			sta GET_BALL_DIRECTION.BALL
 17783 8EDB AD 9B 91			lda BALL0+1
 17784 8EDE 8D 84 A4			sta GET_BALL_DIRECTION.BALL+1
 17785 8EE1 20 6C 33			jsr GET_BALL_DIRECTION
 17786 8EE4 E8				inx
 17787 8EE5 E8				inx
 17788 8EE6 A9 5A			lda #$5A
 17789 8EE8 85 8E			sta @SMALLINT.DIV.B
 17790 8EEA A9 00			lda #$00
 17791 8EEC 85 8F			sta @SMALLINT.DIV.B+1
 17792 8EEE AD 87 A4			lda GET_BALL_DIRECTION.RESULT
 17793 8EF1 85 86			sta @SMALLINT.DIV.A
 17794 8EF3 AD 88 A4			lda GET_BALL_DIRECTION.RESULT+1
 17795 8EF6 85 87			sta @SMALLINT.DIV.A+1
 17796 8EF8 20 22 12			jsr @SMALLINT.DIV
 17797 8EFB CA				dex
 17798 8EFC A5 86			lda :eax
 17799 8EFE 8D F8 A5			sta T1
 17800 8F01 A5 87			lda :eax+1
 17801 8F03 8D F9 A5			sta T1+1
 17802 8F06 CA				dex
 17803
 17804 				; optimize OK (service.pas), line = 3093
 17805
 17806 8F07 AD 0B A6			lda BALL0.SPEED
 17807 8F0A 8D FA A5			sta T2
 17808 8F0D AD 0C A6			lda BALL0.SPEED+1
 17809 8F10 8D FB A5			sta T2+1
 17810
 17811 				; optimize OK (service.pas), line = 3100
 17812
 17813 8F13 A9 5A			lda #$5A
 17814 8F15 85 8E			sta :ecx
 17815 8F17 A9 00			lda #$00
 17816 8F19 85 8F			sta :ecx+1
 17817 8F1B AD F8 A5			lda T1
 17818 8F1E 85 86			sta :eax
 17819 8F20 AD F9 A5			lda T1+1
 17820 8F23 85 87			sta :eax+1
 17821 					.ifdef fmulinit
 17822 					fmulu_16
 17823 					els
 17824 8F25 20 FA 12			imulCX
 17825 					eif
 17826 8F28 A5 86			lda :eax
 17827 8F2A 8D FC A5			sta HLP
 17828 8F2D A5 87			lda :eax+1
 17829 8F2F 8D FD A5			sta HLP+1
 17830
 17831 				; optimize OK (service.pas), line = 3102
 17832
 17833 8F32 AD FC A5			lda HLP
 17834 8F35 18 69 1E			add #$1E
 17835 8F38 8D 7D A4			sta SET_BALL_DIRECTION.ANGLE
 17836 8F3B AD FD A5			lda HLP+1
 17837 8F3E 69 00			adc #$00
 17838 8F40 8D 7E A4			sta SET_BALL_DIRECTION.ANGLE+1
 17839 8F43 AD 9A 91			lda BALL0
 17840 8F46 8D 79 A4			sta SET_BALL_DIRECTION.BALL
 17841 8F49 AD 9B 91			lda BALL0+1
 17842 8F4C 8D 7A A4			sta SET_BALL_DIRECTION.BALL+1
 17843 8F4F 20 E1 31			jsr SET_BALL_DIRECTION
 17844
 17845 				; optimize OK (service.pas), line = 3103
 17846
 17847 8F52 AD FC A5			lda HLP
 17848 8F55 18 69 2D			add #$2D
 17849 8F58 8D 7D A4			sta SET_BALL_DIRECTION.ANGLE
 17850 8F5B AD FD A5			lda HLP+1
 17851 8F5E 69 00			adc #$00
 17852 8F60 8D 7E A4			sta SET_BALL_DIRECTION.ANGLE+1
 17853 8F63 AD 9C 91			lda BALL1
 17854 8F66 8D 79 A4			sta SET_BALL_DIRECTION.BALL
 17855 8F69 AD 9D 91			lda BALL1+1
 17856 8F6C 8D 7A A4			sta SET_BALL_DIRECTION.BALL+1
 17857 8F6F 20 E1 31			jsr SET_BALL_DIRECTION
 17858
 17859 				; optimize OK (service.pas), line = 3104
 17860
 17861 8F72 AD FC A5			lda HLP
 17862 8F75 18 69 3C			add #$3C
 17863 8F78 8D 7D A4			sta SET_BALL_DIRECTION.ANGLE
 17864 8F7B AD FD A5			lda HLP+1
 17865 8F7E 69 00			adc #$00
 17866 8F80 8D 7E A4			sta SET_BALL_DIRECTION.ANGLE+1
 17867 8F83 AD 9E 91			lda BALL2
 17868 8F86 8D 79 A4			sta SET_BALL_DIRECTION.BALL
 17869 8F89 AD 9F 91			lda BALL2+1
 17870 8F8C 8D 7A A4			sta SET_BALL_DIRECTION.BALL+1
 17871 8F8F 20 E1 31			jsr SET_BALL_DIRECTION
 17872
 17873 				; optimize OK (service.pas), line = 3108
 17874
 17875 8F92 AD 9A 91			lda BALL0
 17876 8F95 8D 6B A4			sta SET_BALL_SPEED.BALL
 17877 8F98 AD 9B 91			lda BALL0+1
 17878 8F9B 8D 6C A4			sta SET_BALL_SPEED.BALL+1
 17879 8F9E AD FA A5			lda T2
 17880 8FA1 8D 6F A4			sta SET_BALL_SPEED.SPEED
 17881 8FA4 AD FB A5			lda T2+1
 17882 8FA7 8D 70 A4			sta SET_BALL_SPEED.SPEED+1
 17883 8FAA 20 D1 2F			jsr SET_BALL_SPEED
 17884
 17885 				; optimize OK (service.pas), line = 3109
 17886
 17887 8FAD AD 9C 91			lda BALL1
 17888 8FB0 8D 6B A4			sta SET_BALL_SPEED.BALL
 17889 8FB3 AD 9D 91			lda BALL1+1
 17890 8FB6 8D 6C A4			sta SET_BALL_SPEED.BALL+1
 17891 8FB9 AD FA A5			lda T2
 17892 8FBC 8D 6F A4			sta SET_BALL_SPEED.SPEED
 17893 8FBF AD FB A5			lda T2+1
 17894 8FC2 8D 70 A4			sta SET_BALL_SPEED.SPEED+1
 17895 8FC5 20 D1 2F			jsr SET_BALL_SPEED
 17896
 17897 				; optimize OK (service.pas), line = 3110
 17898
 17899 8FC8 AD 9E 91			lda BALL2
 17900 8FCB 8D 6B A4			sta SET_BALL_SPEED.BALL
 17901 8FCE AD 9F 91			lda BALL2+1
 17902 8FD1 8D 6C A4			sta SET_BALL_SPEED.BALL+1
 17903 8FD4 AD FA A5			lda T2
 17904 8FD7 8D 6F A4			sta SET_BALL_SPEED.SPEED
 17905 8FDA AD FB A5			lda T2+1
 17906 8FDD 8D 70 A4			sta SET_BALL_SPEED.SPEED+1
 17907 8FE0 20 D1 2F			jsr SET_BALL_SPEED
 17908
 17909 				; optimize OK (service.pas), line = 3112
 17910
 17911 8FE3 A9 00			lda #$00
 17912 8FE5 8D 69 9B			sta VAUS.LETTER
 17913 8FE8			l_3441
 17914
 17915 				; optimize OK (service.pas), line = 3116
 17916
 17917 8FE8 AD D8 9B			lda BALLS_IN_PLAY
 17918 8FEB C9 02			cmp #$02
 17919 8FED 90 08			jcc l_34A4
 17920 8FEF A9 00			lda #$00
 17921 8FF1 8D C9 9B			sta LETT.INCOMING
 17922 8FF4 8D CA 9B			sta LETT.INCOMING+1
 17923 8FF7			l_34A4
 17924
 17925 				; optimize OK (service.pas), line = 3119
 17926
 17927 8FF7 AD B9 9B			lda CUR_PLAYER
 17928 8FFA 0A				asl @
 17929 8FFB 0A				asl @
 17930 8FFC A8				tay
 17931 8FFD B9 9E 9B			lda adr.SCORE.PLAYER,y
 17932 9000 8D A7 A5			sta WRITE_SCORE.SC
 17933 9003 B9 9F 9B			lda adr.SCORE.PLAYER+1,y
 17934 9006 8D A8 A5			sta WRITE_SCORE.SC+1
 17935 9009 B9 A0 9B			lda adr.SCORE.PLAYER+2,y
 17936 900C 8D A9 A5			sta WRITE_SCORE.SC+2
 17937 900F B9 A1 9B			lda adr.SCORE.PLAYER+3,y
 17938 9012 8D AA A5			sta WRITE_SCORE.SC+3
 17939 9015 AC B9 9B			ldy CUR_PLAYER
 17940 9018 B9 80 10			lda adr.POS_DIGIT,y
 17941 901B 8D A5 A5			sta WRITE_SCORE.PY
 17942 901E A9 FD			lda #$FD
 17943 9020 8D A3 A5			sta WRITE_SCORE.PX
 17944 9023 A9 00			lda #$00
 17945 9025 8D A4 A5			sta WRITE_SCORE.PX+1
 17946 9028 8D A6 A5			sta WRITE_SCORE.PY+1
 17947 902B 20 8E 78			jsr WRITE_SCORE
 17948
 17949 				; optimize OK (service.pas), line = 3122
 17950
 17951 902E AD B9 9B			lda CUR_PLAYER
 17952 9031 0A				asl @
 17953 9032 0A				asl @
 17954 9033 A8				tay
 17955 9034				.LOCAL
 17956 9034 B9 A1 9B			lda adr.SCORE.PLAYER+3,y
 17957 9037 38 ED B3 9B			sub SCORE.HISCORE+3
 17958 903B D0 22			bne L4
 17959 903D B9 A0 9B			lda adr.SCORE.PLAYER+2,y
 17960 9040 CD B2 9B			cmp SCORE.HISCORE+2
 17961 9043 D0 0E			bne L1
 17962 9045 B9 9F 9B			lda adr.SCORE.PLAYER+1,y
 17963 9048 CD B1 9B			cmp SCORE.HISCORE+1
 17964 904B D0 06			bne L1
 17965 904D B9 9E 9B			lda adr.SCORE.PLAYER,y
 17966 9050 CD B0 9B			cmp SCORE.HISCORE
 17967 9053 F0 10		L1	beq L5
 17968 9055 B0 04			bcs L3
 17969 9057 A9 FF			lda #$FF
 17970 9059 D0 0A			bne L5
 17971 905B A9 01		L3	lda #$01
 17972 905D D0 06			bne L5
 17973 905F 50 04		L4	bvc L5
 17974 9061 49 FF			eor #$FF
 17975 9063 09 01			ora #$01
 17976 9065			L5
 17977 					.ENDL
 17978 9065 30 49			jmi l_34CA
 17979 9067 F0 47			jeq l_34CA
 17980
 17981 				; optimize OK (service.pas), line = 3125
 17982
 17983 9069 B9 9E 9B			lda adr.SCORE.PLAYER,y
 17984 906C 8D B0 9B			sta SCORE.HISCORE
 17985 906F B9 9F 9B			lda adr.SCORE.PLAYER+1,y
 17986 9072 8D B1 9B			sta SCORE.HISCORE+1
 17987 9075 B9 A0 9B			lda adr.SCORE.PLAYER+2,y
 17988 9078 8D B2 9B			sta SCORE.HISCORE+2
 17989 907B B9 A1 9B			lda adr.SCORE.PLAYER+3,y
 17990 907E 8D B3 9B			sta SCORE.HISCORE+3
 17991
 17992 				; optimize OK (service.pas), line = 3127
 17993
 17994 9081 A9 FD			lda #$FD
 17995 9083 8D A3 A5			sta WRITE_SCORE.PX
 17996 9086 A9 00			lda #$00
 17997 9088 8D A4 A5			sta WRITE_SCORE.PX+1
 17998 908B A9 80			lda #$80
 17999 908D 8D A5 A5			sta WRITE_SCORE.PY
 18000 9090 A9 00			lda #$00
 18001 9092 8D A6 A5			sta WRITE_SCORE.PY+1
 18002 9095 AD B0 9B			lda SCORE.HISCORE
 18003 9098 8D A7 A5			sta WRITE_SCORE.SC
 18004 909B AD B1 9B			lda SCORE.HISCORE+1
 18005 909E 8D A8 A5			sta WRITE_SCORE.SC+1
 18006 90A1 AD B2 9B			lda SCORE.HISCORE+2
 18007 90A4 8D A9 A5			sta WRITE_SCORE.SC+2
 18008 90A7 AD B3 9B			lda SCORE.HISCORE+3
 18009 90AA 8D AA A5			sta WRITE_SCORE.SC+3
 18010 90AD 20 8E 78			jsr WRITE_SCORE
 18011 90B0			l_34CA
 18012
 18013 				; optimize OK (service.pas), line = 3134
 18014
 18015 90B0 AD 9A 91			lda BALL0
 18016 90B3 8D 54 A6			sta TEST_BALL.BALL
 18017 90B6 AD 9B 91			lda BALL0+1
 18018 90B9 8D 55 A6			sta TEST_BALL.BALL+1
 18019 90BC 20 ED 89			jsr TEST_BALL
 18020
 18021 				; optimize OK (service.pas), line = 3135
 18022
 18023 90BF AD 9C 91			lda BALL1
 18024 90C2 8D 54 A6			sta TEST_BALL.BALL
 18025 90C5 AD 9D 91			lda BALL1+1
 18026 90C8 8D 55 A6			sta TEST_BALL.BALL+1
 18027 90CB 20 ED 89			jsr TEST_BALL
 18028
 18029 				; optimize OK (service.pas), line = 3136
 18030
 18031 90CE AD 9E 91			lda BALL2
 18032 90D1 8D 54 A6			sta TEST_BALL.BALL
 18033 90D4 AD 9F 91			lda BALL2+1
 18034 90D7 8D 55 A6			sta TEST_BALL.BALL+1
 18035 90DA 20 ED 89			jsr TEST_BALL
 18036
 18037 				; optimize OK (service.pas), line = 3177
 18038
 18039 90DD AD 16 A6			lda BALL0.INPLAY
 18040 90E0 D0 2B			jne l_34F0
 18041
 18042 				; optimize OK (service.pas), line = 3179
 18043
 18044 90E2 AC 9A 91 84 84 AC + 	mwy BALL0 :bp2
 18045 90EC A0 1A			ldy #$1A
 18046 90EE B9 1A A6 91 84 88 + 	mva:rpl adr.BALL1,y (:bp2),y-
 18047
 18048 				; optimize OK (service.pas), line = 3180
 18049
 18050 90F6 AC 9C 91 84 84 AC + 	mwy BALL1 :bp2
 18051 9100 A0 1A			ldy #$1A
 18052 9102 B9 35 A6 91 84 88 + 	mva:rpl adr.BALL2,y (:bp2),y-
 18053
 18054 				; optimize OK (service.pas), line = 3181
 18055
 18056 910A 8D 4C A6			sta BALL2.INPLAY
 18057 910D			l_34F0
 18058
 18059 				; optimize OK (service.pas), line = 3184
 18060
 18061 910D A9 00			lda #$00
 18062 910F 8D D8 9B			sta BALLS_IN_PLAY
 18063
 18064 				; optimize OK (service.pas), line = 3186
 18065
 18066 9112 AD 16 A6			lda BALL0.INPLAY
 18067 9115 F0 03			jeq l_350B
 18068 9117 EE D8 9B			inc BALLS_IN_PLAY
 18069 911A			l_350B
 18070
 18071 				; optimize OK (service.pas), line = 3187
 18072
 18073 911A AD 31 A6			lda BALL1.INPLAY
 18074 911D F0 03			jeq l_351E
 18075 911F EE D8 9B			inc BALLS_IN_PLAY
 18076 9122			l_351E
 18077
 18078 				; optimize OK (service.pas), line = 3188
 18079
 18080 9122 AD 4C A6			lda BALL2.INPLAY
 18081 9125 F0 03			jeq l_3531
 18082 9127 EE D8 9B			inc BALLS_IN_PLAY
 18083 912A			l_3531
 18084
 18085 				; optimize OK (service.pas), line = 3191
 18086
 18087 912A AD 16 A6			lda BALL0.INPLAY
 18088 912D D0 49			jne l_3547
 18089
 18090 				; optimize OK (service.pas), line = 3193
 18091
 18092 912F A9 01			lda #$01
 18093 9131 8D 17 A6			sta BALL0.LAUNCH
 18094
 18095 				; optimize OK (service.pas), line = 3194
 18096
 18097 9134 AD 9A 91			lda BALL0
 18098 9137 8D 60 A4			sta REMOVE_BALL.BALL
 18099 913A AD 9B 91			lda BALL0+1
 18100 913D 8D 61 A4			sta REMOVE_BALL.BALL+1
 18101 9140 20 24 2E			jsr REMOVE_BALL
 18102
 18103 				; optimize FAIL ('DESTROY_VAUS', service.pas), line = 3195
 18104
 18105 9143 20 82 6F			jsr DESTROY_VAUS
 18106
 18107 				; optimize OK (service.pas), line = 3196
 18108
 18109 9146 AC B9 9B			ldy CUR_PLAYER
 18110 9149 B9 AD 9B			lda adr.SCORE.LIVES,y
 18111 914C 38 E9 01			sub #$01
 18112 914F 99 AD 9B			sta adr.SCORE.LIVES,y
 18113
 18114 				; optimize OK (service.pas), line = 3197
 18115
 18116 9152 AD 14 99			lda WALL_P
 18117 9155 85 8E			sta @move.dst
 18118 9157 AD B9 9B			lda CUR_PLAYER
 18119 915A 18 6D 15 99			add WALL_P+1
 18120 915E 85 8F			sta @move.dst+1
 18121 9160 AD 16 99			lda WALL
 18122 9163 85 8A			sta @move.src
 18123 9165 AD 17 99			lda WALL+1
 18124 9168 85 8B			sta @move.src+1
 18125 916A A9 00			lda <256
 18126 916C 85 86			sta @move.cnt
 18127 916E A9 01			lda >256
 18128 9170 85 87			sta @move.cnt+1
 18129 9172 20 A5 11			jsr @move
 18130
 18131 				; optimize FAIL ('NOSOUND', service.pas), line = 3205
 18132
 18133 9175 20 9C 26			jsr NOSOUND
 18134 9178			l_3547
 18135 9178			l_3323
 18136
 18137 				; optimize OK (service.pas), line = 3000
 18138
 18139 9178 AD 9C 9B			lda REMAIN_BLK
 18140 917B F0 0D			jeq l_3324w
 18141 917D AD 16 A6			lda BALL0.INPLAY
 18142 9180 F0 08			jeq l_3324w
 18143 9182 AD B8 9B			lda SCORE.ABORTPLAY
 18144 9185 D0 03 4C F3 8C		jeq l_3324
 18145 918A			l_3324w
 18146
 18147 				; optimize OK (service.pas), line = 3261
 18148
 18149 918A A9 00			lda #$00
 18150 918C 8D F1 A5			sta RESULT
 18151
 18152 				; optimize OK (service.pas), line = 3262
 18153
 18154 918F AD 9C 9B			lda REMAIN_BLK
 18155 9192 D0 05			jne l_3591
 18156 9194 A9 01			lda #$01
 18157 9196 8D F1 A5			sta RESULT
 18158 9199			l_3591
 18159 9199			@exit
 18160
 18161 				; ------------------------------------------------------------
 18162
 18163 = A5F1			RESULT	= DATAORIGIN+$0BD5
 18164 = A5F2			X	= DATAORIGIN+$0BD6
 18165 = A5F4			Y	= DATAORIGIN+$0BD8
 18166 = A5F6			KEY	= DATAORIGIN+$0BDA
 18167 = A5F8			T1	= DATAORIGIN+$0BDC
 18168 = A5FA			T2	= DATAORIGIN+$0BDE
 18169 = A5FC			HLP	= DATAORIGIN+$0BE0
 18170 = A5FE			CN	= DATAORIGIN+$0BE2
 18171 = A5FF			adr.BALL0	= DATAORIGIN+$0BE3	; [27] RECORD
 18172 9199			.var BALL0	= adr.BALL0 .word
 18173 = A5FF			BALL0.X	= DATAORIGIN+$0BE3
 18174 = A601			BALL0.Y	= DATAORIGIN+$0BE5
 18175 = A603			BALL0.FINEX	= DATAORIGIN+$0BE7
 18176 = A605			BALL0.FINEY	= DATAORIGIN+$0BE9
 18177 = A607			BALL0.OLDX	= DATAORIGIN+$0BEB
 18178 = A609			BALL0.OLDY	= DATAORIGIN+$0BED
 18179 = A60B			BALL0.SPEED	= DATAORIGIN+$0BEF
 18180 = A60D			BALL0.FINESPEED	= DATAORIGIN+$0BF1
 18181 = A60F			BALL0.SPEEDX	= DATAORIGIN+$0BF3
 18182 = A611			BALL0.SPEEDY	= DATAORIGIN+$0BF5
 18183 = A613			BALL0.SBD	= DATAORIGIN+$0BF7
 18184 = A615			BALL0.BRWHIT	= DATAORIGIN+$0BF9
 18185 = A616			BALL0.INPLAY	= DATAORIGIN+$0BFA
 18186 = A617			BALL0.LAUNCH	= DATAORIGIN+$0BFB
 18187 = A618			BALL0.ONVAUS	= DATAORIGIN+$0BFC
 18188 = A619			BALL0.STM	= DATAORIGIN+$0BFD
 18189 = A61A			adr.BALL1	= DATAORIGIN+$0BFE	; [27] RECORD
 18190 9199			.var BALL1	= adr.BALL1 .word
 18191 = A61A			BALL1.X	= DATAORIGIN+$0BFE
 18192 = A61C			BALL1.Y	= DATAORIGIN+$0C00
 18193 = A61E			BALL1.FINEX	= DATAORIGIN+$0C02
 18194 = A620			BALL1.FINEY	= DATAORIGIN+$0C04
 18195 = A622			BALL1.OLDX	= DATAORIGIN+$0C06
 18196 = A624			BALL1.OLDY	= DATAORIGIN+$0C08
 18197 = A626			BALL1.SPEED	= DATAORIGIN+$0C0A
 18198 = A628			BALL1.FINESPEED	= DATAORIGIN+$0C0C
 18199 = A62A			BALL1.SPEEDX	= DATAORIGIN+$0C0E
 18200 = A62C			BALL1.SPEEDY	= DATAORIGIN+$0C10
 18201 = A62E			BALL1.SBD	= DATAORIGIN+$0C12
 18202 = A630			BALL1.BRWHIT	= DATAORIGIN+$0C14
 18203 = A631			BALL1.INPLAY	= DATAORIGIN+$0C15
 18204 = A632			BALL1.LAUNCH	= DATAORIGIN+$0C16
 18205 = A633			BALL1.ONVAUS	= DATAORIGIN+$0C17
 18206 = A634			BALL1.STM	= DATAORIGIN+$0C18
 18207 = A635			adr.BALL2	= DATAORIGIN+$0C19	; [27] RECORD
 18208 9199			.var BALL2	= adr.BALL2 .word
 18209 = A635			BALL2.X	= DATAORIGIN+$0C19
 18210 = A637			BALL2.Y	= DATAORIGIN+$0C1B
 18211 = A639			BALL2.FINEX	= DATAORIGIN+$0C1D
 18212 = A63B			BALL2.FINEY	= DATAORIGIN+$0C1F
 18213 = A63D			BALL2.OLDX	= DATAORIGIN+$0C21
 18214 = A63F			BALL2.OLDY	= DATAORIGIN+$0C23
 18215 = A641			BALL2.SPEED	= DATAORIGIN+$0C25
 18216 = A643			BALL2.FINESPEED	= DATAORIGIN+$0C27
 18217 = A645			BALL2.SPEEDX	= DATAORIGIN+$0C29
 18218 = A647			BALL2.SPEEDY	= DATAORIGIN+$0C2B
 18219 = A649			BALL2.SBD	= DATAORIGIN+$0C2D
 18220 = A64B			BALL2.BRWHIT	= DATAORIGIN+$0C2F
 18221 = A64C			BALL2.INPLAY	= DATAORIGIN+$0C30
 18222 = A64D			BALL2.LAUNCH	= DATAORIGIN+$0C31
 18223 = A64E			BALL2.ONVAUS	= DATAORIGIN+$0C32
 18224 = A64F			BALL2.STM	= DATAORIGIN+$0C33
 18225
 18226 = A5F2			@VarData	= X
 18227 = 005E			@VarDataSize	= 94
 18228
 18229 9199 60				rts						; ret
 18230 = 919A FF A5		BALL0
 18230 = 919C 1A A6		BALL1
 18230 = 919E 35 A6		BALL2
 18230 				.endl
 18231
 18232 91A0			.local	CHOOSE_START_WALL				; FUNCTION
 18233
 18234 				; optimize OK (service.pas), line = 3285
 18235
 18236 91A0 A9 01			lda #$01
 18237 91A2 8D 5E A6			sta ST
 18238 91A5 A9 00			lda #$00
 18239 91A7 8D 5F A6			sta ST+1
 18240
 18241 				; optimize OK (service.pas), line = 3343
 18242
 18243 91AA AD 5E A6			lda ST
 18244 91AD 8D 58 A6			sta RESULT
 18245 91B0 AD 5F A6			lda ST+1
 18246 91B3 8D 59 A6			sta RESULT+1
 18247 91B6			@exit
 18248
 18249 				; ------------------------------------------------------------
 18250
 18251 = A658			RESULT	= DATAORIGIN+$0C3C
 18252 = 0046			PX	= $46
 18253 = 0064			PY	= $64
 18254 = 0022			DX	= $22
 18255 = 0023			DY	= $23
 18256 = 0013			DDX	= $13
 18257 = 000E			DDY	= $0E
 18258 = A65A			X	= DATAORIGIN+$0C3E
 18259 = A65C			Y	= DATAORIGIN+$0C40
 18260 = A65E			ST	= DATAORIGIN+$0C42
 18261 = A660			OLDX	= DATAORIGIN+$0C44
 18262 = A662			OLDY	= DATAORIGIN+$0C46
 18263 = A664			NEWX	= DATAORIGIN+$0C48
 18264 = A666			NEWY	= DATAORIGIN+$0C4A
 18265
 18266 = A65A			@VarData	= X
 18267 = 000E			@VarDataSize	= 14
 18268
 18269 91B6 60				rts						; ret
 18270 				.endl
 18271
 18272 91B7			.local	SET_START_PARAMETERS				; PROCEDURE
 18273
 18274 				; optimize OK (service.pas), line = 3352
 18275
 18276 91B7 A9 01			lda #$01
 18277 91B9 8D 68 A6			sta X
 18278
 18279 91BC			l_35B2
 18280 				; --- ForToDoCondition
 18281 91BC AD 68 A6			lda X
 18282 91BF C9 03			cmp #$03
 18283 91C1 90 03 4C 4F 92		jcs l_35C0
 18284
 18285 				; optimize OK (service.pas), line = 3354
 18286
 18287 91C6 0A				asl @
 18288 91C7 0A				asl @
 18289 91C8 A8				tay
 18290 91C9 A9 00			lda #$00
 18291 91CB 99 9E 9B			sta adr.SCORE.PLAYER,y
 18292 91CE 99 9F 9B			sta adr.SCORE.PLAYER+1,y
 18293 91D1 99 A0 9B			sta adr.SCORE.PLAYER+2,y
 18294 91D4 99 A1 9B			sta adr.SCORE.PLAYER+3,y
 18295
 18296 				; optimize OK (service.pas), line = 3355
 18297
 18298 91D7 AC 68 A6			ldy X
 18299 91DA A9 05			lda #$05
 18300 91DC 99 AD 9B			sta adr.SCORE.LIVES,y
 18301
 18302 				; optimize OK (service.pas), line = 3356
 18303
 18304 91DF A9 01			lda #$01
 18305 91E1 99 AA 9B			sta adr.SCORE.WALL_N,y
 18306
 18307 				; optimize FAIL (1, service.pas), line = 3357
 18308
 18309 91E4 E8				inx
 18310 91E5 AD 68 A6 95 96		mva X :STACKORIGIN,x
 18311 91EA A9 00 95 A6			mva #$00 :STACKORIGIN+STACKWIDTH,x
 18312 91EE E8				inx
 18313 91EF A9 00 95 96			mva #$00 :STACKORIGIN,x
 18314 91F3 A9 01 95 A6			mva #$01 :STACKORIGIN+STACKWIDTH,x
 18315 91F7 20 E7 12			jsr imulWORD
 18316 91FA A5 86			lda :eax
 18317 91FC 95 95			sta :STACKORIGIN-1,x
 18318 91FE A5 87			lda :eax+1
 18319 9200 95 A5			sta :STACKORIGIN-1+STACKWIDTH,x
 18320 9202 A5 88			lda :eax+2
 18321 9204 95 B5			sta :STACKORIGIN-1+STACKWIDTH*2,x
 18322 9206 A5 89			lda :eax+3
 18323 9208 95 C5			sta :STACKORIGIN-1+STACKWIDTH*3,x
 18324 920A A9 00 95 96			mva #$00 :STACKORIGIN,x
 18325 920E 95 A6			sta :STACKORIGIN+STACKWIDTH,x
 18326 9210 E8				inx
 18327 9211 AD 18 99 95 96		mva ALL_WALLS :STACKORIGIN,x
 18328 9216 AD 19 99 95 A6		mva ALL_WALLS+1 :STACKORIGIN+STACKWIDTH,x
 18329 921B AD 14 99			lda WALL_P
 18330 921E 18 75 95			add :STACKORIGIN-1,x
 18331 9221 85 8E			sta @move.dst
 18332 9223 AD 15 99			lda WALL_P+1
 18333 9226 75 A5			adc :STACKORIGIN-1+STACKWIDTH,x
 18334 9228 85 8F			sta @move.dst+1
 18335 922A B5 96			lda :STACKORIGIN,x
 18336 922C 85 8A			sta @move.src
 18337 922E B5 A6			lda :STACKORIGIN+STACKWIDTH,x
 18338 9230 85 8B			sta @move.src+1
 18339 9232 CA				dex
 18340 9233 CA				dex
 18341 9234 A9 00			lda <256
 18342 9236 85 86			sta @move.cnt
 18343 9238 A9 01			lda >256
 18344 923A 85 87			sta @move.cnt+1
 18345 923C 20 A5 11			jsr @move
 18346
 18347 				; optimize OK (service.pas), line = 3359
 18348
 18349 923F AC 68 A6			ldy X
 18350 9242 A9 00			lda #$00
 18351 9244 99 B5 9B			sta adr.SCORE.ROUNDSEL,y
 18352
 18353 				; --- ForToDoEpilog
 18354 9247 EE 68 A6			inc X
 18355 924A F0 03 4C BC 91		jne l_35B2
 18356 924F			l_35C0
 18357
 18358 				; optimize OK (service.pas), line = 3362
 18359
 18360 924F A9 01			lda #$01
 18361 9251 8D B9 9B			sta CUR_PLAYER
 18362
 18363 				; ------------------------------------------------------------
 18364
 18365 = A668			X	= DATAORIGIN+$0C4C
 18366
 18367 = A668			@VarData	= X
 18368 = 0001			@VarDataSize	= 1
 18369
 18370 9254			@exit
 18371 					.ifdef @new
 18372 					lda <@VarData
 18373 					sta :ztmp
 18374 					lda >@VarData
 18375 					ldy #@VarDataSize-1
 18376 					jmp @FreeMem
 18377 					els
 18378 9254 60				rts						; ret
 18379 					eif
 18380 				.endl
 18381
 18382 9255			.local	START_GAME					; PROCEDURE
 18383
 18384 				; optimize FAIL ('SET_START_PARAMETERS', service.pas), line = 3479
 18385
 18386 9255 20 B7 91			jsr SET_START_PARAMETERS
 18387
 18388 				; optimize OK (service.pas), line = 3480
 18389
 18390 9258 AD 6A A6			lda PLAYERS+1
 18391 925B D0 05			bne @+
 18392 925D AD 69 A6			lda PLAYERS
 18393 9260 C9 01			cmp #$01
 18394 				@
 18395 9262 D0 05			jne l_3605
 18396 9264 A9 00			lda #$00
 18397 9266 8D AF 9B			sta adr.SCORE.LIVES+$02
 18398 9269			l_3605
 18399
 18400 				; optimize OK (service.pas), line = 3483
 18401
 18402 9269 A9 00			lda #$00
 18403 926B 8D C1 9B			sta TRAINER
 18404
 18405 				; optimize OK (service.pas), line = 3484
 18406
 18407 926E AD 16 99			lda WALL
 18408 9271 85 8E			sta @move.dst
 18409 9273 AD 17 99			lda WALL+1
 18410 9276 85 8F			sta @move.dst+1
 18411 9278 AD 14 99			lda WALL_P
 18412 927B 85 8A			sta @move.src
 18413 927D AD B9 9B			lda CUR_PLAYER
 18414 9280 18 6D 15 99			add WALL_P+1
 18415 9284 85 8B			sta @move.src+1
 18416 9286 A9 00			lda <256
 18417 9288 85 86			sta @move.cnt
 18418 928A A9 01			lda >256
 18419 928C 85 87			sta @move.cnt+1
 18420 928E 20 A5 11			jsr @move
 18421
 18422 				; optimize FAIL ('SET_WALL', service.pas), line = 3486
 18423
 18424 9291 20 3E 4C			jsr SET_WALL
 18425
 18426 				; optimize OK (service.pas), line = 3488
 18427
 18428 9294 AD F6 98			lda PATTERN
 18429 9297 8D 5C A5			sta FILL_PICTURE_WITH_PATTERN.PATT
 18430 929A AD F7 98			lda PATTERN+1
 18431 929D 8D 5D A5			sta FILL_PICTURE_WITH_PATTERN.PATT+1
 18432 92A0 20 EE 6C			jsr FILL_PICTURE_WITH_PATTERN
 18433
 18434 				; optimize FAIL ('SHOWBTMPICTURE', service.pas), line = 3489
 18435
 18436 92A3 E8				inx
 18437 92A4 AD D6 98 95 96		mva PLAYSCREEN :STACKORIGIN,x
 18438 92A9 AD D7 98 95 A6		mva PLAYSCREEN+1 :STACKORIGIN+STACKWIDTH,x
 18439 92AE 20 F6 2C			jsr SHOWBTMPICTURE
 18440
 18441 				; optimize OK (service.pas), line = 3492
 18442
 18443 92B1 AD D6 98			lda PLAYSCREEN
 18444 92B4 8D 55 A4			sta SETPALETTE.BTM
 18445 92B7 AD D7 98			lda PLAYSCREEN+1
 18446 92BA 8D 56 A4			sta SETPALETTE.BTM+1
 18447 92BD 20 56 2D			jsr SETPALETTE
 18448
 18449 				; optimize OK (service.pas), line = 3495
 18450
 18451 92C0 AD A2 9B			lda adr.SCORE.PLAYER+$04
 18452 92C3 8D A7 A5			sta WRITE_SCORE.SC
 18453 92C6 AD A3 9B			lda adr.SCORE.PLAYER+1+$04
 18454 92C9 8D A8 A5			sta WRITE_SCORE.SC+1
 18455 92CC AD A4 9B			lda adr.SCORE.PLAYER+2+$04
 18456 92CF 8D A9 A5			sta WRITE_SCORE.SC+2
 18457 92D2 AD A5 9B			lda adr.SCORE.PLAYER+3+$04
 18458 92D5 8D AA A5			sta WRITE_SCORE.SC+3
 18459 92D8 A9 FD			lda #$FD
 18460 92DA 8D A3 A5			sta WRITE_SCORE.PX
 18461 92DD A9 00			lda #$00
 18462 92DF 8D A4 A5			sta WRITE_SCORE.PX+1
 18463 92E2 A9 3C			lda #$3C
 18464 92E4 8D A5 A5			sta WRITE_SCORE.PY
 18465 92E7 A9 00			lda #$00
 18466 92E9 8D A6 A5			sta WRITE_SCORE.PY+1
 18467 92EC 20 8E 78			jsr WRITE_SCORE
 18468
 18469 				; optimize OK (service.pas), line = 3496
 18470
 18471 92EF AD A6 9B			lda adr.SCORE.PLAYER+$08
 18472 92F2 8D A7 A5			sta WRITE_SCORE.SC
 18473 92F5 AD A7 9B			lda adr.SCORE.PLAYER+1+$08
 18474 92F8 8D A8 A5			sta WRITE_SCORE.SC+1
 18475 92FB AD A8 9B			lda adr.SCORE.PLAYER+2+$08
 18476 92FE 8D A9 A5			sta WRITE_SCORE.SC+2
 18477 9301 AD A9 9B			lda adr.SCORE.PLAYER+3+$08
 18478 9304 8D AA A5			sta WRITE_SCORE.SC+3
 18479 9307 A9 FD			lda #$FD
 18480 9309 8D A3 A5			sta WRITE_SCORE.PX
 18481 930C A9 00			lda #$00
 18482 930E 8D A4 A5			sta WRITE_SCORE.PX+1
 18483 9311 A9 5D			lda #$5D
 18484 9313 8D A5 A5			sta WRITE_SCORE.PY
 18485 9316 A9 00			lda #$00
 18486 9318 8D A6 A5			sta WRITE_SCORE.PY+1
 18487 931B 20 8E 78			jsr WRITE_SCORE
 18488
 18489 				; optimize OK (service.pas), line = 3497
 18490
 18491 931E A9 FD			lda #$FD
 18492 9320 8D A3 A5			sta WRITE_SCORE.PX
 18493 9323 A9 00			lda #$00
 18494 9325 8D A4 A5			sta WRITE_SCORE.PX+1
 18495 9328 A9 80			lda #$80
 18496 932A 8D A5 A5			sta WRITE_SCORE.PY
 18497 932D A9 00			lda #$00
 18498 932F 8D A6 A5			sta WRITE_SCORE.PY+1
 18499 9332 AD B0 9B			lda SCORE.HISCORE
 18500 9335 8D A7 A5			sta WRITE_SCORE.SC
 18501 9338 AD B1 9B			lda SCORE.HISCORE+1
 18502 933B 8D A8 A5			sta WRITE_SCORE.SC+1
 18503 933E AD B2 9B			lda SCORE.HISCORE+2
 18504 9341 8D A9 A5			sta WRITE_SCORE.SC+2
 18505 9344 AD B3 9B			lda SCORE.HISCORE+3
 18506 9347 8D AA A5			sta WRITE_SCORE.SC+3
 18507 934A 20 8E 78			jsr WRITE_SCORE
 18508
 18509 				; --- RepeatUntilProlog
 18510 934D			l_3633
 18511
 18512 				; --- RepeatUntilProlog
 18513 934D			l_3634
 18514
 18515 				; optimize OK (service.pas), line = 3507
 18516
 18517 934D AC B9 9B			ldy CUR_PLAYER
 18518 9350 B9 B5 9B			lda adr.SCORE.ROUNDSEL,y
 18519 9353 F0 03 4C 06 94		jne l_3646
 18520
 18521 				; optimize FAIL (1, service.pas), line = 3509
 18522
 18523 9358 E8				inx
 18524 9359 AD B9 9B 95 96		mva CUR_PLAYER :STACKORIGIN,x
 18525 935E A9 00 95 A6			mva #$00 :STACKORIGIN+STACKWIDTH,x
 18526 9362 20 A0 91			jsr CHOOSE_START_WALL
 18527 9365 E8				inx
 18528 9366 AD 58 A6 95 96		mva CHOOSE_START_WALL.RESULT :STACKORIGIN,x
 18529 936B AD 59 A6 95 A6		mva CHOOSE_START_WALL.RESULT+1 :STACKORIGIN+STACKWIDTH,x
 18530 9370 B4 95			ldy :STACKORIGIN-1,x
 18531 9372 B5 96			lda :STACKORIGIN,x
 18532 9374 99 AA 9B			sta adr.SCORE.WALL_N,y
 18533 9377 CA				dex
 18534
 18535 				; optimize FAIL (1, service.pas), line = 3512
 18536
 18537 9378 AD B9 9B 95 96		mva CUR_PLAYER :STACKORIGIN,x
 18538 937D A9 00 95 A6			mva #$00 :STACKORIGIN+STACKWIDTH,x
 18539 9381 E8				inx
 18540 9382 A9 00 95 96			mva #$00 :STACKORIGIN,x
 18541 9386 A9 01 95 A6			mva #$01 :STACKORIGIN+STACKWIDTH,x
 18542 938A 20 E7 12			jsr imulWORD
 18543 938D A5 86			lda :eax
 18544 938F 95 95			sta :STACKORIGIN-1,x
 18545 9391 A5 87			lda :eax+1
 18546 9393 95 A5			sta :STACKORIGIN-1+STACKWIDTH,x
 18547 9395 A5 88			lda :eax+2
 18548 9397 95 B5			sta :STACKORIGIN-1+STACKWIDTH*2,x
 18549 9399 A5 89			lda :eax+3
 18550 939B 95 C5			sta :STACKORIGIN-1+STACKWIDTH*3,x
 18551 939D AC B9 9B			ldy CUR_PLAYER
 18552 93A0 B9 AA 9B			lda adr.SCORE.WALL_N,y
 18553 93A3 95 96			sta :STACKORIGIN,x
 18554 93A5 A9 00 95 A6			mva #$00 :STACKORIGIN+STACKWIDTH,x
 18555 93A9 E8				inx
 18556 93AA A9 01 95 96			mva #$01 :STACKORIGIN,x
 18557 93AE A9 00 95 A6			mva #$00 :STACKORIGIN+STACKWIDTH,x
 18558 93B2 20 BA 10			jsr subAX_CX
 18559 93B5 A9 00 95 96			mva #$00 :STACKORIGIN,x
 18560 93B9 A9 01 95 A6			mva #$01 :STACKORIGIN+STACKWIDTH,x
 18561 93BD 20 E7 12			jsr imulWORD
 18562 93C0 A5 86			lda :eax
 18563 93C2 95 95			sta :STACKORIGIN-1,x
 18564 93C4 A5 87			lda :eax+1
 18565 93C6 95 A5			sta :STACKORIGIN-1+STACKWIDTH,x
 18566 93C8 A5 88			lda :eax+2
 18567 93CA 95 B5			sta :STACKORIGIN-1+STACKWIDTH*2,x
 18568 93CC A5 89			lda :eax+3
 18569 93CE 95 C5			sta :STACKORIGIN-1+STACKWIDTH*3,x
 18570 93D0 AD 18 99 95 96		mva ALL_WALLS :STACKORIGIN,x
 18571 93D5 AD 19 99 95 A6		mva ALL_WALLS+1 :STACKORIGIN+STACKWIDTH,x
 18572 93DA AD 14 99			lda WALL_P
 18573 93DD 18 75 95			add :STACKORIGIN-1,x
 18574 93E0 85 8E			sta @move.dst
 18575 93E2 AD 15 99			lda WALL_P+1
 18576 93E5 75 A5			adc :STACKORIGIN-1+STACKWIDTH,x
 18577 93E7 85 8F			sta @move.dst+1
 18578 93E9 B5 96			lda :STACKORIGIN,x
 18579 93EB 85 8A			sta @move.src
 18580 93ED B5 A6			lda :STACKORIGIN+STACKWIDTH,x
 18581 93EF 85 8B			sta @move.src+1
 18582 93F1 CA				dex
 18583 93F2 CA				dex
 18584 93F3 A9 00			lda <256
 18585 93F5 85 86			sta @move.cnt
 18586 93F7 A9 01			lda >256
 18587 93F9 85 87			sta @move.cnt+1
 18588 93FB 20 A5 11			jsr @move
 18589
 18590 				; optimize OK (service.pas), line = 3516
 18591
 18592 93FE AC B9 9B			ldy CUR_PLAYER
 18593 9401 A9 01			lda #$01
 18594 9403 99 B5 9B			sta adr.SCORE.ROUNDSEL,y
 18595 9406			l_3646
 18596
 18597 				; optimize OK (service.pas), line = 3520
 18598
 18599 9406 AD 16 99			lda WALL
 18600 9409 85 8E			sta @move.dst
 18601 940B AD 17 99			lda WALL+1
 18602 940E 85 8F			sta @move.dst+1
 18603 9410 AD 14 99			lda WALL_P
 18604 9413 85 8A			sta @move.src
 18605 9415 AD B9 9B			lda CUR_PLAYER
 18606 9418 18 6D 15 99			add WALL_P+1
 18607 941C 85 8B			sta @move.src+1
 18608 941E A9 00			lda <256
 18609 9420 85 86			sta @move.cnt
 18610 9422 A9 01			lda >256
 18611 9424 85 87			sta @move.cnt+1
 18612 9426 20 A5 11			jsr @move
 18613
 18614 				; optimize FAIL ('SET_WALL', service.pas), line = 3521
 18615
 18616 9429 20 3E 4C			jsr SET_WALL
 18617
 18618 				; optimize FAIL ('BOUNCEBALL', service.pas), line = 3526
 18619
 18620 942C 20 74 89			jsr BOUNCEBALL
 18621 942F AD F1 A5			lda BOUNCEBALL.RESULT
 18622 9432 8D 6B A6			sta NWALL
 18623
 18624 				; optimize OK (service.pas), line = 3529
 18625
 18626 9435 D0 03 4C DD 94		jeq l_3688
 18627
 18628 				; optimize OK (service.pas), line = 3532
 18629
 18630 943A AC B9 9B			ldy CUR_PLAYER
 18631 943D B9 AA 9B			lda adr.SCORE.WALL_N,y
 18632 9440 18 69 01			add #$01
 18633 9443 99 AA 9B			sta adr.SCORE.WALL_N,y
 18634
 18635 				; optimize OK (service.pas), line = 3535
 18636
 18637 9446 AD 9D 9B			lda TOTALWALL
 18638 9449 D9 AA 9B			cmp adr.SCORE.WALL_N,y
 18639 944C B0 05			jcs l_36A4
 18640
 18641 				; optimize OK (service.pas), line = 3536
 18642
 18643 944E A9 01			lda #$01
 18644 9450 99 AA 9B			sta adr.SCORE.WALL_N,y
 18645 9453			l_36A4
 18646
 18647 				; optimize FAIL (1, service.pas), line = 3539
 18648
 18649 9453 E8				inx
 18650 9454 AD B9 9B 95 96		mva CUR_PLAYER :STACKORIGIN,x
 18651 9459 A9 00 95 A6			mva #$00 :STACKORIGIN+STACKWIDTH,x
 18652 945D E8				inx
 18653 945E A9 00 95 96			mva #$00 :STACKORIGIN,x
 18654 9462 A9 01 95 A6			mva #$01 :STACKORIGIN+STACKWIDTH,x
 18655 9466 20 E7 12			jsr imulWORD
 18656 9469 A5 86			lda :eax
 18657 946B 95 95			sta :STACKORIGIN-1,x
 18658 946D A5 87			lda :eax+1
 18659 946F 95 A5			sta :STACKORIGIN-1+STACKWIDTH,x
 18660 9471 A5 88			lda :eax+2
 18661 9473 95 B5			sta :STACKORIGIN-1+STACKWIDTH*2,x
 18662 9475 A5 89			lda :eax+3
 18663 9477 95 C5			sta :STACKORIGIN-1+STACKWIDTH*3,x
 18664 9479 AC B9 9B			ldy CUR_PLAYER
 18665 947C B9 AA 9B			lda adr.SCORE.WALL_N,y
 18666 947F 95 96			sta :STACKORIGIN,x
 18667 9481 A9 00 95 A6			mva #$00 :STACKORIGIN+STACKWIDTH,x
 18668 9485 E8				inx
 18669 9486 A9 01 95 96			mva #$01 :STACKORIGIN,x
 18670 948A A9 00 95 A6			mva #$00 :STACKORIGIN+STACKWIDTH,x
 18671 948E 20 BA 10			jsr subAX_CX
 18672 9491 A9 00 95 96			mva #$00 :STACKORIGIN,x
 18673 9495 A9 01 95 A6			mva #$01 :STACKORIGIN+STACKWIDTH,x
 18674 9499 20 E7 12			jsr imulWORD
 18675 949C A5 86			lda :eax
 18676 949E 95 95			sta :STACKORIGIN-1,x
 18677 94A0 A5 87			lda :eax+1
 18678 94A2 95 A5			sta :STACKORIGIN-1+STACKWIDTH,x
 18679 94A4 A5 88			lda :eax+2
 18680 94A6 95 B5			sta :STACKORIGIN-1+STACKWIDTH*2,x
 18681 94A8 A5 89			lda :eax+3
 18682 94AA 95 C5			sta :STACKORIGIN-1+STACKWIDTH*3,x
 18683 94AC AD 18 99 95 96		mva ALL_WALLS :STACKORIGIN,x
 18684 94B1 AD 19 99 95 A6		mva ALL_WALLS+1 :STACKORIGIN+STACKWIDTH,x
 18685 94B6 AD 14 99			lda WALL_P
 18686 94B9 18 75 95			add :STACKORIGIN-1,x
 18687 94BC 85 8E			sta @move.dst
 18688 94BE AD 15 99			lda WALL_P+1
 18689 94C1 75 A5			adc :STACKORIGIN-1+STACKWIDTH,x
 18690 94C3 85 8F			sta @move.dst+1
 18691 94C5 B5 96			lda :STACKORIGIN,x
 18692 94C7 85 8A			sta @move.src
 18693 94C9 B5 A6			lda :STACKORIGIN+STACKWIDTH,x
 18694 94CB 85 8B			sta @move.src+1
 18695 94CD CA				dex
 18696 94CE CA				dex
 18697 94CF A9 00			lda <256
 18698 94D1 85 86			sta @move.cnt
 18699 94D3 A9 01			lda >256
 18700 94D5 85 87			sta @move.cnt+1
 18701 94D7 20 A5 11			jsr @move
 18702 94DA 4C E8 94			jmp l_36CE
 18703 94DD			l_3688
 18704
 18705 				; optimize OK (service.pas), line = 3545
 18706
 18707 94DD AC B9 9B			ldy CUR_PLAYER
 18708 94E0 B9 AD 9B			lda adr.SCORE.LIVES,y
 18709 94E3 D0 03			jne l_36E3
 18710 94E5 20 7F 6F			jsr GAME_OVER
 18711 94E8			l_36CE
 18712 94E8			l_36E3
 18713
 18714 				; optimize OK (service.pas), line = 3550
 18715
 18716 94E8 AD 6B A6			lda NWALL
 18717 94EB F0 03 4C 4D 93		jne l_3634
 18718
 18719 				; optimize FAIL (0, service.pas), line = 3553
 18720
 18721 94F0 EE B9 9B			inc CUR_PLAYER
 18722
 18723 				; optimize OK (service.pas), line = 3554
 18724
 18725 94F3 AD 69 A6			lda PLAYERS
 18726 94F6 CD B9 9B			cmp CUR_PLAYER
 18727 94F9 AD 6A A6			lda PLAYERS+1
 18728 94FC E9 00			sbc #$00
 18729 94FE 50 02			svc
 18730 9500 49 80			eor #$80
 18731 9502 10 05			jpl l_370B
 18732 9504 A9 01			lda #$01
 18733 9506 8D B9 9B			sta CUR_PLAYER
 18734 9509			l_370B
 18735
 18736 				; optimize OK (service.pas), line = 3560
 18737
 18738 9509 AC B9 9B			ldy CUR_PLAYER
 18739 950C B9 AD 9B			lda adr.SCORE.LIVES,y
 18740 950F D0 09			jne l_3727
 18741 9511 A9 03			lda #$03
 18742 9513 38 ED B9 9B			sub CUR_PLAYER
 18743 9517 8D B9 9B			sta CUR_PLAYER
 18744 951A			l_3727
 18745
 18746 				; optimize OK (service.pas), line = 3565
 18747
 18748 951A A0 01			ldy #1
 18749 951C AD AE 9B			lda adr.SCORE.LIVES+$01
 18750 951F F0 01			beq @+
 18751 9521 88				dey
 18752 				@
 18753 9522 84 9F			sty :STACKORIGIN+9
 18754 9524 A0 01			ldy #1
 18755 9526 AD AF 9B			lda adr.SCORE.LIVES+$02
 18756 9529 F0 01			beq @+
 18757 952B 88				dey
 18758 				@
 18759 952C 98				tya
 18760 952D 25 9F			and :STACKORIGIN+9
 18761 952F 0D B8 9B			ora SCORE.ABORTPLAY
 18762 9532 D0 03 4C 4D 93		jeq l_3633
 18763
 18764 				; ------------------------------------------------------------
 18765
 18766 = A669			PLAYERS	= DATAORIGIN+$0C4D
 18767 = A66B			NWALL	= DATAORIGIN+$0C4F
 18768
 18769 = A669			@VarData	= PLAYERS
 18770 = 0003			@VarDataSize	= 3
 18771
 18772 9537			@exit
 18773 					.ifdef @new
 18774 					lda <@VarData
 18775 					sta :ztmp
 18776 					lda >@VarData
 18777 					ldy #@VarDataSize-1
 18778 					jmp @FreeMem
 18779 					els
 18780 9537 60				rts						; ret
 18781 					eif
 18782 				.endl
 18783
 18784 9538			.local	INIT_GAME					; PROCEDURE
 18785
 18786 				; optimize FAIL ('INITSVGA', arkanoid_vbxe.pas), line = 150
 18787
 18788 9538 20 6E 27			jsr INITSVGA
 18789
 18790 				; optimize FAIL ('INITROWARRAY', arkanoid_vbxe.pas), line = 151
 18791
 18792 953B 20 FB 26			jsr INITROWARRAY
 18793
 18794 				; optimize OK (btm.inc), line = 1
 18795
 18796 953E A9 00			lda #$00
 18797 9540 8D E9 9A			sta PLAYSCREEN.OFS
 18798 9543 A9 4A			lda #$4A
 18799 9545 8D EA 9A			sta PLAYSCREEN.OFS+1
 18800 9548 A9 01			lda #$01
 18801 954A 8D EB 9A			sta PLAYSCREEN.OFS+2
 18802 954D A9 00			lda #$00
 18803 954F 8D EC 9A			sta PLAYSCREEN.OFS+3
 18804
 18805 				; optimize OK (btm.inc), line = 2
 18806
 18807 9552 A9 40			lda #$40
 18808 9554 8D E5 9A			sta PLAYSCREEN.WIDTH
 18809 9557 A9 01			lda #$01
 18810 9559 8D E6 9A			sta PLAYSCREEN.WIDTH+1
 18811
 18812 				; optimize OK (btm.inc), line = 3
 18813
 18814 955C A9 C8			lda #$C8
 18815 955E 8D E7 9A			sta PLAYSCREEN.HEIGHT
 18816 9561 A9 00			lda #$00
 18817 9563 8D E8 9A			sta PLAYSCREEN.HEIGHT+1
 18818
 18819 				; optimize OK (btm.inc), line = 5
 18820
 18821 9566 8D 21 9B			sta PRESENTS.OFS
 18822 9569 A9 44			lda #$44
 18823 956B 8D 22 9B			sta PRESENTS.OFS+1
 18824 956E A9 02			lda #$02
 18825 9570 8D 23 9B			sta PRESENTS.OFS+2
 18826 9573 A9 00			lda #$00
 18827 9575 8D 24 9B			sta PRESENTS.OFS+3
 18828
 18829 				; optimize OK (btm.inc), line = 6
 18830
 18831 9578 A9 40			lda #$40
 18832 957A 8D 1D 9B			sta PRESENTS.WIDTH
 18833 957D A9 01			lda #$01
 18834 957F 8D 1E 9B			sta PRESENTS.WIDTH+1
 18835
 18836 				; optimize OK (btm.inc), line = 7
 18837
 18838 9582 A9 C8			lda #$C8
 18839 9584 8D 1F 9B			sta PRESENTS.HEIGHT
 18840 9587 A9 00			lda #$00
 18841 9589 8D 20 9B			sta PRESENTS.HEIGHT+1
 18842
 18843 				; optimize OK (btm.inc), line = 9
 18844
 18845 958C 8D 11 9B			sta EXPLOSION.OFS
 18846 958F A9 3E			lda #$3E
 18847 9591 8D 12 9B			sta EXPLOSION.OFS+1
 18848 9594 A9 03			lda #$03
 18849 9596 8D 13 9B			sta EXPLOSION.OFS+2
 18850 9599 A9 00			lda #$00
 18851 959B 8D 14 9B			sta EXPLOSION.OFS+3
 18852
 18853 				; optimize OK (btm.inc), line = 10
 18854
 18855 959E A9 2A			lda #$2A
 18856 95A0 8D 0D 9B			sta EXPLOSION.WIDTH
 18857 95A3 A9 00			lda #$00
 18858 95A5 8D 0E 9B			sta EXPLOSION.WIDTH+1
 18859
 18860 				; optimize OK (btm.inc), line = 11
 18861
 18862 95A8 A9 72			lda #$72
 18863 95AA 8D 0F 9B			sta EXPLOSION.HEIGHT
 18864 95AD A9 00			lda #$00
 18865 95AF 8D 10 9B			sta EXPLOSION.HEIGHT+1
 18866
 18867 				; optimize OK (btm.inc), line = 13
 18868
 18869 95B2 A9 B4			lda #$B4
 18870 95B4 8D 19 9B			sta NEWVAUS.OFS
 18871 95B7 A9 50			lda #$50
 18872 95B9 8D 1A 9B			sta NEWVAUS.OFS+1
 18873 95BC A9 03			lda #$03
 18874 95BE 8D 1B 9B			sta NEWVAUS.OFS+2
 18875 95C1 A9 00			lda #$00
 18876 95C3 8D 1C 9B			sta NEWVAUS.OFS+3
 18877
 18878 				; optimize OK (btm.inc), line = 14
 18879
 18880 95C6 A9 29			lda #$29
 18881 95C8 8D 15 9B			sta NEWVAUS.WIDTH
 18882 95CB A9 00			lda #$00
 18883 95CD 8D 16 9B			sta NEWVAUS.WIDTH+1
 18884
 18885 				; optimize OK (btm.inc), line = 15
 18886
 18887 95D0 A9 C1			lda #$C1
 18888 95D2 8D 17 9B			sta NEWVAUS.HEIGHT
 18889 95D5 A9 00			lda #$00
 18890 95D7 8D 18 9B			sta NEWVAUS.HEIGHT+1
 18891
 18892 				; optimize OK (btm.inc), line = 17
 18893
 18894 95DA A9 9D			lda #$9D
 18895 95DC 8D 29 9B			sta SOUNDFX.OFS
 18896 95DF A9 6F			lda #$6F
 18897 95E1 8D 2A 9B			sta SOUNDFX.OFS+1
 18898 95E4 A9 03			lda #$03
 18899 95E6 8D 2B 9B			sta SOUNDFX.OFS+2
 18900 95E9 A9 00			lda #$00
 18901 95EB 8D 2C 9B			sta SOUNDFX.OFS+3
 18902
 18903 				; optimize OK (btm.inc), line = 18
 18904
 18905 95EE A9 15			lda #$15
 18906 95F0 8D 25 9B			sta SOUNDFX.WIDTH
 18907 95F3 A9 00			lda #$00
 18908 95F5 8D 26 9B			sta SOUNDFX.WIDTH+1
 18909
 18910 				; optimize OK (btm.inc), line = 19
 18911
 18912 95F8 A9 26			lda #$26
 18913 95FA 8D 27 9B			sta SOUNDFX.HEIGHT
 18914 95FD A9 00			lda #$00
 18915 95FF 8D 28 9B			sta SOUNDFX.HEIGHT+1
 18916
 18917 				; optimize OK (btm.inc), line = 21
 18918
 18919 9602 A9 BB			lda #$BB
 18920 9604 8D 31 9B			sta SHINEWALL.OFS
 18921 9607 A9 72			lda #$72
 18922 9609 8D 32 9B			sta SHINEWALL.OFS+1
 18923 960C A9 03			lda #$03
 18924 960E 8D 33 9B			sta SHINEWALL.OFS+2
 18925 9611 A9 00			lda #$00
 18926 9613 8D 34 9B			sta SHINEWALL.OFS+3
 18927
 18928 				; optimize OK (btm.inc), line = 22
 18929
 18930 9616 A9 10			lda #$10
 18931 9618 8D 2D 9B			sta SHINEWALL.WIDTH
 18932 961B A9 00			lda #$00
 18933 961D 8D 2E 9B			sta SHINEWALL.WIDTH+1
 18934
 18935 				; optimize OK (btm.inc), line = 23
 18936
 18937 9620 A9 50			lda #$50
 18938 9622 8D 2F 9B			sta SHINEWALL.HEIGHT
 18939 9625 A9 00			lda #$00
 18940 9627 8D 30 9B			sta SHINEWALL.HEIGHT+1
 18941
 18942 				; optimize OK (btm.inc), line = 25
 18943
 18944 962A A9 BB			lda #$BB
 18945 962C 8D 39 9B			sta MINIVAUS.OFS
 18946 962F A9 77			lda #$77
 18947 9631 8D 3A 9B			sta MINIVAUS.OFS+1
 18948 9634 A9 03			lda #$03
 18949 9636 8D 3B 9B			sta MINIVAUS.OFS+2
 18950 9639 A9 00			lda #$00
 18951 963B 8D 3C 9B			sta MINIVAUS.OFS+3
 18952
 18953 				; optimize OK (btm.inc), line = 26
 18954
 18955 963E A9 14			lda #$14
 18956 9640 8D 35 9B			sta MINIVAUS.WIDTH
 18957 9643 A9 00			lda #$00
 18958 9645 8D 36 9B			sta MINIVAUS.WIDTH+1
 18959
 18960 				; optimize OK (btm.inc), line = 27
 18961
 18962 9648 A9 05			lda #$05
 18963 964A 8D 37 9B			sta MINIVAUS.HEIGHT
 18964 964D A9 00			lda #$00
 18965 964F 8D 38 9B			sta MINIVAUS.HEIGHT+1
 18966
 18967 				; optimize OK (btm.inc), line = 29
 18968
 18969 9652 A9 1F			lda #$1F
 18970 9654 8D 41 9B			sta LEVELSEL.OFS
 18971 9657 A9 78			lda #$78
 18972 9659 8D 42 9B			sta LEVELSEL.OFS+1
 18973 965C A9 03			lda #$03
 18974 965E 8D 43 9B			sta LEVELSEL.OFS+2
 18975 9661 A9 00			lda #$00
 18976 9663 8D 44 9B			sta LEVELSEL.OFS+3
 18977
 18978 				; optimize OK (btm.inc), line = 30
 18979
 18980 9666 A9 15			lda #$15
 18981 9668 8D 3D 9B			sta LEVELSEL.WIDTH
 18982 966B A9 00			lda #$00
 18983 966D 8D 3E 9B			sta LEVELSEL.WIDTH+1
 18984
 18985 				; optimize OK (btm.inc), line = 31
 18986
 18987 9670 A9 5F			lda #$5F
 18988 9672 8D 3F 9B			sta LEVELSEL.HEIGHT
 18989 9675 A9 00			lda #$00
 18990 9677 8D 40 9B			sta LEVELSEL.HEIGHT+1
 18991
 18992 				; optimize OK (btm.inc), line = 33
 18993
 18994 967A A9 EA			lda #$EA
 18995 967C 8D 49 9B			sta LETTERS.OFS
 18996 967F A9 7F			lda #$7F
 18997 9681 8D 4A 9B			sta LETTERS.OFS+1
 18998 9684 A9 03			lda #$03
 18999 9686 8D 4B 9B			sta LETTERS.OFS+2
 19000 9689 A9 00			lda #$00
 19001 968B 8D 4C 9B			sta LETTERS.OFS+3
 19002
 19003 				; optimize OK (btm.inc), line = 34
 19004
 19005 968E A9 80			lda #$80
 19006 9690 8D 45 9B			sta LETTERS.WIDTH
 19007 9693 A9 00			lda #$00
 19008 9695 8D 46 9B			sta LETTERS.WIDTH+1
 19009
 19010 				; optimize OK (btm.inc), line = 35
 19011
 19012 9698 A9 38			lda #$38
 19013 969A 8D 47 9B			sta LETTERS.HEIGHT
 19014 969D A9 00			lda #$00
 19015 969F 8D 48 9B			sta LETTERS.HEIGHT+1
 19016
 19017 				; optimize OK (btm.inc), line = 37
 19018
 19019 96A2 A9 EA			lda #$EA
 19020 96A4 8D F9 9A			sta NORMAL.OFS
 19021 96A7 A9 9B			lda #$9B
 19022 96A9 8D FA 9A			sta NORMAL.OFS+1
 19023 96AC A9 03			lda #$03
 19024 96AE 8D FB 9A			sta NORMAL.OFS+2
 19025 96B1 A9 00			lda #$00
 19026 96B3 8D FC 9A			sta NORMAL.OFS+3
 19027
 19028 				; optimize OK (btm.inc), line = 38
 19029
 19030 96B6 A9 20			lda #$20
 19031 96B8 8D F5 9A			sta NORMAL.WIDTH
 19032 96BB A9 00			lda #$00
 19033 96BD 8D F6 9A			sta NORMAL.WIDTH+1
 19034
 19035 				; optimize OK (btm.inc), line = 39
 19036
 19037 96C0 A9 07			lda #$07
 19038 96C2 8D F7 9A			sta NORMAL.HEIGHT
 19039 96C5 A9 00			lda #$00
 19040 96C7 8D F8 9A			sta NORMAL.HEIGHT+1
 19041
 19042 				; optimize OK (btm.inc), line = 41
 19043
 19044 96CA A9 CA			lda #$CA
 19045 96CC 8D 09 9B			sta LASERS.OFS
 19046 96CF A9 9C			lda #$9C
 19047 96D1 8D 0A 9B			sta LASERS.OFS+1
 19048 96D4 A9 03			lda #$03
 19049 96D6 8D 0B 9B			sta LASERS.OFS+2
 19050 96D9 A9 00			lda #$00
 19051 96DB 8D 0C 9B			sta LASERS.OFS+3
 19052
 19053 				; optimize OK (btm.inc), line = 42
 19054
 19055 96DE A9 20			lda #$20
 19056 96E0 8D 05 9B			sta LASERS.WIDTH
 19057 96E3 A9 00			lda #$00
 19058 96E5 8D 06 9B			sta LASERS.WIDTH+1
 19059
 19060 				; optimize OK (btm.inc), line = 43
 19061
 19062 96E8 A9 07			lda #$07
 19063 96EA 8D 07 9B			sta LASERS.HEIGHT
 19064 96ED A9 00			lda #$00
 19065 96EF 8D 08 9B			sta LASERS.HEIGHT+1
 19066
 19067 				; optimize OK (btm.inc), line = 45
 19068
 19069 96F2 A9 AA			lda #$AA
 19070 96F4 8D 01 9B			sta ENLARGED.OFS
 19071 96F7 A9 9D			lda #$9D
 19072 96F9 8D 02 9B			sta ENLARGED.OFS+1
 19073 96FC A9 03			lda #$03
 19074 96FE 8D 03 9B			sta ENLARGED.OFS+2
 19075 9701 A9 00			lda #$00
 19076 9703 8D 04 9B			sta ENLARGED.OFS+3
 19077
 19078 				; optimize OK (btm.inc), line = 46
 19079
 19080 9706 A9 40			lda #$40
 19081 9708 8D FD 9A			sta ENLARGED.WIDTH
 19082 970B A9 00			lda #$00
 19083 970D 8D FE 9A			sta ENLARGED.WIDTH+1
 19084
 19085 				; optimize OK (btm.inc), line = 47
 19086
 19087 9710 A9 07			lda #$07
 19088 9712 8D FF 9A			sta ENLARGED.HEIGHT
 19089 9715 A9 00			lda #$00
 19090 9717 8D 00 9B			sta ENLARGED.HEIGHT+1
 19091
 19092 				; optimize OK (btm.inc), line = 49
 19093
 19094 971A A9 6A			lda #$6A
 19095 971C 8D 51 9B			sta SHOOTS.OFS
 19096 971F A9 9F			lda #$9F
 19097 9721 8D 52 9B			sta SHOOTS.OFS+1
 19098 9724 A9 03			lda #$03
 19099 9726 8D 53 9B			sta SHOOTS.OFS+2
 19100 9729 A9 00			lda #$00
 19101 972B 8D 54 9B			sta SHOOTS.OFS+3
 19102
 19103 				; optimize OK (btm.inc), line = 50
 19104
 19105 972E A9 0D			lda #$0D
 19106 9730 8D 4D 9B			sta SHOOTS.WIDTH
 19107 9733 A9 00			lda #$00
 19108 9735 8D 4E 9B			sta SHOOTS.WIDTH+1
 19109
 19110 				; optimize OK (btm.inc), line = 51
 19111
 19112 9738 A9 08			lda #$08
 19113 973A 8D 4F 9B			sta SHOOTS.HEIGHT
 19114 973D A9 00			lda #$00
 19115 973F 8D 50 9B			sta SHOOTS.HEIGHT+1
 19116
 19117 				; optimize OK (btm.inc), line = 53
 19118
 19119 9742 A9 D2			lda #$D2
 19120 9744 8D 59 9B			sta FLUX.OFS
 19121 9747 A9 9F			lda #$9F
 19122 9749 8D 5A 9B			sta FLUX.OFS+1
 19123 974C A9 03			lda #$03
 19124 974E 8D 5B 9B			sta FLUX.OFS+2
 19125 9751 A9 00			lda #$00
 19126 9753 8D 5C 9B			sta FLUX.OFS+3
 19127
 19128 				; optimize OK (btm.inc), line = 54
 19129
 19130 9756 A9 08			lda #$08
 19131 9758 8D 55 9B			sta FLUX.WIDTH
 19132 975B A9 00			lda #$00
 19133 975D 8D 56 9B			sta FLUX.WIDTH+1
 19134
 19135 				; optimize OK (btm.inc), line = 55
 19136
 19137 9760 A9 29			lda #$29
 19138 9762 8D 57 9B			sta FLUX.HEIGHT
 19139 9765 A9 00			lda #$00
 19140 9767 8D 58 9B			sta FLUX.HEIGHT+1
 19141
 19142 				; optimize OK (btm.inc), line = 57
 19143
 19144 976A A9 1A			lda #$1A
 19145 976C 8D E1 9A			sta BALLDATA.OFS
 19146 976F A9 A1			lda #$A1
 19147 9771 8D E2 9A			sta BALLDATA.OFS+1
 19148 9774 A9 03			lda #$03
 19149 9776 8D E3 9A			sta BALLDATA.OFS+2
 19150 9779 A9 00			lda #$00
 19151 977B 8D E4 9A			sta BALLDATA.OFS+3
 19152
 19153 				; optimize OK (btm.inc), line = 58
 19154
 19155 977E A9 05			lda #$05
 19156 9780 8D DD 9A			sta BALLDATA.WIDTH
 19157 9783 A9 00			lda #$00
 19158 9785 8D DE 9A			sta BALLDATA.WIDTH+1
 19159
 19160 				; optimize OK (btm.inc), line = 59
 19161
 19162 9788 A9 05			lda #$05
 19163 978A 8D DF 9A			sta BALLDATA.HEIGHT
 19164 978D A9 00			lda #$00
 19165 978F 8D E0 9A			sta BALLDATA.HEIGHT+1
 19166
 19167 				; optimize OK (btm.inc), line = 61
 19168
 19169 9792 A9 33			lda #$33
 19170 9794 8D 6E 9B			sta PATTERN.OFS
 19171 9797 A9 A1			lda #$A1
 19172 9799 8D 6F 9B			sta PATTERN.OFS+1
 19173 979C A9 03			lda #$03
 19174 979E 8D 70 9B			sta PATTERN.OFS+2
 19175 97A1 A9 00			lda #$00
 19176 97A3 8D 71 9B			sta PATTERN.OFS+3
 19177
 19178 				; optimize OK (btm.inc), line = 62
 19179
 19180 97A6 A9 1A			lda #$1A
 19181 97A8 8D 6A 9B			sta PATTERN.WIDTH
 19182 97AB A9 00			lda #$00
 19183 97AD 8D 6B 9B			sta PATTERN.WIDTH+1
 19184
 19185 				; optimize OK (btm.inc), line = 63
 19186
 19187 97B0 A9 18			lda #$18
 19188 97B2 8D 6C 9B			sta PATTERN.HEIGHT
 19189 97B5 A9 00			lda #$00
 19190 97B7 8D 6D 9B			sta PATTERN.HEIGHT+1
 19191
 19192 				; optimize OK (btm.inc), line = 65
 19193
 19194 97BA A9 A3			lda #$A3
 19195 97BC 8D 76 9B			sta PATTERN0.OFS
 19196 97BF 8D 77 9B			sta PATTERN0.OFS+1
 19197 97C2 A9 03			lda #$03
 19198 97C4 8D 78 9B			sta PATTERN0.OFS+2
 19199 97C7 A9 00			lda #$00
 19200 97C9 8D 79 9B			sta PATTERN0.OFS+3
 19201
 19202 				; optimize OK (btm.inc), line = 66
 19203
 19204 97CC A9 1A			lda #$1A
 19205 97CE 8D 72 9B			sta PATTERN0.WIDTH
 19206 97D1 A9 00			lda #$00
 19207 97D3 8D 73 9B			sta PATTERN0.WIDTH+1
 19208
 19209 				; optimize OK (btm.inc), line = 67
 19210
 19211 97D6 A9 18			lda #$18
 19212 97D8 8D 74 9B			sta PATTERN0.HEIGHT
 19213 97DB A9 00			lda #$00
 19214 97DD 8D 75 9B			sta PATTERN0.HEIGHT+1
 19215
 19216 				; optimize OK (btm.inc), line = 69
 19217
 19218 97E0 A9 13			lda #$13
 19219 97E2 8D 7E 9B			sta PATTERN1.OFS
 19220 97E5 A9 A6			lda #$A6
 19221 97E7 8D 7F 9B			sta PATTERN1.OFS+1
 19222 97EA A9 03			lda #$03
 19223 97EC 8D 80 9B			sta PATTERN1.OFS+2
 19224 97EF A9 00			lda #$00
 19225 97F1 8D 81 9B			sta PATTERN1.OFS+3
 19226
 19227 				; optimize OK (btm.inc), line = 70
 19228
 19229 97F4 A9 0E			lda #$0E
 19230 97F6 8D 7A 9B			sta PATTERN1.WIDTH
 19231 97F9 A9 00			lda #$00
 19232 97FB 8D 7B 9B			sta PATTERN1.WIDTH+1
 19233
 19234 				; optimize OK (btm.inc), line = 71
 19235
 19236 97FE A9 0E			lda #$0E
 19237 9800 8D 7C 9B			sta PATTERN1.HEIGHT
 19238 9803 A9 00			lda #$00
 19239 9805 8D 7D 9B			sta PATTERN1.HEIGHT+1
 19240
 19241 				; optimize OK (btm.inc), line = 73
 19242
 19243 9808 A9 D7			lda #$D7
 19244 980A 8D 86 9B			sta PATTERN2.OFS
 19245 980D A9 A6			lda #$A6
 19246 980F 8D 87 9B			sta PATTERN2.OFS+1
 19247 9812 A9 03			lda #$03
 19248 9814 8D 88 9B			sta PATTERN2.OFS+2
 19249 9817 A9 00			lda #$00
 19250 9819 8D 89 9B			sta PATTERN2.OFS+3
 19251
 19252 				; optimize OK (btm.inc), line = 74
 19253
 19254 981C A9 26			lda #$26
 19255 981E 8D 82 9B			sta PATTERN2.WIDTH
 19256 9821 A9 00			lda #$00
 19257 9823 8D 83 9B			sta PATTERN2.WIDTH+1
 19258
 19259 				; optimize OK (btm.inc), line = 75
 19260
 19261 9826 A9 23			lda #$23
 19262 9828 8D 84 9B			sta PATTERN2.HEIGHT
 19263 982B A9 00			lda #$00
 19264 982D 8D 85 9B			sta PATTERN2.HEIGHT+1
 19265
 19266 				; optimize OK (btm.inc), line = 77
 19267
 19268 9830 A9 09			lda #$09
 19269 9832 8D 8E 9B			sta PATTERN3.OFS
 19270 9835 A9 AC			lda #$AC
 19271 9837 8D 8F 9B			sta PATTERN3.OFS+1
 19272 983A A9 03			lda #$03
 19273 983C 8D 90 9B			sta PATTERN3.OFS+2
 19274 983F A9 00			lda #$00
 19275 9841 8D 91 9B			sta PATTERN3.OFS+3
 19276
 19277 				; optimize OK (btm.inc), line = 78
 19278
 19279 9844 A9 1C			lda #$1C
 19280 9846 8D 8A 9B			sta PATTERN3.WIDTH
 19281 9849 A9 00			lda #$00
 19282 984B 8D 8B 9B			sta PATTERN3.WIDTH+1
 19283
 19284 				; optimize OK (btm.inc), line = 79
 19285
 19286 984E A9 1D			lda #$1D
 19287 9850 8D 8C 9B			sta PATTERN3.HEIGHT
 19288 9853 A9 00			lda #$00
 19289 9855 8D 8D 9B			sta PATTERN3.HEIGHT+1
 19290
 19291 				; optimize OK (btm.inc), line = 81
 19292
 19293 9858 A9 35			lda #$35
 19294 985A 8D 96 9B			sta PATTERN4.OFS
 19295 985D A9 AF			lda #$AF
 19296 985F 8D 97 9B			sta PATTERN4.OFS+1
 19297 9862 A9 03			lda #$03
 19298 9864 8D 98 9B			sta PATTERN4.OFS+2
 19299 9867 A9 00			lda #$00
 19300 9869 8D 99 9B			sta PATTERN4.OFS+3
 19301
 19302 				; optimize OK (btm.inc), line = 82
 19303
 19304 986C A9 1E			lda #$1E
 19305 986E 8D 92 9B			sta PATTERN4.WIDTH
 19306 9871 A9 00			lda #$00
 19307 9873 8D 93 9B			sta PATTERN4.WIDTH+1
 19308
 19309 				; optimize OK (btm.inc), line = 83
 19310
 19311 9876 A9 1E			lda #$1E
 19312 9878 8D 94 9B			sta PATTERN4.HEIGHT
 19313 987B A9 00			lda #$00
 19314 987D 8D 95 9B			sta PATTERN4.HEIGHT+1
 19315
 19316 				; optimize OK (arkanoid_vbxe.pas), line = 158
 19317
 19318 9880 A9 50			lda #$50
 19319 9882 8D B0 9B			sta SCORE.HISCORE
 19320 9885 A9 C3			lda #$C3
 19321 9887 8D B1 9B			sta SCORE.HISCORE+1
 19322 988A A9 00			lda #$00
 19323 988C 8D B2 9B			sta SCORE.HISCORE+2
 19324 988F 8D B3 9B			sta SCORE.HISCORE+3
 19325
 19326 				; optimize OK (arkanoid_vbxe.pas), line = 161
 19327
 19328 9892 A9 01			lda #$01
 19329 9894 8D DB 9B			sta SOUND_ON
 19330
 19331 				; optimize OK (arkanoid_vbxe.pas), line = 162
 19332
 19333 9897 A9 03			lda #$03
 19334 9899 8D BF 9B			sta LV
 19335 989C A9 00			lda #$00
 19336 989E 8D C0 9B			sta LV+1
 19337
 19338 				; --- RepeatUntilProlog
 19339 98A1			l_3864
 19340
 19341 				; optimize FAIL ('MOUSERESET', arkanoid_vbxe.pas), line = 166
 19342
 19343 98A1 20 A6 24			jsr MOUSERESET
 19344
 19345 				; optimize OK (arkanoid_vbxe.pas), line = 170
 19346
 19347 98A4 A9 01			lda #$01
 19348 98A6 8D 69 A6			sta START_GAME.PLAYERS
 19349 98A9 A9 00			lda #$00
 19350 98AB 8D 6A A6			sta START_GAME.PLAYERS+1
 19351 98AE 20 55 92			jsr START_GAME
 19352
 19353 				; optimize OK (arkanoid_vbxe.pas), line = 172
 19354
 19355 98B1 AD B4 9B			lda SCORE.PL_NUMB
 19356 98B4 C9 01			cmp #$01
 19357 98B6 B0 E9			jcs l_3864
 19358
 19359 98B8			@exit
 19360 					.ifdef @new
 19361 					lda <@VarData
 19362 					sta :ztmp
 19363 					lda >@VarData
 19364 					ldy #@VarDataSize-1
 19365 					jmp @FreeMem
 19366 					els
 19367 98B8 60				rts						; ret
 19368 					eif
 19369 				.endl
 19370 98B9			l_0010
 19371
 19372 				; optimize FAIL ('INIT_GAME', arkanoid_vbxe.pas), line = 180
 19373
 19374 98B9 20 38 95			jsr INIT_GAME
 19375
 19376 				; ------------------------------------------------------------
 19377
 19378 = 9AC4			adr.MOUS	= DATAORIGIN+$00A8	; [5] RECORD
 19379 98BC			.var MOUS	= adr.MOUS .word
 19380 = 9AC4			MOUS.X	= DATAORIGIN+$00A8
 19381 = 9AC6			MOUS.Y	= DATAORIGIN+$00AA
 19382 = 9AC8			MOUS.FIRE	= DATAORIGIN+$00AC
 19383 = 5000			VBXE_OVRADR	= $5000
 19384 = 014A00			VBXE_DATA	= $14A00
 19385 = 0000			VRAM	= $00
 19386 = 0001			ERR1	= $01
 19387 = 0002			ERR2	= $02
 19388 = 0003			ERR3	= $03
 19389 = 0004			ERR4	= $04
 19390 = 000A			SCRMIN	= $0A
 19391 = 00D8			SCRMAX	= $D8
 19392 = 000C			SCRTOP	= $0C
 19393 = 00C8			SCRBOT	= $C8
 19394 = 0022			VAUS_W	= $22
 19395 = 0004			VAUS_H	= $04
 19396 = 00B8			VAUS_LINE	= $B8
 19397 = 00FF			EMP	= $FF
 19398 = 0005			BALLDIM	= $05
 19399 = 0003			BALLSPOT	= $03
 19400 = 001E			BALLDEV	= $1E
 19401 = 000A			SPEEDFLASH	= $0A
 19402 = 104C			adr.FLASH	= CODEORIGIN+$004C
 19403 98BC			.var FLASH	= adr.FLASH .word
 19404 = 1057			adr.SCORE_WALL	= CODEORIGIN+$0057
 19405 98BC			.var SCORE_WALL	= adr.SCORE_WALL .word
 19406 = 106D			adr.EMERG_DEV	= CODEORIGIN+$006D
 19407 98BC			.var EMERG_DEV	= adr.EMERG_DEV .word
 19408 = 1076			adr.COLORBLOCK	= CODEORIGIN+$0076
 19409 98BC			.var COLORBLOCK	= adr.COLORBLOCK .word
 19410 = 0001			GRAYDOWN	= $01
 19411 = 0001			STARTWALL	= $01
 19412 = 01F4			BALLSPEED	= $01F4
 19413 = 07D0			MAXSPEED	= $07D0
 19414 = 0064			MAXBRWHIT	= $64
 19415 = 0004			PATNUMBER	= $04
 19416 = 1080			adr.POS_DIGIT	= CODEORIGIN+$0080
 19417 98BC			.var POS_DIGIT	= adr.POS_DIGIT .word
 19418 = 1084			adr.DIGITS	= CODEORIGIN+$0084
 19419 98BC			.var DIGITS	= adr.DIGITS .word
 19420 = 108F			adr.LEVEL	= CODEORIGIN+$008F
 19421 98BC			.var LEVEL	= adr.LEVEL .word
 19422 = 0258			SBDIR	= $0258
 19423 = 0003			DEFLEVEL	= $03
 19424 = 012C			LETTER_PROB	= $012C
 19425 = 03E8			LETTER_DROP	= $03E8
 19426 = 0008			LETTER_NUMB	= $08
 19427 = 0008			LETTER_FRM	= $08
 19428 = 0005			LETTER_SBF	= $05
 19429 = 109B			adr.LETTER_DIS	= CODEORIGIN+$009B
 19430 98BC			.var LETTER_DIS	= adr.LETTER_DIS .word
 19431 = 00B0			FLUXLEVEL	= $B0
 19432 = 9ADD			adr.BALLDATA	= DATAORIGIN+$00C1	; [8] RECORD
 19433 98BC			.var BALLDATA	= adr.BALLDATA .word
 19434 = 9ADD			BALLDATA.WIDTH	= DATAORIGIN+$00C1
 19435 = 9ADF			BALLDATA.HEIGHT	= DATAORIGIN+$00C3
 19436 = 9AE1			BALLDATA.OFS	= DATAORIGIN+$00C5
 19437 = 9AE5			adr.PLAYSCREEN	= DATAORIGIN+$00C9	; [8] RECORD
 19438 98BC			.var PLAYSCREEN	= adr.PLAYSCREEN .word
 19439 = 9AE5			PLAYSCREEN.WIDTH	= DATAORIGIN+$00C9
 19440 = 9AE7			PLAYSCREEN.HEIGHT	= DATAORIGIN+$00CB
 19441 = 9AE9			PLAYSCREEN.OFS	= DATAORIGIN+$00CD
 19442 = 9AED			adr.PLAYVAUS	= DATAORIGIN+$00D1	; [8] RECORD
 19443 98BC			.var PLAYVAUS	= adr.PLAYVAUS .word
 19444 = 9AED			PLAYVAUS.WIDTH	= DATAORIGIN+$00D1
 19445 = 9AEF			PLAYVAUS.HEIGHT	= DATAORIGIN+$00D3
 19446 = 9AF1			PLAYVAUS.OFS	= DATAORIGIN+$00D5
 19447 = 9AF5			adr.NORMAL	= DATAORIGIN+$00D9	; [8] RECORD
 19448 98BC			.var NORMAL	= adr.NORMAL .word
 19449 = 9AF5			NORMAL.WIDTH	= DATAORIGIN+$00D9
 19450 = 9AF7			NORMAL.HEIGHT	= DATAORIGIN+$00DB
 19451 = 9AF9			NORMAL.OFS	= DATAORIGIN+$00DD
 19452 = 9AFD			adr.ENLARGED	= DATAORIGIN+$00E1	; [8] RECORD
 19453 98BC			.var ENLARGED	= adr.ENLARGED .word
 19454 = 9AFD			ENLARGED.WIDTH	= DATAORIGIN+$00E1
 19455 = 9AFF			ENLARGED.HEIGHT	= DATAORIGIN+$00E3
 19456 = 9B01			ENLARGED.OFS	= DATAORIGIN+$00E5
 19457 = 9B05			adr.LASERS	= DATAORIGIN+$00E9	; [8] RECORD
 19458 98BC			.var LASERS	= adr.LASERS .word
 19459 = 9B05			LASERS.WIDTH	= DATAORIGIN+$00E9
 19460 = 9B07			LASERS.HEIGHT	= DATAORIGIN+$00EB
 19461 = 9B09			LASERS.OFS	= DATAORIGIN+$00ED
 19462 = 9B0D			adr.EXPLOSION	= DATAORIGIN+$00F1	; [8] RECORD
 19463 98BC			.var EXPLOSION	= adr.EXPLOSION .word
 19464 = 9B0D			EXPLOSION.WIDTH	= DATAORIGIN+$00F1
 19465 = 9B0F			EXPLOSION.HEIGHT	= DATAORIGIN+$00F3
 19466 = 9B11			EXPLOSION.OFS	= DATAORIGIN+$00F5
 19467 = 9B15			adr.NEWVAUS	= DATAORIGIN+$00F9	; [8] RECORD
 19468 98BC			.var NEWVAUS	= adr.NEWVAUS .word
 19469 = 9B15			NEWVAUS.WIDTH	= DATAORIGIN+$00F9
 19470 = 9B17			NEWVAUS.HEIGHT	= DATAORIGIN+$00FB
 19471 = 9B19			NEWVAUS.OFS	= DATAORIGIN+$00FD
 19472 = 9B1D			adr.PRESENTS	= DATAORIGIN+$0101	; [8] RECORD
 19473 98BC			.var PRESENTS	= adr.PRESENTS .word
 19474 = 9B1D			PRESENTS.WIDTH	= DATAORIGIN+$0101
 19475 = 9B1F			PRESENTS.HEIGHT	= DATAORIGIN+$0103
 19476 = 9B21			PRESENTS.OFS	= DATAORIGIN+$0105
 19477 = 9B25			adr.SOUNDFX	= DATAORIGIN+$0109	; [8] RECORD
 19478 98BC			.var SOUNDFX	= adr.SOUNDFX .word
 19479 = 9B25			SOUNDFX.WIDTH	= DATAORIGIN+$0109
 19480 = 9B27			SOUNDFX.HEIGHT	= DATAORIGIN+$010B
 19481 = 9B29			SOUNDFX.OFS	= DATAORIGIN+$010D
 19482 = 9B2D			adr.SHINEWALL	= DATAORIGIN+$0111	; [8] RECORD
 19483 98BC			.var SHINEWALL	= adr.SHINEWALL .word
 19484 = 9B2D			SHINEWALL.WIDTH	= DATAORIGIN+$0111
 19485 = 9B2F			SHINEWALL.HEIGHT	= DATAORIGIN+$0113
 19486 = 9B31			SHINEWALL.OFS	= DATAORIGIN+$0115
 19487 = 9B35			adr.MINIVAUS	= DATAORIGIN+$0119	; [8] RECORD
 19488 98BC			.var MINIVAUS	= adr.MINIVAUS .word
 19489 = 9B35			MINIVAUS.WIDTH	= DATAORIGIN+$0119
 19490 = 9B37			MINIVAUS.HEIGHT	= DATAORIGIN+$011B
 19491 = 9B39			MINIVAUS.OFS	= DATAORIGIN+$011D
 19492 = 9B3D			adr.LEVELSEL	= DATAORIGIN+$0121	; [8] RECORD
 19493 98BC			.var LEVELSEL	= adr.LEVELSEL .word
 19494 = 9B3D			LEVELSEL.WIDTH	= DATAORIGIN+$0121
 19495 = 9B3F			LEVELSEL.HEIGHT	= DATAORIGIN+$0123
 19496 = 9B41			LEVELSEL.OFS	= DATAORIGIN+$0125
 19497 = 9B45			adr.LETTERS	= DATAORIGIN+$0129	; [8] RECORD
 19498 98BC			.var LETTERS	= adr.LETTERS .word
 19499 = 9B45			LETTERS.WIDTH	= DATAORIGIN+$0129
 19500 = 9B47			LETTERS.HEIGHT	= DATAORIGIN+$012B
 19501 = 9B49			LETTERS.OFS	= DATAORIGIN+$012D
 19502 = 9B4D			adr.SHOOTS	= DATAORIGIN+$0131	; [8] RECORD
 19503 98BC			.var SHOOTS	= adr.SHOOTS .word
 19504 = 9B4D			SHOOTS.WIDTH	= DATAORIGIN+$0131
 19505 = 9B4F			SHOOTS.HEIGHT	= DATAORIGIN+$0133
 19506 = 9B51			SHOOTS.OFS	= DATAORIGIN+$0135
 19507 = 9B55			adr.FLUX	= DATAORIGIN+$0139	; [8] RECORD
 19508 98BC			.var FLUX	= adr.FLUX .word
 19509 = 9B55			FLUX.WIDTH	= DATAORIGIN+$0139
 19510 = 9B57			FLUX.HEIGHT	= DATAORIGIN+$013B
 19511 = 9B59			FLUX.OFS	= DATAORIGIN+$013D
 19512 = 9B5D			adr.VAUS	= DATAORIGIN+$0141	; [13] RECORD
 19513 98BC			.var VAUS	= adr.VAUS .word
 19514 = 9B5D			VAUS.X	= DATAORIGIN+$0141
 19515 = 9B5E			VAUS.Y	= DATAORIGIN+$0142
 19516 = 9B5F			VAUS.OLDX	= DATAORIGIN+$0143
 19517 = 9B61			VAUS.OLDY	= DATAORIGIN+$0145
 19518 = 9B63			VAUS.OLDLEN	= DATAORIGIN+$0147
 19519 = 9B65			VAUS.WIDTH	= DATAORIGIN+$0149
 19520 = 9B66			VAUS.HEIGHT	= DATAORIGIN+$014A
 19521 = 9B67			VAUS.FLASH	= DATAORIGIN+$014B
 19522 = 9B68			VAUS.IFLASH	= DATAORIGIN+$014C
 19523 = 9B69			VAUS.LETTER	= DATAORIGIN+$014D
 19524 = 9B6A			adr.PATTERN	= DATAORIGIN+$014E	; [8] RECORD
 19525 98BC			.var PATTERN	= adr.PATTERN .word
 19526 = 9B6A			PATTERN.WIDTH	= DATAORIGIN+$014E
 19527 = 9B6C			PATTERN.HEIGHT	= DATAORIGIN+$0150
 19528 = 9B6E			PATTERN.OFS	= DATAORIGIN+$0152
 19529 = 9B72			adr.PATTERN0	= DATAORIGIN+$0156	; [8] RECORD
 19530 98BC			.var PATTERN0	= adr.PATTERN0 .word
 19531 = 9B72			PATTERN0.WIDTH	= DATAORIGIN+$0156
 19532 = 9B74			PATTERN0.HEIGHT	= DATAORIGIN+$0158
 19533 = 9B76			PATTERN0.OFS	= DATAORIGIN+$015A
 19534 = 9B7A			adr.PATTERN1	= DATAORIGIN+$015E	; [8] RECORD
 19535 98BC			.var PATTERN1	= adr.PATTERN1 .word
 19536 = 9B7A			PATTERN1.WIDTH	= DATAORIGIN+$015E
 19537 = 9B7C			PATTERN1.HEIGHT	= DATAORIGIN+$0160
 19538 = 9B7E			PATTERN1.OFS	= DATAORIGIN+$0162
 19539 = 9B82			adr.PATTERN2	= DATAORIGIN+$0166	; [8] RECORD
 19540 98BC			.var PATTERN2	= adr.PATTERN2 .word
 19541 = 9B82			PATTERN2.WIDTH	= DATAORIGIN+$0166
 19542 = 9B84			PATTERN2.HEIGHT	= DATAORIGIN+$0168
 19543 = 9B86			PATTERN2.OFS	= DATAORIGIN+$016A
 19544 = 9B8A			adr.PATTERN3	= DATAORIGIN+$016E	; [8] RECORD
 19545 98BC			.var PATTERN3	= adr.PATTERN3 .word
 19546 = 9B8A			PATTERN3.WIDTH	= DATAORIGIN+$016E
 19547 = 9B8C			PATTERN3.HEIGHT	= DATAORIGIN+$0170
 19548 = 9B8E			PATTERN3.OFS	= DATAORIGIN+$0172
 19549 = 9B92			adr.PATTERN4	= DATAORIGIN+$0176	; [8] RECORD
 19550 98BC			.var PATTERN4	= adr.PATTERN4 .word
 19551 = 9B92			PATTERN4.WIDTH	= DATAORIGIN+$0176
 19552 = 9B94			PATTERN4.HEIGHT	= DATAORIGIN+$0178
 19553 = 9B96			PATTERN4.OFS	= DATAORIGIN+$017A
 19554 = 9B9A			STATUS	= DATAORIGIN+$017E
 19555 = 9B9B			SUCCESS	= DATAORIGIN+$017F
 19556 = 9B9C			REMAIN_BLK	= DATAORIGIN+$0180
 19557 = 9B9D			TOTALWALL	= DATAORIGIN+$0181
 19558 = 9B9E			adr.SCORE	= DATAORIGIN+$0182	; [27] RECORD
 19559 98BC			.var SCORE	= adr.SCORE .word
 19560 = 9B9E			adr.SCORE.PLAYER	= [DATAORIGIN+$0182] .array [3] .dword
 19561 98BC			.var SCORE.PLAYER	= adr.SCORE.PLAYER .word
 19562 = 9BAA			adr.SCORE.WALL_N	= [DATAORIGIN+$018E] .array [3]
 19563 98BC			.var SCORE.WALL_N	= adr.SCORE.WALL_N .word
 19564 = 9BAD			adr.SCORE.LIVES	= [DATAORIGIN+$0191] .array [3]
 19565 98BC			.var SCORE.LIVES	= adr.SCORE.LIVES .word
 19566 = 9BB0			SCORE.HISCORE	= DATAORIGIN+$0194
 19567 = 9BB4			SCORE.PL_NUMB	= DATAORIGIN+$0198
 19568 = 9BB5			adr.SCORE.ROUNDSEL	= [DATAORIGIN+$0199] .array [3]
 19569 98BC			.var SCORE.ROUNDSEL	= adr.SCORE.ROUNDSEL .word
 19570 = 9BB8			SCORE.ABORTPLAY	= DATAORIGIN+$019C
 19571 = 9BB9			CUR_PLAYER	= DATAORIGIN+$019D
 19572 = 9BBA			adr.SHINEREC	= DATAORIGIN+$019E	; [5] RECORD
 19573 98BC			.var SHINEREC	= adr.SHINEREC .word
 19574 = 9BBA			SHINEREC.XB	= DATAORIGIN+$019E
 19575 = 9BBB			SHINEREC.YB	= DATAORIGIN+$019F
 19576 = 9BBC			SHINEREC.FRAME	= DATAORIGIN+$01A0
 19577 = 9BBD			SHINEREC.BLOCK	= DATAORIGIN+$01A1
 19578 = 9BBE			SHINEREC.ACTIVE	= DATAORIGIN+$01A2
 19579 = 9BBF			LV	= DATAORIGIN+$01A3
 19580 = 9BC1			TRAINER	= DATAORIGIN+$01A5
 19581 = 9BC2			adr.LETT	= DATAORIGIN+$01A6	; [17] RECORD
 19582 98BC			.var LETT	= adr.LETT .word
 19583 = 9BC2			LETT.X	= DATAORIGIN+$01A6
 19584 = 9BC3			LETT.Y	= DATAORIGIN+$01A7
 19585 = 9BC4			LETT.TYP	= DATAORIGIN+$01A8
 19586 = 9BC6			LETT.FRAME	= DATAORIGIN+$01AA
 19587 = 9BC7			LETT.SUBFRAME	= DATAORIGIN+$01AB
 19588 = 9BC8			LETT.ACTIVE	= DATAORIGIN+$01AC
 19589 = 9BC9			LETT.INCOMING	= DATAORIGIN+$01AD
 19590 = 9BCB			LETT.NEXTX	= DATAORIGIN+$01AF
 19591 = 9BCD			LETT.NEXTY	= DATAORIGIN+$01B1
 19592 = 9BCF			LETT.NEXTTYPE	= DATAORIGIN+$01B3
 19593 = 9BD1			LETT.LAST	= DATAORIGIN+$01B5
 19594 = 9BD3			adr.FIRE	= DATAORIGIN+$01B7	; [5] RECORD
 19595 98BC			.var FIRE	= adr.FIRE .word
 19596 = 9BD3			FIRE.X	= DATAORIGIN+$01B7
 19597 = 9BD4			FIRE.Y	= DATAORIGIN+$01B8
 19598 = 9BD5			FIRE.SHOT	= DATAORIGIN+$01B9
 19599 = 9BD6			FIRE.AVL	= DATAORIGIN+$01BA
 19600 = 9BD7			FIRE.NW	= DATAORIGIN+$01BB
 19601 = 9BD8			BALLS_IN_PLAY	= DATAORIGIN+$01BC
 19602 = 9BD9			SCRFLUX	= DATAORIGIN+$01BD
 19603 = 9BDA			SCRFLUXCNT	= DATAORIGIN+$01BE
 19604 = 9BDB			SOUND_ON	= DATAORIGIN+$01BF
 19605 = 9BDC			adr.DEF_PAL	= [DATAORIGIN+$01C0] .array [768]
 19606 98BC			.var DEF_PAL	= adr.DEF_PAL .word
 19607 = D800			adr.WALL_P	= $D800
 19608 98BC			.var WALL_P	= adr.WALL_P .word
 19609 = DB00			adr.WALL	= $DB00
 19610 98BC			.var WALL	= adr.WALL .word
 19611 = DC00			adr.ALL_WALLS	= $DC00
 19612 98BC			.var ALL_WALLS	= adr.ALL_WALLS .word
 19613 = 9EDC			adr.TMP	= [DATAORIGIN+$04C0] .array [256]
 19614 98BC			.var TMP	= adr.TMP .word
 19615 = 9FDC			adr.ROW	= [DATAORIGIN+$05C0] .array [251] .word
 19616 98BC			.var ROW	= adr.ROW .word
 19617 = A1D2			adr.MODX	= [DATAORIGIN+$07B6] .array [320]
 19618 98BC			.var MODX	= adr.MODX .word
 19619 = A312			adr.MODY	= [DATAORIGIN+$08F6] .array [200]
 19620 98BC			.var MODY	= adr.MODY .word
 19621 = A3DA			adr.SCREEN	= [DATAORIGIN+$09BE] .array [1]
 19622 98BC			.var SCREEN	= adr.SCREEN .word
 19623 98BC			@exit
 19624
 19625 98BC A2 00		@halt	ldx #$00
 19626 98BE 9A				txs
 19627
 19628 					.ifdef MAIN.@DEFINES.ROMOFF
 19629 					inc portb
 19630 					.fi
 19631
 19632 98BF A0 01			ldy #$01
 19633
 19634 98C1 60				rts
 19635
 19636 				; ------------------------------------------------------------
 19637
 19638 98C2			.local	@DEFINES
 19639 98C2			ATARI
 19640 98C2			CPU_6502
 19641 				.endl
 19642
 19643 98C2			.local	@RESOURCE
 19644 				.endl
 19645
 19646 = 98C2 C4 9A		MOUS
 19646 = 98C4 4C 10		FLASH
 19646 = 98C6 57 10		SCORE_WALL
 19646 = 98C8 6D 10		EMERG_DEV
 19646 = 98CA 76 10		COLORBLOCK
 19646 = 98CC 80 10		POS_DIGIT
 19646 = 98CE 84 10		DIGITS
 19646 = 98D0 8F 10		LEVEL
 19646 = 98D2 9B 10		LETTER_DIS
 19646 = 98D4 DD 9A		BALLDATA
 19646 = 98D6 E5 9A		PLAYSCREEN
 19646 = 98D8 ED 9A		PLAYVAUS
 19646 = 98DA F5 9A		NORMAL
 19646 = 98DC FD 9A		ENLARGED
 19646 = 98DE 05 9B		LASERS
 19646 = 98E0 0D 9B		EXPLOSION
 19646 = 98E2 15 9B		NEWVAUS
 19646 = 98E4 1D 9B		PRESENTS
 19646 = 98E6 25 9B		SOUNDFX
 19646 = 98E8 2D 9B		SHINEWALL
 19646 = 98EA 35 9B		MINIVAUS
 19646 = 98EC 3D 9B		LEVELSEL
 19646 = 98EE 45 9B		LETTERS
 19646 = 98F0 4D 9B		SHOOTS
 19646 = 98F2 55 9B		FLUX
 19646 = 98F4 5D 9B		VAUS
 19646 = 98F6 6A 9B		PATTERN
 19646 = 98F8 72 9B		PATTERN0
 19646 = 98FA 7A 9B		PATTERN1
 19646 = 98FC 82 9B		PATTERN2
 19646 = 98FE 8A 9B		PATTERN3
 19646 = 9900 92 9B		PATTERN4
 19646 = 9902 9E 9B		SCORE
 19646 = 9904 9E 9B		SCORE.PLAYER
 19646 = 9906 AA 9B		SCORE.WALL_N
 19646 = 9908 AD 9B		SCORE.LIVES
 19646 = 990A B5 9B		SCORE.ROUNDSEL
 19646 = 990C BA 9B		SHINEREC
 19646 = 990E C2 9B		LETT
 19646 = 9910 D3 9B		FIRE
 19646 = 9912 DC 9B		DEF_PAL
 19646 = 9914 00 D8		WALL_P
 19646 = 9916 00 DB		WALL
 19646 = 9918 00 DC		ALL_WALLS
 19646 = 991A DC 9E		TMP
 19646 = 991C DC 9F		ROW
 19646 = 991E D2 A1		MODX
 19646 = 9920 12 A3		MODY
 19646 = 9922 DA A3		SCREEN
 19646 				.endl							; MAIN
 19647
 19648 				; ------------------------------------------------------------
 19649 				; ------------------------------------------------------------
 19650
 19651 				.macro	UNITINITIALIZATION
 19652 				
 19653 					.ifdef MAIN.SYSTEM.@UnitInit
 19654 					jsr MAIN.SYSTEM.@UnitInit
 19655 					.fi
 19656 				
 19657 					.ifdef MAIN.ATARI.@UnitInit
 19658 					jsr MAIN.ATARI.@UnitInit
 19659 					.fi
 19660 				
 19661 					.ifdef MAIN.CRT.@UnitInit
 19662 					jsr MAIN.CRT.@UnitInit
 19663 					.fi
 19664 				
 19665 					.ifdef MAIN.TYPES.@UnitInit
 19666 					jsr MAIN.TYPES.@UnitInit
 19667 					.fi
 19668 				
 19669 					.ifdef MAIN.GRAPH.@UnitInit
 19670 					jsr MAIN.GRAPH.@UnitInit
 19671 					.fi
 19672 				
 19673 					.ifdef MAIN.VBXE.@UnitInit
 19674 					jsr MAIN.VBXE.@UnitInit
 19675 					.fi
 19676 				.endm
 19677
 19678 				; ------------------------------------------------------------
 19679
 19680 					ift .SIZEOF(MAIN.SYSTEM) > 0
 19681 					.print 'SYSTEM: ',MAIN.SYSTEM,'..',MAIN.SYSTEM+.SIZEOF(MAIN.SYSTEM)-1
 19681 				SYSTEM: $1B6D..$2486
 19682 					eif
 19683
 19684 					ift .SIZEOF(MAIN.ATARI) > 0
 19685 					.print 'ATARI: ',MAIN.ATARI,'..',MAIN.ATARI+.SIZEOF(MAIN.ATARI)-1
 19686 					eif
 19687
 19688 					ift .SIZEOF(MAIN.CRT) > 0
 19689 					.print 'CRT: ',MAIN.CRT,'..',MAIN.CRT+.SIZEOF(MAIN.CRT)-1
 19690 					eif
 19691
 19692 					ift .SIZEOF(MAIN.TYPES) > 0
 19693 					.print 'TYPES: ',MAIN.TYPES,'..',MAIN.TYPES+.SIZEOF(MAIN.TYPES)-1
 19694 					eif
 19695
 19696 					ift .SIZEOF(MAIN.GRAPH) > 0
 19697 					.print 'GRAPH: ',MAIN.GRAPH,'..',MAIN.GRAPH+.SIZEOF(MAIN.GRAPH)-1
 19697 				GRAPH: $2487..$2488
 19698 					eif
 19699
 19700 					ift .SIZEOF(MAIN.VBXE) > 0
 19701 					.print 'VBXE: ',MAIN.VBXE,'..',MAIN.VBXE+.SIZEOF(MAIN.VBXE)-1
 19701 				VBXE: $2489..$24A2
 19702 					eif
 19703
 19704 				.nowarn	.print 'CODE: ',CODEORIGIN,'..',MAIN.@RESOURCE-1
 19704 				CODE: $1000..$98C1
 19705
 19706 					ift .SIZEOF(MAIN.@RESOURCE)>0
 19707 				.nowarn	.print 'RESOURCE: ',MAIN.@RESOURCE,'..',MAIN.@RESOURCE+.SIZEOF(MAIN.@RESOURCE)-1
 19708 					eif
 19709
 19710 9924			@end
 19711
 19712 				.nowarn	.print 'VARS: ',MAIN.@RESOURCE+.SIZEOF(MAIN.@RESOURCE),'..',@end-1
 19712 				VARS: $98C2..$9923
 19713
 19714 				; ------------------------------------------------------------
 19715
 19716 = 9924				?adr = *
 19717 					ift (?adr < ?old_adr) && (?old_adr - ?adr < $120)
 19718 = 9A1C				?adr = ?old_adr
 19719 					eif
 19720
 19721 					org ?adr
 19722 = 9A1C				?old_adr = *
 19723
 19724 9A1C			DATAORIGIN
 19725 9A1C-9A7D> 2D 0C 00 00 + .by  $2D $0C $00 $00 $00 $28 $00 $18  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 19726 9A34 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 19727 9A4C 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 19728 9A64 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $27 $00 $00
 19729 9A7C 00 17		.by  $00 $17
 19730
 19731 = 0062			VARINITSIZE	= *-DATAORIGIN
 19732 = 0C50			VARDATASIZE	= 3152
 19733
 19734 = A66C			PROGRAMSTACK	= DATAORIGIN+VARDATASIZE
 19735
 19736 					.print 'DATA: ',DATAORIGIN,'..',PROGRAMSTACK
 19736 				DATA: $9A1C..$A66C
 19737
 19738 					ert DATAORIGIN<@end,'DATA memory overlap'
 19739
 19740 02E0-02E1> 33 1B			run START
 19741
 19742 				; ------------------------------------------------------------
 19743
 19744 				.macro	STATICDATA
 19745 				.by  $0B $47 $61 $6D $65 $20 $50 $61  $75 $73 $65 $64 $00 $00 $00 $00  $00 $00 $AA $00 $00 $AA $00 $00
 19746 				.by  $00 $55 $AA $00 $AA $00 $00 $00  $AA $00 $AA $00 $AA $AA $00 $00  $AA $AA $AA $00 $55 $55 $55 $00
 19747 				.by  $55 $55 $FF $00 $55 $FF $55 $00  $55 $FF $FF $00 $FF $55 $55 $00  $FF $55 $FF $00 $FF $FF $55 $00
 19748 				.by  $FF $FF $FF $00 $FF $D4 $D3 $D2  $D1 $D0 $CF $CE $CD $CC $CB $00  $00 $0A $00 $14 $00 $1E $00 $28
 19749 				.by  $00 $32 $00 $64 $00 $C8 $00 $FA  $00 $F4 $01 $E8 $03 $00 $02 $13  $24 $35 $12 $23 $34 $45 $D4 $D3
 19750 				.by  $D2 $D1 $D0 $CF $CE $CD $CC $CB  $00 $3C $5D $80 $7D $60 $37 $67  $6A $4F $5F $61 $7F $6F $00 $00
 19751 				.by  $00 $E8 $03 $2C $01 $64 $00 $3C  $00 $23 $00 $00 $10 $14 $03 $12  $14 $14 $03
 19752 				.endm
 19753
 19754 					end
