mads 2.1.8 build 10 (6 Jul 25)
d:\!Delphi\Arkanoid\vbxe\arkanoid_vbxe.a65 -hm -xli:d:\!Delphi\MadPascal\base 
Source: arkanoid_vbxe.a65
     1 				; ------------------------------------------------------------
     2 				; Mad Pascal Compiler version 1.7.3 [2025/08/03] for MOS 6502 CPU
     3 				; ------------------------------------------------------------
     4
     5 = 0010			STACKWIDTH	= 16
     6 = 1000			CODEORIGIN	= $1000
     7
     8 = 0001			TRUE		= 1
     9 = 0000			FALSE		= 0
    10 = 009B			EOL		= $9B
    11 = 0400			__BUFFER	= $0400
    12 = 0400			@BUF		= __BUFFER
    13
    14 				; ------------------------------------------------------------
    15
    16 					org $80
    17
    18 				zpage
    19
    20 				.if .def(@vbxe_detect)
    21 = 0080			fxptr	.ds 2						; VBXE pointer
    22 				.fi
    23
    24 				.if .def(@AllocMem)||.def(MAIN.SYSTEM.GETMEM)||.def(MAIN.SYSTEM.FREEMEM)
    25 				psptr	.ds 2						; PROGRAMSTACK Pointer
    26 				.fi
    27
    28 = 0082			bp	.ds 2
    29 = 0084			bp2	.ds 2
    30 = 0083			bp3	= bp+1
    31
    32 = 0086			eax	.ds 4						;8 bytes (aex + edx) -> divREAL
    33 = 008A			edx	.ds 4
    34 = 008E			ecx	.ds 4
    35
    36 				TMP
    37 				ztmp
    38 = 0092			ztmp8	.ds 1
    39 = 0093			ztmp9	.ds 1
    40 = 0094			ztmp10	.ds 1
    41 = 0095			ztmp11	.ds 1
    42
    43 = 0096			STACKORIGIN	.ds STACKWIDTH*4
    44 				zpend
    45
    46 				; ------------------------------------------------------------
    47
    48 = 0086			ax	= eax
    49 = 0086			al	= eax
    50 = 0087			ah	= eax+1
    51
    52 = 008E			cx	= ecx
    53 = 008E			cl	= ecx
    54 = 008F			ch	= ecx+1
    55
    56 = 008A			dx	= edx
    57 = 008A			dl	= edx
    58 = 008B			dh	= edx+1
    59
    60 					org eax
    61
    62 = 0086			FP1MAN0	.ds 1
    63 = 0087			FP1MAN1	.ds 1
    64 = 0088			FP1MAN2	.ds 1
    65 = 0089			FP1MAN3	.ds 1
    66
    67 					org edx
    68
    69 = 008A			FP2MAN0	.ds 1
    70 = 008B			FP2MAN1	.ds 1
    71 = 008C			FP2MAN2	.ds 1
    72 = 008D			FP2MAN3	.ds 1
    73
    74 					org ecx
    75
    76 = 008E			FPMAN0	.ds 1
    77 = 008F			FPMAN1	.ds 1
    78 = 0090			FPMAN2	.ds 1
    79 = 0091			FPMAN3	.ds 1
    80
    81 					org ztmp8
    82
    83 = 0092			FP1SGN	.ds 1
    84 = 0093			FP1EXP	.ds 1
    85
    86 					org ztmp10
    87
    88 = 0094			FP2SGN	.ds 1
    89 = 0095			FP2EXP	.ds 1
    90
    91 					org bp2
    92
    93 = 0084			FPSGN	.ds 1
    94 = 0085			FPEXP	.ds 1
    95
    96 					.ifdef MAIN.@DEFINES.BASICOFF
    97 					org CODEORIGIN
    98 					icl 'atari\basicoff.asm'
    99 					ini CODEORIGIN
   100 					.fi
   101
   102 					.ifdef MAIN.@DEFINES.S_VBXE
   103 					opt h-
   104 					ins 'atari\s_vbxe\sdxld2.obx'
   105 					opt h+
   106 					.fi
   107
   108 				; ------------------------------------------------------------
   109
   110 					org CODEORIGIN
   111
   112 1000				STATICDATA
Macro: STATICDATA [Source: arkanoid_vbxe.a65]
     1 FFFF> 1000-9B30> 0B 47 + .by  $0B $47 $61 $6D $65 $20 $50 $61  $75 $73 $65 $64 $00 $00 $00 $00  $00 $00 $AA $00 $00 $AA $00 $00
     2 1018 00 55 AA 00 AA 00 + .by  $00 $55 $AA $00 $AA $00 $00 $00  $AA $00 $AA $00 $AA $AA $00 $00  $AA $AA $AA $00 $55 $55 $55 $00
     3 1030 55 55 FF 00 55 FF + .by  $55 $55 $FF $00 $55 $FF $55 $00  $55 $FF $FF $00 $FF $55 $55 $00  $FF $55 $FF $00 $FF $FF $55 $00
     4 1048 FF FF FF 00 FF D4 + .by  $FF $FF $FF $00 $FF $D4 $D3 $D2  $D1 $D0 $CF $CE $CD $CC $CB $00  $00 $0A $00 $14 $00 $1E $00 $28
     5 1060 00 32 00 64 00 C8 + .by  $00 $32 $00 $64 $00 $C8 $00 $FA  $00 $F4 $01 $E8 $03 $00 $02 $13  $24 $35 $12 $23 $34 $45 $D4 $D3
     6 1078 D2 D1 D0 CF CE CD + .by  $D2 $D1 $D0 $CF $CE $CD $CC $CB  $00 $3C $5D $80 $7D $60 $37 $67  $6A $4F $5F $61 $7F $6F $00 $00
     7 1090 00 E8 03 2C 01 64 + .by  $00 $E8 $03 $2C $01 $64 $00 $3C  $00 $23 $00 $00 $10 $14 $03 $12  $14 $14 $03
Source: arkanoid_vbxe.a65
   113
   114 				; ------------------------------------------------------------
   115
   116 10A3			RTLIB
   117 10A3				icl 'rtl6502_a8.asm'
Source: rtl6502_a8.asm
    64 					opt l+
   118
   119 				.print 'ZPAGE: ',zpage,'..',zpend-1
   119 				ZPAGE: $0080..$00D5
   120
   121 				.print 'RTBUF: ',@buf,'..',@buf+255
   121 				RTBUF: $0400..$04FF
   122
   123 				.print 'RTLIB: ',RTLIB,'..',*-1
   123 				RTLIB: $10A3..$1B32
   124
   125 				; ------------------------------------------------------------
   126
   127 1B33			START
   128 1B33 BA				tsx
   129 1B34 8E CA 9A			stx MAIN.@halt+1
   130
   131 					.ifdef MAIN.@DEFINES.ROMOFF
   132 					icl 'atari\romoff.asm'
   133 					.fi
   134
   135 = 1100			VLEN	= VARDATASIZE-VARINITSIZE
   136 = 9C7F			VADR	= DATAORIGIN+VARINITSIZE
   137
   138 					ift (VADR > $BFFF) && .not(.def MAIN.@DEFINES.ROMOFF)
   139 					ert 'Invalid memory address range ',VADR
   140 					eif
   141
   142 					ift (VLEN > 0) && (VLEN <= 256)
   143 					ldx #256-VLEN
   144 					lda #$00
   145 					sta:rne VADR+VLEN-256,x+
   146 					eli VLEN>256
   147 1B37				m@init
Macro: M@INIT [Source: macros.asm]
     2 1B37 A0 7F			ldy <VADR
     3 1B39 A2 9C			ldx >VADR
     5 1B3B A9 00			lda #$00
     6 1B3D F0 07			beq skp_
     8 1B3F 99 00 10		clr	sta adr: $1000,y
    10 1B42 C8				iny
    11 1B43 D0 04			bne skp
    12 1B45 E8				inx
    13 1B46 8E 41 1B		skp_	stx adr+1
    15 1B49 E0 AD		skp	cpx >VADR+VLEN
    16 1B4B D0 F2			bne clr
    17 1B4D C0 7F			cpy <VADR+VLEN
    18 1B4F D0 EE			bne clr
   148 					eif
   149
   150 				.ifdef psptr
   151 					mwa #PROGRAMSTACK psptr
   152 				.fi
   153
   154 1B51 A2 00			ldx #$00					; X = 0
   155 1B53 86 82			stx bp						; BP = 0
   156
   157 1B55 8E 08 D2			stx audctl					; reset POKEY
   158 1B58 8E 18 D2			stx audctl+$10
   159 1B5B A9 03			lda #3
   160 1B5D 8D 0F D2			sta skctl
   161 1B60 8D 1F D2			sta skctl+$10
   162
   163 1B63 CA				dex						; X = 255
   164
   165 1B64				UNITINITIALIZATION
Macro: UNITINITIALIZATION [Source: arkanoid_vbxe.a65]
     3 1B64 20 75 24			jsr MAIN.SYSTEM.@UnitInit
    23 1B67 20 7E 24			jsr MAIN.VBXE.@UnitInit
   166
   167 1B6A			.local	MAIN						; PROCEDURE
   168
   169 1B6A 4C C6 9A			jmp l_0010
   170
   171 				; ------------------------------------------------------------
   172
   173 1B6D			.local	SYSTEM						; UNIT
   174
   175 1B6D			.local	ABS						; FUNCTION | ASSEMBLER | OVERLOAD | REGISTER
   176 1B6D			.local	@010184000
   177
   178 				; -------------------  ASM Block 00000008  -------------------
   179
   180 1B6D A5 8B			lda :edx+1
   181 1B6F 10 0D			bpl @+
   182
   183 1B71 A9 00			lda #$00
   184 1B73 38 E5 8A			sub :edx
   185 1B76 85 8A			sta :edx
   186 1B78 A9 00			lda #$00
   187 1B7A E5 8B			sbc :edx+1
   188 1B7C 85 8B			sta :edx+1
   189 				@
   190 1B7E 85 93			sta Result+1
   191
   192 1B80 A5 8A 85 92			mva :edx Result
   193
   194 1B84			@exit
   195
   196 				; ------------------------------------------------------------
   197
   198 = 008A			X	= :EDX
   199 = 0092			RESULT	= :STACKORIGIN-4
   200
   201 1B84 60				rts						; ret
   202 				.endl
   203 				.endl							; overload
   204
   205 1B85			.local	ABS						; FUNCTION | ASSEMBLER | OVERLOAD | REGISTER
   206 1B85			.local	@010185000
   207
   208 				; -------------------  ASM Block 00000009  -------------------
   209
   210 1B85 A5 8D			lda :edx+3
   211 1B87 10 03			spl
   212 1B89 20 21 11			jsr @negEDX
   213
   214 1B8C 85 95			sta Result+3
   215
   216 1B8E A5 8A 85 92			mva :edx Result
   217 1B92 A5 8B 85 93			mva :edx+1 Result+1
   218 1B96 A5 8C 85 94			mva :edx+2 Result+2
   219
   220 1B9A			@exit
   221
   222 				; ------------------------------------------------------------
   223
   224 = 008A			X	= :EDX
   225 = 0092			RESULT	= :STACKORIGIN-4
   226
   227 1B9A 60				rts						; ret
   228 				.endl
   229 				.endl							; overload
   230
   231 1B9B			.local	SQRT						; FUNCTION | OVERLOAD
   232 1B9B			.local	@010185000
   233
   234 				; optimize OK (SYSTEM), line = 801
   235
   236 1B9B AD 2B 9C			lda X+3
   237 1B9E 30 0B			bmi @+
   238 1BA0 0D 2A 9C			ora X+2
   239 1BA3 0D 29 9C			ora X+1
   240 1BA6 0D 28 9C			ora X
   241 1BA9 D0 11			jne l_0029
   242 				@
   243 1BAB A9 00			lda #$00
   244 1BAD 8D 2C 9C			sta RESULT
   245 1BB0 8D 2D 9C			sta RESULT+1
   246 1BB3 8D 2E 9C			sta RESULT+2
   247 1BB6 8D 2F 9C			sta RESULT+3
   248 1BB9 4C 2F 1E			jmp @exit
   249 1BBC			l_0029
   250
   251 				; optimize OK (SYSTEM), line = 803
   252
   253 1BBC A9 32			lda <C
   254 1BBE 8D 30 9C			sta SP
   255 1BC1 A9 9C			lda >C
   256 1BC3 8D 31 9C			sta SP+1
   257
   258 				; optimize OK (SYSTEM), line = 805
   259
   260 1BC6 AD 28 9C			lda X
   261 1BC9 85 8E			sta :FPMAN0
   262 1BCB AD 29 9C			lda X+1
   263 1BCE 85 8F			sta :FPMAN1
   264 1BD0 AD 2A 9C			lda X+2
   265 1BD3 85 90			sta :FPMAN2
   266 1BD5 AD 2B 9C			lda X+3
   267 1BD8 85 91			sta :FPMAN3
   268 1BDA 20 12 19			jsr @I2F
   269 1BDD A5 8E			lda :FPMAN0
   270 1BDF 8D 32 9C			sta C
   271 1BE2 A5 8F			lda :FPMAN1
   272 1BE4 8D 33 9C			sta C+1
   273 1BE7 A5 90			lda :FPMAN2
   274 1BE9 8D 34 9C			sta C+2
   275 1BEC A5 91			lda :FPMAN3
   276 1BEE 8D 35 9C			sta C+3
   277
   278 				; optimize OK (SYSTEM), line = 807
   279
   280 1BF1 C9 3F			cmp #$3F
   281 1BF3 D0 13			bne @+
   282 1BF5 AD 34 9C			lda C+2
   283 1BF8 C9 80			cmp #$80
   284 1BFA D0 0C			bne @+
   285 1BFC AD 33 9C			lda C+1
   286 1BFF C9 00			cmp #$00
   287 1C01 D0 05			bne @+
   288 1C03 AD 32 9C			lda C
   289 1C06 C9 01			cmp #$01
   290 				@
   291 1C08 90 3A			jcc l_0048
   292 1C0A AD 32 9C			lda C
   293 1C0D 85 9F			sta :STACKORIGIN+9
   294 1C0F AD 33 9C			lda C+1
   295 1C12 85 AF			sta :STACKORIGIN+STACKWIDTH+9
   296 1C14 AD 34 9C			lda C+2
   297 1C17 38 E9 80			sub #$80
   298 1C1A 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
   299 1C1C AD 35 9C			lda C+3
   300 1C1F E9 3F			sbc #$3F
   301 1C21 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
   302 1C23 46 CF			lsr :STACKORIGIN+STACKWIDTH*3+9
   303 1C25 66 BF			ror :STACKORIGIN+STACKWIDTH*2+9
   304 1C27 66 AF			ror :STACKORIGIN+STACKWIDTH+9
   305 1C29 66 9F			ror :STACKORIGIN+9
   306 1C2B A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
   307 1C2D 18 69 80			add #$80
   308 1C30 8D 34 9C			sta C+2
   309 1C33 A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
   310 1C35 69 3F			adc #$3F
   311 1C37 8D 35 9C			sta C+3
   312 1C3A A5 9F			lda :STACKORIGIN+9
   313 1C3C 8D 32 9C			sta C
   314 1C3F A5 AF			lda :STACKORIGIN+STACKWIDTH+9
   315 1C41 8D 33 9C			sta C+1
   316 1C44			l_0048
   317
   318 				; optimize OK (SYSTEM), line = 809
   319
   320 1C44 AC 30 9C 84 84 AC + 	mwy SP :bp2
   321 1C4E A0 00			ldy #$00
   322 1C50 B1 84			lda (:bp2),y
   323 1C52 8D 2C 9C			sta RESULT
   324 1C55 C8				iny
   325 1C56 B1 84			lda (:bp2),y
   326 1C58 8D 2D 9C			sta RESULT+1
   327 1C5B C8				iny
   328 1C5C B1 84			lda (:bp2),y
   329 1C5E 8D 2E 9C			sta RESULT+2
   330 1C61 C8				iny
   331 1C62 B1 84			lda (:bp2),y
   332 1C64 8D 2F 9C			sta RESULT+3
   333
   334 				; optimize OK (SYSTEM), line = 811
   335
   336 1C67 AD 28 9C			lda X
   337 1C6A 85 8E			sta :FPMAN0
   338 1C6C AD 29 9C			lda X+1
   339 1C6F 85 8F			sta :FPMAN1
   340 1C71 AD 2A 9C			lda X+2
   341 1C74 85 90			sta :FPMAN2
   342 1C76 AD 2B 9C			lda X+3
   343 1C79 85 91			sta :FPMAN3
   344 1C7B 20 12 19			jsr @I2F
   345 1C7E A5 8E			lda :FPMAN0
   346 1C80 85 86			sta :FP1MAN0
   347 1C82 A5 8F			lda :FPMAN1
   348 1C84 85 87			sta :FP1MAN1
   349 1C86 A5 90			lda :FPMAN2
   350 1C88 85 88			sta :FP1MAN2
   351 1C8A A5 91			lda :FPMAN3
   352 1C8C 85 89			sta :FP1MAN3
   353 1C8E AD 2C 9C			lda RESULT
   354 1C91 85 8A			sta :FP2MAN0
   355 1C93 AD 2D 9C			lda RESULT+1
   356 1C96 85 8B			sta :FP2MAN1
   357 1C98 AD 2E 9C			lda RESULT+2
   358 1C9B 85 8C			sta :FP2MAN2
   359 1C9D AD 2F 9C			lda RESULT+3
   360 1CA0 85 8D			sta :FP2MAN3
   361 1CA2 20 25 18			jsr @FDIV
   362 1CA5 A5 8E			lda :FPMAN0
   363 1CA7 85 8A			sta :FP2MAN0
   364 1CA9 A5 8F			lda :FPMAN1
   365 1CAB 85 8B			sta :FP2MAN1
   366 1CAD A5 90			lda :FPMAN2
   367 1CAF 85 8C			sta :FP2MAN2
   368 1CB1 A5 91			lda :FPMAN3
   369 1CB3 85 8D			sta :FP2MAN3
   370 1CB5 AD 2C 9C			lda RESULT
   371 1CB8 85 86			sta :FP1MAN0
   372 1CBA AD 2D 9C			lda RESULT+1
   373 1CBD 85 87			sta :FP1MAN1
   374 1CBF AD 2E 9C			lda RESULT+2
   375 1CC2 85 88			sta :FP1MAN2
   376 1CC4 AD 2F 9C			lda RESULT+3
   377 1CC7 85 89			sta :FP1MAN3
   378 1CC9 20 18 16			jsr @FADD
   379 1CCC A5 8E			lda :FPMAN0
   380 1CCE 85 86			sta :FP1MAN0
   381 1CD0 A5 8F			lda :FPMAN1
   382 1CD2 85 87			sta :FP1MAN1
   383 1CD4 A5 90			lda :FPMAN2
   384 1CD6 85 88			sta :FP1MAN2
   385 1CD8 A5 91			lda :FPMAN3
   386 1CDA 85 89			sta :FP1MAN3
   387 1CDC A9 00			lda #$00
   388 1CDE 85 8A			sta :FP2MAN0
   389 1CE0 85 8B			sta :FP2MAN1
   390 1CE2 85 8C			sta :FP2MAN2
   391 1CE4 A9 3F			lda #$3F
   392 1CE6 85 8D			sta :FP2MAN3
   393 1CE8 20 84 17			jsr @FMUL
   394 1CEB A5 8E			lda :FPMAN0
   395 1CED 8D 2C 9C			sta RESULT
   396 1CF0 A5 8F			lda :FPMAN1
   397 1CF2 8D 2D 9C			sta RESULT+1
   398 1CF5 A5 90			lda :FPMAN2
   399 1CF7 8D 2E 9C			sta RESULT+2
   400 1CFA A5 91			lda :FPMAN3
   401 1CFC 8D 2F 9C			sta RESULT+3
   402
   403 				; optimize OK (SYSTEM), line = 812
   404
   405 1CFF AD 28 9C			lda X
   406 1D02 85 8E			sta :FPMAN0
   407 1D04 AD 29 9C			lda X+1
   408 1D07 85 8F			sta :FPMAN1
   409 1D09 AD 2A 9C			lda X+2
   410 1D0C 85 90			sta :FPMAN2
   411 1D0E AD 2B 9C			lda X+3
   412 1D11 85 91			sta :FPMAN3
   413 1D13 20 12 19			jsr @I2F
   414 1D16 A5 8E			lda :FPMAN0
   415 1D18 85 86			sta :FP1MAN0
   416 1D1A A5 8F			lda :FPMAN1
   417 1D1C 85 87			sta :FP1MAN1
   418 1D1E A5 90			lda :FPMAN2
   419 1D20 85 88			sta :FP1MAN2
   420 1D22 A5 91			lda :FPMAN3
   421 1D24 85 89			sta :FP1MAN3
   422 1D26 AD 2C 9C			lda RESULT
   423 1D29 85 8A			sta :FP2MAN0
   424 1D2B AD 2D 9C			lda RESULT+1
   425 1D2E 85 8B			sta :FP2MAN1
   426 1D30 AD 2E 9C			lda RESULT+2
   427 1D33 85 8C			sta :FP2MAN2
   428 1D35 AD 2F 9C			lda RESULT+3
   429 1D38 85 8D			sta :FP2MAN3
   430 1D3A 20 25 18			jsr @FDIV
   431 1D3D A5 8E			lda :FPMAN0
   432 1D3F 85 8A			sta :FP2MAN0
   433 1D41 A5 8F			lda :FPMAN1
   434 1D43 85 8B			sta :FP2MAN1
   435 1D45 A5 90			lda :FPMAN2
   436 1D47 85 8C			sta :FP2MAN2
   437 1D49 A5 91			lda :FPMAN3
   438 1D4B 85 8D			sta :FP2MAN3
   439 1D4D AD 2C 9C			lda RESULT
   440 1D50 85 86			sta :FP1MAN0
   441 1D52 AD 2D 9C			lda RESULT+1
   442 1D55 85 87			sta :FP1MAN1
   443 1D57 AD 2E 9C			lda RESULT+2
   444 1D5A 85 88			sta :FP1MAN2
   445 1D5C AD 2F 9C			lda RESULT+3
   446 1D5F 85 89			sta :FP1MAN3
   447 1D61 20 18 16			jsr @FADD
   448 1D64 A5 8E			lda :FPMAN0
   449 1D66 85 86			sta :FP1MAN0
   450 1D68 A5 8F			lda :FPMAN1
   451 1D6A 85 87			sta :FP1MAN1
   452 1D6C A5 90			lda :FPMAN2
   453 1D6E 85 88			sta :FP1MAN2
   454 1D70 A5 91			lda :FPMAN3
   455 1D72 85 89			sta :FP1MAN3
   456 1D74 A9 00			lda #$00
   457 1D76 85 8A			sta :FP2MAN0
   458 1D78 85 8B			sta :FP2MAN1
   459 1D7A 85 8C			sta :FP2MAN2
   460 1D7C A9 3F			lda #$3F
   461 1D7E 85 8D			sta :FP2MAN3
   462 1D80 20 84 17			jsr @FMUL
   463 1D83 A5 8E			lda :FPMAN0
   464 1D85 8D 2C 9C			sta RESULT
   465 1D88 A5 8F			lda :FPMAN1
   466 1D8A 8D 2D 9C			sta RESULT+1
   467 1D8D A5 90			lda :FPMAN2
   468 1D8F 8D 2E 9C			sta RESULT+2
   469 1D92 A5 91			lda :FPMAN3
   470 1D94 8D 2F 9C			sta RESULT+3
   471
   472 				; optimize OK (SYSTEM), line = 813
   473
   474 1D97 AD 28 9C			lda X
   475 1D9A 85 8E			sta :FPMAN0
   476 1D9C AD 29 9C			lda X+1
   477 1D9F 85 8F			sta :FPMAN1
   478 1DA1 AD 2A 9C			lda X+2
   479 1DA4 85 90			sta :FPMAN2
   480 1DA6 AD 2B 9C			lda X+3
   481 1DA9 85 91			sta :FPMAN3
   482 1DAB 20 12 19			jsr @I2F
   483 1DAE A5 8E			lda :FPMAN0
   484 1DB0 85 86			sta :FP1MAN0
   485 1DB2 A5 8F			lda :FPMAN1
   486 1DB4 85 87			sta :FP1MAN1
   487 1DB6 A5 90			lda :FPMAN2
   488 1DB8 85 88			sta :FP1MAN2
   489 1DBA A5 91			lda :FPMAN3
   490 1DBC 85 89			sta :FP1MAN3
   491 1DBE AD 2C 9C			lda RESULT
   492 1DC1 85 8A			sta :FP2MAN0
   493 1DC3 AD 2D 9C			lda RESULT+1
   494 1DC6 85 8B			sta :FP2MAN1
   495 1DC8 AD 2E 9C			lda RESULT+2
   496 1DCB 85 8C			sta :FP2MAN2
   497 1DCD AD 2F 9C			lda RESULT+3
   498 1DD0 85 8D			sta :FP2MAN3
   499 1DD2 20 25 18			jsr @FDIV
   500 1DD5 A5 8E			lda :FPMAN0
   501 1DD7 85 8A			sta :FP2MAN0
   502 1DD9 A5 8F			lda :FPMAN1
   503 1DDB 85 8B			sta :FP2MAN1
   504 1DDD A5 90			lda :FPMAN2
   505 1DDF 85 8C			sta :FP2MAN2
   506 1DE1 A5 91			lda :FPMAN3
   507 1DE3 85 8D			sta :FP2MAN3
   508 1DE5 AD 2C 9C			lda RESULT
   509 1DE8 85 86			sta :FP1MAN0
   510 1DEA AD 2D 9C			lda RESULT+1
   511 1DED 85 87			sta :FP1MAN1
   512 1DEF AD 2E 9C			lda RESULT+2
   513 1DF2 85 88			sta :FP1MAN2
   514 1DF4 AD 2F 9C			lda RESULT+3
   515 1DF7 85 89			sta :FP1MAN3
   516 1DF9 20 18 16			jsr @FADD
   517 1DFC A5 8E			lda :FPMAN0
   518 1DFE 85 86			sta :FP1MAN0
   519 1E00 A5 8F			lda :FPMAN1
   520 1E02 85 87			sta :FP1MAN1
   521 1E04 A5 90			lda :FPMAN2
   522 1E06 85 88			sta :FP1MAN2
   523 1E08 A5 91			lda :FPMAN3
   524 1E0A 85 89			sta :FP1MAN3
   525 1E0C A9 00			lda #$00
   526 1E0E 85 8A			sta :FP2MAN0
   527 1E10 85 8B			sta :FP2MAN1
   528 1E12 85 8C			sta :FP2MAN2
   529 1E14 A9 3F			lda #$3F
   530 1E16 85 8D			sta :FP2MAN3
   531 1E18 20 84 17			jsr @FMUL
   532 1E1B A5 8E			lda :FPMAN0
   533 1E1D 8D 2C 9C			sta RESULT
   534 1E20 A5 8F			lda :FPMAN1
   535 1E22 8D 2D 9C			sta RESULT+1
   536 1E25 A5 90			lda :FPMAN2
   537 1E27 8D 2E 9C			sta RESULT+2
   538 1E2A A5 91			lda :FPMAN3
   539 1E2C 8D 2F 9C			sta RESULT+3
   540 1E2F			@exit
   541
   542 				; ------------------------------------------------------------
   543
   544 = 9C28			X	= DATAORIGIN+$000B
   545 = 9C2C			RESULT	= DATAORIGIN+$000F
   546 = 9C30			SP	= DATAORIGIN+$0013
   547 = 9C32			C	= DATAORIGIN+$0015
   548
   549 = 9C28			@VarData	= X
   550 = 000A			@VarDataSize	= 10
   551
   552 1E2F 60				rts						; ret
   553 				.endl
   554 				.endl							; overload
   555
   556 1E30			.local	ARCTAN						; FUNCTION | OVERLOAD
   557 1E30			.local	@01018E000
   558
   559 				; optimize OK (SYSTEM), line = 862
   560
   561 1E30 A9 00			lda #$00
   562 1E32 8D 46 9C			sta SIGN
   563
   564 				; optimize OK (SYSTEM), line = 863
   565
   566 1E35 AD 36 9C			lda VALUE
   567 1E38 8D 3E 9C			sta X
   568 1E3B AD 37 9C			lda VALUE+1
   569 1E3E 8D 3F 9C			sta X+1
   570 1E41 AD 38 9C			lda VALUE+2
   571 1E44 8D 40 9C			sta X+2
   572 1E47 AD 39 9C			lda VALUE+3
   573 1E4A 8D 41 9C			sta X+3
   574
   575 				; optimize OK (SYSTEM), line = 864
   576
   577 1E4D A9 00			lda #$00
   578 1E4F 8D 42 9C			sta Y
   579 1E52 8D 43 9C			sta Y+1
   580 1E55 8D 44 9C			sta Y+2
   581 1E58 8D 45 9C			sta Y+3
   582
   583 				; optimize OK (SYSTEM), line = 866
   584
   585 1E5B AD 39 9C			lda VALUE+3
   586 1E5E 0D 38 9C			ora VALUE+2
   587 1E61 0D 37 9C			ora VALUE+1
   588 1E64 0D 36 9C			ora VALUE
   589 1E67 D0 11			jne l_00AF
   590
   591 				; optimize OK (SYSTEM), line = 867
   592
   593 1E69 A9 00			lda #$00
   594 1E6B 8D 3A 9C			sta RESULT
   595 1E6E 8D 3B 9C			sta RESULT+1
   596 1E71 8D 3C 9C			sta RESULT+2
   597 1E74 8D 3D 9C			sta RESULT+3
   598 1E77 4C 41 21			jmp @exit
   599 1E7A			l_00AF
   600
   601 				; optimize OK (SYSTEM), line = 870
   602
   603 1E7A AD 41 9C			lda X+3
   604 1E7D 10 26			jpl l_00CD
   605
   606 				; optimize OK (SYSTEM), line = 871
   607
   608 1E7F A9 01			lda #$01
   609 1E81 8D 46 9C			sta SIGN
   610
   611 				; optimize OK (SYSTEM), line = 872
   612
   613 1E84 A9 00			lda #$00
   614 1E86 38 ED 3E 9C			sub X
   615 1E8A 8D 3E 9C			sta X
   616 1E8D A9 00			lda #$00
   617 1E8F ED 3F 9C			sbc X+1
   618 1E92 8D 3F 9C			sta X+1
   619 1E95 A9 00			lda #$00
   620 1E97 ED 40 9C			sbc X+2
   621 1E9A 8D 40 9C			sta X+2
   622 1E9D A9 00			lda #$00
   623 1E9F ED 41 9C			sbc X+3
   624 1EA2 8D 41 9C			sta X+3
   625 1EA5			l_00CD
   626 1EA5			l_00BD
   627
   628 				; optimize OK (SYSTEM), line = 875
   629
   630 1EA5 AD 3E 9C			lda X
   631 1EA8 85 86			sta @REAL_DIV.A
   632 1EAA AD 3F 9C			lda X+1
   633 1EAD 38 E9 01			sub #$01
   634 1EB0 85 87			sta @REAL_DIV.A+1
   635 1EB2 AD 40 9C			lda X+2
   636 1EB5 E9 00			sbc #$00
   637 1EB7 85 88			sta @REAL_DIV.A+2
   638 1EB9 AD 41 9C			lda X+3
   639 1EBC E9 00			sbc #$00
   640 1EBE 85 89			sta @REAL_DIV.A+3
   641 1EC0 AD 3E 9C			lda X
   642 1EC3 85 8E			sta @REAL_DIV.B
   643 1EC5 AD 3F 9C			lda X+1
   644 1EC8 18 69 01			add #$01
   645 1ECB 85 8F			sta @REAL_DIV.B+1
   646 1ECD AD 40 9C			lda X+2
   647 1ED0 69 00			adc #$00
   648 1ED2 85 90			sta @REAL_DIV.B+2
   649 1ED4 AD 41 9C			lda X+3
   650 1ED7 69 00			adc #$00
   651 1ED9 85 91			sta @REAL_DIV.B+3
   652 1EDB 20 F2 14			jsr @REAL_DIV
   653 1EDE A5 86			lda :eax
   654 1EE0 8D 3E 9C			sta X
   655 1EE3 A5 87			lda :eax+1
   656 1EE5 8D 3F 9C			sta X+1
   657 1EE8 A5 88			lda :eax+2
   658 1EEA 8D 40 9C			sta X+2
   659 1EED A5 89			lda :eax+3
   660 1EEF 8D 41 9C			sta X+3
   661
   662 				; optimize OK (SYSTEM), line = 876
   663
   664 1EF2 AD 3E 9C			lda X
   665 1EF5 85 8E			sta @REAL_MUL.B
   666 1EF7 AD 3F 9C			lda X+1
   667 1EFA 85 8F			sta @REAL_MUL.B+1
   668 1EFC AD 40 9C			lda X+2
   669 1EFF 85 90			sta @REAL_MUL.B+2
   670 1F01 AD 41 9C			lda X+3
   671 1F04 85 91			sta @REAL_MUL.B+3
   672 1F06 AD 3E 9C			lda X
   673 1F09 85 86			sta @REAL_MUL.A
   674 1F0B AD 3F 9C			lda X+1
   675 1F0E 85 87			sta @REAL_MUL.A+1
   676 1F10 AD 40 9C			lda X+2
   677 1F13 85 88			sta @REAL_MUL.A+2
   678 1F15 AD 41 9C			lda X+3
   679 1F18 85 89			sta @REAL_MUL.A+3
   680 1F1A 20 33 14			jsr @REAL_MUL
   681 1F1D A5 86			lda :eax
   682 1F1F 8D 42 9C			sta Y
   683 1F22 A5 87			lda :eax+1
   684 1F24 8D 43 9C			sta Y+1
   685 1F27 A5 88			lda :eax+2
   686 1F29 8D 44 9C			sta Y+2
   687 1F2C A5 89			lda :eax+3
   688 1F2E 8D 45 9C			sta Y+3
   689
   690 				; optimize OK (SYSTEM), line = 877
   691
   692 1F31 AD 42 9C			lda Y
   693 1F34 85 8E			sta @REAL_MUL.B
   694 1F36 AD 43 9C			lda Y+1
   695 1F39 85 8F			sta @REAL_MUL.B+1
   696 1F3B AD 44 9C			lda Y+2
   697 1F3E 85 90			sta @REAL_MUL.B+2
   698 1F40 AD 45 9C			lda Y+3
   699 1F43 85 91			sta @REAL_MUL.B+3
   700 1F45 A9 01			lda #$01
   701 1F47 85 86			sta @REAL_MUL.A
   702 1F49 A9 00			lda #$00
   703 1F4B 85 87			sta @REAL_MUL.A+1
   704 1F4D 85 88			sta @REAL_MUL.A+2
   705 1F4F 85 89			sta @REAL_MUL.A+3
   706 1F51 20 33 14			jsr @REAL_MUL
   707 1F54 A5 86			lda :eax
   708 1F56 38 E9 04			sub #$04
   709 1F59 85 86			sta @REAL_MUL.A
   710 1F5B A5 87			lda :eax+1
   711 1F5D E9 00			sbc #$00
   712 1F5F 85 87			sta @REAL_MUL.A+1
   713 1F61 A5 88			lda :eax+2
   714 1F63 E9 00			sbc #$00
   715 1F65 85 88			sta @REAL_MUL.A+2
   716 1F67 A5 89			lda :eax+3
   717 1F69 E9 00			sbc #$00
   718 1F6B 85 89			sta @REAL_MUL.A+3
   719 1F6D AD 42 9C			lda Y
   720 1F70 85 8E			sta @REAL_MUL.B
   721 1F72 AD 43 9C			lda Y+1
   722 1F75 85 8F			sta @REAL_MUL.B+1
   723 1F77 AD 44 9C			lda Y+2
   724 1F7A 85 90			sta @REAL_MUL.B+2
   725 1F7C AD 45 9C			lda Y+3
   726 1F7F 85 91			sta @REAL_MUL.B+3
   727 1F81 20 33 14			jsr @REAL_MUL
   728 1F84 A5 86			lda :eax
   729 1F86 18 69 0B			add #$0B
   730 1F89 85 86			sta @REAL_MUL.A
   731 1F8B A5 87			lda :eax+1
   732 1F8D 69 00			adc #$00
   733 1F8F 85 87			sta @REAL_MUL.A+1
   734 1F91 A5 88			lda :eax+2
   735 1F93 69 00			adc #$00
   736 1F95 85 88			sta @REAL_MUL.A+2
   737 1F97 A5 89			lda :eax+3
   738 1F99 69 00			adc #$00
   739 1F9B 85 89			sta @REAL_MUL.A+3
   740 1F9D AD 42 9C			lda Y
   741 1FA0 85 8E			sta @REAL_MUL.B
   742 1FA2 AD 43 9C			lda Y+1
   743 1FA5 85 8F			sta @REAL_MUL.B+1
   744 1FA7 AD 44 9C			lda Y+2
   745 1FAA 85 90			sta @REAL_MUL.B+2
   746 1FAC AD 45 9C			lda Y+3
   747 1FAF 85 91			sta @REAL_MUL.B+3
   748 1FB1 20 33 14			jsr @REAL_MUL
   749 1FB4 A5 86			lda :eax
   750 1FB6 38 E9 13			sub #$13
   751 1FB9 85 86			sta @REAL_MUL.A
   752 1FBB A5 87			lda :eax+1
   753 1FBD E9 00			sbc #$00
   754 1FBF 85 87			sta @REAL_MUL.A+1
   755 1FC1 A5 88			lda :eax+2
   756 1FC3 E9 00			sbc #$00
   757 1FC5 85 88			sta @REAL_MUL.A+2
   758 1FC7 A5 89			lda :eax+3
   759 1FC9 E9 00			sbc #$00
   760 1FCB 85 89			sta @REAL_MUL.A+3
   761 1FCD AD 42 9C			lda Y
   762 1FD0 85 8E			sta @REAL_MUL.B
   763 1FD2 AD 43 9C			lda Y+1
   764 1FD5 85 8F			sta @REAL_MUL.B+1
   765 1FD7 AD 44 9C			lda Y+2
   766 1FDA 85 90			sta @REAL_MUL.B+2
   767 1FDC AD 45 9C			lda Y+3
   768 1FDF 85 91			sta @REAL_MUL.B+3
   769 1FE1 20 33 14			jsr @REAL_MUL
   770 1FE4 A5 86			lda :eax
   771 1FE6 18 69 1B			add #$1B
   772 1FE9 85 86			sta @REAL_MUL.A
   773 1FEB A5 87			lda :eax+1
   774 1FED 69 00			adc #$00
   775 1FEF 85 87			sta @REAL_MUL.A+1
   776 1FF1 A5 88			lda :eax+2
   777 1FF3 69 00			adc #$00
   778 1FF5 85 88			sta @REAL_MUL.A+2
   779 1FF7 A5 89			lda :eax+3
   780 1FF9 69 00			adc #$00
   781 1FFB 85 89			sta @REAL_MUL.A+3
   782 1FFD AD 42 9C			lda Y
   783 2000 85 8E			sta @REAL_MUL.B
   784 2002 AD 43 9C			lda Y+1
   785 2005 85 8F			sta @REAL_MUL.B+1
   786 2007 AD 44 9C			lda Y+2
   787 200A 85 90			sta @REAL_MUL.B+2
   788 200C AD 45 9C			lda Y+3
   789 200F 85 91			sta @REAL_MUL.B+3
   790 2011 20 33 14			jsr @REAL_MUL
   791 2014 A5 86			lda :eax
   792 2016 38 E9 24			sub #$24
   793 2019 85 86			sta @REAL_MUL.A
   794 201B A5 87			lda :eax+1
   795 201D E9 00			sbc #$00
   796 201F 85 87			sta @REAL_MUL.A+1
   797 2021 A5 88			lda :eax+2
   798 2023 E9 00			sbc #$00
   799 2025 85 88			sta @REAL_MUL.A+2
   800 2027 A5 89			lda :eax+3
   801 2029 E9 00			sbc #$00
   802 202B 85 89			sta @REAL_MUL.A+3
   803 202D AD 42 9C			lda Y
   804 2030 85 8E			sta @REAL_MUL.B
   805 2032 AD 43 9C			lda Y+1
   806 2035 85 8F			sta @REAL_MUL.B+1
   807 2037 AD 44 9C			lda Y+2
   808 203A 85 90			sta @REAL_MUL.B+2
   809 203C AD 45 9C			lda Y+3
   810 203F 85 91			sta @REAL_MUL.B+3
   811 2041 20 33 14			jsr @REAL_MUL
   812 2044 A5 86			lda :eax
   813 2046 18 69 33			add #$33
   814 2049 85 86			sta @REAL_MUL.A
   815 204B A5 87			lda :eax+1
   816 204D 69 00			adc #$00
   817 204F 85 87			sta @REAL_MUL.A+1
   818 2051 A5 88			lda :eax+2
   819 2053 69 00			adc #$00
   820 2055 85 88			sta @REAL_MUL.A+2
   821 2057 A5 89			lda :eax+3
   822 2059 69 00			adc #$00
   823 205B 85 89			sta @REAL_MUL.A+3
   824 205D AD 42 9C			lda Y
   825 2060 85 8E			sta @REAL_MUL.B
   826 2062 AD 43 9C			lda Y+1
   827 2065 85 8F			sta @REAL_MUL.B+1
   828 2067 AD 44 9C			lda Y+2
   829 206A 85 90			sta @REAL_MUL.B+2
   830 206C AD 45 9C			lda Y+3
   831 206F 85 91			sta @REAL_MUL.B+3
   832 2071 20 33 14			jsr @REAL_MUL
   833 2074 A5 86			lda :eax
   834 2076 38 E9 55			sub #$55
   835 2079 85 86			sta @REAL_MUL.A
   836 207B A5 87			lda :eax+1
   837 207D E9 00			sbc #$00
   838 207F 85 87			sta @REAL_MUL.A+1
   839 2081 A5 88			lda :eax+2
   840 2083 E9 00			sbc #$00
   841 2085 85 88			sta @REAL_MUL.A+2
   842 2087 A5 89			lda :eax+3
   843 2089 E9 00			sbc #$00
   844 208B 85 89			sta @REAL_MUL.A+3
   845 208D AD 42 9C			lda Y
   846 2090 85 8E			sta @REAL_MUL.B
   847 2092 AD 43 9C			lda Y+1
   848 2095 85 8F			sta @REAL_MUL.B+1
   849 2097 AD 44 9C			lda Y+2
   850 209A 85 90			sta @REAL_MUL.B+2
   851 209C AD 45 9C			lda Y+3
   852 209F 85 91			sta @REAL_MUL.B+3
   853 20A1 20 33 14			jsr @REAL_MUL
   854 20A4 A5 87			lda :eax+1
   855 20A6 18 69 01			add #$01
   856 20A9 85 87			sta @REAL_MUL.A+1
   857 20AB A5 88			lda :eax+2
   858 20AD 69 00			adc #$00
   859 20AF 85 88			sta @REAL_MUL.A+2
   860 20B1 A5 89			lda :eax+3
   861 20B3 69 00			adc #$00
   862 20B5 85 89			sta @REAL_MUL.A+3
   863 20B7 AD 3E 9C			lda X
   864 20BA 85 8E			sta @REAL_MUL.B
   865 20BC AD 3F 9C			lda X+1
   866 20BF 85 8F			sta @REAL_MUL.B+1
   867 20C1 AD 40 9C			lda X+2
   868 20C4 85 90			sta @REAL_MUL.B+2
   869 20C6 AD 41 9C			lda X+3
   870 20C9 85 91			sta @REAL_MUL.B+3
   871 20CB 20 33 14			jsr @REAL_MUL
   872 20CE A5 86			lda :eax
   873 20D0 8D 3E 9C			sta X
   874 20D3 A5 87			lda :eax+1
   875 20D5 8D 3F 9C			sta X+1
   876 20D8 A5 88			lda :eax+2
   877 20DA 8D 40 9C			sta X+2
   878 20DD A5 89			lda :eax+3
   879 20DF 8D 41 9C			sta X+3
   880
   881 				; optimize OK (SYSTEM), line = 880
   882
   883 20E2 A9 C9			lda #$C9
   884 20E4 18 6D 3E 9C			add X
   885 20E8 8D 3E 9C			sta X
   886 20EB A9 00			lda #$00
   887 20ED 6D 3F 9C			adc X+1
   888 20F0 8D 3F 9C			sta X+1
   889 20F3 A9 00			lda #$00
   890 20F5 6D 40 9C			adc X+2
   891 20F8 8D 40 9C			sta X+2
   892 20FB A9 00			lda #$00
   893 20FD 6D 41 9C			adc X+3
   894 2100 8D 41 9C			sta X+3
   895
   896 				; optimize OK (SYSTEM), line = 882
   897
   898 2103 AD 46 9C			lda SIGN
   899 2106 F0 21			jeq l_014F
   900
   901 				; optimize OK (SYSTEM), line = 883
   902
   903 2108 A9 00			lda #$00
   904 210A 38 ED 3E 9C			sub X
   905 210E 8D 3A 9C			sta RESULT
   906 2111 A9 00			lda #$00
   907 2113 ED 3F 9C			sbc X+1
   908 2116 8D 3B 9C			sta RESULT+1
   909 2119 A9 00			lda #$00
   910 211B ED 40 9C			sbc X+2
   911 211E 8D 3C 9C			sta RESULT+2
   912 2121 A9 00			lda #$00
   913 2123 ED 41 9C			sbc X+3
   914 2126 4C 3E 21			jmp l_0160
   915 2129			l_014F
   916
   917 				; optimize OK (SYSTEM), line = 885
   918
   919 2129 AD 3E 9C			lda X
   920 212C 8D 3A 9C			sta RESULT
   921 212F AD 3F 9C			lda X+1
   922 2132 8D 3B 9C			sta RESULT+1
   923 2135 AD 40 9C			lda X+2
   924 2138 8D 3C 9C			sta RESULT+2
   925 213B AD 41 9C			lda X+3
   926 213E			l_0160
   927 213E 8D 3D 9C			sta RESULT+3
   928 2141			@exit
   929
   930 				; ------------------------------------------------------------
   931
   932 = 9C36			VALUE	= DATAORIGIN+$0019
   933 = 9C3A			RESULT	= DATAORIGIN+$001D
   934 = 9C3E			X	= DATAORIGIN+$0021
   935 = 9C42			Y	= DATAORIGIN+$0025
   936 = 9C46			SIGN	= DATAORIGIN+$0029
   937
   938 = 9C36			@VarData	= VALUE
   939 = 000D			@VarDataSize	= 13
   940
   941 2141 60				rts						; ret
   942 				.endl
   943 				.endl							; overload
   944
   945 2142			.local	RSINCOS						; FUNCTION
   946
   947 				; --- WhileProlog
   948 2142 4C 66 21			jmp l_019D
   949 2145			l_019E
   950
   951 				; optimize OK (SYSTEM), line = 1776
   952
   953 2145 AD 47 9C			lda X
   954 2148 38 E9 48			sub #$48
   955 214B 8D 47 9C			sta X
   956 214E AD 48 9C			lda X+1
   957 2151 E9 06			sbc #$06
   958 2153 8D 48 9C			sta X+1
   959 2156 AD 49 9C			lda X+2
   960 2159 E9 00			sbc #$00
   961 215B 8D 49 9C			sta X+2
   962 215E AD 4A 9C			lda X+3
   963 2161 E9 00			sbc #$00
   964 2163 8D 4A 9C			sta X+3
   965 2166			l_019D
   966 2166				.LOCAL
   967 2166 AD 4A 9C			lda X+3
   968 2169 38 E9 00			sub #$00
   969 216C D0 1F			bne L4
   970 216E AD 49 9C			lda X+2
   971 2171 C9 00			cmp #$00
   972 2173 D0 0C			bne L1
   973 2175 AD 48 9C			lda X+1
   974 2178 C9 06			cmp #$06
   975 217A D0 05			bne L1
   976 217C AD 47 9C			lda X
   977 217F C9 48			cmp #$48
   978 2181 F0 10		L1	beq L5
   979 2183 B0 04			bcs L3
   980 2185 A9 FF			lda #$FF
   981 2187 D0 0A			bne L5
   982 2189 A9 01		L3	lda #$01
   983 218B D0 06			bne L5
   984 218D 50 04		L4	bvc L5
   985 218F 49 FF			eor #$FF
   986 2191 09 01			ora #$01
   987 2193			L5
   988 					.ENDL
   989 2193 30 02			smi
   990 2195 D0 AE			jne l_019E
   991
   992 				; --- WhileProlog
   993 2197 4C BB 21			jmp l_01B2
   994 219A			l_01B3
   995
   996 				; optimize OK (SYSTEM), line = 1777
   997
   998 219A AD 47 9C			lda X
   999 219D 18 69 48			add #$48
  1000 21A0 8D 47 9C			sta X
  1001 21A3 AD 48 9C			lda X+1
  1002 21A6 69 06			adc #$06
  1003 21A8 8D 48 9C			sta X+1
  1004 21AB AD 49 9C			lda X+2
  1005 21AE 69 00			adc #$00
  1006 21B0 8D 49 9C			sta X+2
  1007 21B3 AD 4A 9C			lda X+3
  1008 21B6 69 00			adc #$00
  1009 21B8 8D 4A 9C			sta X+3
  1010 21BB			l_01B2
  1011 21BB AD 4A 9C			lda X+3
  1012 21BE 30 DA			jmi l_01B3
  1013
  1014 				; optimize OK (SYSTEM), line = 1780
  1015
  1016 21C0 A9 A3			lda #$A3
  1017 21C2 85 8E			sta @REAL_MUL.B
  1018 21C4 A9 00			lda #$00
  1019 21C6 85 8F			sta @REAL_MUL.B+1
  1020 21C8 85 90			sta @REAL_MUL.B+2
  1021 21CA 85 91			sta @REAL_MUL.B+3
  1022 21CC AD 47 9C			lda X
  1023 21CF 85 86			sta @REAL_MUL.A
  1024 21D1 AD 48 9C			lda X+1
  1025 21D4 85 87			sta @REAL_MUL.A+1
  1026 21D6 AD 49 9C			lda X+2
  1027 21D9 85 88			sta @REAL_MUL.A+2
  1028 21DB AD 4A 9C			lda X+3
  1029 21DE 85 89			sta @REAL_MUL.A+3
  1030 21E0 20 33 14			jsr @REAL_MUL
  1031 21E3 A5 86			lda :eax
  1032 21E5 8D 47 9C			sta X
  1033 21E8 A5 87			lda :eax+1
  1034 21EA 8D 48 9C			sta X+1
  1035 21ED A5 88			lda :eax+2
  1036 21EF 8D 49 9C			sta X+2
  1037 21F2 A5 89			lda :eax+3
  1038 21F4 8D 4A 9C			sta X+3
  1039
  1040 				; optimize OK (SYSTEM), line = 1783
  1041
  1042 21F7 AD 47 9C			lda X
  1043 21FA 85 86			sta @REAL_TRUNC.A
  1044 21FC AD 48 9C			lda X+1
  1045 21FF 85 87			sta @REAL_TRUNC.A+1
  1046 2201 AD 49 9C			lda X+2
  1047 2204 85 88			sta @REAL_TRUNC.A+2
  1048 2206 AD 4A 9C			lda X+3
  1049 2209 85 89			sta @REAL_TRUNC.A+3
  1050 220B 20 7C 15			jsr @REAL_TRUNC
  1051 220E A5 86			lda :eax
  1052 2210 8D 50 9C			sta I
  1053
  1054 				; optimize OK (SYSTEM), line = 1786
  1055
  1056 2213 AD 4A 9C			lda X+3
  1057 2216 10 03			jpl l_01E1
  1058 2218 CE 50 9C			dec I
  1059 221B			l_01E1
  1060
  1061 				; optimize OK (SYSTEM), line = 1789
  1062
  1063 221B A0 00			ldy #$00
  1064 221D AD 50 9C			lda I
  1065 2220 10 01			spl
  1066 2222 88				dey
  1067 2223 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  1068 2225 84 C0			sty :STACKORIGIN+STACKWIDTH*2+10
  1069 2227 84 D0			sty :STACKORIGIN+STACKWIDTH*3+10
  1070 2229 AD 48 9C			lda X+1
  1071 222C 38 E5 B0			sub :STACKORIGIN+STACKWIDTH+10
  1072 222F 8D 48 9C			sta X+1
  1073 2232 AD 49 9C			lda X+2
  1074 2235 E5 C0			sbc :STACKORIGIN+STACKWIDTH*2+10
  1075 2237 8D 49 9C			sta X+2
  1076 223A AD 4A 9C			lda X+3
  1077 223D E5 D0			sbc :STACKORIGIN+STACKWIDTH*3+10
  1078 223F 8D 4A 9C			sta X+3
  1079
  1080 				; optimize OK (SYSTEM), line = 1792
  1081
  1082 2242 AD 4B 9C			lda SC
  1083 2245 F0 03			jeq l_01FE
  1084 2247 EE 50 9C			inc I
  1085 224A			l_01FE
  1086
  1087 				; optimize OK (SYSTEM), line = 1795
  1088
  1089 224A AD 50 9C			lda I
  1090 224D 29 01			and #$01
  1091 224F D0 21			jne l_021B
  1092 2251 A9 00			lda #$00
  1093 2253 38 ED 47 9C			sub X
  1094 2257 8D 47 9C			sta X
  1095 225A A9 01			lda #$01
  1096 225C ED 48 9C			sbc X+1
  1097 225F 8D 48 9C			sta X+1
  1098 2262 A9 00			lda #$00
  1099 2264 ED 49 9C			sbc X+2
  1100 2267 8D 49 9C			sta X+2
  1101 226A A9 00			lda #$00
  1102 226C ED 4A 9C			sbc X+3
  1103 226F 8D 4A 9C			sta X+3
  1104 2272			l_021B
  1105
  1106 				; optimize OK (SYSTEM), line = 1798
  1107
  1108 2272 AD 47 9C			lda X
  1109 2275 85 8E			sta @REAL_MUL.B
  1110 2277 AD 48 9C			lda X+1
  1111 227A 85 8F			sta @REAL_MUL.B+1
  1112 227C AD 49 9C			lda X+2
  1113 227F 85 90			sta @REAL_MUL.B+2
  1114 2281 AD 4A 9C			lda X+3
  1115 2284 85 91			sta @REAL_MUL.B+3
  1116 2286 AD 47 9C			lda X
  1117 2289 85 86			sta @REAL_MUL.A
  1118 228B AD 48 9C			lda X+1
  1119 228E 85 87			sta @REAL_MUL.A+1
  1120 2290 AD 49 9C			lda X+2
  1121 2293 85 88			sta @REAL_MUL.A+2
  1122 2295 AD 4A 9C			lda X+3
  1123 2298 85 89			sta @REAL_MUL.A+3
  1124 229A 20 33 14			jsr @REAL_MUL
  1125 229D A5 86			lda :eax
  1126 229F 8D 47 9C			sta X
  1127 22A2 A5 87			lda :eax+1
  1128 22A4 8D 48 9C			sta X+1
  1129 22A7 A5 88			lda :eax+2
  1130 22A9 8D 49 9C			sta X+2
  1131 22AC A5 89			lda :eax+3
  1132 22AE 8D 4A 9C			sta X+3
  1133
  1134 				; optimize OK (SYSTEM), line = 1799
  1135
  1136 22B1 AD 47 9C			lda X
  1137 22B4 85 8E			sta @REAL_MUL.B
  1138 22B6 AD 48 9C			lda X+1
  1139 22B9 85 8F			sta @REAL_MUL.B+1
  1140 22BB AD 49 9C			lda X+2
  1141 22BE 85 90			sta @REAL_MUL.B+2
  1142 22C0 AD 4A 9C			lda X+3
  1143 22C3 85 91			sta @REAL_MUL.B+3
  1144 22C5 A9 05			lda #$05
  1145 22C7 85 86			sta @REAL_MUL.A
  1146 22C9 A9 00			lda #$00
  1147 22CB 85 87			sta @REAL_MUL.A+1
  1148 22CD 85 88			sta @REAL_MUL.A+2
  1149 22CF 85 89			sta @REAL_MUL.A+3
  1150 22D1 20 33 14			jsr @REAL_MUL
  1151 22D4 A5 86			lda :eax
  1152 22D6 38 E9 3C			sub #$3C
  1153 22D9 85 86			sta @REAL_MUL.A
  1154 22DB A5 87			lda :eax+1
  1155 22DD E9 00			sbc #$00
  1156 22DF 85 87			sta @REAL_MUL.A+1
  1157 22E1 A5 88			lda :eax+2
  1158 22E3 E9 00			sbc #$00
  1159 22E5 85 88			sta @REAL_MUL.A+2
  1160 22E7 A5 89			lda :eax+3
  1161 22E9 E9 00			sbc #$00
  1162 22EB 85 89			sta @REAL_MUL.A+3
  1163 22ED AD 47 9C			lda X
  1164 22F0 85 8E			sta @REAL_MUL.B
  1165 22F2 AD 48 9C			lda X+1
  1166 22F5 85 8F			sta @REAL_MUL.B+1
  1167 22F7 AD 49 9C			lda X+2
  1168 22FA 85 90			sta @REAL_MUL.B+2
  1169 22FC AD 4A 9C			lda X+3
  1170 22FF 85 91			sta @REAL_MUL.B+3
  1171 2301 20 33 14			jsr @REAL_MUL
  1172 2304 A5 87			lda :eax+1
  1173 2306 18 69 01			add #$01
  1174 2309 85 87			sta @REAL_MUL.A+1
  1175 230B A5 88			lda :eax+2
  1176 230D 69 00			adc #$00
  1177 230F 85 88			sta @REAL_MUL.A+2
  1178 2311 A5 89			lda :eax+3
  1179 2313 69 00			adc #$00
  1180 2315 85 89			sta @REAL_MUL.A+3
  1181 2317 A9 00			lda #$00
  1182 2319 38 ED 47 9C			sub X
  1183 231D 85 8E			sta @REAL_MUL.B
  1184 231F A9 01			lda #$01
  1185 2321 ED 48 9C			sbc X+1
  1186 2324 85 8F			sta @REAL_MUL.B+1
  1187 2326 A9 00			lda #$00
  1188 2328 ED 49 9C			sbc X+2
  1189 232B 85 90			sta @REAL_MUL.B+2
  1190 232D A9 00			lda #$00
  1191 232F ED 4A 9C			sbc X+3
  1192 2332 85 91			sta @REAL_MUL.B+3
  1193 2334 20 33 14			jsr @REAL_MUL
  1194 2337 A5 86			lda :eax
  1195 2339 8D 4C 9C			sta RESULT
  1196 233C A5 87			lda :eax+1
  1197 233E 8D 4D 9C			sta RESULT+1
  1198 2341 A5 88			lda :eax+2
  1199 2343 8D 4E 9C			sta RESULT+2
  1200 2346 A5 89			lda :eax+3
  1201 2348 8D 4F 9C			sta RESULT+3
  1202
  1203 				; optimize OK (SYSTEM), line = 1802
  1204
  1205 234B AD 50 9C			lda I
  1206 234E 29 02			and #$02
  1207 2350 C9 02			cmp #$02
  1208 2352 D0 21			jne l_0260
  1209 2354 A9 00			lda #$00
  1210 2356 38 ED 4C 9C			sub RESULT
  1211 235A 8D 4C 9C			sta RESULT
  1212 235D A9 00			lda #$00
  1213 235F ED 4D 9C			sbc RESULT+1
  1214 2362 8D 4D 9C			sta RESULT+1
  1215 2365 A9 00			lda #$00
  1216 2367 ED 4E 9C			sbc RESULT+2
  1217 236A 8D 4E 9C			sta RESULT+2
  1218 236D A9 00			lda #$00
  1219 236F ED 4F 9C			sbc RESULT+3
  1220 2372 8D 4F 9C			sta RESULT+3
  1221 2375			l_0260
  1222 2375			@exit
  1223
  1224 				; ------------------------------------------------------------
  1225
  1226 = 9C47			X	= DATAORIGIN+$002A
  1227 = 9C4B			SC	= DATAORIGIN+$002E
  1228 = 9C4C			RESULT	= DATAORIGIN+$002F
  1229 = 9C50			I	= DATAORIGIN+$0033
  1230
  1231 = 9C47			@VarData	= X
  1232 = 0006			@VarDataSize	= 6
  1233
  1234 2375 60				rts						; ret
  1235 				.endl
  1236
  1237 2376			.local	SIN						; FUNCTION | OVERLOAD
  1238 2376			.local	@01018E000
  1239
  1240 				; optimize OK (SYSTEM), line = 1817
  1241
  1242 2376 AD 51 9C			lda X
  1243 2379 8D 47 9C			sta RSINCOS.X
  1244 237C AD 52 9C			lda X+1
  1245 237F 8D 48 9C			sta RSINCOS.X+1
  1246 2382 AD 53 9C			lda X+2
  1247 2385 8D 49 9C			sta RSINCOS.X+2
  1248 2388 AD 54 9C			lda X+3
  1249 238B 8D 4A 9C			sta RSINCOS.X+3
  1250 238E A9 00			lda #$00
  1251 2390 8D 4B 9C			sta RSINCOS.SC
  1252 2393 20 42 21			jsr RSINCOS
  1253 2396 AD 4C 9C			lda RSINCOS.RESULT
  1254 2399 8D 55 9C			sta RESULT
  1255 239C AD 4D 9C			lda RSINCOS.RESULT+1
  1256 239F 8D 56 9C			sta RESULT+1
  1257 23A2 AD 4E 9C			lda RSINCOS.RESULT+2
  1258 23A5 8D 57 9C			sta RESULT+2
  1259 23A8 AD 4F 9C			lda RSINCOS.RESULT+3
  1260 23AB 8D 58 9C			sta RESULT+3
  1261 23AE			@exit
  1262
  1263 				; ------------------------------------------------------------
  1264
  1265 = 9C51			X	= DATAORIGIN+$0034
  1266 = 9C55			RESULT	= DATAORIGIN+$0038
  1267
  1268 = 9C51			@VarData	= X
  1269 = 0004			@VarDataSize	= 4
  1270
  1271 23AE 60				rts						; ret
  1272 				.endl
  1273 				.endl							; overload
  1274
  1275 23AF			.local	COS						; FUNCTION | OVERLOAD
  1276 23AF			.local	@01018E000
  1277
  1278 				; optimize OK (SYSTEM), line = 1831
  1279
  1280 23AF AD 59 9C			lda X
  1281 23B2 8D 47 9C			sta RSINCOS.X
  1282 23B5 AD 5A 9C			lda X+1
  1283 23B8 8D 48 9C			sta RSINCOS.X+1
  1284 23BB AD 5B 9C			lda X+2
  1285 23BE 8D 49 9C			sta RSINCOS.X+2
  1286 23C1 AD 5C 9C			lda X+3
  1287 23C4 8D 4A 9C			sta RSINCOS.X+3
  1288 23C7 A9 01			lda #$01
  1289 23C9 8D 4B 9C			sta RSINCOS.SC
  1290 23CC 20 42 21			jsr RSINCOS
  1291 23CF AD 4C 9C			lda RSINCOS.RESULT
  1292 23D2 8D 5D 9C			sta RESULT
  1293 23D5 AD 4D 9C			lda RSINCOS.RESULT+1
  1294 23D8 8D 5E 9C			sta RESULT+1
  1295 23DB AD 4E 9C			lda RSINCOS.RESULT+2
  1296 23DE 8D 5F 9C			sta RESULT+2
  1297 23E1 AD 4F 9C			lda RSINCOS.RESULT+3
  1298 23E4 8D 60 9C			sta RESULT+3
  1299 23E7			@exit
  1300
  1301 				; ------------------------------------------------------------
  1302
  1303 = 9C59			X	= DATAORIGIN+$003C
  1304 = 9C5D			RESULT	= DATAORIGIN+$0040
  1305
  1306 = 9C59			@VarData	= X
  1307 = 0004			@VarDataSize	= 4
  1308
  1309 23E7 60				rts						; ret
  1310 				.endl
  1311 				.endl							; overload
  1312
  1313 23E8			.local	RANDOM						; FUNCTION | ASSEMBLER | OVERLOAD
  1314 23E8			.local	@010180000
  1315 23E8 8D 61 9C			sta RANGE
  1316
  1317 				; -------------------  ASM Block 00000049  -------------------
  1318
  1319
  1320 				;BYTE FUNC Rand(BYTE range)
  1321 				; returns random number between 0 and
  1322 				; range-1.  If range=0, then a random
  1323 				; number between 0 and 255 is returned
  1324
  1325 23EB AC 0A D2		  ldy $d20a   ; RANDOM
  1326
  1327 23EE AD 61 9C		  lda range
  1328 23F1 F0 08		  beq stop
  1329
  1330 23F3 85 8E		  sta :ecx
  1331 23F5 84 86		  sty :eax
  1332
  1333 23F7 20 AE 12		  jsr imulCL
  1334 23FA A8			  tay
  1335
  1336 23FB 8C 62 9C		stop  sty Result
  1337
  1338
  1339 23FE			@exit
  1340
  1341 				; ------------------------------------------------------------
  1342
  1343 = 9C61			RANGE	= DATAORIGIN+$0044
  1344 = 9C62			RESULT	= DATAORIGIN+$0045
  1345
  1346 = 9C61			@VarData	= RANGE
  1347 = 0001			@VarDataSize	= 1
  1348
  1349 23FE 60				rts						; ret
  1350 				.endl
  1351 				.endl							; overload
  1352
  1353 23FF			.local	RANDOM						; FUNCTION | OVERLOAD
  1354 23FF			.local	@010184000
  1355
  1356 				; optimize OK (system_atari.inc), line = 179
  1357
  1358 23FF AD 64 9C			lda RANGE+1
  1359 2402 0D 63 9C			ora RANGE
  1360 2405 D0 0B			jne l_02B2
  1361
  1362 				; optimize OK (system_atari.inc), line = 180
  1363
  1364 2407 A9 00			lda #$00
  1365 2409 8D 65 9C			sta RESULT
  1366 240C 8D 66 9C			sta RESULT+1
  1367 240F 4C 74 24			jmp l_02C0
  1368 2412			l_02B2
  1369
  1370 				; optimize OK (system_atari.inc), line = 183
  1371
  1372 2412 AD 26 9C			lda RNDSEED
  1373 2415 85 8E			sta :ecx
  1374 2417 AD 27 9C			lda RNDSEED+1
  1375 241A 85 8F			sta :ecx+1
  1376 241C A9 95			lda #$95
  1377 241E 85 86			sta :eax
  1378 2420 A9 45			lda #$45
  1379 2422 85 87			sta :eax+1
  1380 					.ifdef fmulinit
  1381 					fmulu_16
  1382 					els
  1383 2424 20 FA 12			imulCX
  1384 					eif
  1385 2427 A5 86			lda :eax
  1386 2429 8D 26 9C			sta RNDSEED
  1387 242C A5 87			lda :eax+1
  1388 242E 8D 27 9C			sta RNDSEED+1
  1389
  1390 				; optimize OK (system_atari.inc), line = 184
  1391
  1392 2431 AD 63 9C			lda RANGE
  1393 2434 85 8E			sta @SMALLINT.MOD.B
  1394 2436 AD 64 9C			lda RANGE+1
  1395 2439 85 8F			sta @SMALLINT.MOD.B+1
  1396 243B AD 26 9C			lda RNDSEED
  1397 243E 85 86			sta @SMALLINT.MOD.A
  1398 2440 AD 27 9C			lda RNDSEED+1
  1399 2443 85 87			sta @SMALLINT.MOD.A+1
  1400 2445 20 3F 12			jsr @SMALLINT.MOD
  1401 2448 A5 92			lda @SMALLINT.MOD.RESULT
  1402 244A 8D 65 9C			sta RESULT
  1403 244D A5 93			lda @SMALLINT.MOD.RESULT+1
  1404 244F 8D 66 9C			sta RESULT+1
  1405
  1406 				; -------------------  ASM Block 00000050  -------------------
  1407
  1408 2452 AD 64 9C			lda range+1
  1409 2455 10 07			bpl plus
  1410
  1411 2457 AD 66 9C			lda Result+1
  1412 245A 30 18			bmi ok
  1413 245C 10 05			bpl sign
  1414
  1415 245E AD 66 9C		plus	lda Result+1
  1416 2461 10 11			bpl ok
  1417
  1418 2463 A9 00		sign 	lda #0
  1419 2465 38 ED 65 9C			sub Result
  1420 2469 8D 65 9C			sta Result
  1421
  1422 246C A9 00			lda #0
  1423 246E ED 66 9C			sbc Result+1
  1424 2471 8D 66 9C			sta Result+1
  1425 2474			ok
  1426
  1427 2474			l_02C0
  1428 2474			@exit
  1429
  1430 				; ------------------------------------------------------------
  1431
  1432 = 9C63			RANGE	= DATAORIGIN+$0046
  1433 = 9C65			RESULT	= DATAORIGIN+$0048
  1434
  1435 = 9C63			@VarData	= RANGE
  1436 = 0002			@VarDataSize	= 2
  1437
  1438 2474 60				rts						; ret
  1439 				.endl
  1440 				.endl							; overload
  1441
  1442 				; ------------------------------------------------------------
  1443 				; ------------------------------------------------------------
  1444 2475			@UnitInit
  1445
  1446 				; -------------------  ASM Block 00000060  -------------------
  1447
  1448 					.ifdef @CmdLine
  1449
  1450 					ldx #$0F
  1451 					mva:rpl $340,x IOCB@COPY,x-
  1452 					rts
  1453
  1454 				IOCB@COPY	:16 brk
  1455 					eif
  1456
  1457
  1458 2475 60				rts
  1459
  1460 				; ------------------------------------------------------------
  1461
  1462 = 0648			M_PI_2	= $0648
  1463 = 0192			D_PI_2	= $0192
  1464 = 0004			D_PI_180	= $04
  1465 = 0101			__PORTB_BANKS	= $0101
  1466 = 0000			MGTIA	= $00
  1467 = 0080			MVBXE	= $80
  1468 = 0000			VBXE_XDLADR	= $00
  1469 = 00E0			VBXE_BCBTMP	= $E0
  1470 = 0100			VBXE_BCBADR	= $0100
  1471 = 1000			VBXE_MAPADR	= $1000
  1472 = 1000			VBXE_CHBASE	= $1000
  1473 = 5000			VBXE_OVRADR	= $5000
  1474 = B000			VBXE_WINDOW	= $B000
  1475 = 0000			IDLI	= $00
  1476 = 0001			IVBL	= $01
  1477 = 0001			IVBLD	= $01
  1478 = 0002			IVBLI	= $02
  1479 = 0003			ITIM1	= $03
  1480 = 0004			ITIM2	= $04
  1481 = 0005			ITIM4	= $05
  1482 = 00FE			CH_DELCHR	= $FE
  1483 = 009B			CH_ENTER	= $9B
  1484 = 001B			CH_ESC	= $1B
  1485 = 001C			CH_CURS_UP	= $1C
  1486 = 001D			CH_CURS_DOWN	= $1D
  1487 = 001E			CH_CURS_LEFT	= $1E
  1488 = 001F			CH_CURS_RIGHT	= $1F
  1489 = 007F			CH_TAB	= $7F
  1490 = 009B			CH_EOL	= $9B
  1491 = 007D			CH_CLR	= $7D
  1492 = 00FD			CH_BELL	= $FD
  1493 = 007E			CH_DEL	= $7E
  1494 = 009C			CH_DELLINE	= $9C
  1495 = 009D			CH_INSLINE	= $9D
  1496 = 0000			PAL_PMCOLOR0	= $00
  1497 = 0001			PAL_PMCOLOR1	= $01
  1498 = 0002			PAL_PMCOLOR2	= $02
  1499 = 0003			PAL_PMCOLOR3	= $03
  1500 = 0004			PAL_COLOR0	= $04
  1501 = 0005			PAL_COLOR1	= $05
  1502 = 0006			PAL_COLOR2	= $06
  1503 = 0007			PAL_COLOR3	= $07
  1504 = 0008			PAL_COLBAK	= $08
  1505 = 0000			COLOR_BLACK	= $00
  1506 = 000E			COLOR_WHITE	= $0E
  1507 = 0032			COLOR_RED	= $32
  1508 = 0096			COLOR_CYAN	= $96
  1509 = 0068			COLOR_VIOLET	= $68
  1510 = 00C4			COLOR_GREEN	= $C4
  1511 = 0074			COLOR_BLUE	= $74
  1512 = 00EE			COLOR_YELLOW	= $EE
  1513 = 0028			COLOR_ORANGE	= $28
  1514 = 00E4			COLOR_BROWN	= $E4
  1515 = 003C			COLOR_LIGHTRED	= $3C
  1516 = 0004			COLOR_GRAY1	= $04
  1517 = 0006			COLOR_GRAY2	= $06
  1518 = 000A			COLOR_GRAY3	= $0A
  1519 = 00CC			COLOR_LIGHTGREEN	= $CC
  1520 = 007C			COLOR_LIGHTBLUE	= $7C
  1521 = 0004			FMOPENREAD	= $04
  1522 = 0008			FMOPENWRITE	= $08
  1523 = 0009			FMOPENAPPEND	= $09
  1524 = 000C			FMOPENREADWRITE	= $0C
  1525 = 9C1D			DATESEPARATOR	= DATAORIGIN+$0000
  1526 = D20A			RND	= $D20A
  1527 = 02C0			adr.PALETTE	= $02C0
  1528 2476			.var PALETTE	= adr.PALETTE .word
  1529 = D012			adr.HPALETTE	= $D012
  1530 2476			.var HPALETTE	= adr.HPALETTE .word
  1531 = 9C1E			FILEMODE	= DATAORIGIN+$0001
  1532 = 9C1F			GRAPHMODE	= DATAORIGIN+$0002
  1533 = 9C20			IORESULT	= DATAORIGIN+$0003
  1534 = 9C21			EOLN	= DATAORIGIN+$0004
  1535 = 9C22			SCREENWIDTH	= DATAORIGIN+$0005
  1536 = 9C24			SCREENHEIGHT	= DATAORIGIN+$0007
  1537 = 0000			adr.MEM	= $00
  1538 2476			.var MEM	= adr.MEM .word
  1539 = 9C26			RNDSEED	= DATAORIGIN+$0009
  1540
  1541 = 2476 C0 02		PALETTE
  1541 = 2478 12 D0		HPALETTE
  1541 = 247A 00 00		MEM
  1541 				.endl							; UNIT SYSTEM
  1542
  1543 				; ------------------------------------------------------------
  1544
  1545 247C			.local	ATARI						; UNIT
  1546
  1547 				; ------------------------------------------------------------
  1548
  1549 = 0000			DL_BLANK1	= $00
  1550 = 0010			DL_BLANK2	= $10
  1551 = 0020			DL_BLANK3	= $20
  1552 = 0030			DL_BLANK4	= $30
  1553 = 0040			DL_BLANK5	= $40
  1554 = 0050			DL_BLANK6	= $50
  1555 = 0060			DL_BLANK7	= $60
  1556 = 0070			DL_BLANK8	= $70
  1557 = 0080			DL_DLI	= $80
  1558 = 0040			DL_LMS	= $40
  1559 = 0020			DL_VSCROLL	= $20
  1560 = 0010			DL_HSCROLL	= $10
  1561 = 0001			DL_JMP	= $01
  1562 = 0041			DL_JVB	= $41
  1563 = 0002			DL_MODE_2	= $02
  1564 = 0003			DL_MODE_3	= $03
  1565 = 0004			DL_MODE_4	= $04
  1566 = 0005			DL_MODE_5	= $05
  1567 = 000E			DL_MODE_E	= $0E
  1568 = 000F			DL_MODE_F	= $0F
  1569 = 0010			IRQENS	= $10
  1570 = 0012			RTCLOK	= $12
  1571 = 0012			RTCLOK1	= $12
  1572 = 0013			RTCLOK2	= $13
  1573 = 0014			RTCLOK3	= $14
  1574 = 004D			ATRACT	= $4D
  1575 = 0052			LMARGIN	= $52
  1576 = 0053			RMARGIN	= $53
  1577 = 0054			ROWCRS	= $54
  1578 = 0055			COLCRS	= $55
  1579 = 0057			DINDEX	= $57
  1580 = 0058			SAVMSC	= $58
  1581 = 0062			PALNTS	= $62
  1582 = 006A			RAMTOP	= $6A
  1583 = 0200			VDSLST	= $0200
  1584 = 0230			SDLSTL	= $0230
  1585 = 0290			TXTROW	= $0290
  1586 = 0291			TXTCOL	= $0291
  1587 = 0293			TINDEX	= $0293
  1588 = 0294			TXTMSC	= $0294
  1589 = 022F			SDMCTL	= $022F
  1590 = 026F			GPRIOR	= $026F
  1591 = 02F0			CRSINH	= $02F0
  1592 = 02F3			CHACT	= $02F3
  1593 = 02F4			CHBAS	= $02F4
  1594 = 02FC			CH	= $02FC
  1595 = 02FD			FILDAT	= $02FD
  1596 = 02C0			PCOLR0	= $02C0
  1597 = 02C1			PCOLR1	= $02C1
  1598 = 02C2			PCOLR2	= $02C2
  1599 = 02C3			PCOLR3	= $02C3
  1600 = 02C4			COLOR0	= $02C4
  1601 = 02C5			COLOR1	= $02C5
  1602 = 02C6			COLOR2	= $02C6
  1603 = 02C7			COLOR3	= $02C7
  1604 = 02C8			COLOR4	= $02C8
  1605 = 02C8			COLBAKS	= $02C8
  1606 = D000			HPOSP0	= $D000
  1607 = D001			HPOSP1	= $D001
  1608 = D002			HPOSP2	= $D002
  1609 = D003			HPOSP3	= $D003
  1610 = D004			HPOSM0	= $D004
  1611 = D005			HPOSM1	= $D005
  1612 = D006			HPOSM2	= $D006
  1613 = D007			HPOSM3	= $D007
  1614 = D008			SIZEP0	= $D008
  1615 = D009			SIZEP1	= $D009
  1616 = D00A			SIZEP2	= $D00A
  1617 = D00B			SIZEP3	= $D00B
  1618 = D00C			SIZEM	= $D00C
  1619 = D00D			GRAFP0	= $D00D
  1620 = D00E			GRAFP1	= $D00E
  1621 = D00F			GRAFP2	= $D00F
  1622 = D010			GRAFP3	= $D010
  1623 = D011			GRAFM	= $D011
  1624 = D004			P0PF	= $D004
  1625 = D014			PAL	= $D014
  1626 = D013			TRIG3	= $D013
  1627 = D012			COLPM0	= $D012
  1628 = D013			COLPM1	= $D013
  1629 = D014			COLPM2	= $D014
  1630 = D015			COLPM3	= $D015
  1631 = D016			COLPF0	= $D016
  1632 = D017			COLPF1	= $D017
  1633 = D018			COLPF2	= $D018
  1634 = D019			COLPF3	= $D019
  1635 = D01A			COLBAK	= $D01A
  1636 = D01A			COLBK	= $D01A
  1637 = D01B			PRIOR	= $D01B
  1638 = D01D			GRACTL	= $D01D
  1639 = D01D			PMCNTL	= $D01D
  1640 = D01E			HITCLR	= $D01E
  1641 = D01F			CONSOL	= $D01F
  1642 = D200			AUDF1	= $D200
  1643 = D201			AUDC1	= $D201
  1644 = D202			AUDF2	= $D202
  1645 = D203			AUDC2	= $D203
  1646 = D204			AUDF3	= $D204
  1647 = D205			AUDC3	= $D205
  1648 = D206			AUDF4	= $D206
  1649 = D207			AUDC4	= $D207
  1650 = D208			AUDCTL	= $D208
  1651 = D209			KBCODE	= $D209
  1652 = D20E			IRQEN	= $D20E
  1653 = D20F			SKSTAT	= $D20F
  1654 = D300			PORTA	= $D300
  1655 = D301			PORTB	= $D301
  1656 = D302			PACTL	= $D302
  1657 = D400			DMACTL	= $D400
  1658 = D401			CHACTL	= $D401
  1659 = D402			DLISTL	= $D402
  1660 = D404			HSCROL	= $D404
  1661 = D405			VSCROL	= $D405
  1662 = D407			PMBASE	= $D407
  1663 = D409			CHBASE	= $D409
  1664 = D40A			WSYNC	= $D40A
  1665 = D40B			VCOUNT	= $D40B
  1666 = D40C			PENH	= $D40C
  1667 = D40D			PENV	= $D40D
  1668 = D40E			NMIEN	= $D40E
  1669 = FFFA			NMIVEC	= $FFFA
  1670 = FFFC			RESETVEC	= $FFFC
  1671 = FFFE			IRQVEC	= $FFFE
  1672
  1673 				.endl							; UNIT ATARI
  1674
  1675 				; ------------------------------------------------------------
  1676
  1677 247C			.local	CRT						; UNIT
  1678
  1679 				; ------------------------------------------------------------
  1680
  1681 = 9C67			TEXTATTR	= DATAORIGIN+$004A
  1682 = D01F			CONSOL	= $D01F
  1683 = 0000			CN_START_SELECT_OPTION	= $00
  1684 = 0001			CN_SELECT_OPTION	= $01
  1685 = 0002			CN_START_OPTION	= $02
  1686 = 0003			CN_OPTION	= $03
  1687 = 0004			CN_START_SELECT	= $04
  1688 = 0005			CN_SELECT	= $05
  1689 = 0006			CN_START	= $06
  1690 = 0007			CN_NONE	= $07
  1691 = 0000			BLACK	= $00
  1692 = 000F			WHITE	= $0F
  1693 = 0026			RED	= $26
  1694 = 00AC			CYAN	= $AC
  1695 = 0048			PURPLE	= $48
  1696 = 00B6			GREEN	= $B6
  1697 = 0086			BLUE	= $86
  1698 = 00DC			YELLOW	= $DC
  1699 = 0018			ORANGE	= $18
  1700 = 00F4			BROWN	= $F4
  1701 = 002A			LIGHT_RED	= $2A
  1702 = 0004			DARK_GREY	= $04
  1703 = 0008			GREY	= $08
  1704 = 00BC			LIGHT_GREEN	= $BC
  1705 = 009A			LIGHT_BLUE	= $9A
  1706 = 000C			LIGHT_GREY	= $0C
  1707 = 0000			BW40	= $00
  1708 = 0001			CO40	= $01
  1709 = 0002			BW80	= $02
  1710 = 0003			CO80	= $03
  1711 = 0007			MONO	= $07
  1712 = 0001			C40	= $01
  1713 = 0003			C80	= $03
  1714 = 0080			BLINK	= $80
  1715
  1716 				.endl							; UNIT CRT
  1717
  1718 				; ------------------------------------------------------------
  1719
  1720 247C			.local	TYPES						; UNIT
  1721
  1722 				; ------------------------------------------------------------
  1723
  1724 				.endl							; UNIT TYPES
  1725
  1726 				; ------------------------------------------------------------
  1727
  1728 247C			.local	GRAPH						; UNIT
  1729
  1730 				; ------------------------------------------------------------
  1731
  1732 = 0080			CURRENTDRIVER	= $80
  1733 = 0000			DETECT	= $00
  1734 = 0001			CGA	= $01
  1735 = 0002			MCGA	= $02
  1736 = 0003			EGA	= $03
  1737 = 0004			EGA64	= $04
  1738 = 0005			EGAMONO	= $05
  1739 = 0006			LOWRES	= $06
  1740 = 0007			HERCMONO	= $07
  1741 = 0009			VGA	= $09
  1742 = 000A			VESA	= $0A
  1743 = 000B			D1BIT	= $0B
  1744 = 000C			D2BIT	= $0C
  1745 = 000D			D4BIT	= $0D
  1746 = 000E			D6BIT	= $0E
  1747 = 000F			D8BIT	= $0F
  1748 = 0010			D12BIT	= $10
  1749 = 0018			M640X400	= $18
  1750 = 0018			M640X480	= $18
  1751 = 0001			GROK	= $01
  1752 = 00FF			GRNOINITGRAPH	= $FF
  1753 = 00FE			GRNOTDETECTED	= $FE
  1754 = 00FD			GRFILENOTFOUND	= $FD
  1755 = 00FC			GRINVALIDDRIVER	= $FC
  1756 = 00FB			GRNOLOADMEM	= $FB
  1757 = 00FA			GRNOSCANMEM	= $FA
  1758 = 00F9			GRNOFLOODMEM	= $F9
  1759 = 00F8			GRFONTNOTFOUND	= $F8
  1760 = 00F7			GRNOFONTMEM	= $F7
  1761 = 00F6			GRINVALIDMODE	= $F6
  1762 = 00F5			GRERROR	= $F5
  1763 = 00F4			GRIOERROR	= $F4
  1764 = 00F3			GRINVALIDFONT	= $F3
  1765 = 00F2			GRINVALIDFONTNUM	= $F2
  1766 = 00EE			GRINVALIDVERSION	= $EE
  1767 = 0000			CGAC0	= $00
  1768 = 0001			CGAC1	= $01
  1769 = 0002			CGAC2	= $02
  1770 = 0003			CGAC3	= $03
  1771 = 0004			CGAHI	= $04
  1772 = 0000			MCGAC0	= $00
  1773 = 0001			MCGAC1	= $01
  1774 = 0002			MCGAC2	= $02
  1775 = 0003			MCGAC3	= $03
  1776 = 0004			MCGAMED	= $04
  1777 = 0005			MCGAHI	= $05
  1778 = 0000			EGALO	= $00
  1779 = 0001			EGAHI	= $01
  1780 = 0000			EGA64LO	= $00
  1781 = 0001			EGA64HI	= $01
  1782 = 0003			EGAMONOHI	= $03
  1783 = 000A			VGALO	= $0A
  1784 = 001F			VGAMED	= $1F
  1785 = 0018			VGAHI	= $18
  1786 = 9C68			GRAPHRESULT	= DATAORIGIN+$004B
  1787 = 9C69			GETCOLOR	= DATAORIGIN+$004C
  1788 = 9C6A			VIDEORAM	= DATAORIGIN+$004D
  1789 = 9C6C			adr.LASTARCCOORDS	= DATAORIGIN+$004F	; [12] RECORD
  1790 247C			.var LASTARCCOORDS	= adr.LASTARCCOORDS .word
  1791 = 9C6C			LASTARCCOORDS.X	= DATAORIGIN+$004F
  1792 = 9C6E			LASTARCCOORDS.Y	= DATAORIGIN+$0051
  1793 = 9C70			LASTARCCOORDS.XSTART	= DATAORIGIN+$0053
  1794 = 9C72			LASTARCCOORDS.YSTART	= DATAORIGIN+$0055
  1795 = 9C74			LASTARCCOORDS.XEND	= DATAORIGIN+$0057
  1796 = 9C76			LASTARCCOORDS.YEND	= DATAORIGIN+$0059
  1797 = 9C78			WIN_LEFT	= DATAORIGIN+$005B
  1798 = 9C7A			WIN_RIGHT	= DATAORIGIN+$005D
  1799 = 9C7C			WIN_TOP	= DATAORIGIN+$005F
  1800 = 9C7E			WIN_BOTTOM	= DATAORIGIN+$0061
  1801 = 9C80			SCANLINE_WIDTH	= DATAORIGIN+$0063
  1802 = 9C81			CURRENTX	= DATAORIGIN+$0064
  1803 = 9C83			CURRENTY	= DATAORIGIN+$0066
  1804
  1805 = 247C 6C 9C		LASTARCCOORDS
  1805 				.endl							; UNIT GRAPH
  1806
  1807 				; ------------------------------------------------------------
  1808
  1809 247E			.local	VBXE						; UNIT
  1810
  1811 				; ------------------------------------------------------------
  1812 				; ------------------------------------------------------------
  1813 247E			@UnitInit
  1814
  1815 				; -------------------  ASM Block 00000138  -------------------
  1816
  1817 247E 8A 48			txa:pha
  1818
  1819 2480 20 65 19			jsr @vbxe_detect
  1820 2483 90 04			bcc ok
  1821
  1822 2485 A2 FF			ldx #MAIN.GRAPH.grNoInitGraph
  1823 2487 D0 05			bne status
  1824
  1825 2489 20 BB 19		ok	jsr @vbxe_init
  1826
  1827 248C A2 01			ldx #MAIN.GRAPH.grOK
  1828 248E 8E 68 9C		status	stx MAIN.GRAPH.GraphResult
  1829
  1830 2491 68 AA			pla:tax
  1831
  1832 2493 60				rts
  1833
  1834 				; ------------------------------------------------------------
  1835
  1836 = 0001			VC_XDL	= $01
  1837 = 0002			VC_XCOLOR	= $02
  1838 = 0004			VC_NO_TRANS	= $04
  1839 = 0008			VC_TRANS15	= $08
  1840 = 0000			TCBLACK	= $00
  1841 = 0001			TCRED	= $01
  1842 = 0002			TCGREEN	= $02
  1843 = 0003			TCYELLOW	= $03
  1844 = 0004			TCBLUE	= $04
  1845 = 0005			TCMAGENTA	= $05
  1846 = 0006			TCCYAN	= $06
  1847 = 0007			TCWHITE	= $07
  1848 = 0008			TCBRIGHTBLACK	= $08
  1849 = 0009			TCBRIGHTRED	= $09
  1850 = 000A			TCBRIGHTGREEN	= $0A
  1851 = 000B			TCBRIGHTYELLOW	= $0B
  1852 = 000C			TCBRIGHTBLUE	= $0C
  1853 = 000D			TCBRIGHTMAGENTA	= $0D
  1854 = 000E			TCBRIGHTCYAN	= $0E
  1855 = 000F			TCBRIGHTWHITE	= $0F
  1856 = 0080			TBBLACK	= $80
  1857 = 0090			TBRED	= $90
  1858 = 00A0			TBGREEN	= $A0
  1859 = 00B0			TBYELLOW	= $B0
  1860 = 00C0			TBBLUE	= $C0
  1861 = 00D0			TBMAGENTA	= $D0
  1862 = 00E0			TBCYAN	= $E0
  1863 = 00F0			TBWHITE	= $F0
  1864 = 9C91			adr.VRAM	= DATAORIGIN+$0074	; [8] OBJECT
  1865 2494			.var VRAM	= adr.VRAM .word
  1866 = 9C91			VRAM.POSITION	= DATAORIGIN+$0074
  1867 = 9C95			VRAM.SIZE	= DATAORIGIN+$0078
  1868 = 0063			SCROLLBACK_FILL	= $63
  1869 = 1AA7			COLORMAPCONTROL = @VBXE_CMAP.CONFIG
  1870 = 0400			adr.SCROLLBACK_BUFFER	= $0400
  1871 2494			.var SCROLLBACK_BUFFER	= adr.SCROLLBACK_BUFFER .word
  1872 = 02FD			FILDAT	= $02FD
  1873 = 0054			ROWCRS	= $54
  1874 = 0055			COLCRS	= $55
  1875 = 0068			CRSADR	= $68
  1876
  1877 = 2494 91 9C		VRAM
  1877 = 2496 00 04		SCROLLBACK_BUFFER
  1877 				.endl							; UNIT VBXE
  1878
  1879 2498			.local	START_LEVEL					; PROCEDURE
  1880
  1881 2498			@exit
  1882 					.ifdef @new
  1883 					lda <@VarData
  1884 					sta :ztmp
  1885 					lda >@VarData
  1886 					ldy #@VarDataSize-1
  1887 					jmp @FreeMem
  1888 					els
  1889 2498 60				rts						; ret
  1890 					eif
  1891 				.endl
  1892
  1893 2499			.local	DEATH_SOUND					; PROCEDURE
  1894
  1895 				; ------------------------------------------------------------
  1896
  1897 = 9CCA			A	= DATAORIGIN+$00AD
  1898
  1899 = 9CCA			@VarData	= A
  1900 = 0002			@VarDataSize	= 2
  1901
  1902 2499			@exit
  1903 					.ifdef @new
  1904 					lda <@VarData
  1905 					sta :ztmp
  1906 					lda >@VarData
  1907 					ldy #@VarDataSize-1
  1908 					jmp @FreeMem
  1909 					els
  1910 2499 60				rts						; ret
  1911 					eif
  1912 				.endl
  1913
  1914 249A			.local	BALL_BLOCK_SOUND				; PROCEDURE
  1915
  1916 				; ------------------------------------------------------------
  1917
  1918 = 9CCC			A	= DATAORIGIN+$00AF
  1919 = 9CCE			B	= DATAORIGIN+$00B1
  1920
  1921 = 9CCC			@VarData	= A
  1922 = 0004			@VarDataSize	= 4
  1923
  1924 249A			@exit
  1925 					.ifdef @new
  1926 					lda <@VarData
  1927 					sta :ztmp
  1928 					lda >@VarData
  1929 					ldy #@VarDataSize-1
  1930 					jmp @FreeMem
  1931 					els
  1932 249A 60				rts						; ret
  1933 					eif
  1934 				.endl
  1935
  1936 249B			.local	MOUSERESET					; PROCEDURE
  1937
  1938 249B			@exit
  1939 					.ifdef @new
  1940 					lda <@VarData
  1941 					sta :ztmp
  1942 					lda >@VarData
  1943 					ldy #@VarDataSize-1
  1944 					jmp @FreeMem
  1945 					els
  1946 249B 60				rts						; ret
  1947 					eif
  1948 				.endl
  1949
  1950 249C			.local	MOUSECLICK					; FUNCTION
  1951
  1952 				; optimize OK (arkanoid_vbxe.pas), line = 70
  1953
  1954 249C AD C9 9C			lda MOUS.FIRE
  1955 249F 8D D0 9C			sta RESULT
  1956 24A2 A9 00			lda #$00
  1957 24A4 8D D1 9C			sta RESULT+1
  1958
  1959 				; optimize OK (arkanoid_vbxe.pas), line = 72
  1960
  1961 24A7 A0 01			ldy #1
  1962 24A9 AD C9 9C			lda MOUS.FIRE
  1963 24AC F0 01			beq @+
  1964 24AE 88				dey
  1965 				@
  1966 24AF 98				tya
  1967 24B0 8D C9 9C			sta MOUS.FIRE
  1968 24B3			@exit
  1969
  1970 				; ------------------------------------------------------------
  1971
  1972 = 9CD0			RESULT	= DATAORIGIN+$00B3
  1973
  1974 24B3 60				rts						; ret
  1975 				.endl
  1976
  1977 24B4			.local	MOUSECOORDS					; PROCEDURE
  1978
  1979 				; optimize OK (arkanoid_vbxe.pas), line = 85
  1980
  1981 24B4 AC D2 9C 84 84 AC + 	mwy X :bp2
  1982 24BE A0 00			ldy #$00
  1983 24C0 AD C5 9C			lda MOUS.X
  1984 24C3 91 84			sta (:bp2),y
  1985 24C5 C8				iny
  1986 24C6 AD C6 9C			lda MOUS.X+1
  1987 24C9 91 84			sta (:bp2),y
  1988
  1989 				; optimize OK (arkanoid_vbxe.pas), line = 86
  1990
  1991 24CB AC D4 9C 84 84 AC + 	mwy Y :bp2
  1992 24D5 A0 00			ldy #$00
  1993 24D7 A9 BE			lda #$BE
  1994 24D9 91 84			sta (:bp2),y
  1995 24DB C8				iny
  1996 24DC A9 00			lda #$00
  1997 24DE 91 84			sta (:bp2),y
  1998
  1999 				; ------------------------------------------------------------
  2000
  2001 = 9CD2			X	= DATAORIGIN+$00B5
  2002 = 9CD4			Y	= DATAORIGIN+$00B7
  2003
  2004 = 9CD2			@VarData	= X
  2005 = 0004			@VarDataSize	= 4
  2006
  2007 24E0			@exit
  2008 					.ifdef @new
  2009 					lda <@VarData
  2010 					sta :ztmp
  2011 					lda >@VarData
  2012 					ldy #@VarDataSize-1
  2013 					jmp @FreeMem
  2014 					els
  2015 24E0 60				rts						; ret
  2016 					eif
  2017 				.endl
  2018
  2019 24E1			.local	MOUSE_X_LIMIT					; PROCEDURE
  2020
  2021 				; ------------------------------------------------------------
  2022
  2023 = 9CD6			MN	= DATAORIGIN+$00B9
  2024 = 9CD8			MX	= DATAORIGIN+$00BB
  2025
  2026 = 9CD6			@VarData	= MN
  2027 = 0004			@VarDataSize	= 4
  2028
  2029 24E1			@exit
  2030 					.ifdef @new
  2031 					lda <@VarData
  2032 					sta :ztmp
  2033 					lda >@VarData
  2034 					ldy #@VarDataSize-1
  2035 					jmp @FreeMem
  2036 					els
  2037 24E1 60				rts						; ret
  2038 					eif
  2039 				.endl
  2040
  2041 24E2			.local	MOUSEMOVE					; PROCEDURE
  2042
  2043 				; ------------------------------------------------------------
  2044
  2045 = 9CDA			X	= DATAORIGIN+$00BD
  2046 = 9CDC			Y	= DATAORIGIN+$00BF
  2047
  2048 = 9CDA			@VarData	= X
  2049 = 0004			@VarDataSize	= 4
  2050
  2051 24E2			@exit
  2052 					.ifdef @new
  2053 					lda <@VarData
  2054 					sta :ztmp
  2055 					lda >@VarData
  2056 					ldy #@VarDataSize-1
  2057 					jmp @FreeMem
  2058 					els
  2059 24E2 60				rts						; ret
  2060 					eif
  2061 				.endl
  2062
  2063 24E3			.local	BLITZERO					; PROCEDURE
  2064
  2065 				; optimize OK (vservice.pas), line = 275
  2066
  2067 24E3 A9 00			lda #$00
  2068 24E5 8D E5 AA			sta I
  2069 24E8 8D E6 AA			sta I+1
  2070 24EB AD E3 AA			lda SIZE
  2071 24EE 38 E9 01			sub #$01
  2072 24F1 8D 04 25			sta @FORTMP_03C7_0
  2073 24F4 AD E4 AA			lda SIZE+1
  2074 24F7 E9 00			sbc #$00
  2075 24F9 8D FD 24			sta @FORTMP_03C7_1
  2076
  2077 24FC			l_03CA
  2078 				; --- ForToDoCondition
  2079 24FC A9 00			lda @FORTMP_03C7_1::#$00
  2080 24FE CD E6 AA			cmp I+1
  2081 2501 D0 05			bne @+
  2082 2503 A9 00			lda @FORTMP_03C7_0::#$00
  2083 2505 CD E5 AA			cmp I
  2084 				@
  2085 2508 90 28			jcc l_03D6
  2086
  2087 				; optimize OK (vservice.pas), line = 276
  2088
  2089 250A AD DB AA			lda SRC
  2090 250D 18 6D E5 AA			add I
  2091 2511 A8				tay
  2092 2512 B9 DB A9			lda adr.SCREEN,y
  2093 2515 F0 11			jeq l_03EE
  2094 2517 AD DF AA			lda DST
  2095 251A 18 6D E5 AA			add I
  2096 251E 85 9F			sta :STACKORIGIN+9
  2097 2520 B9 DB A9			lda adr.SCREEN,y
  2098 2523 A4 9F			ldy :STACKORIGIN+9
  2099 2525 99 DB A9			sta adr.SCREEN,y
  2100 2528			l_03EE
  2101
  2102 				; --- ForToDoEpilog
  2103 2528 EE E5 AA			inc I
  2104 252B D0 CF			jne l_03CA
  2105 252D EE E6 AA			inc I+1
  2106 2530 D0 CA			jne l_03CA
  2107 2532			l_03D6
  2108
  2109 				; ------------------------------------------------------------
  2110
  2111 = AADB			SRC	= DATAORIGIN+$0EBE
  2112 = AADF			DST	= DATAORIGIN+$0EC2
  2113 = AAE3			SIZE	= DATAORIGIN+$0EC6
  2114 = AAE5			I	= DATAORIGIN+$0EC8
  2115
  2116 = AADB			@VarData	= SRC
  2117 = 000C			@VarDataSize	= 12
  2118
  2119 2532			@exit
  2120 					.ifdef @new
  2121 					lda <@VarData
  2122 					sta :ztmp
  2123 					lda >@VarData
  2124 					ldy #@VarDataSize-1
  2125 					jmp @FreeMem
  2126 					els
  2127 2532 60				rts						; ret
  2128 					eif
  2129 				.endl
  2130
  2131 2533			.local	BLITTMP						; PROCEDURE
  2132
  2133 				; optimize OK (vservice.pas), line = 285
  2134
  2135 2533 A9 00			lda #$00
  2136 2535 8D EE AA			sta X
  2137 2538 AC ED AA			ldy SIZE
  2138 253B 88				dey
  2139 253C 8C 40 25			sty @FORTMP_0418_0
  2140
  2141 253F			l_041B
  2142 				; --- ForToDoCondition
  2143 253F A9 00			lda @FORTMP_0418_0::#$00
  2144 2541 CD EE AA			cmp X
  2145 2544 90 19			jcc l_0429
  2146
  2147 				; optimize OK (vservice.pas), line = 286
  2148
  2149 2546 AD E9 AA			lda DST
  2150 2549 18 6D EE AA			add X
  2151 254D 85 9F			sta :STACKORIGIN+9
  2152 254F AC EE AA			ldy X
  2153 2552 B9 DD A4			lda adr.TMP,y
  2154 2555 A4 9F			ldy :STACKORIGIN+9
  2155 2557 99 DB A9			sta adr.SCREEN,y
  2156
  2157 				; --- ForToDoEpilog
  2158 255A EE EE AA			inc X
  2159 255D D0 E0			jne l_041B
  2160 255F			l_0429
  2161
  2162 				; ------------------------------------------------------------
  2163
  2164 = AAE9			DST	= DATAORIGIN+$0ECC
  2165 = AAED			SIZE	= DATAORIGIN+$0ED0
  2166 = AAEE			X	= DATAORIGIN+$0ED1
  2167
  2168 = AAE9			@VarData	= DST
  2169 = 0006			@VarDataSize	= 6
  2170
  2171 255F			@exit
  2172 					.ifdef @new
  2173 					lda <@VarData
  2174 					sta :ztmp
  2175 					lda >@VarData
  2176 					ldy #@VarDataSize-1
  2177 					jmp @FreeMem
  2178 					els
  2179 255F 60				rts						; ret
  2180 					eif
  2181 				.endl
  2182
  2183 2560			.local	BLITROW						; PROCEDURE
  2184
  2185 				; optimize OK (vservice.pas), line = 295
  2186
  2187 2560 A9 00			lda #$00
  2188 2562 8D FA AA			sta X
  2189 2565 8D FB AA			sta X+1
  2190 2568 AD F8 AA			lda SIZE
  2191 256B 38 E9 01			sub #$01
  2192 256E 8D 81 25			sta @FORTMP_044D_0
  2193 2571 AD F9 AA			lda SIZE+1
  2194 2574 E9 00			sbc #$00
  2195 2576 8D 7A 25			sta @FORTMP_044D_1
  2196
  2197 2579			l_0450
  2198 				; --- ForToDoCondition
  2199 2579 A9 00			lda @FORTMP_044D_1::#$00
  2200 257B CD FB AA			cmp X+1
  2201 257E D0 05			bne @+
  2202 2580 A9 00			lda @FORTMP_044D_0::#$00
  2203 2582 CD FA AA			cmp X
  2204 				@
  2205 2585 90 23			jcc l_045C
  2206
  2207 				; optimize OK (vservice.pas), line = 296
  2208
  2209 2587 AD F4 AA			lda DST
  2210 258A 18 6D FA AA			add X
  2211 258E 85 9F			sta :STACKORIGIN+9
  2212 2590 AD F0 AA			lda SRC
  2213 2593 18 6D FA AA			add X
  2214 2597 A8				tay
  2215 2598 B9 DB A9			lda adr.SCREEN,y
  2216 259B A4 9F			ldy :STACKORIGIN+9
  2217 259D 99 DB A9			sta adr.SCREEN,y
  2218
  2219 				; --- ForToDoEpilog
  2220 25A0 EE FA AA			inc X
  2221 25A3 D0 D4			jne l_0450
  2222 25A5 EE FB AA			inc X+1
  2223 25A8 D0 CF			jne l_0450
  2224 25AA			l_045C
  2225
  2226 				; ------------------------------------------------------------
  2227
  2228 = AAF0			SRC	= DATAORIGIN+$0ED3
  2229 = AAF4			DST	= DATAORIGIN+$0ED7
  2230 = AAF8			SIZE	= DATAORIGIN+$0EDB
  2231 = AAFA			X	= DATAORIGIN+$0EDD
  2232
  2233 = AAF0			@VarData	= SRC
  2234 = 000C			@VarDataSize	= 12
  2235
  2236 25AA			@exit
  2237 					.ifdef @new
  2238 					lda <@VarData
  2239 					sta :ztmp
  2240 					lda >@VarData
  2241 					ldy #@VarDataSize-1
  2242 					jmp @FreeMem
  2243 					els
  2244 25AA 60				rts						; ret
  2245 					eif
  2246 				.endl
  2247
  2248 25AB			.local	BLITBYTE					; PROCEDURE
  2249
  2250 				; optimize OK (vservice.pas), line = 304
  2251
  2252 25AB AC FE AA			ldy SRC
  2253 25AE B9 DB A9			lda adr.SCREEN,y
  2254 25B1 AC 02 AB			ldy DST
  2255 25B4 99 DB A9			sta adr.SCREEN,y
  2256
  2257 				; ------------------------------------------------------------
  2258
  2259 = AAFE			SRC	= DATAORIGIN+$0EE1
  2260 = AB02			DST	= DATAORIGIN+$0EE5
  2261
  2262 = AAFE			@VarData	= SRC
  2263 = 0008			@VarDataSize	= 8
  2264
  2265 25B7			@exit
  2266 					.ifdef @new
  2267 					lda <@VarData
  2268 					sta :ztmp
  2269 					lda >@VarData
  2270 					ldy #@VarDataSize-1
  2271 					jmp @FreeMem
  2272 					els
  2273 25B7 60				rts						; ret
  2274 					eif
  2275 				.endl
  2276
  2277 25B8			.local	PUTBYTE						; PROCEDURE
  2278
  2279 				; optimize OK (vservice.pas), line = 312
  2280
  2281 25B8 AC 06 AB			ldy DST
  2282 25BB AD 0A AB			lda V
  2283 25BE 99 DB A9			sta adr.SCREEN,y
  2284
  2285 				; ------------------------------------------------------------
  2286
  2287 = AB06			DST	= DATAORIGIN+$0EE9
  2288 = AB0A			V	= DATAORIGIN+$0EED
  2289
  2290 = AB06			@VarData	= DST
  2291 = 0005			@VarDataSize	= 5
  2292
  2293 25C1			@exit
  2294 					.ifdef @new
  2295 					lda <@VarData
  2296 					sta :ztmp
  2297 					lda >@VarData
  2298 					ldy #@VarDataSize-1
  2299 					jmp @FreeMem
  2300 					els
  2301 25C1 60				rts						; ret
  2302 					eif
  2303 				.endl
  2304
  2305 25C2			.local	GETBYTE						; FUNCTION
  2306
  2307 				; optimize OK (vservice.pas), line = 320
  2308
  2309 25C2 AC 0B AB			ldy SRC
  2310 25C5 B9 DB A9			lda adr.SCREEN,y
  2311 25C8 8D 0F AB			sta RESULT
  2312 25CB			@exit
  2313
  2314 				; ------------------------------------------------------------
  2315
  2316 = AB0B			SRC	= DATAORIGIN+$0EEE
  2317 = AB0F			RESULT	= DATAORIGIN+$0EF2
  2318
  2319 = AB0B			@VarData	= SRC
  2320 = 0004			@VarDataSize	= 4
  2321
  2322 25CB 60				rts						; ret
  2323 				.endl
  2324
  2325 25CC			.local	NOSOUND						; PROCEDURE
  2326
  2327 25CC			@exit
  2328 					.ifdef @new
  2329 					lda <@VarData
  2330 					sta :ztmp
  2331 					lda >@VarData
  2332 					ldy #@VarDataSize-1
  2333 					jmp @FreeMem
  2334 					els
  2335 25CC 60				rts						; ret
  2336 					eif
  2337 				.endl
  2338
  2339 25CD			.local	MYDELAY						; PROCEDURE
  2340
  2341 				; ------------------------------------------------------------
  2342
  2343 = AB10			A	= DATAORIGIN+$0EF3
  2344
  2345 = AB10			@VarData	= A
  2346 = 0002			@VarDataSize	= 2
  2347
  2348 25CD			@exit
  2349 					.ifdef @new
  2350 					lda <@VarData
  2351 					sta :ztmp
  2352 					lda >@VarData
  2353 					ldy #@VarDataSize-1
  2354 					jmp @FreeMem
  2355 					els
  2356 25CD 60				rts						; ret
  2357 					eif
  2358 				.endl
  2359
  2360 25CE			.local	MAX						; FUNCTION
  2361
  2362 				; optimize OK (vservice.pas), line = 387
  2363
  2364 25CE AD 14 AB			lda B
  2365 25D1 CD 12 AB			cmp A
  2366 25D4 AD 15 AB			lda B+1
  2367 25D7 ED 13 AB			sbc A+1
  2368 25DA 50 02			svc
  2369 25DC 49 80			eor #$80
  2370 25DE 10 0C			jpl l_04B3
  2371 25E0 AD 12 AB			lda A
  2372 25E3 8D 16 AB			sta RESULT
  2373 25E6 AD 13 AB			lda A+1
  2374 25E9 4C F5 25			jmp l_04C2
  2375 25EC			l_04B3
  2376
  2377 				; optimize OK (vservice.pas), line = 388
  2378
  2379 25EC AD 14 AB			lda B
  2380 25EF 8D 16 AB			sta RESULT
  2381 25F2 AD 15 AB			lda B+1
  2382 25F5			l_04C2
  2383 25F5 8D 17 AB			sta RESULT+1
  2384 25F8			@exit
  2385
  2386 				; ------------------------------------------------------------
  2387
  2388 = AB12			A	= DATAORIGIN+$0EF5
  2389 = AB14			B	= DATAORIGIN+$0EF7
  2390 = AB16			RESULT	= DATAORIGIN+$0EF9
  2391
  2392 = AB12			@VarData	= A
  2393 = 0004			@VarDataSize	= 4
  2394
  2395 25F8 60				rts						; ret
  2396 				.endl
  2397
  2398 25F9			.local	MIN						; FUNCTION
  2399
  2400 				; optimize OK (vservice.pas), line = 394
  2401
  2402 25F9 AD 18 AB			lda A
  2403 25FC CD 1A AB			cmp B
  2404 25FF AD 19 AB			lda A+1
  2405 2602 ED 1B AB			sbc B+1
  2406 2605 50 02			svc
  2407 2607 49 80			eor #$80
  2408 2609 10 0C			jpl l_04DD
  2409 260B AD 18 AB			lda A
  2410 260E 8D 1C AB			sta RESULT
  2411 2611 AD 19 AB			lda A+1
  2412 2614 4C 20 26			jmp l_04EC
  2413 2617			l_04DD
  2414
  2415 				; optimize OK (vservice.pas), line = 395
  2416
  2417 2617 AD 1A AB			lda B
  2418 261A 8D 1C AB			sta RESULT
  2419 261D AD 1B AB			lda B+1
  2420 2620			l_04EC
  2421 2620 8D 1D AB			sta RESULT+1
  2422 2623			@exit
  2423
  2424 				; ------------------------------------------------------------
  2425
  2426 = AB18			A	= DATAORIGIN+$0EFB
  2427 = AB1A			B	= DATAORIGIN+$0EFD
  2428 = AB1C			RESULT	= DATAORIGIN+$0EFF
  2429
  2430 = AB18			@VarData	= A
  2431 = 0004			@VarDataSize	= 4
  2432
  2433 2623 60				rts						; ret
  2434 				.endl
  2435
  2436 2624			.local	FATAL_ERROR					; PROCEDURE
  2437 2624 8D 1E AB			sta ERR_TYPE
  2438
  2439 				; optimize OK (vservice.pas), line = 404
  2440
  2441 2627 8D 9B 9D			sta STATUS
  2442
  2443 				; ------------------------------------------------------------
  2444
  2445 = AB1E			ERR_TYPE	= DATAORIGIN+$0F01
  2446
  2447 = AB1E			@VarData	= ERR_TYPE
  2448 = 0001			@VarDataSize	= 1
  2449
  2450 262A			@exit
  2451 					.ifdef @new
  2452 					lda <@VarData
  2453 					sta :ztmp
  2454 					lda >@VarData
  2455 					ldy #@VarDataSize-1
  2456 					jmp @FreeMem
  2457 					els
  2458 262A 60				rts						; ret
  2459 					eif
  2460 				.endl
  2461
  2462 262B			.local	INITROWARRAY					; PROCEDURE
  2463
  2464 				; optimize OK (vservice.pas), line = 442
  2465
  2466 262B A9 00			lda #$00
  2467 262D 8D 1F AB			sta Y
  2468
  2469 2630			l_0508
  2470 				; --- ForToDoCondition
  2471 2630 AD 1F AB			lda Y
  2472 2633 C9 C8			cmp #$C8
  2473 2635 B0 34			jcs l_0516
  2474
  2475 				; optimize OK (vservice.pas), line = 443
  2476
  2477 2637 85 9F			sta :STACKORIGIN+9
  2478 2639 A9 00			lda #$00
  2479 263B 06 9F			asl :STACKORIGIN+9
  2480 263D 2A				rol @
  2481 263E 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  2482 2640 AD 1F AB			lda Y
  2483 2643 85 86			sta :eax
  2484 2645 A9 00			lda #$00
  2485 2647 85 87			sta :eax+1
  2486 2649 20 28 19			jsr @mul320
  2487 264C AD 29 9B			lda ROW
  2488 264F 18 65 9F			add :STACKORIGIN+9
  2489 2652 85 84			sta :bp2
  2490 2654 AD 2A 9B			lda ROW+1
  2491 2657 65 AF			adc :STACKORIGIN+STACKWIDTH+9
  2492 2659 85 85			sta :bp2+1
  2493 265B A0 00			ldy #$00
  2494 265D A5 86			lda :eax
  2495 265F 91 84			sta (:bp2),y
  2496 2661 C8				iny
  2497 2662 A5 87			lda :eax+1
  2498 2664 91 84			sta (:bp2),y
  2499
  2500 				; --- ForToDoEpilog
  2501 2666 EE 1F AB			inc Y
  2502 2669 D0 C5			jne l_0508
  2503 266B			l_0516
  2504
  2505 				; optimize OK (vservice.pas), line = 445
  2506
  2507 266B A9 C8			lda #$C8
  2508 266D 8D 1F AB			sta Y
  2509
  2510 2670			l_0531
  2511 				; --- ForToDoCondition
  2512 2670 AD 1F AB			lda Y
  2513 2673 C9 FB			cmp #$FB
  2514 2675 B0 26			jcs l_053F
  2515
  2516 				; optimize OK (vservice.pas), line = 446
  2517
  2518 2677 A9 00			lda #$00
  2519 2679 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  2520 267B AD 1F AB			lda Y
  2521 267E 0A				asl @
  2522 267F 26 AF			rol :STACKORIGIN+STACKWIDTH+9
  2523 2681 18 6D 29 9B			add ROW
  2524 2685 85 84			sta :bp2
  2525 2687 AD 2A 9B			lda ROW+1
  2526 268A 65 AF			adc :STACKORIGIN+STACKWIDTH+9
  2527 268C 85 85			sta :bp2+1
  2528 268E A0 00			ldy #$00
  2529 2690 98				tya
  2530 2691 91 84			sta (:bp2),y
  2531 2693 C8				iny
  2532 2694 A9 FA			lda #$FA
  2533 2696 91 84			sta (:bp2),y
  2534
  2535 				; --- ForToDoEpilog
  2536 2698 EE 1F AB			inc Y
  2537 269B D0 D3			jne l_0531
  2538 269D			l_053F
  2539
  2540 				; ------------------------------------------------------------
  2541
  2542 = AB1F			Y	= DATAORIGIN+$0F02
  2543
  2544 = AB1F			@VarData	= Y
  2545 = 0001			@VarDataSize	= 1
  2546
  2547 269D			@exit
  2548 					.ifdef @new
  2549 					lda <@VarData
  2550 					sta :ztmp
  2551 					lda >@VarData
  2552 					ldy #@VarDataSize-1
  2553 					jmp @FreeMem
  2554 					els
  2555 269D 60				rts						; ret
  2556 					eif
  2557 				.endl
  2558
  2559 269E			.local	INITSVGA					; PROCEDURE
  2560
  2561 269E			@exit
  2562 					.ifdef @new
  2563 					lda <@VarData
  2564 					sta :ztmp
  2565 					lda >@VarData
  2566 					ldy #@VarDataSize-1
  2567 					jmp @FreeMem
  2568 					els
  2569 269E 60				rts						; ret
  2570 					eif
  2571 				.endl
  2572
  2573 269F			.local	SHINE_BLOCK					; PROCEDURE
  2574
  2575 				; optimize OK (vservice.pas), line = 501
  2576
  2577 269F AD BB 9D			lda SHINEREC.XB
  2578 26A2 8D 20 AB			sta XB
  2579 26A5 A9 00			lda #$00
  2580 26A7 8D 21 AB			sta XB+1
  2581
  2582 				; optimize OK (vservice.pas), line = 502
  2583
  2584 26AA AD BC 9D			lda SHINEREC.YB
  2585 26AD 8D 22 AB			sta YB
  2586 26B0 A9 00			lda #$00
  2587 26B2 8D 23 AB			sta YB+1
  2588
  2589 				; optimize OK (vservice.pas), line = 504
  2590
  2591 26B5 A9 10			lda #$10
  2592 26B7 85 8E			sta :ecx
  2593 26B9 A9 00			lda #$00
  2594 26BB 85 8F			sta :ecx+1
  2595 26BD AD 22 AB			lda YB
  2596 26C0 85 86			sta :eax
  2597 26C2 AD 23 AB			lda YB+1
  2598 26C5 85 87			sta :eax+1
  2599 					.ifdef fmulinit
  2600 					fmulu_16
  2601 					els
  2602 26C7 20 FA 12			imulCX
  2603 					eif
  2604 26CA A5 86			lda :eax
  2605 26CC 18 6D 20 AB			add XB
  2606 26D0 A8				tay
  2607 26D1 B9 DD A3			lda adr.WALL,y
  2608 26D4 C9 09			cmp #$09
  2609 26D6 B0 03 4C 49 28		jcc l_057C
  2610
  2611 				; optimize OK (vservice.pas), line = 506
  2612
  2613 26DB AD BD 9D			lda SHINEREC.FRAME
  2614 26DE 4A				lsr @
  2615 26DF 8D 24 AB			sta FRAME
  2616 26E2 A9 00			lda #$00
  2617 26E4 8D 25 AB			sta FRAME+1
  2618
  2619 				; optimize OK (vservice.pas), line = 507
  2620
  2621 26E7 A9 10			lda #$10
  2622 26E9 85 8E			sta :ecx
  2623 26EB A9 00			lda #$00
  2624 26ED 85 8F			sta :ecx+1
  2625 26EF AD 22 AB			lda YB
  2626 26F2 85 86			sta :eax
  2627 26F4 AD 23 AB			lda YB+1
  2628 26F7 85 87			sta :eax+1
  2629 					.ifdef fmulinit
  2630 					fmulu_16
  2631 					els
  2632 26F9 20 FA 12			imulCX
  2633 					eif
  2634 26FC A5 86			lda :eax
  2635 26FE 18 6D 20 AB			add XB
  2636 2702 A8				tay
  2637 2703 B9 DD A3			lda adr.WALL,y
  2638 2706 C9 0A			cmp #$0A
  2639 2708 F0 0E			jeq l_05A4
  2640 270A AD 24 AB			lda FRAME
  2641 270D 18 69 05			add #$05
  2642 2710 8D 24 AB			sta FRAME
  2643 2713 90 03			scc
  2644 2715 EE 25 AB			inc FRAME+1
  2645 2718			l_05A4
  2646
  2647 				; optimize OK (vservice.pas), line = 509
  2648
  2649 2718 AD 20 AB			lda XB
  2650 271B 85 A0			sta :STACKORIGIN+10
  2651 271D AD 21 AB			lda XB+1
  2652 2720 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  2653 2722 06 A0			asl :STACKORIGIN+10
  2654 2724 26 B0			rol :STACKORIGIN+STACKWIDTH+10
  2655 2726 06 A0			asl :STACKORIGIN+10
  2656 2728 26 B0			rol :STACKORIGIN+STACKWIDTH+10
  2657 272A 06 A0			asl :STACKORIGIN+10
  2658 272C 26 B0			rol :STACKORIGIN+STACKWIDTH+10
  2659 272E 06 A0			asl :STACKORIGIN+10
  2660 2730 26 B0			rol :STACKORIGIN+STACKWIDTH+10
  2661 2732 A9 09			lda #$09
  2662 2734 18 65 A0			add :STACKORIGIN+10
  2663 2737 8D 26 AB			sta XF
  2664 273A A9 00			lda #$00
  2665 273C 65 B0			adc :STACKORIGIN+STACKWIDTH+10
  2666 273E 8D 27 AB			sta XF+1
  2667
  2668 				; optimize OK (vservice.pas), line = 510
  2669
  2670 2741 AD 22 AB			lda YB
  2671 2744 85 A0			sta :STACKORIGIN+10
  2672 2746 AD 23 AB			lda YB+1
  2673 2749 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  2674 274B 06 A0			asl :STACKORIGIN+10
  2675 274D 26 B0			rol :STACKORIGIN+STACKWIDTH+10
  2676 274F 06 A0			asl :STACKORIGIN+10
  2677 2751 26 B0			rol :STACKORIGIN+STACKWIDTH+10
  2678 2753 06 A0			asl :STACKORIGIN+10
  2679 2755 26 B0			rol :STACKORIGIN+STACKWIDTH+10
  2680 2757 A9 16			lda #$16
  2681 2759 18 65 A0			add :STACKORIGIN+10
  2682 275C 8D 28 AB			sta YF
  2683 275F A9 00			lda #$00
  2684 2761 65 B0			adc :STACKORIGIN+STACKWIDTH+10
  2685 2763 8D 29 AB			sta YF+1
  2686
  2687 				; optimize OK (vservice.pas), line = 511
  2688
  2689 2766 AD 24 AB			lda FRAME
  2690 2769 85 9F			sta :STACKORIGIN+9
  2691 276B AD 25 AB			lda FRAME+1
  2692 276E 06 9F			asl :STACKORIGIN+9
  2693 2770 2A				rol @
  2694 2771 06 9F			asl :STACKORIGIN+9
  2695 2773 2A				rol @
  2696 2774 06 9F			asl :STACKORIGIN+9
  2697 2776 2A				rol @
  2698 2777 06 9F			asl :STACKORIGIN+9
  2699 2779 2A				rol @
  2700 277A 06 9F			asl :STACKORIGIN+9
  2701 277C 2A				rol @
  2702 277D 06 9F			asl :STACKORIGIN+9
  2703 277F 2A				rol @
  2704 2780 06 9F			asl :STACKORIGIN+9
  2705 2782 2A				rol @
  2706 2783 8D 2B AB			sta FR+1
  2707 2786 A5 9F			lda :STACKORIGIN+9
  2708 2788 8D 2A AB			sta FR
  2709
  2710 				; optimize OK (vservice.pas), line = 513
  2711
  2712 278B A9 00			lda #$00
  2713 278D 8D 2E AB			sta Y
  2714
  2715 2790			l_05D4
  2716 				; --- ForToDoCondition
  2717 2790 AD 2E AB			lda Y
  2718 2793 C9 08			cmp #$08
  2719 2795 90 03 4C 49 28		jcs l_05E2
  2720
  2721 				; optimize OK (vservice.pas), line = 515
  2722
  2723 279A 85 9F			sta :STACKORIGIN+9
  2724 279C A9 00			lda #$00
  2725 279E 06 9F			asl :STACKORIGIN+9
  2726 27A0 2A				rol @
  2727 27A1 06 9F			asl :STACKORIGIN+9
  2728 27A3 2A				rol @
  2729 27A4 06 9F			asl :STACKORIGIN+9
  2730 27A6 2A				rol @
  2731 27A7 06 9F			asl :STACKORIGIN+9
  2732 27A9 2A				rol @
  2733 27AA 8D 2D AB			sta OG+1
  2734 27AD A5 9F			lda :STACKORIGIN+9
  2735 27AF 8D 2C AB			sta OG
  2736
  2737 				; optimize OK (vservice.pas), line = 518
  2738
  2739 27B2 AD 28 AB			lda YF
  2740 27B5 18 6D 2E AB			add Y
  2741 27B9 85 A1			sta :STACKORIGIN+11
  2742 27BB AD 29 AB			lda YF+1
  2743 27BE 69 00			adc #$00
  2744 27C0 06 A1			asl :STACKORIGIN+11
  2745 27C2 2A				rol @
  2746 27C3 85 B1			sta :STACKORIGIN+STACKWIDTH+11
  2747 27C5 AD 29 9B			lda ROW
  2748 27C8 18 65 A1			add :STACKORIGIN+11
  2749 27CB 85 84			sta :bp2
  2750 27CD AD 2A 9B			lda ROW+1
  2751 27D0 65 B1			adc :STACKORIGIN+STACKWIDTH+11
  2752 27D2 85 85			sta :bp2+1
  2753 27D4 A0 00			ldy #$00
  2754 27D6 AD 26 AB			lda XF
  2755 27D9 18 71 84			add (:bp2),y
  2756 27DC 8D F4 AA			sta BLITROW.DST
  2757 27DF C8				iny
  2758 27E0 AD 27 AB			lda XF+1
  2759 27E3 71 84			adc (:bp2),y
  2760 27E5 8D F5 AA			sta BLITROW.DST+1
  2761 27E8 A9 00			lda #$00
  2762 27EA 69 00			adc #$00
  2763 27EC 8D F6 AA			sta BLITROW.DST+2
  2764 27EF A9 00			lda #$00
  2765 27F1 69 00			adc #$00
  2766 27F3 8D F7 AA			sta BLITROW.DST+3
  2767 27F6 AD 32 9D			lda SHINEWALL.OFS
  2768 27F9 18 6D 2A AB			add FR
  2769 27FD 85 A1			sta :STACKORIGIN+11
  2770 27FF AD 33 9D			lda SHINEWALL.OFS+1
  2771 2802 6D 2B AB			adc FR+1
  2772 2805 85 B1			sta :STACKORIGIN+STACKWIDTH+11
  2773 2807 AD 34 9D			lda SHINEWALL.OFS+2
  2774 280A 69 00			adc #$00
  2775 280C 85 C1			sta :STACKORIGIN+STACKWIDTH*2+11
  2776 280E AD 35 9D			lda SHINEWALL.OFS+3
  2777 2811 69 00			adc #$00
  2778 2813 85 D1			sta :STACKORIGIN+STACKWIDTH*3+11
  2779 2815 A5 A1			lda :STACKORIGIN+11
  2780 2817 18 6D 2C AB			add OG
  2781 281B 8D F0 AA			sta BLITROW.SRC
  2782 281E A5 B1			lda :STACKORIGIN+STACKWIDTH+11
  2783 2820 6D 2D AB			adc OG+1
  2784 2823 8D F1 AA			sta BLITROW.SRC+1
  2785 2826 A5 C1			lda :STACKORIGIN+STACKWIDTH*2+11
  2786 2828 69 00			adc #$00
  2787 282A 8D F2 AA			sta BLITROW.SRC+2
  2788 282D A5 D1			lda :STACKORIGIN+STACKWIDTH*3+11
  2789 282F 69 00			adc #$00
  2790 2831 8D F3 AA			sta BLITROW.SRC+3
  2791 2834 A9 10			lda #$10
  2792 2836 8D F8 AA			sta BLITROW.SIZE
  2793 2839 A9 00			lda #$00
  2794 283B 8D F9 AA			sta BLITROW.SIZE+1
  2795 283E 20 60 25			jsr BLITROW
  2796
  2797 				; --- ForToDoEpilog
  2798 2841 EE 2E AB			inc Y
  2799 2844 F0 03 4C 90 27		jne l_05D4
  2800 2849			l_05E2
  2801 2849			l_057C
  2802
  2803 				; optimize FAIL (0, vservice.pas), line = 522
  2804
  2805 2849 EE BD 9D			inc SHINEREC.FRAME
  2806
  2807 				; optimize OK (vservice.pas), line = 523
  2808
  2809 284C AD BD 9D			lda SHINEREC.FRAME
  2810 284F C9 0A			cmp #$0A
  2811 2851 D0 05			jne l_0629
  2812 2853 A9 00			lda #$00
  2813 2855 8D BF 9D			sta SHINEREC.ACTIVE
  2814 2858			l_0629
  2815
  2816 				; ------------------------------------------------------------
  2817
  2818 = AB20			XB	= DATAORIGIN+$0F03
  2819 = AB22			YB	= DATAORIGIN+$0F05
  2820 = AB24			FRAME	= DATAORIGIN+$0F07
  2821 = AB26			XF	= DATAORIGIN+$0F09
  2822 = AB28			YF	= DATAORIGIN+$0F0B
  2823 = AB2A			FR	= DATAORIGIN+$0F0D
  2824 = AB2C			OG	= DATAORIGIN+$0F0F
  2825 = AB2E			Y	= DATAORIGIN+$0F11
  2826
  2827 = AB20			@VarData	= XB
  2828 = 000F			@VarDataSize	= 15
  2829
  2830 2858			@exit
  2831 					.ifdef @new
  2832 					lda <@VarData
  2833 					sta :ztmp
  2834 					lda >@VarData
  2835 					ldy #@VarDataSize-1
  2836 					jmp @FreeMem
  2837 					els
  2838 2858 60				rts						; ret
  2839 					eif
  2840 				.endl
  2841
  2842 2859			.local	UNSHINE_BLOCK					; PROCEDURE
  2843
  2844 				; optimize OK (vservice.pas), line = 532
  2845
  2846 2859 A9 09			lda #$09
  2847 285B 8D BD 9D			sta SHINEREC.FRAME
  2848
  2849 				; optimize FAIL ('SHINE_BLOCK', vservice.pas), line = 533
  2850
  2851 285E 20 9F 26			jsr SHINE_BLOCK
  2852
  2853 2861			@exit
  2854 					.ifdef @new
  2855 					lda <@VarData
  2856 					sta :ztmp
  2857 					lda >@VarData
  2858 					ldy #@VarDataSize-1
  2859 					jmp @FreeMem
  2860 					els
  2861 2861 60				rts						; ret
  2862 					eif
  2863 				.endl
  2864
  2865 2862			.local	SHINE						; PROCEDURE
  2866
  2867 				; optimize OK (vservice.pas), line = 540
  2868
  2869 2862 AD BF 9D			lda SHINEREC.ACTIVE
  2870 2865 F0 03			jeq l_0649
  2871 2867 20 59 28			jsr UNSHINE_BLOCK
  2872 286A			l_0649
  2873
  2874 				; optimize OK (vservice.pas), line = 542
  2875
  2876 286A AD 2F AB			lda XB
  2877 286D 8D BB 9D			sta SHINEREC.XB
  2878
  2879 				; optimize OK (vservice.pas), line = 543
  2880
  2881 2870 AD 30 AB			lda YB
  2882 2873 8D BC 9D			sta SHINEREC.YB
  2883
  2884 				; optimize OK (vservice.pas), line = 544
  2885
  2886 2876 A9 00			lda #$00
  2887 2878 8D BD 9D			sta SHINEREC.FRAME
  2888
  2889 				; optimize OK (vservice.pas), line = 545
  2890
  2891 287B A9 01			lda #$01
  2892 287D 8D BF 9D			sta SHINEREC.ACTIVE
  2893
  2894 				; optimize OK (vservice.pas), line = 546
  2895
  2896 2880 AD 30 AB			lda YB
  2897 2883 0A				asl @
  2898 2884 0A				asl @
  2899 2885 0A				asl @
  2900 2886 0A				asl @
  2901 2887 18 6D 2F AB			add XB
  2902 288B A8				tay
  2903 288C B9 DD A3			lda adr.WALL,y
  2904 288F 8D BE 9D			sta SHINEREC.BLOCK
  2905
  2906 				; ------------------------------------------------------------
  2907
  2908 = AB2F			XB	= DATAORIGIN+$0F12
  2909 = AB30			YB	= DATAORIGIN+$0F13
  2910
  2911 = AB2F			@VarData	= XB
  2912 = 0002			@VarDataSize	= 2
  2913
  2914 2892			@exit
  2915 					.ifdef @new
  2916 					lda <@VarData
  2917 					sta :ztmp
  2918 					lda >@VarData
  2919 					ldy #@VarDataSize-1
  2920 					jmp @FreeMem
  2921 					els
  2922 2892 60				rts						; ret
  2923 					eif
  2924 				.endl
  2925
  2926 2893			.local	CHECKSHINE					; PROCEDURE
  2927
  2928 				; optimize OK (vservice.pas), line = 552
  2929
  2930 2893 AD BF 9D			lda SHINEREC.ACTIVE
  2931 2896 C9 01			cmp #$01
  2932 2898 D0 03			jne l_068A
  2933 289A 20 9F 26			jsr SHINE_BLOCK
  2934 289D			l_068A
  2935
  2936 289D			@exit
  2937 					.ifdef @new
  2938 					lda <@VarData
  2939 					sta :ztmp
  2940 					lda >@VarData
  2941 					ldy #@VarDataSize-1
  2942 					jmp @FreeMem
  2943 					els
  2944 289D 60				rts						; ret
  2945 					eif
  2946 				.endl
  2947
  2948 289E			.local	RANDOM_LETTER_DROP				; FUNCTION
  2949
  2950 				; --- RepeatUntilProlog
  2951 289E			l_0693
  2952
  2953 				; optimize OK (vservice.pas), line = 560
  2954
  2955 289E A9 64			lda #$64
  2956 28A0 20 E8 23			jsr SYSTEM.RANDOM.@010180000
  2957 28A3 AD 62 9C			lda SYSTEM.RANDOM.@010180000.RESULT
  2958 28A6 8D 33 AB			sta RN
  2959 28A9 A9 00			lda #$00
  2960 28AB 8D 34 AB			sta RN+1
  2961
  2962 				; optimize OK (vservice.pas), line = 561
  2963
  2964 28AE A9 00			lda #$00
  2965 28B0 8D 35 AB			sta SUM
  2966 28B3 8D 36 AB			sta SUM+1
  2967
  2968 				; optimize OK (vservice.pas), line = 562
  2969
  2970 28B6 8D 37 AB			sta LETTER
  2971 28B9 8D 38 AB			sta LETTER+1
  2972
  2973 				; --- RepeatUntilProlog
  2974 28BC			l_06A1
  2975
  2976 				; optimize FAIL (0, vservice.pas), line = 567
  2977
  2978 28BC EE 37 AB			inc LETTER
  2979 28BF D0 03			sne
  2980 28C1 EE 38 AB			inc LETTER+1
  2981
  2982 				; optimize OK (vservice.pas), line = 568
  2983
  2984 28C4 AC 37 AB			ldy LETTER
  2985 28C7 B9 9B 10			lda adr.LETTER_DIS,y
  2986 28CA 18 6D 35 AB			add SUM
  2987 28CE 8D 35 AB			sta SUM
  2988 28D1 AD 36 AB			lda SUM+1
  2989 28D4 69 00			adc #$00
  2990 28D6 8D 36 AB			sta SUM+1
  2991
  2992 				; optimize OK (vservice.pas), line = 571
  2993
  2994 28D9 AD 34 AB			lda RN+1
  2995 28DC CD 36 AB			cmp SUM+1
  2996 28DF D0 06			bne @+
  2997 28E1 AD 33 AB			lda RN
  2998 28E4 CD 35 AB			cmp SUM
  2999 				@
  3000 28E7 B0 D3			jcs l_06A1
  3001
  3002 				; optimize OK (vservice.pas), line = 575
  3003
  3004 28E9 AD 37 AB			lda LETTER
  3005 28EC 38 E9 01			sub #$01
  3006 28EF 85 9F			sta :STACKORIGIN+9
  3007 28F1 AD 38 AB			lda LETTER+1
  3008 28F4 E9 00			sbc #$00
  3009 28F6 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  3010 28F8 A9 00			lda #$00
  3011 28FA E9 00			sbc #$00
  3012 28FC 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
  3013 28FE A9 00			lda #$00
  3014 2900 E9 00			sbc #$00
  3015 2902 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
  3016 2904 AD D2 9D			lda LETT.LAST
  3017 2907 85 A0			sta :STACKORIGIN+10
  3018 2909 A0 00			ldy #$00
  3019 290B AD D3 9D			lda LETT.LAST+1
  3020 290E 10 01			spl
  3021 2910 88				dey
  3022 2911 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  3023 2913 84 C0			sty :STACKORIGIN+STACKWIDTH*2+10
  3024 2915 84 D0			sty :STACKORIGIN+STACKWIDTH*3+10
  3025 2917 A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
  3026 2919 C5 D0			cmp :STACKORIGIN+STACKWIDTH*3+10
  3027 291B D0 10			bne @+
  3028 291D A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
  3029 291F C5 C0			cmp :STACKORIGIN+STACKWIDTH*2+10
  3030 2921 D0 0A			bne @+
  3031 2923 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  3032 2925 C5 B0			cmp :STACKORIGIN+STACKWIDTH+10
  3033 2927 D0 04			bne @+
  3034 2929 A5 9F			lda :STACKORIGIN+9
  3035 292B C5 A0			cmp :STACKORIGIN+10
  3036 				@
  3037 292D D0 03 4C 9E 28		jeq l_0693
  3038
  3039 				; optimize OK (vservice.pas), line = 577
  3040
  3041 2932 AD 37 AB			lda LETTER
  3042 2935 38 E9 01			sub #$01
  3043 2938 8D 31 AB			sta RESULT
  3044 293B AD 38 AB			lda LETTER+1
  3045 293E E9 00			sbc #$00
  3046 2940 8D 32 AB			sta RESULT+1
  3047 2943			@exit
  3048
  3049 				; ------------------------------------------------------------
  3050
  3051 = AB31			RESULT	= DATAORIGIN+$0F14
  3052 = AB33			RN	= DATAORIGIN+$0F16
  3053 = AB35			SUM	= DATAORIGIN+$0F18
  3054 = AB37			LETTER	= DATAORIGIN+$0F1A
  3055
  3056 = AB33			@VarData	= RN
  3057 = 0006			@VarDataSize	= 6
  3058
  3059 2943 60				rts						; ret
  3060 				.endl
  3061
  3062 2944			.local	PUT_LETTER					; PROCEDURE
  3063
  3064 				; optimize OK (vservice.pas), line = 586
  3065
  3066 2944 A9 00			lda #$00
  3067 2946 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
  3068 2948 AD C6 9D			lda LETT.TYP+1
  3069 294B 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  3070 294D AD C5 9D			lda LETT.TYP
  3071 2950 0A				asl @
  3072 2951 26 AF			rol :STACKORIGIN+STACKWIDTH+9
  3073 2953 26 BF			rol :STACKORIGIN+STACKWIDTH*2+9
  3074 2955 0A				asl @
  3075 2956 26 AF			rol :STACKORIGIN+STACKWIDTH+9
  3076 2958 26 BF			rol :STACKORIGIN+STACKWIDTH*2+9
  3077 295A 85 9F			sta :STACKORIGIN+9
  3078 295C A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  3079 295E 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
  3080 2960 A5 9F			lda :STACKORIGIN+9
  3081 2962 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  3082 2964 AD C7 9D			lda LETT.FRAME
  3083 2967 85 A0			sta :STACKORIGIN+10
  3084 2969 A9 00			lda #$00
  3085 296B 06 A0			asl :STACKORIGIN+10
  3086 296D 2A				rol @
  3087 296E 06 A0			asl :STACKORIGIN+10
  3088 2970 2A				rol @
  3089 2971 06 A0			asl :STACKORIGIN+10
  3090 2973 2A				rol @
  3091 2974 06 A0			asl :STACKORIGIN+10
  3092 2976 2A				rol @
  3093 2977 18 65 AF			add :STACKORIGIN+STACKWIDTH+9
  3094 297A 8D 3A AB			sta FL+1
  3095 297D A5 A0			lda :STACKORIGIN+10
  3096 297F 8D 39 AB			sta FL
  3097
  3098 				; optimize OK (vservice.pas), line = 588
  3099
  3100 2982 A9 00			lda #$00
  3101 2984 8D 3D AB			sta YL
  3102
  3103 2987			l_06F1
  3104 				; --- ForToDoCondition
  3105 2987 AD 3D AB			lda YL
  3106 298A C9 08			cmp #$08
  3107 298C 90 03 4C 47 2A		jcs l_06FF
  3108
  3109 				; optimize OK (vservice.pas), line = 590
  3110
  3111 2991 85 9F			sta :STACKORIGIN+9
  3112 2993 A9 00			lda #$00
  3113 2995 06 9F			asl :STACKORIGIN+9
  3114 2997 2A				rol @
  3115 2998 06 9F			asl :STACKORIGIN+9
  3116 299A 2A				rol @
  3117 299B 06 9F			asl :STACKORIGIN+9
  3118 299D 2A				rol @
  3119 299E 06 9F			asl :STACKORIGIN+9
  3120 29A0 2A				rol @
  3121 29A1 06 9F			asl :STACKORIGIN+9
  3122 29A3 2A				rol @
  3123 29A4 06 9F			asl :STACKORIGIN+9
  3124 29A6 2A				rol @
  3125 29A7 06 9F			asl :STACKORIGIN+9
  3126 29A9 2A				rol @
  3127 29AA 8D 3C AB			sta FW+1
  3128 29AD A5 9F			lda :STACKORIGIN+9
  3129 29AF 8D 3B AB			sta FW
  3130
  3131 				; optimize OK (vservice.pas), line = 592
  3132
  3133 29B2 AD C4 9D			lda LETT.Y
  3134 29B5 18 6D 3D AB			add YL
  3135 29B9 85 A1			sta :STACKORIGIN+11
  3136 29BB A9 00			lda #$00
  3137 29BD 69 00			adc #$00
  3138 29BF 06 A1			asl :STACKORIGIN+11
  3139 29C1 2A				rol @
  3140 29C2 85 B1			sta :STACKORIGIN+STACKWIDTH+11
  3141 29C4 AD 29 9B			lda ROW
  3142 29C7 18 65 A1			add :STACKORIGIN+11
  3143 29CA 85 84			sta :bp2
  3144 29CC AD 2A 9B			lda ROW+1
  3145 29CF 65 B1			adc :STACKORIGIN+STACKWIDTH+11
  3146 29D1 85 85			sta :bp2+1
  3147 29D3 A0 00			ldy #$00
  3148 29D5 AD C3 9D			lda LETT.X
  3149 29D8 18 71 84			add (:bp2),y
  3150 29DB 8D DF AA			sta BLITZERO.DST
  3151 29DE C8				iny
  3152 29DF A9 00			lda #$00
  3153 29E1 71 84			adc (:bp2),y
  3154 29E3 8D E0 AA			sta BLITZERO.DST+1
  3155 29E6 A9 00			lda #$00
  3156 29E8 69 00			adc #$00
  3157 29EA 8D E1 AA			sta BLITZERO.DST+2
  3158 29ED A9 00			lda #$00
  3159 29EF 69 00			adc #$00
  3160 29F1 8D E2 AA			sta BLITZERO.DST+3
  3161 29F4 AD 4A 9D			lda LETTERS.OFS
  3162 29F7 18 6D 3B AB			add FW
  3163 29FB 85 A1			sta :STACKORIGIN+11
  3164 29FD AD 4B 9D			lda LETTERS.OFS+1
  3165 2A00 6D 3C AB			adc FW+1
  3166 2A03 85 B1			sta :STACKORIGIN+STACKWIDTH+11
  3167 2A05 AD 4C 9D			lda LETTERS.OFS+2
  3168 2A08 69 00			adc #$00
  3169 2A0A 85 C1			sta :STACKORIGIN+STACKWIDTH*2+11
  3170 2A0C AD 4D 9D			lda LETTERS.OFS+3
  3171 2A0F 69 00			adc #$00
  3172 2A11 85 D1			sta :STACKORIGIN+STACKWIDTH*3+11
  3173 2A13 A5 A1			lda :STACKORIGIN+11
  3174 2A15 18 6D 39 AB			add FL
  3175 2A19 8D DB AA			sta BLITZERO.SRC
  3176 2A1C A5 B1			lda :STACKORIGIN+STACKWIDTH+11
  3177 2A1E 6D 3A AB			adc FL+1
  3178 2A21 8D DC AA			sta BLITZERO.SRC+1
  3179 2A24 A5 C1			lda :STACKORIGIN+STACKWIDTH*2+11
  3180 2A26 69 00			adc #$00
  3181 2A28 8D DD AA			sta BLITZERO.SRC+2
  3182 2A2B A5 D1			lda :STACKORIGIN+STACKWIDTH*3+11
  3183 2A2D 69 00			adc #$00
  3184 2A2F 8D DE AA			sta BLITZERO.SRC+3
  3185 2A32 A9 10			lda #$10
  3186 2A34 8D E3 AA			sta BLITZERO.SIZE
  3187 2A37 A9 00			lda #$00
  3188 2A39 8D E4 AA			sta BLITZERO.SIZE+1
  3189 2A3C 20 E3 24			jsr BLITZERO
  3190
  3191 				; --- ForToDoEpilog
  3192 2A3F EE 3D AB			inc YL
  3193 2A42 F0 03 4C 87 29		jne l_06F1
  3194 2A47			l_06FF
  3195
  3196 				; ------------------------------------------------------------
  3197
  3198 = AB39			FL	= DATAORIGIN+$0F1C
  3199 = AB3B			FW	= DATAORIGIN+$0F1E
  3200 = AB3D			YL	= DATAORIGIN+$0F20
  3201
  3202 = AB39			@VarData	= FL
  3203 = 0005			@VarDataSize	= 5
  3204
  3205 2A47			@exit
  3206 					.ifdef @new
  3207 					lda <@VarData
  3208 					sta :ztmp
  3209 					lda >@VarData
  3210 					ldy #@VarDataSize-1
  3211 					jmp @FreeMem
  3212 					els
  3213 2A47 60				rts						; ret
  3214 					eif
  3215 				.endl
  3216
  3217 2A48			.local	REMOVE_LETTER					; PROCEDURE
  3218
  3219 				; optimize OK (vservice.pas), line = 604
  3220
  3221 2A48 A9 00			lda #$00
  3222 2A4A 8D 40 AB			sta YL
  3223
  3224 2A4D			l_073D
  3225 				; --- ForToDoCondition
  3226 2A4D AD 40 AB			lda YL
  3227 2A50 C9 08			cmp #$08
  3228 2A52 90 03 4C DA 2A		jcs l_074B
  3229
  3230 				; optimize OK (vservice.pas), line = 606
  3231
  3232 2A57 AD C4 9D			lda LETT.Y
  3233 2A5A 6D 40 AB			adc YL
  3234 2A5D 85 A0			sta :STACKORIGIN+10
  3235 2A5F A9 00			lda #$00
  3236 2A61 69 00			adc #$00
  3237 2A63 06 A0			asl :STACKORIGIN+10
  3238 2A65 2A				rol @
  3239 2A66 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  3240 2A68 AD 29 9B			lda ROW
  3241 2A6B 18 65 A0			add :STACKORIGIN+10
  3242 2A6E 85 84			sta :bp2
  3243 2A70 AD 2A 9B			lda ROW+1
  3244 2A73 65 B0			adc :STACKORIGIN+STACKWIDTH+10
  3245 2A75 85 85			sta :bp2+1
  3246 2A77 A0 00			ldy #$00
  3247 2A79 AD C3 9D			lda LETT.X
  3248 2A7C 18 71 84			add (:bp2),y
  3249 2A7F 8D 3E AB			sta AD
  3250 2A82 C8				iny
  3251 2A83 A9 00			lda #$00
  3252 2A85 71 84			adc (:bp2),y
  3253 2A87 8D 3F AB			sta AD+1
  3254
  3255 				; optimize OK (vservice.pas), line = 607
  3256
  3257 2A8A C9 FA			cmp #$FA
  3258 2A8C B0 44			jcs l_0770
  3259
  3260 				; optimize OK (vservice.pas), line = 610
  3261
  3262 2A8E AD 3E AB			lda AD
  3263 2A91 8D F4 AA			sta BLITROW.DST
  3264 2A94 AD 3F AB			lda AD+1
  3265 2A97 8D F5 AA			sta BLITROW.DST+1
  3266 2A9A A9 00			lda #$00
  3267 2A9C 8D F6 AA			sta BLITROW.DST+2
  3268 2A9F 8D F7 AA			sta BLITROW.DST+3
  3269 2AA2 AD EA 9C			lda PLAYSCREEN.OFS
  3270 2AA5 18 6D 3E AB			add AD
  3271 2AA9 8D F0 AA			sta BLITROW.SRC
  3272 2AAC AD EB 9C			lda PLAYSCREEN.OFS+1
  3273 2AAF 6D 3F AB			adc AD+1
  3274 2AB2 8D F1 AA			sta BLITROW.SRC+1
  3275 2AB5 AD EC 9C			lda PLAYSCREEN.OFS+2
  3276 2AB8 69 00			adc #$00
  3277 2ABA 8D F2 AA			sta BLITROW.SRC+2
  3278 2ABD AD ED 9C			lda PLAYSCREEN.OFS+3
  3279 2AC0 69 00			adc #$00
  3280 2AC2 8D F3 AA			sta BLITROW.SRC+3
  3281 2AC5 A9 10			lda #$10
  3282 2AC7 8D F8 AA			sta BLITROW.SIZE
  3283 2ACA A9 00			lda #$00
  3284 2ACC 8D F9 AA			sta BLITROW.SIZE+1
  3285 2ACF 20 60 25			jsr BLITROW
  3286 2AD2			l_0770
  3287
  3288 				; --- ForToDoEpilog
  3289 2AD2 EE 40 AB			inc YL
  3290 2AD5 F0 03 4C 4D 2A		jne l_073D
  3291 2ADA			l_074B
  3292
  3293 				; ------------------------------------------------------------
  3294
  3295 = AB3E			AD	= DATAORIGIN+$0F21
  3296 = AB40			YL	= DATAORIGIN+$0F23
  3297
  3298 = AB3E			@VarData	= AD
  3299 = 0003			@VarDataSize	= 3
  3300
  3301 2ADA			@exit
  3302 					.ifdef @new
  3303 					lda <@VarData
  3304 					sta :ztmp
  3305 					lda >@VarData
  3306 					ldy #@VarDataSize-1
  3307 					jmp @FreeMem
  3308 					els
  3309 2ADA 60				rts						; ret
  3310 					eif
  3311 				.endl
  3312
  3313 2ADB			.local	DISABLE_LETTER					; PROCEDURE
  3314
  3315 				; optimize FAIL ('REMOVE_LETTER', vservice.pas), line = 618
  3316
  3317 2ADB 20 48 2A			jsr REMOVE_LETTER
  3318
  3319 				; optimize OK (vservice.pas), line = 619
  3320
  3321 2ADE A9 00			lda #$00
  3322 2AE0 8D C9 9D			sta LETT.ACTIVE
  3323
  3324 2AE3			@exit
  3325 					.ifdef @new
  3326 					lda <@VarData
  3327 					sta :ztmp
  3328 					lda >@VarData
  3329 					ldy #@VarDataSize-1
  3330 					jmp @FreeMem
  3331 					els
  3332 2AE3 60				rts						; ret
  3333 					eif
  3334 				.endl
  3335
  3336 2AE4			.local	START_LETTER					; PROCEDURE
  3337
  3338 				; optimize OK (vservice.pas), line = 625
  3339
  3340 2AE4 AD C9 9D			lda LETT.ACTIVE
  3341 2AE7 F0 03			jeq l_079F
  3342 2AE9 20 DB 2A			jsr DISABLE_LETTER
  3343 2AEC			l_079F
  3344
  3345 				; optimize OK (vservice.pas), line = 627
  3346
  3347 2AEC AD 41 AB			lda XL
  3348 2AEF 8D C3 9D			sta LETT.X
  3349
  3350 				; optimize OK (vservice.pas), line = 628
  3351
  3352 2AF2 AD 43 AB			lda YL
  3353 2AF5 8D C4 9D			sta LETT.Y
  3354
  3355 				; optimize OK (vservice.pas), line = 629
  3356
  3357 2AF8 AD 45 AB			lda LETTER
  3358 2AFB 8D C5 9D			sta LETT.TYP
  3359 2AFE AD 46 AB			lda LETTER+1
  3360 2B01 8D C6 9D			sta LETT.TYP+1
  3361
  3362 				; optimize OK (vservice.pas), line = 630
  3363
  3364 2B04 A9 00			lda #$00
  3365 2B06 8D C7 9D			sta LETT.FRAME
  3366
  3367 				; optimize OK (vservice.pas), line = 631
  3368
  3369 2B09 8D C8 9D			sta LETT.SUBFRAME
  3370
  3371 				; optimize OK (vservice.pas), line = 632
  3372
  3373 2B0C A9 01			lda #$01
  3374 2B0E 8D C9 9D			sta LETT.ACTIVE
  3375
  3376 				; ------------------------------------------------------------
  3377
  3378 = AB41			XL	= DATAORIGIN+$0F24
  3379 = AB43			YL	= DATAORIGIN+$0F26
  3380 = AB45			LETTER	= DATAORIGIN+$0F28
  3381
  3382 = AB41			@VarData	= XL
  3383 = 0006			@VarDataSize	= 6
  3384
  3385 2B11			@exit
  3386 					.ifdef @new
  3387 					lda <@VarData
  3388 					sta :ztmp
  3389 					lda >@VarData
  3390 					ldy #@VarDataSize-1
  3391 					jmp @FreeMem
  3392 					els
  3393 2B11 60				rts						; ret
  3394 					eif
  3395 				.endl
  3396
  3397 2B12			.local	CHECK_LETTER					; PROCEDURE
  3398
  3399 				; optimize OK (vservice.pas), line = 638
  3400
  3401 2B12 AD C9 9D			lda LETT.ACTIVE
  3402 2B15 D0 03 4C 11 2C		jeq l_07CE
  3403
  3404 				; optimize FAIL ('REMOVE_LETTER', vservice.pas), line = 640
  3405
  3406 2B1A 20 48 2A			jsr REMOVE_LETTER
  3407
  3408 				; optimize FAIL (0, vservice.pas), line = 641
  3409
  3410 2B1D EE C4 9D			inc LETT.Y
  3411
  3412 				; optimize OK (vservice.pas), line = 642
  3413
  3414 2B20 AD C4 9D			lda LETT.Y
  3415 2B23 C9 C8			cmp #$C8
  3416 2B25 90 03			jcc l_07E6
  3417 				; optimize FAIL ('DISABLE_LETTER', vservice.pas), line = 643
  3418 2B27 4C 03 2C			jmp l_07F1
  3419 2B2A			l_07E6
  3420
  3421 				; optimize FAIL ('PUT_LETTER', vservice.pas), line = 645
  3422
  3423 2B2A 20 44 29			jsr PUT_LETTER
  3424
  3425 				; optimize FAIL (0, vservice.pas), line = 646
  3426
  3427 2B2D EE C8 9D			inc LETT.SUBFRAME
  3428
  3429 				; optimize OK (vservice.pas), line = 647
  3430
  3431 2B30 AD C8 9D			lda LETT.SUBFRAME
  3432 2B33 C9 05			cmp #$05
  3433 2B35 D0 08			jne l_0808
  3434
  3435 				; optimize OK (vservice.pas), line = 649
  3436
  3437 2B37 A9 00			lda #$00
  3438 2B39 8D C8 9D			sta LETT.SUBFRAME
  3439
  3440 				; optimize FAIL (0, vservice.pas), line = 650
  3441
  3442 2B3C EE C7 9D			inc LETT.FRAME
  3443 2B3F			l_0808
  3444
  3445 				; optimize OK (vservice.pas), line = 653
  3446
  3447 2B3F AD C7 9D			lda LETT.FRAME
  3448 2B42 C9 08			cmp #$08
  3449 2B44 D0 05			jne l_0825
  3450 2B46 A9 00			lda #$00
  3451 2B48 8D C7 9D			sta LETT.FRAME
  3452 2B4B			l_0825
  3453
  3454 				; optimize OK (vservice.pas), line = 655
  3455
  3456 2B4B AD C3 9D			lda LETT.X
  3457 2B4E 18 69 10			add #$10
  3458 2B51 85 A0			sta :STACKORIGIN+10
  3459 2B53 A9 00			lda #$00
  3460 2B55 69 00			adc #$00
  3461 2B57 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  3462 2B59 A9 00			lda #$00
  3463 2B5B C5 B0			cmp :STACKORIGIN+STACKWIDTH+10
  3464 2B5D D0 05			bne @+
  3465 2B5F AD 5E 9D			lda VAUS.X
  3466 2B62 C5 A0			cmp :STACKORIGIN+10
  3467 				@
  3468 2B64 90 03 4C 06 2C		jcs l_087E
  3469 				@
  3470 2B69 AD 5E 9D			lda VAUS.X
  3471 2B6C 18 6D 66 9D			add VAUS.WIDTH
  3472 2B70 85 A0			sta :STACKORIGIN+10
  3473 2B72 A9 00			lda #$00
  3474 2B74 69 00			adc #$00
  3475 2B76 C9 00			cmp #$00
  3476 2B78 D0 05			bne @+
  3477 2B7A A5 A0			lda :STACKORIGIN+10
  3478 2B7C CD C3 9D			cmp LETT.X
  3479 				@
  3480 2B7F B0 03 4C 06 2C		jcc l_087E
  3481 2B84 D0 03 4C 06 2C		jeq l_087E
  3482 				@
  3483 2B89 AD C4 9D			lda LETT.Y
  3484 2B8C 18 69 08			add #$08
  3485 2B8F 85 A1			sta :STACKORIGIN+11
  3486 2B91 A9 00			lda #$00
  3487 2B93 69 00			adc #$00
  3488 2B95 85 B1			sta :STACKORIGIN+STACKWIDTH+11
  3489 2B97 A9 00			lda #$00
  3490 2B99 C5 B1			cmp :STACKORIGIN+STACKWIDTH+11
  3491 2B9B D0 05			bne @+
  3492 2B9D AD 5F 9D			lda VAUS.Y
  3493 2BA0 C5 A1			cmp :STACKORIGIN+11
  3494 				@
  3495 2BA2 B0 62			jcs l_087E
  3496 				@
  3497 2BA4 AD 5F 9D			lda VAUS.Y
  3498 2BA7 18 6D 67 9D			add VAUS.HEIGHT
  3499 2BAB 85 A0			sta :STACKORIGIN+10
  3500 2BAD A9 00			lda #$00
  3501 2BAF 69 00			adc #$00
  3502 2BB1 C9 00			cmp #$00
  3503 2BB3 D0 05			bne @+
  3504 2BB5 A5 A0			lda :STACKORIGIN+10
  3505 2BB7 CD C4 9D			cmp LETT.Y
  3506 				@
  3507 2BBA 90 4A			jcc l_087E
  3508 2BBC F0 48			jeq l_087E
  3509 				@
  3510
  3511 				; optimize OK (vservice.pas), line = 658
  3512
  3513 2BBE A9 64			lda #$64
  3514 2BC0 8D CC 9C			sta BALL_BLOCK_SOUND.A
  3515 2BC3 A9 00			lda #$00
  3516 2BC5 8D CD 9C			sta BALL_BLOCK_SOUND.A+1
  3517 2BC8 A9 0A			lda #$0A
  3518 2BCA 8D CE 9C			sta BALL_BLOCK_SOUND.B
  3519 2BCD A9 00			lda #$00
  3520 2BCF 8D CF 9C			sta BALL_BLOCK_SOUND.B+1
  3521 2BD2 20 9A 24			jsr BALL_BLOCK_SOUND
  3522
  3523 				; optimize OK (vservice.pas), line = 659
  3524
  3525 2BD5 AC C5 9D			ldy LETT.TYP
  3526 2BD8 C8				iny
  3527 2BD9 8C 6A 9D			sty VAUS.LETTER
  3528
  3529 				; optimize OK (vservice.pas), line = 660
  3530
  3531 2BDC AD BA 9D			lda CUR_PLAYER
  3532 2BDF 0A				asl @
  3533 2BE0 0A				asl @
  3534 2BE1 A8				tay
  3535 2BE2 B9 9F 9D			lda adr.SCORE.PLAYER,y
  3536 2BE5 18 69 E8			add #$E8
  3537 2BE8 99 9F 9D			sta adr.SCORE.PLAYER,y
  3538 2BEB B9 A0 9D			lda adr.SCORE.PLAYER+1,y
  3539 2BEE 69 03			adc #$03
  3540 2BF0 99 A0 9D			sta adr.SCORE.PLAYER+1,y
  3541 2BF3 B9 A1 9D			lda adr.SCORE.PLAYER+2,y
  3542 2BF6 69 00			adc #$00
  3543 2BF8 99 A1 9D			sta adr.SCORE.PLAYER+2,y
  3544 2BFB B9 A2 9D			lda adr.SCORE.PLAYER+3,y
  3545 2BFE 69 00			adc #$00
  3546 2C00 99 A2 9D			sta adr.SCORE.PLAYER+3,y
  3547 2C03			l_07F1
  3548
  3549 				; optimize FAIL ('DISABLE_LETTER', vservice.pas), line = 661
  3550
  3551 2C03 20 DB 2A			jsr DISABLE_LETTER
  3552 2C06			l_087E
  3553
  3554 				; optimize OK (vservice.pas), line = 665
  3555
  3556 2C06 A9 00			lda #$00
  3557 2C08 8D CA 9D			sta LETT.INCOMING
  3558 2C0B 8D CB 9D			sta LETT.INCOMING+1
  3559 2C0E 4C 48 2C			jmp l_089F
  3560 2C11			l_07CE
  3561
  3562 				; optimize OK (vservice.pas), line = 667
  3563
  3564 2C11 AD CA 9D			lda LETT.INCOMING
  3565 2C14 C9 E9			cmp #$E9
  3566 2C16 AD CB 9D			lda LETT.INCOMING+1
  3567 2C19 E9 03			sbc #$03
  3568 2C1B 50 02			svc
  3569 2C1D 49 80			eor #$80
  3570 2C1F 30 27			jmi l_08B0
  3571
  3572 				; optimize OK (vservice.pas), line = 668
  3573
  3574 2C21 AD CC 9D			lda LETT.NEXTX
  3575 2C24 8D 41 AB			sta START_LETTER.XL
  3576 2C27 AD CD 9D			lda LETT.NEXTX+1
  3577 2C2A 8D 42 AB			sta START_LETTER.XL+1
  3578 2C2D AD CE 9D			lda LETT.NEXTY
  3579 2C30 8D 43 AB			sta START_LETTER.YL
  3580 2C33 AD CF 9D			lda LETT.NEXTY+1
  3581 2C36 8D 44 AB			sta START_LETTER.YL+1
  3582 2C39 AD D0 9D			lda LETT.NEXTTYPE
  3583 2C3C 8D 45 AB			sta START_LETTER.LETTER
  3584 2C3F AD D1 9D			lda LETT.NEXTTYPE+1
  3585 2C42 8D 46 AB			sta START_LETTER.LETTER+1
  3586 2C45 20 E4 2A			jsr START_LETTER
  3587 2C48			l_089F
  3588 2C48			l_08B0
  3589
  3590 2C48			@exit
  3591 					.ifdef @new
  3592 					lda <@VarData
  3593 					sta :ztmp
  3594 					lda >@VarData
  3595 					ldy #@VarDataSize-1
  3596 					jmp @FreeMem
  3597 					els
  3598 2C48 60				rts						; ret
  3599 					eif
  3600 				.endl
  3601
  3602 2C49			.local	SHOWBTMPICTURE					; PROCEDURE
  3603
  3604 				; ------------------------------------------------------------
  3605
  3606 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
  3607 				; as Pointer
  3608 2C49 B5 96			lda :STACKORIGIN,x
  3609 2C4B 85 84			sta :bp2
  3610 2C4D B5 A6			lda :STACKORIGIN+STACKWIDTH,x
  3611 2C4F 85 85			sta :bp2+1
  3612 2C51 A0 07			ldy #$07
  3613 2C53 B1 84 99 47 AB 88 + 	mva:rpl (:bp2),y adr.BTM,y-
  3614 2C5B CA				dex
  3615 2C5C			@main
  3616
  3617 				; optimize OK (vservice.pas), line = 678
  3618
  3619 2C5C AD 49 AB			lda BTM.HEIGHT
  3620 2C5F 85 8E			sta :ecx
  3621 2C61 AD 4A AB			lda BTM.HEIGHT+1
  3622 2C64 85 8F			sta :ecx+1
  3623 2C66 AD 47 AB			lda BTM.WIDTH
  3624 2C69 85 86			sta :eax
  3625 2C6B AD 48 AB			lda BTM.WIDTH+1
  3626 2C6E 85 87			sta :eax+1
  3627 					.ifdef fmulinit
  3628 					fmulu_16
  3629 					els
  3630 2C70 20 FA 12			imulCX
  3631 					eif
  3632 2C73 A5 86			lda :eax
  3633 2C75 8D F8 AA			sta BLITROW.SIZE
  3634 2C78 A5 87			lda :eax+1
  3635 2C7A 8D F9 AA			sta BLITROW.SIZE+1
  3636 2C7D AD 4B AB			lda BTM.OFS
  3637 2C80 8D F0 AA			sta BLITROW.SRC
  3638 2C83 AD 4C AB			lda BTM.OFS+1
  3639 2C86 8D F1 AA			sta BLITROW.SRC+1
  3640 2C89 AD 4D AB			lda BTM.OFS+2
  3641 2C8C 8D F2 AA			sta BLITROW.SRC+2
  3642 2C8F AD 4E AB			lda BTM.OFS+3
  3643 2C92 8D F3 AA			sta BLITROW.SRC+3
  3644 2C95 A9 00			lda #$00
  3645 2C97 8D F4 AA			sta BLITROW.DST
  3646 2C9A 8D F5 AA			sta BLITROW.DST+1
  3647 2C9D 8D F6 AA			sta BLITROW.DST+2
  3648 2CA0 8D F7 AA			sta BLITROW.DST+3
  3649 2CA3 20 60 25			jsr BLITROW
  3650
  3651 				; ------------------------------------------------------------
  3652
  3653 = AB47			adr.BTM	= DATAORIGIN+$0F2A	; [8] RECORD
  3654 2CA6			.var BTM	= adr.BTM .word
  3655 = AB47			BTM.WIDTH	= DATAORIGIN+$0F2A
  3656 = AB49			BTM.HEIGHT	= DATAORIGIN+$0F2C
  3657 = AB4B			BTM.OFS	= DATAORIGIN+$0F2E
  3658 = AB4F			X	= DATAORIGIN+$0F32
  3659 = AB51			Y	= DATAORIGIN+$0F34
  3660 = AB53			OFST	= DATAORIGIN+$0F36
  3661
  3662 = AB47			@VarData	= BTM.WIDTH
  3663 = 000E			@VarDataSize	= 14
  3664
  3665 2CA6			@exit
  3666 					.ifdef @new
  3667 					lda <@VarData
  3668 					sta :ztmp
  3669 					lda >@VarData
  3670 					ldy #@VarDataSize-1
  3671 					jmp @FreeMem
  3672 					els
  3673 2CA6 60				rts						; ret
  3674 					eif
  3675 = 2CA7 47 AB		BTM
  3675 				.endl
  3676
  3677 2CA9			.local	SETPALETTE					; PROCEDURE
  3678
  3679 				; ------------------------------------------------------------
  3680
  3681 = AB55			BTM	= DATAORIGIN+$0F38
  3682 = 9C1D			BTM.WIDTH	= DATAORIGIN+$0000
  3683 = 9C1F			BTM.HEIGHT	= DATAORIGIN+$0002
  3684 = 9C21			BTM.OFS	= DATAORIGIN+$0004
  3685
  3686 = AB55			@VarData	= BTM
  3687 = 0002			@VarDataSize	= 2
  3688
  3689 2CA9			@exit
  3690 					.ifdef @new
  3691 					lda <@VarData
  3692 					sta :ztmp
  3693 					lda >@VarData
  3694 					ldy #@VarDataSize-1
  3695 					jmp @FreeMem
  3696 					els
  3697 2CA9 60				rts						; ret
  3698 					eif
  3699 				.endl
  3700
  3701 2CAA			.local	PLACE_BALL					; PROCEDURE
  3702
  3703 				; optimize OK (vservice.pas), line = 773
  3704
  3705 2CAA A9 00			lda #$00
  3706 2CAC 8D 5D AB			sta YP
  3707
  3708 2CAF			l_08DC
  3709 				; --- ForToDoCondition
  3710 2CAF AD 5D AB			lda YP
  3711 2CB2 C9 05			cmp #$05
  3712 2CB4 90 03 4C 76 2D		jcs l_08EA
  3713
  3714 				; optimize OK (vservice.pas), line = 775
  3715
  3716 2CB9 AC 59 AB 84 84 AC + 	mwy BALL :bp2
  3717 2CC3 A0 00			ldy #BALL.X-DATAORIGIN
  3718 2CC5 B1 84			lda (:bp2),y
  3719 2CC7 38 E9 03			sub #$03
  3720 2CCA 85 9F			sta :STACKORIGIN+9
  3721 2CCC C8				iny
  3722 2CCD B1 84			lda (:bp2),y
  3723 2CCF E9 00			sbc #$00
  3724 2CD1 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  3725 2CD3 AD 5D AB			lda YP
  3726 2CD6 38 E9 03			sub #$03
  3727 2CD9 85 A0			sta :STACKORIGIN+10
  3728 2CDB A9 00			lda #$00
  3729 2CDD E9 00			sbc #$00
  3730 2CDF 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  3731 2CE1 A0 02			ldy #BALL.Y-DATAORIGIN
  3732 2CE3 A5 A0			lda :STACKORIGIN+10
  3733 2CE5 18 71 84			add (:bp2),y
  3734 2CE8 85 A0			sta :STACKORIGIN+10
  3735 2CEA C8				iny
  3736 2CEB A5 B0			lda :STACKORIGIN+STACKWIDTH+10
  3737 2CED 71 84			adc (:bp2),y
  3738 2CEF 06 A0			asl :STACKORIGIN+10
  3739 2CF1 2A				rol @
  3740 2CF2 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  3741 2CF4 AD 29 9B			lda ROW
  3742 2CF7 18 65 A0			add :STACKORIGIN+10
  3743 2CFA 85 84			sta :bp2
  3744 2CFC AD 2A 9B			lda ROW+1
  3745 2CFF 65 B0			adc :STACKORIGIN+STACKWIDTH+10
  3746 2D01 85 85			sta :bp2+1
  3747 2D03 A0 00			ldy #$00
  3748 2D05 A5 9F			lda :STACKORIGIN+9
  3749 2D07 18 71 84			add (:bp2),y
  3750 2D0A 8D 5E AB			sta ADR
  3751 2D0D C8				iny
  3752 2D0E A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  3753 2D10 71 84			adc (:bp2),y
  3754 2D12 8D 5F AB			sta ADR+1
  3755
  3756 				; optimize OK (vservice.pas), line = 778
  3757
  3758 2D15 AD 5E AB			lda ADR
  3759 2D18 8D DF AA			sta BLITZERO.DST
  3760 2D1B AD 5F AB			lda ADR+1
  3761 2D1E 8D E0 AA			sta BLITZERO.DST+1
  3762 2D21 A9 00			lda #$00
  3763 2D23 8D E1 AA			sta BLITZERO.DST+2
  3764 2D26 8D E2 AA			sta BLITZERO.DST+3
  3765 2D29 85 B2			sta :STACKORIGIN+STACKWIDTH+12
  3766 2D2B AD 5D AB			lda YP
  3767 2D2E 0A				asl @
  3768 2D2F 26 B2			rol :STACKORIGIN+STACKWIDTH+12
  3769 2D31 0A				asl @
  3770 2D32 26 B2			rol :STACKORIGIN+STACKWIDTH+12
  3771 2D34 18 6D 5D AB			add YP
  3772 2D38 85 A2			sta :STACKORIGIN+12
  3773 2D3A A5 B2			lda :STACKORIGIN+STACKWIDTH+12
  3774 2D3C 69 00			adc #$00
  3775 2D3E 85 B2			sta :STACKORIGIN+STACKWIDTH+12
  3776 2D40 AD E2 9C			lda BALLDATA.OFS
  3777 2D43 18 65 A2			add :STACKORIGIN+12
  3778 2D46 8D DB AA			sta BLITZERO.SRC
  3779 2D49 AD E3 9C			lda BALLDATA.OFS+1
  3780 2D4C 65 B2			adc :STACKORIGIN+STACKWIDTH+12
  3781 2D4E 8D DC AA			sta BLITZERO.SRC+1
  3782 2D51 AD E4 9C			lda BALLDATA.OFS+2
  3783 2D54 69 00			adc #$00
  3784 2D56 8D DD AA			sta BLITZERO.SRC+2
  3785 2D59 AD E5 9C			lda BALLDATA.OFS+3
  3786 2D5C 69 00			adc #$00
  3787 2D5E 8D DE AA			sta BLITZERO.SRC+3
  3788 2D61 A9 05			lda #$05
  3789 2D63 8D E3 AA			sta BLITZERO.SIZE
  3790 2D66 A9 00			lda #$00
  3791 2D68 8D E4 AA			sta BLITZERO.SIZE+1
  3792 2D6B 20 E3 24			jsr BLITZERO
  3793
  3794 				; --- ForToDoEpilog
  3795 2D6E EE 5D AB			inc YP
  3796 2D71 F0 03 4C AF 2C		jne l_08DC
  3797 2D76			l_08EA
  3798
  3799 				; ------------------------------------------------------------
  3800
  3801 = AB59			BALL	= DATAORIGIN+$0F3C
  3802 = 9C1D			BALL.X	= DATAORIGIN+$0000
  3803 = 9C1F			BALL.Y	= DATAORIGIN+$0002
  3804 = 9C21			BALL.FINEX	= DATAORIGIN+$0004
  3805 = 9C23			BALL.FINEY	= DATAORIGIN+$0006
  3806 = 9C25			BALL.OLDX	= DATAORIGIN+$0008
  3807 = 9C27			BALL.OLDY	= DATAORIGIN+$000A
  3808 = 9C29			BALL.SPEED	= DATAORIGIN+$000C
  3809 = 9C2B			BALL.FINESPEED	= DATAORIGIN+$000E
  3810 = 9C2D			BALL.SPEEDX	= DATAORIGIN+$0010
  3811 = 9C2F			BALL.SPEEDY	= DATAORIGIN+$0012
  3812 = 9C31			BALL.SBD	= DATAORIGIN+$0014
  3813 = 9C33			BALL.BRWHIT	= DATAORIGIN+$0016
  3814 = 9C34			BALL.INPLAY	= DATAORIGIN+$0017
  3815 = 9C35			BALL.LAUNCH	= DATAORIGIN+$0018
  3816 = 9C36			BALL.ONVAUS	= DATAORIGIN+$0019
  3817 = 9C37			BALL.STM	= DATAORIGIN+$001A
  3818 = AB5D			YP	= DATAORIGIN+$0F40
  3819 = AB5E			ADR	= DATAORIGIN+$0F41
  3820
  3821 = AB59			@VarData	= BALL
  3822 = 0005			@VarDataSize	= 5
  3823
  3824 2D76			@exit
  3825 					.ifdef @new
  3826 					lda <@VarData
  3827 					sta :ztmp
  3828 					lda >@VarData
  3829 					ldy #@VarDataSize-1
  3830 					jmp @FreeMem
  3831 					els
  3832 2D76 60				rts						; ret
  3833 					eif
  3834 				.endl
  3835
  3836 2D77			.local	REMOVE_BALL					; PROCEDURE
  3837
  3838 				; optimize OK (vservice.pas), line = 792
  3839
  3840 2D77 A9 00			lda #$00
  3841 2D79 8D 64 AB			sta YP
  3842
  3843 2D7C			l_0929
  3844 				; --- ForToDoCondition
  3845 2D7C AD 64 AB			lda YP
  3846 2D7F C9 05			cmp #$05
  3847 2D81 90 03 4C 3A 2E		jcs l_0937
  3848
  3849 				; optimize OK (vservice.pas), line = 794
  3850
  3851 2D86 AC 60 AB 84 84 AC + 	mwy BALL :bp2
  3852 2D90 A0 08			ldy #BALL.OLDX-DATAORIGIN
  3853 2D92 B1 84			lda (:bp2),y
  3854 2D94 38 E9 03			sub #$03
  3855 2D97 85 9F			sta :STACKORIGIN+9
  3856 2D99 C8				iny
  3857 2D9A B1 84			lda (:bp2),y
  3858 2D9C E9 00			sbc #$00
  3859 2D9E 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  3860 2DA0 AD 64 AB			lda YP
  3861 2DA3 38 E9 03			sub #$03
  3862 2DA6 85 A0			sta :STACKORIGIN+10
  3863 2DA8 A9 00			lda #$00
  3864 2DAA E9 00			sbc #$00
  3865 2DAC 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  3866 2DAE A0 0A			ldy #BALL.OLDY-DATAORIGIN
  3867 2DB0 A5 A0			lda :STACKORIGIN+10
  3868 2DB2 18 71 84			add (:bp2),y
  3869 2DB5 85 A0			sta :STACKORIGIN+10
  3870 2DB7 C8				iny
  3871 2DB8 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
  3872 2DBA 71 84			adc (:bp2),y
  3873 2DBC 06 A0			asl :STACKORIGIN+10
  3874 2DBE 2A				rol @
  3875 2DBF 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  3876 2DC1 AD 29 9B			lda ROW
  3877 2DC4 18 65 A0			add :STACKORIGIN+10
  3878 2DC7 85 84			sta :bp2
  3879 2DC9 AD 2A 9B			lda ROW+1
  3880 2DCC 65 B0			adc :STACKORIGIN+STACKWIDTH+10
  3881 2DCE 85 85			sta :bp2+1
  3882 2DD0 A0 00			ldy #$00
  3883 2DD2 A5 9F			lda :STACKORIGIN+9
  3884 2DD4 18 71 84			add (:bp2),y
  3885 2DD7 8D 65 AB			sta TEMP
  3886 2DDA C8				iny
  3887 2DDB A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  3888 2DDD 71 84			adc (:bp2),y
  3889 2DDF 8D 66 AB			sta TEMP+1
  3890
  3891 				; optimize OK (vservice.pas), line = 796
  3892
  3893 2DE2 0D 65 AB			ora TEMP
  3894 2DE5 F0 4B			jeq l_096D
  3895 2DE7 AD 66 AB			lda TEMP+1
  3896 2DEA C9 FA			cmp #$FA
  3897 2DEC B0 44			jcs l_096D
  3898
  3899 				; optimize OK (vservice.pas), line = 799
  3900
  3901 2DEE AD 65 AB			lda TEMP
  3902 2DF1 8D F4 AA			sta BLITROW.DST
  3903 2DF4 AD 66 AB			lda TEMP+1
  3904 2DF7 8D F5 AA			sta BLITROW.DST+1
  3905 2DFA A9 00			lda #$00
  3906 2DFC 8D F6 AA			sta BLITROW.DST+2
  3907 2DFF 8D F7 AA			sta BLITROW.DST+3
  3908 2E02 AD EA 9C			lda PLAYSCREEN.OFS
  3909 2E05 18 6D 65 AB			add TEMP
  3910 2E09 8D F0 AA			sta BLITROW.SRC
  3911 2E0C AD EB 9C			lda PLAYSCREEN.OFS+1
  3912 2E0F 6D 66 AB			adc TEMP+1
  3913 2E12 8D F1 AA			sta BLITROW.SRC+1
  3914 2E15 AD EC 9C			lda PLAYSCREEN.OFS+2
  3915 2E18 69 00			adc #$00
  3916 2E1A 8D F2 AA			sta BLITROW.SRC+2
  3917 2E1D AD ED 9C			lda PLAYSCREEN.OFS+3
  3918 2E20 69 00			adc #$00
  3919 2E22 8D F3 AA			sta BLITROW.SRC+3
  3920 2E25 A9 05			lda #$05
  3921 2E27 8D F8 AA			sta BLITROW.SIZE
  3922 2E2A A9 00			lda #$00
  3923 2E2C 8D F9 AA			sta BLITROW.SIZE+1
  3924 2E2F 20 60 25			jsr BLITROW
  3925 2E32			l_096D
  3926
  3927 				; --- ForToDoEpilog
  3928 2E32 EE 64 AB			inc YP
  3929 2E35 F0 03 4C 7C 2D		jne l_0929
  3930 2E3A			l_0937
  3931
  3932 				; ------------------------------------------------------------
  3933
  3934 = AB60			BALL	= DATAORIGIN+$0F43
  3935 = 9C1D			BALL.X	= DATAORIGIN+$0000
  3936 = 9C1F			BALL.Y	= DATAORIGIN+$0002
  3937 = 9C21			BALL.FINEX	= DATAORIGIN+$0004
  3938 = 9C23			BALL.FINEY	= DATAORIGIN+$0006
  3939 = 9C25			BALL.OLDX	= DATAORIGIN+$0008
  3940 = 9C27			BALL.OLDY	= DATAORIGIN+$000A
  3941 = 9C29			BALL.SPEED	= DATAORIGIN+$000C
  3942 = 9C2B			BALL.FINESPEED	= DATAORIGIN+$000E
  3943 = 9C2D			BALL.SPEEDX	= DATAORIGIN+$0010
  3944 = 9C2F			BALL.SPEEDY	= DATAORIGIN+$0012
  3945 = 9C31			BALL.SBD	= DATAORIGIN+$0014
  3946 = 9C33			BALL.BRWHIT	= DATAORIGIN+$0016
  3947 = 9C34			BALL.INPLAY	= DATAORIGIN+$0017
  3948 = 9C35			BALL.LAUNCH	= DATAORIGIN+$0018
  3949 = 9C36			BALL.ONVAUS	= DATAORIGIN+$0019
  3950 = 9C37			BALL.STM	= DATAORIGIN+$001A
  3951 = AB64			YP	= DATAORIGIN+$0F47
  3952 = AB65			TEMP	= DATAORIGIN+$0F48
  3953
  3954 = AB60			@VarData	= BALL
  3955 = 0005			@VarDataSize	= 5
  3956
  3957 2E3A			@exit
  3958 					.ifdef @new
  3959 					lda <@VarData
  3960 					sta :ztmp
  3961 					lda >@VarData
  3962 					ldy #@VarDataSize-1
  3963 					jmp @FreeMem
  3964 					els
  3965 2E3A 60				rts						; ret
  3966 					eif
  3967 				.endl
  3968
  3969 2E3B			.local	WAIT_VBL					; PROCEDURE
  3970
  3971 2E3B			@exit
  3972 					.ifdef @new
  3973 					lda <@VarData
  3974 					sta :ztmp
  3975 					lda >@VarData
  3976 					ldy #@VarDataSize-1
  3977 					jmp @FreeMem
  3978 					els
  3979 2E3B 60				rts						; ret
  3980 					eif
  3981 				.endl
  3982
  3983 2E3C			.local	SET_BALL					; PROCEDURE
  3984
  3985 				; optimize OK (vservice.pas), line = 839
  3986
  3987 2E3C AC 67 AB 84 84 AC + 	mwy BALL :bp2
  3988 2E46 A0 08			ldy #BALL.OLDX-DATAORIGIN
  3989 2E48 B1 84			lda (:bp2),y
  3990 2E4A 85 9F			sta :STACKORIGIN+9
  3991 2E4C C8				iny
  3992 2E4D B1 84			lda (:bp2),y
  3993 2E4F A0 01			ldy #1
  3994 2E51 C9 FF			cmp #$FF
  3995 2E53 D0 04			bne @+
  3996 2E55 A5 9F			lda :STACKORIGIN+9
  3997 2E57 C9 FF			cmp #$FF
  3998 				@
  3999 2E59 D0 01			bne @+
  4000 2E5B 88				dey
  4001 				@
  4002 2E5C 84 9F			sty :STACKORIGIN+9
  4003 2E5E A0 0A			ldy #BALL.OLDY-DATAORIGIN
  4004 2E60 B1 84			lda (:bp2),y
  4005 2E62 85 A0			sta :STACKORIGIN+10
  4006 2E64 C8				iny
  4007 2E65 B1 84			lda (:bp2),y
  4008 2E67 A0 01			ldy #1
  4009 2E69 C9 FF			cmp #$FF
  4010 2E6B D0 04			bne @+
  4011 2E6D A5 A0			lda :STACKORIGIN+10
  4012 2E6F C9 FF			cmp #$FF
  4013 				@
  4014 2E71 D0 01			bne @+
  4015 2E73 88				dey
  4016 				@
  4017 2E74 98				tya
  4018 2E75 25 9F			and :STACKORIGIN+9
  4019 2E77 85 9F			sta :STACKORIGIN+9
  4020 2E79 A0 08			ldy #BALL.OLDX-DATAORIGIN
  4021 2E7B B1 84			lda (:bp2),y
  4022 2E7D 85 A0			sta :STACKORIGIN+10
  4023 2E7F C8				iny
  4024 2E80 B1 84			lda (:bp2),y
  4025 2E82 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  4026 2E84 A0 00			ldy #BALL.X-DATAORIGIN
  4027 2E86 B1 84			lda (:bp2),y
  4028 2E88 85 A1			sta :STACKORIGIN+11
  4029 2E8A C8				iny
  4030 2E8B B1 84			lda (:bp2),y
  4031 2E8D 85 B1			sta :STACKORIGIN+STACKWIDTH+11
  4032 2E8F A0 01			ldy #1
  4033 2E91 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
  4034 2E93 C5 B1			cmp :STACKORIGIN+STACKWIDTH+11
  4035 2E95 D0 04			bne @+
  4036 2E97 A5 A0			lda :STACKORIGIN+10
  4037 2E99 C5 A1			cmp :STACKORIGIN+11
  4038 				@
  4039 2E9B D0 01			bne @+
  4040 2E9D 88				dey
  4041 				@
  4042 2E9E 84 A0			sty :STACKORIGIN+10
  4043 2EA0 A0 0A			ldy #BALL.OLDY-DATAORIGIN
  4044 2EA2 B1 84			lda (:bp2),y
  4045 2EA4 85 A1			sta :STACKORIGIN+11
  4046 2EA6 C8				iny
  4047 2EA7 B1 84			lda (:bp2),y
  4048 2EA9 85 B1			sta :STACKORIGIN+STACKWIDTH+11
  4049 2EAB A0 02			ldy #BALL.Y-DATAORIGIN
  4050 2EAD B1 84			lda (:bp2),y
  4051 2EAF 85 A2			sta :STACKORIGIN+12
  4052 2EB1 C8				iny
  4053 2EB2 B1 84			lda (:bp2),y
  4054 2EB4 85 B2			sta :STACKORIGIN+STACKWIDTH+12
  4055 2EB6 A0 01			ldy #1
  4056 2EB8 A5 B1			lda :STACKORIGIN+STACKWIDTH+11
  4057 2EBA C5 B2			cmp :STACKORIGIN+STACKWIDTH+12
  4058 2EBC D0 04			bne @+
  4059 2EBE A5 A1			lda :STACKORIGIN+11
  4060 2EC0 C5 A2			cmp :STACKORIGIN+12
  4061 				@
  4062 2EC2 D0 01			bne @+
  4063 2EC4 88				dey
  4064 				@
  4065 2EC5 98				tya
  4066 2EC6 05 A0			ora :STACKORIGIN+10
  4067 2EC8 25 9F			and :STACKORIGIN+9
  4068 2ECA F0 0F			jeq l_09BF
  4069
  4070 				; optimize OK (vservice.pas), line = 841
  4071
  4072 2ECC AD 67 AB			lda BALL
  4073 2ECF 8D 60 AB			sta REMOVE_BALL.BALL
  4074 2ED2 AD 68 AB			lda BALL+1
  4075 2ED5 8D 61 AB			sta REMOVE_BALL.BALL+1
  4076 2ED8 20 77 2D			jsr REMOVE_BALL
  4077 2EDB			l_09BF
  4078
  4079 				; optimize OK (vservice.pas), line = 843
  4080
  4081 2EDB AD 67 AB			lda BALL
  4082 2EDE 8D 59 AB			sta PLACE_BALL.BALL
  4083 2EE1 AD 68 AB			lda BALL+1
  4084 2EE4 8D 5A AB			sta PLACE_BALL.BALL+1
  4085 2EE7 20 AA 2C			jsr PLACE_BALL
  4086
  4087 				; optimize OK (vservice.pas), line = 845
  4088
  4089 2EEA AC 67 AB 84 84 AC + 	mwy BALL :bp2
  4090 2EF4 A0 00			ldy #BALL.X-DATAORIGIN
  4091 2EF6 B1 84			lda (:bp2),y
  4092 2EF8 85 9F			sta :STACKORIGIN+9
  4093 2EFA C8				iny
  4094 2EFB B1 84			lda (:bp2),y
  4095 2EFD 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  4096 2EFF A0 08			ldy #BALL.OLDX-DATAORIGIN
  4097 2F01 A5 9F			lda :STACKORIGIN+9
  4098 2F03 91 84			sta (:bp2),y
  4099 2F05 C8				iny
  4100 2F06 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  4101 2F08 91 84			sta (:bp2),y
  4102
  4103 				; optimize OK (vservice.pas), line = 846
  4104
  4105 2F0A A0 02			ldy #BALL.Y-DATAORIGIN
  4106 2F0C B1 84			lda (:bp2),y
  4107 2F0E 85 9F			sta :STACKORIGIN+9
  4108 2F10 C8				iny
  4109 2F11 B1 84			lda (:bp2),y
  4110 2F13 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  4111 2F15 A0 0A			ldy #BALL.OLDY-DATAORIGIN
  4112 2F17 A5 9F			lda :STACKORIGIN+9
  4113 2F19 91 84			sta (:bp2),y
  4114 2F1B C8				iny
  4115 2F1C A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  4116 2F1E 91 84			sta (:bp2),y
  4117
  4118 				; ------------------------------------------------------------
  4119
  4120 = AB67			BALL	= DATAORIGIN+$0F4A
  4121 = 9C1D			BALL.X	= DATAORIGIN+$0000
  4122 = 9C1F			BALL.Y	= DATAORIGIN+$0002
  4123 = 9C21			BALL.FINEX	= DATAORIGIN+$0004
  4124 = 9C23			BALL.FINEY	= DATAORIGIN+$0006
  4125 = 9C25			BALL.OLDX	= DATAORIGIN+$0008
  4126 = 9C27			BALL.OLDY	= DATAORIGIN+$000A
  4127 = 9C29			BALL.SPEED	= DATAORIGIN+$000C
  4128 = 9C2B			BALL.FINESPEED	= DATAORIGIN+$000E
  4129 = 9C2D			BALL.SPEEDX	= DATAORIGIN+$0010
  4130 = 9C2F			BALL.SPEEDY	= DATAORIGIN+$0012
  4131 = 9C31			BALL.SBD	= DATAORIGIN+$0014
  4132 = 9C33			BALL.BRWHIT	= DATAORIGIN+$0016
  4133 = 9C34			BALL.INPLAY	= DATAORIGIN+$0017
  4134 = 9C35			BALL.LAUNCH	= DATAORIGIN+$0018
  4135 = 9C36			BALL.ONVAUS	= DATAORIGIN+$0019
  4136 = 9C37			BALL.STM	= DATAORIGIN+$001A
  4137
  4138 = AB67			@VarData	= BALL
  4139 = 0002			@VarDataSize	= 2
  4140
  4141 2F20			@exit
  4142 					.ifdef @new
  4143 					lda <@VarData
  4144 					sta :ztmp
  4145 					lda >@VarData
  4146 					ldy #@VarDataSize-1
  4147 					jmp @FreeMem
  4148 					els
  4149 2F20 60				rts						; ret
  4150 					eif
  4151 				.endl
  4152
  4153 2F21			.local	SET_BALL_SPEED					; PROCEDURE
  4154
  4155 				; optimize OK (vservice.pas), line = 856
  4156
  4157 2F21 AC 6B AB 84 84 AC + 	mwy BALL :bp2
  4158 2F2B A0 10			ldy #BALL.SPEEDX-DATAORIGIN
  4159 2F2D B1 84			lda (:bp2),y
  4160 2F2F 8D 71 AB			sta SX
  4161 2F32 C8				iny
  4162 2F33 B1 84			lda (:bp2),y
  4163 2F35 8D 72 AB			sta SX+1
  4164
  4165 				; optimize OK (vservice.pas), line = 857
  4166
  4167 2F38 A0 12			ldy #BALL.SPEEDY-DATAORIGIN
  4168 2F3A B1 84			lda (:bp2),y
  4169 2F3C 8D 73 AB			sta SY
  4170 2F3F C8				iny
  4171 2F40 B1 84			lda (:bp2),y
  4172 2F42 8D 74 AB			sta SY+1
  4173
  4174 				; optimize FAIL (1, vservice.pas), line = 859
  4175
  4176 2F45 E8				inx
  4177 2F46 AD 6F AB 95 96		mva SPEED :STACKORIGIN,x
  4178 2F4B AD 70 AB 95 A6		mva SPEED+1 :STACKORIGIN+STACKWIDTH,x
  4179 2F50 AD 71 AB			lda SX
  4180 2F53 85 8E			sta :ecx
  4181 2F55 85 92			sta :ztmp8
  4182 2F57 AD 72 AB			lda SX+1
  4183 2F5A 85 8F			sta :ecx+1
  4184 2F5C 85 93			sta :ztmp9
  4185 2F5E AD 71 AB			lda SX
  4186 2F61 85 86			sta :eax
  4187 2F63 85 94			sta :ztmp10
  4188 2F65 AD 72 AB			lda SX+1
  4189 2F68 85 87			sta :eax+1
  4190 2F6A 85 95			sta :ztmp11
  4191 					.ifdef fmulinit
  4192 					fmulu_16
  4193 					els
  4194 2F6C 20 FA 12			imulCX
  4195 					eif
  4196 2F6F A5 95			lda :ztmp11
  4197 2F71 10 0D			bpl @+
  4198 2F73 A5 88			lda :eax+2
  4199 2F75 38 E5 92			sub :ztmp8
  4200 2F78 85 88			sta :eax+2
  4201 2F7A A5 89			lda :eax+3
  4202 2F7C E5 93			sbc :ztmp9
  4203 2F7E 85 89			sta :eax+3
  4204 				@
  4205 2F80 A5 93			lda :ztmp9
  4206 2F82 10 0D			bpl @+
  4207 2F84 A5 88			lda :eax+2
  4208 2F86 38 E5 94			sub :ztmp10
  4209 2F89 85 88			sta :eax+2
  4210 2F8B A5 89			lda :eax+3
  4211 2F8D E5 95			sbc :ztmp11
  4212 2F8F 85 89			sta :eax+3
  4213 				@
  4214 2F91 A5 86			lda :eax
  4215 2F93 85 9F			sta :STACKORIGIN+9
  4216 2F95 A5 87			lda :eax+1
  4217 2F97 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  4218 2F99 A5 88			lda :eax+2
  4219 2F9B 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
  4220 2F9D A5 89			lda :eax+3
  4221 2F9F 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
  4222 2FA1 AD 73 AB			lda SY
  4223 2FA4 85 8E			sta :ecx
  4224 2FA6 85 92			sta :ztmp8
  4225 2FA8 AD 74 AB			lda SY+1
  4226 2FAB 85 8F			sta :ecx+1
  4227 2FAD 85 93			sta :ztmp9
  4228 2FAF AD 73 AB			lda SY
  4229 2FB2 85 86			sta :eax
  4230 2FB4 85 94			sta :ztmp10
  4231 2FB6 AD 74 AB			lda SY+1
  4232 2FB9 85 87			sta :eax+1
  4233 2FBB 85 95			sta :ztmp11
  4234 					.ifdef fmulinit
  4235 					fmulu_16
  4236 					els
  4237 2FBD 20 FA 12			imulCX
  4238 					eif
  4239 2FC0 A5 95			lda :ztmp11
  4240 2FC2 10 0D			bpl @+
  4241 2FC4 A5 88			lda :eax+2
  4242 2FC6 38 E5 92			sub :ztmp8
  4243 2FC9 85 88			sta :eax+2
  4244 2FCB A5 89			lda :eax+3
  4245 2FCD E5 93			sbc :ztmp9
  4246 2FCF 85 89			sta :eax+3
  4247 				@
  4248 2FD1 A5 93			lda :ztmp9
  4249 2FD3 10 0D			bpl @+
  4250 2FD5 A5 88			lda :eax+2
  4251 2FD7 38 E5 94			sub :ztmp10
  4252 2FDA 85 88			sta :eax+2
  4253 2FDC A5 89			lda :eax+3
  4254 2FDE E5 95			sbc :ztmp11
  4255 2FE0 85 89			sta :eax+3
  4256 				@
  4257 2FE2 A5 9F			lda :STACKORIGIN+9
  4258 2FE4 18 65 86			add :eax
  4259 2FE7 8D 28 9C			sta SYSTEM.SQRT.@010185000.X
  4260 2FEA A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  4261 2FEC 65 87			adc :eax+1
  4262 2FEE 8D 29 9C			sta SYSTEM.SQRT.@010185000.X+1
  4263 2FF1 A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
  4264 2FF3 65 88			adc :eax+2
  4265 2FF5 8D 2A 9C			sta SYSTEM.SQRT.@010185000.X+2
  4266 2FF8 A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
  4267 2FFA 65 89			adc :eax+3
  4268 2FFC 8D 2B 9C			sta SYSTEM.SQRT.@010185000.X+3
  4269 2FFF 20 9B 1B			jsr SYSTEM.SQRT.@010185000
  4270 3002 E8				inx
  4271 3003 AD 2C 9C 95 96		mva SYSTEM.SQRT.@010185000.RESULT :STACKORIGIN,x
  4272 3008 AD 2D 9C 95 A6		mva SYSTEM.SQRT.@010185000.RESULT+1 :STACKORIGIN+STACKWIDTH,x
  4273 300D AD 2E 9C 95 B6		mva SYSTEM.SQRT.@010185000.RESULT+2 :STACKORIGIN+STACKWIDTH*2,x
  4274 3012 AD 2F 9C 95 C6		mva SYSTEM.SQRT.@010185000.RESULT+3 :STACKORIGIN+STACKWIDTH*3,x
  4275 3017 20 3B 11			jsr @expandToCARD1.SMALL
  4276 301A B5 95			lda :STACKORIGIN-1,x
  4277 301C 85 8E			sta :FPMAN0
  4278 301E B5 A5			lda :STACKORIGIN-1+STACKWIDTH,x
  4279 3020 85 8F			sta :FPMAN1
  4280 3022 B5 B5			lda :STACKORIGIN-1+STACKWIDTH*2,x
  4281 3024 85 90			sta :FPMAN2
  4282 3026 B5 C5			lda :STACKORIGIN-1+STACKWIDTH*3,x
  4283 3028 85 91			sta :FPMAN3
  4284 302A 20 12 19			jsr @I2F
  4285 302D A5 8E			lda :FPMAN0
  4286 302F 85 8A			sta :FP2MAN0
  4287 3031 A5 8F			lda :FPMAN1
  4288 3033 85 8B			sta :FP2MAN1
  4289 3035 A5 90			lda :FPMAN2
  4290 3037 85 8C			sta :FP2MAN2
  4291 3039 A5 91			lda :FPMAN3
  4292 303B 85 8D			sta :FP2MAN3
  4293 303D B5 95			lda :STACKORIGIN-1,x
  4294 303F 85 86			sta :FP1MAN0
  4295 3041 B5 A5			lda :STACKORIGIN-1+STACKWIDTH,x
  4296 3043 85 87			sta :FP1MAN1
  4297 3045 B5 B5			lda :STACKORIGIN-1+STACKWIDTH*2,x
  4298 3047 85 88			sta :FP1MAN2
  4299 3049 B5 C5			lda :STACKORIGIN-1+STACKWIDTH*3,x
  4300 304B 85 89			sta :FP1MAN3
  4301 304D 20 25 18			jsr @FDIV
  4302 3050 CA				dex
  4303 3051 A5 8E			lda :FPMAN0
  4304 3053 8D 75 AB			sta VM
  4305 3056 A5 8F			lda :FPMAN1
  4306 3058 8D 76 AB			sta VM+1
  4307 305B A5 90			lda :FPMAN2
  4308 305D 8D 77 AB			sta VM+2
  4309 3060 A5 91			lda :FPMAN3
  4310 3062 8D 78 AB			sta VM+3
  4311 3065 CA				dex
  4312
  4313 				; optimize OK (vservice.pas), line = 864
  4314
  4315 3066 AD 71 AB			lda SX
  4316 3069 85 8E			sta :FPMAN0
  4317 306B A0 00			ldy #$00
  4318 306D AD 72 AB			lda SX+1
  4319 3070 10 01			spl
  4320 3072 88				dey
  4321 3073 85 8F			sta :FPMAN1
  4322 3075 84 90			sty :FPMAN2
  4323 3077 84 91			sty :FPMAN3
  4324 3079 20 12 19			jsr @I2F
  4325 307C A5 8E			lda :FPMAN0
  4326 307E 85 86			sta :FP1MAN0
  4327 3080 A5 8F			lda :FPMAN1
  4328 3082 85 87			sta :FP1MAN1
  4329 3084 A5 90			lda :FPMAN2
  4330 3086 85 88			sta :FP1MAN2
  4331 3088 A5 91			lda :FPMAN3
  4332 308A 85 89			sta :FP1MAN3
  4333 308C AD 75 AB			lda VM
  4334 308F 85 8A			sta :FP2MAN0
  4335 3091 AD 76 AB			lda VM+1
  4336 3094 85 8B			sta :FP2MAN1
  4337 3096 AD 77 AB			lda VM+2
  4338 3099 85 8C			sta :FP2MAN2
  4339 309B AD 78 AB			lda VM+3
  4340 309E 85 8D			sta :FP2MAN3
  4341 30A0 20 84 17			jsr @FMUL
  4342 30A3 A5 8E			lda :FPMAN0
  4343 30A5 85 8A			sta :FP2MAN0
  4344 30A7 A5 8F			lda :FPMAN1
  4345 30A9 85 8B			sta :FP2MAN1
  4346 30AB A5 90			lda :FPMAN2
  4347 30AD 85 8C			sta :FP2MAN2
  4348 30AF A5 91			lda :FPMAN3
  4349 30B1 85 8D			sta :FP2MAN3
  4350 30B3 20 DC 15			jsr @FROUND
  4351 30B6 AC 6B AB 84 84 AC + 	mwy BALL :bp2
  4352 30C0 A0 10			ldy #BALL.SPEEDX-DATAORIGIN
  4353 30C2 A5 8E			lda :FPMAN0
  4354 30C4 91 84			sta (:bp2),y
  4355 30C6 C8				iny
  4356 30C7 A5 8F			lda :FPMAN1
  4357 30C9 91 84			sta (:bp2),y
  4358
  4359 				; optimize OK (vservice.pas), line = 865
  4360
  4361 30CB AD 73 AB			lda SY
  4362 30CE 85 8E			sta :FPMAN0
  4363 30D0 A0 00			ldy #$00
  4364 30D2 AD 74 AB			lda SY+1
  4365 30D5 10 01			spl
  4366 30D7 88				dey
  4367 30D8 85 8F			sta :FPMAN1
  4368 30DA 84 90			sty :FPMAN2
  4369 30DC 84 91			sty :FPMAN3
  4370 30DE 20 12 19			jsr @I2F
  4371 30E1 A5 8E			lda :FPMAN0
  4372 30E3 85 86			sta :FP1MAN0
  4373 30E5 A5 8F			lda :FPMAN1
  4374 30E7 85 87			sta :FP1MAN1
  4375 30E9 A5 90			lda :FPMAN2
  4376 30EB 85 88			sta :FP1MAN2
  4377 30ED A5 91			lda :FPMAN3
  4378 30EF 85 89			sta :FP1MAN3
  4379 30F1 AD 75 AB			lda VM
  4380 30F4 85 8A			sta :FP2MAN0
  4381 30F6 AD 76 AB			lda VM+1
  4382 30F9 85 8B			sta :FP2MAN1
  4383 30FB AD 77 AB			lda VM+2
  4384 30FE 85 8C			sta :FP2MAN2
  4385 3100 AD 78 AB			lda VM+3
  4386 3103 85 8D			sta :FP2MAN3
  4387 3105 20 84 17			jsr @FMUL
  4388 3108 A5 8E			lda :FPMAN0
  4389 310A 85 8A			sta :FP2MAN0
  4390 310C A5 8F			lda :FPMAN1
  4391 310E 85 8B			sta :FP2MAN1
  4392 3110 A5 90			lda :FPMAN2
  4393 3112 85 8C			sta :FP2MAN2
  4394 3114 A5 91			lda :FPMAN3
  4395 3116 85 8D			sta :FP2MAN3
  4396 3118 20 DC 15			jsr @FROUND
  4397 311B AC 6B AB 84 84 AC + 	mwy BALL :bp2
  4398 3125 A0 12			ldy #BALL.SPEEDY-DATAORIGIN
  4399 3127 A5 8E			lda :FPMAN0
  4400 3129 91 84			sta (:bp2),y
  4401 312B C8				iny
  4402 312C A5 8F			lda :FPMAN1
  4403 312E 91 84			sta (:bp2),y
  4404
  4405 				; ------------------------------------------------------------
  4406
  4407 = AB6B			BALL	= DATAORIGIN+$0F4E
  4408 = 9C1D			BALL.X	= DATAORIGIN+$0000
  4409 = 9C1F			BALL.Y	= DATAORIGIN+$0002
  4410 = 9C21			BALL.FINEX	= DATAORIGIN+$0004
  4411 = 9C23			BALL.FINEY	= DATAORIGIN+$0006
  4412 = 9C25			BALL.OLDX	= DATAORIGIN+$0008
  4413 = 9C27			BALL.OLDY	= DATAORIGIN+$000A
  4414 = 9C29			BALL.SPEED	= DATAORIGIN+$000C
  4415 = 9C2B			BALL.FINESPEED	= DATAORIGIN+$000E
  4416 = 9C2D			BALL.SPEEDX	= DATAORIGIN+$0010
  4417 = 9C2F			BALL.SPEEDY	= DATAORIGIN+$0012
  4418 = 9C31			BALL.SBD	= DATAORIGIN+$0014
  4419 = 9C33			BALL.BRWHIT	= DATAORIGIN+$0016
  4420 = 9C34			BALL.INPLAY	= DATAORIGIN+$0017
  4421 = 9C35			BALL.LAUNCH	= DATAORIGIN+$0018
  4422 = 9C36			BALL.ONVAUS	= DATAORIGIN+$0019
  4423 = 9C37			BALL.STM	= DATAORIGIN+$001A
  4424 = AB6F			SPEED	= DATAORIGIN+$0F52
  4425 = AB71			SX	= DATAORIGIN+$0F54
  4426 = AB73			SY	= DATAORIGIN+$0F56
  4427 = AB75			VM	= DATAORIGIN+$0F58
  4428
  4429 = AB6B			@VarData	= BALL
  4430 = 000C			@VarDataSize	= 12
  4431
  4432 3130			@exit
  4433 					.ifdef @new
  4434 					lda <@VarData
  4435 					sta :ztmp
  4436 					lda >@VarData
  4437 					ldy #@VarDataSize-1
  4438 					jmp @FreeMem
  4439 					els
  4440 3130 60				rts						; ret
  4441 					eif
  4442 				.endl
  4443
  4444 3131			.local	SET_BALL_DIRECTION				; PROCEDURE
  4445
  4446 				; optimize OK (vservice.pas), line = 872
  4447
  4448 3131 AD 7D AB			lda ANGLE
  4449 3134 85 9F			sta :STACKORIGIN+9
  4450 3136 A0 00			ldy #$00
  4451 3138 AD 7E AB			lda ANGLE+1
  4452 313B 10 01			spl
  4453 313D 88				dey
  4454 313E 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  4455 3140 85 88			sta @REAL_MUL.A+2
  4456 3142 84 89			sty @REAL_MUL.A+3
  4457 3144 A5 9F			lda :STACKORIGIN+9
  4458 3146 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  4459 3148 A9 00			lda #$00
  4460 314A 85 86			sta @REAL_MUL.A
  4461 314C A9 24			lda #$24
  4462 314E 85 8E			sta @REAL_MUL.B
  4463 3150 A9 03			lda #$03
  4464 3152 85 8F			sta @REAL_MUL.B+1
  4465 3154 A9 00			lda #$00
  4466 3156 85 90			sta @REAL_MUL.B+2
  4467 3158 85 91			sta @REAL_MUL.B+3
  4468 315A A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  4469 315C 85 87			sta @REAL_MUL.A+1
  4470 315E 20 33 14			jsr @REAL_MUL
  4471 3161 A9 00			lda #$00
  4472 3163 85 8E			sta @REAL_DIV.B
  4473 3165 A9 B4			lda #$B4
  4474 3167 85 8F			sta @REAL_DIV.B+1
  4475 3169 A9 00			lda #$00
  4476 316B 85 90			sta @REAL_DIV.B+2
  4477 316D 85 91			sta @REAL_DIV.B+3
  4478 316F 20 F2 14			jsr @REAL_DIV
  4479 3172 A5 86			lda :eax
  4480 3174 8D 7F AB			sta W
  4481 3177 A5 87			lda :eax+1
  4482 3179 8D 80 AB			sta W+1
  4483 317C A5 88			lda :eax+2
  4484 317E 8D 81 AB			sta W+2
  4485 3181 A5 89			lda :eax+3
  4486 3183 8D 82 AB			sta W+3
  4487
  4488 				; optimize FAIL (1, vservice.pas), line = 874
  4489
  4490 3186 E8				inx
  4491 3187 A9 00 95 96			mva #$00 :STACKORIGIN,x
  4492 318B A9 01 95 A6			mva #$01 :STACKORIGIN+STACKWIDTH,x
  4493 318F AD 7F AB			lda W
  4494 3192 8D 59 9C			sta SYSTEM.COS.@01018E000.X
  4495 3195 AD 80 AB			lda W+1
  4496 3198 8D 5A 9C			sta SYSTEM.COS.@01018E000.X+1
  4497 319B AD 81 AB			lda W+2
  4498 319E 8D 5B 9C			sta SYSTEM.COS.@01018E000.X+2
  4499 31A1 AD 82 AB			lda W+3
  4500 31A4 8D 5C 9C			sta SYSTEM.COS.@01018E000.X+3
  4501 31A7 20 AF 23			jsr SYSTEM.COS.@01018E000
  4502 31AA E8				inx
  4503 31AB AD 5D 9C 95 96		mva SYSTEM.COS.@01018E000.RESULT :STACKORIGIN,x
  4504 31B0 AD 5E 9C 95 A6		mva SYSTEM.COS.@01018E000.RESULT+1 :STACKORIGIN+STACKWIDTH,x
  4505 31B5 AD 5F 9C 95 B6		mva SYSTEM.COS.@01018E000.RESULT+2 :STACKORIGIN+STACKWIDTH*2,x
  4506 31BA AD 60 9C 95 C6		mva SYSTEM.COS.@01018E000.RESULT+3 :STACKORIGIN+STACKWIDTH*3,x
  4507 31BF A9 00 95 B5			mva #$00 :STACKORIGIN-1+STACKWIDTH*2,x
  4508 31C3 95 C5			sta :STACKORIGIN-1+STACKWIDTH*3,x
  4509 31C5 20 58 11			jsr @expandToREAL1
  4510 31C8 B5 96			lda :STACKORIGIN,x
  4511 31CA 85 8E			sta @REAL_MUL.B
  4512 31CC B5 A6			lda :STACKORIGIN+STACKWIDTH,x
  4513 31CE 85 8F			sta @REAL_MUL.B+1
  4514 31D0 B5 B6			lda :STACKORIGIN+STACKWIDTH*2,x
  4515 31D2 85 90			sta @REAL_MUL.B+2
  4516 31D4 B5 C6			lda :STACKORIGIN+STACKWIDTH*3,x
  4517 31D6 85 91			sta @REAL_MUL.B+3
  4518 31D8 B5 95			lda :STACKORIGIN-1,x
  4519 31DA 85 86			sta @REAL_MUL.A
  4520 31DC B5 A5			lda :STACKORIGIN-1+STACKWIDTH,x
  4521 31DE 85 87			sta @REAL_MUL.A+1
  4522 31E0 B5 B5			lda :STACKORIGIN-1+STACKWIDTH*2,x
  4523 31E2 85 88			sta @REAL_MUL.A+2
  4524 31E4 B5 C5			lda :STACKORIGIN-1+STACKWIDTH*3,x
  4525 31E6 85 89			sta @REAL_MUL.A+3
  4526 31E8 20 33 14			jsr @REAL_MUL
  4527 31EB CA				dex
  4528 31EC 20 9A 15			jsr @REAL_ROUND
  4529 31EF A5 86			lda :eax
  4530 31F1 95 96			sta :STACKORIGIN,x
  4531 31F3 A5 87			lda :eax+1
  4532 31F5 95 A6			sta :STACKORIGIN+STACKWIDTH,x
  4533 31F7 A5 88			lda :eax+2
  4534 31F9 95 B6			sta :STACKORIGIN+STACKWIDTH*2,x
  4535 31FB A5 89			lda :eax+3
  4536 31FD 95 C6			sta :STACKORIGIN+STACKWIDTH*3,x
  4537 31FF AC 79 AB 84 84 AC + 	mwy BALL :bp2
  4538 3209 A0 10			ldy #BALL.SPEEDX-DATAORIGIN
  4539 320B B5 96			lda :STACKORIGIN,x
  4540 320D 91 84			sta (:bp2),y
  4541 320F C8				iny
  4542 3210 B5 A6			lda :STACKORIGIN+STACKWIDTH,x
  4543 3212 91 84			sta (:bp2),y
  4544
  4545 				; optimize FAIL (1, vservice.pas), line = 875
  4546
  4547 3214 A9 00 95 96			mva #$00 :STACKORIGIN,x
  4548 3218 A9 01 95 A6			mva #$01 :STACKORIGIN+STACKWIDTH,x
  4549 321C AD 7F AB			lda W
  4550 321F 8D 51 9C			sta SYSTEM.SIN.@01018E000.X
  4551 3222 AD 80 AB			lda W+1
  4552 3225 8D 52 9C			sta SYSTEM.SIN.@01018E000.X+1
  4553 3228 AD 81 AB			lda W+2
  4554 322B 8D 53 9C			sta SYSTEM.SIN.@01018E000.X+2
  4555 322E AD 82 AB			lda W+3
  4556 3231 8D 54 9C			sta SYSTEM.SIN.@01018E000.X+3
  4557 3234 20 76 23			jsr SYSTEM.SIN.@01018E000
  4558 3237 E8				inx
  4559 3238 AD 55 9C 95 96		mva SYSTEM.SIN.@01018E000.RESULT :STACKORIGIN,x
  4560 323D AD 56 9C 95 A6		mva SYSTEM.SIN.@01018E000.RESULT+1 :STACKORIGIN+STACKWIDTH,x
  4561 3242 AD 57 9C 95 B6		mva SYSTEM.SIN.@01018E000.RESULT+2 :STACKORIGIN+STACKWIDTH*2,x
  4562 3247 AD 58 9C 95 C6		mva SYSTEM.SIN.@01018E000.RESULT+3 :STACKORIGIN+STACKWIDTH*3,x
  4563 324C A9 00 95 B5			mva #$00 :STACKORIGIN-1+STACKWIDTH*2,x
  4564 3250 95 C5			sta :STACKORIGIN-1+STACKWIDTH*3,x
  4565 3252 20 58 11			jsr @expandToREAL1
  4566 3255 B5 96			lda :STACKORIGIN,x
  4567 3257 85 8E			sta @REAL_MUL.B
  4568 3259 B5 A6			lda :STACKORIGIN+STACKWIDTH,x
  4569 325B 85 8F			sta @REAL_MUL.B+1
  4570 325D B5 B6			lda :STACKORIGIN+STACKWIDTH*2,x
  4571 325F 85 90			sta @REAL_MUL.B+2
  4572 3261 B5 C6			lda :STACKORIGIN+STACKWIDTH*3,x
  4573 3263 85 91			sta @REAL_MUL.B+3
  4574 3265 B5 95			lda :STACKORIGIN-1,x
  4575 3267 85 86			sta @REAL_MUL.A
  4576 3269 B5 A5			lda :STACKORIGIN-1+STACKWIDTH,x
  4577 326B 85 87			sta @REAL_MUL.A+1
  4578 326D B5 B5			lda :STACKORIGIN-1+STACKWIDTH*2,x
  4579 326F 85 88			sta @REAL_MUL.A+2
  4580 3271 B5 C5			lda :STACKORIGIN-1+STACKWIDTH*3,x
  4581 3273 85 89			sta @REAL_MUL.A+3
  4582 3275 20 33 14			jsr @REAL_MUL
  4583 3278 CA				dex
  4584 3279 20 9A 15			jsr @REAL_ROUND
  4585 327C A5 86			lda :eax
  4586 327E 95 96			sta :STACKORIGIN,x
  4587 3280 A5 87			lda :eax+1
  4588 3282 95 A6			sta :STACKORIGIN+STACKWIDTH,x
  4589 3284 A5 88			lda :eax+2
  4590 3286 95 B6			sta :STACKORIGIN+STACKWIDTH*2,x
  4591 3288 A5 89			lda :eax+3
  4592 328A 95 C6			sta :STACKORIGIN+STACKWIDTH*3,x
  4593 328C A9 00			lda #$00
  4594 328E 38 F5 96			sub :STACKORIGIN,x
  4595 3291 95 96			sta :STACKORIGIN,x
  4596 3293 A9 00			lda #$00
  4597 3295 F5 A6			sbc :STACKORIGIN+STACKWIDTH,x
  4598 3297 95 A6			sta :STACKORIGIN+STACKWIDTH,x
  4599 3299 A9 00			lda #$00
  4600 329B F5 B6			sbc :STACKORIGIN+STACKWIDTH*2,x
  4601 329D 95 B6			sta :STACKORIGIN+STACKWIDTH*2,x
  4602 329F A9 00			lda #$00
  4603 32A1 F5 C6			sbc :STACKORIGIN+STACKWIDTH*3,x
  4604 32A3 95 C6			sta :STACKORIGIN+STACKWIDTH*3,x
  4605 32A5 AC 79 AB 84 84 AC + 	mwy BALL :bp2
  4606 32AF A0 12			ldy #BALL.SPEEDY-DATAORIGIN
  4607 32B1 B5 96			lda :STACKORIGIN,x
  4608 32B3 91 84			sta (:bp2),y
  4609 32B5 C8				iny
  4610 32B6 B5 A6			lda :STACKORIGIN+STACKWIDTH,x
  4611 32B8 91 84			sta (:bp2),y
  4612 32BA CA				dex
  4613
  4614 				; ------------------------------------------------------------
  4615
  4616 = AB79			BALL	= DATAORIGIN+$0F5C
  4617 = 9C1D			BALL.X	= DATAORIGIN+$0000
  4618 = 9C1F			BALL.Y	= DATAORIGIN+$0002
  4619 = 9C21			BALL.FINEX	= DATAORIGIN+$0004
  4620 = 9C23			BALL.FINEY	= DATAORIGIN+$0006
  4621 = 9C25			BALL.OLDX	= DATAORIGIN+$0008
  4622 = 9C27			BALL.OLDY	= DATAORIGIN+$000A
  4623 = 9C29			BALL.SPEED	= DATAORIGIN+$000C
  4624 = 9C2B			BALL.FINESPEED	= DATAORIGIN+$000E
  4625 = 9C2D			BALL.SPEEDX	= DATAORIGIN+$0010
  4626 = 9C2F			BALL.SPEEDY	= DATAORIGIN+$0012
  4627 = 9C31			BALL.SBD	= DATAORIGIN+$0014
  4628 = 9C33			BALL.BRWHIT	= DATAORIGIN+$0016
  4629 = 9C34			BALL.INPLAY	= DATAORIGIN+$0017
  4630 = 9C35			BALL.LAUNCH	= DATAORIGIN+$0018
  4631 = 9C36			BALL.ONVAUS	= DATAORIGIN+$0019
  4632 = 9C37			BALL.STM	= DATAORIGIN+$001A
  4633 = AB7D			ANGLE	= DATAORIGIN+$0F60
  4634 = AB7F			W	= DATAORIGIN+$0F62
  4635
  4636 = AB79			@VarData	= BALL
  4637 = 0008			@VarDataSize	= 8
  4638
  4639 32BB			@exit
  4640 					.ifdef @new
  4641 					lda <@VarData
  4642 					sta :ztmp
  4643 					lda >@VarData
  4644 					ldy #@VarDataSize-1
  4645 					jmp @FreeMem
  4646 					els
  4647 32BB 60				rts						; ret
  4648 					eif
  4649 				.endl
  4650
  4651 32BC			.local	GET_BALL_DIRECTION				; FUNCTION
  4652
  4653 				; optimize OK (vservice.pas), line = 882
  4654
  4655 32BC AC 83 AB 84 84 AC + 	mwy BALL :bp2
  4656 32C6 A0 11			ldy #BALL.SPEEDX-DATAORIGIN+$01
  4657 32C8 B1 84			lda (:bp2),y
  4658 32CA 88				dey
  4659 32CB 11 84			ora (:bp2),y
  4660 32CD D0 75			jne l_0A47
  4661 32CF E8				inx
  4662 32D0 A9 5A 95 96			mva #$5A :STACKORIGIN,x
  4663 32D4 E8				inx
  4664 32D5 AC 83 AB 84 84 AC + 	mwy BALL :bp2
  4665 32DF A0 12			ldy #BALL.SPEEDY-DATAORIGIN
  4666 32E1 B1 84 95 96			mva (:bp2),y :STACKORIGIN,x
  4667 32E5 C8				iny
  4668 32E6 B1 84 95 A6			mva (:bp2),y :STACKORIGIN+STACKWIDTH,x
  4669 32EA A0 12			ldy #BALL.SPEEDY-DATAORIGIN
  4670 32EC B1 84			lda (:bp2),y
  4671 32EE 85 8A			sta SYSTEM.ABS.@010184000.X
  4672 32F0 C8				iny
  4673 32F1 B1 84			lda (:bp2),y
  4674 32F3 85 8B			sta SYSTEM.ABS.@010184000.X+1
  4675 32F5 20 6D 1B			jsr SYSTEM.ABS.@010184000
  4676 32F8 E8				inx
  4677 32F9 A5 92			lda SYSTEM.ABS.@010184000.RESULT
  4678 32FB 85 8E			sta @SMALLINT.DIV.B
  4679 32FD A5 93			lda SYSTEM.ABS.@010184000.RESULT+1
  4680 32FF 85 8F			sta @SMALLINT.DIV.B+1
  4681 3301 B5 95			lda :STACKORIGIN-1,x
  4682 3303 85 86			sta @SMALLINT.DIV.A
  4683 3305 B5 A5			lda :STACKORIGIN-1+STACKWIDTH,x
  4684 3307 85 87			sta @SMALLINT.DIV.A+1
  4685 3309 20 22 12			jsr @SMALLINT.DIV
  4686 330C A5 86			lda :eax
  4687 330E 95 95			sta :STACKORIGIN-1,x
  4688 3310 A5 87			lda :eax+1
  4689 3312 95 A5			sta :STACKORIGIN-1+STACKWIDTH,x
  4690 3314 CA				dex
  4691 3315 A9 00 95 A5			mva #$00 :STACKORIGIN-1+STACKWIDTH,x
  4692 3319 20 FA 11			jsr mulSMALLINT
  4693 331C CA				dex
  4694 331D A9 00			lda #$00
  4695 331F 38 F5 96			sub :STACKORIGIN,x
  4696 3322 95 96			sta :STACKORIGIN,x
  4697 3324 A9 00			lda #$00
  4698 3326 F5 A6			sbc :STACKORIGIN+STACKWIDTH,x
  4699 3328 95 A6			sta :STACKORIGIN+STACKWIDTH,x
  4700 332A A9 00			lda #$00
  4701 332C F5 B6			sbc :STACKORIGIN+STACKWIDTH*2,x
  4702 332E 95 B6			sta :STACKORIGIN+STACKWIDTH*2,x
  4703 3330 A9 00			lda #$00
  4704 3332 F5 C6			sbc :STACKORIGIN+STACKWIDTH*3,x
  4705 3334 95 C6			sta :STACKORIGIN+STACKWIDTH*3,x
  4706 3336 B5 96			lda :STACKORIGIN,x
  4707 3338 8D 89 AB			sta W
  4708 333B B5 A6			lda :STACKORIGIN+STACKWIDTH,x
  4709 333D 8D 8A AB			sta W+1
  4710 3340 CA				dex
  4711 3341 4C 6A 34			jmp l_0A63
  4712 3344			l_0A47
  4713
  4714 				; optimize OK (vservice.pas), line = 888
  4715
  4716 3344 AC 83 AB 84 84 AC + 	mwy BALL :bp2
  4717 334E A0 12			ldy #BALL.SPEEDY-DATAORIGIN
  4718 3350 B1 84			lda (:bp2),y
  4719 3352 85 87			sta @REAL_DIV.A+1
  4720 3354 C8				iny
  4721 3355 B1 84			lda (:bp2),y
  4722 3357 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  4723 3359 A0 10			ldy #BALL.SPEEDX-DATAORIGIN
  4724 335B B1 84			lda (:bp2),y
  4725 335D 85 A0			sta :STACKORIGIN+10
  4726 335F C8				iny
  4727 3360 B1 84			lda (:bp2),y
  4728 3362 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  4729 3364 A0 00			ldy #$00
  4730 3366 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
  4731 3368 10 01			spl
  4732 336A 88				dey
  4733 336B 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  4734 336D 85 90			sta @REAL_DIV.B+2
  4735 336F 84 91			sty @REAL_DIV.B+3
  4736 3371 A5 A0			lda :STACKORIGIN+10
  4737 3373 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  4738 3375 A9 00			lda #$00
  4739 3377 85 8E			sta @REAL_DIV.B
  4740 3379 A0 00			ldy #$00
  4741 337B A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  4742 337D 10 01			spl
  4743 337F 88				dey
  4744 3380 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  4745 3382 85 88			sta @REAL_DIV.A+2
  4746 3384 84 89			sty @REAL_DIV.A+3
  4747 3386 A9 00			lda #$00
  4748 3388 85 86			sta @REAL_DIV.A
  4749 338A A5 B0			lda :STACKORIGIN+STACKWIDTH+10
  4750 338C 85 8F			sta @REAL_DIV.B+1
  4751 338E 20 F2 14			jsr @REAL_DIV
  4752 3391 A9 00			lda #$00
  4753 3393 38 E5 86			sub :eax
  4754 3396 8D 36 9C			sta SYSTEM.ARCTAN.@01018E000.VALUE
  4755 3399 A9 00			lda #$00
  4756 339B E5 87			sbc :eax+1
  4757 339D 8D 37 9C			sta SYSTEM.ARCTAN.@01018E000.VALUE+1
  4758 33A0 A9 00			lda #$00
  4759 33A2 E5 88			sbc :eax+2
  4760 33A4 8D 38 9C			sta SYSTEM.ARCTAN.@01018E000.VALUE+2
  4761 33A7 A9 00			lda #$00
  4762 33A9 E5 89			sbc :eax+3
  4763 33AB 8D 39 9C			sta SYSTEM.ARCTAN.@01018E000.VALUE+3
  4764 33AE 20 30 1E			jsr SYSTEM.ARCTAN.@01018E000
  4765 33B1 E8				inx
  4766 33B2 E8				inx
  4767 33B3 A9 00			lda #$00
  4768 33B5 85 8E			sta @REAL_MUL.B
  4769 33B7 A9 B4			lda #$B4
  4770 33B9 85 8F			sta @REAL_MUL.B+1
  4771 33BB A9 00			lda #$00
  4772 33BD 85 90			sta @REAL_MUL.B+2
  4773 33BF A9 00			lda #$00
  4774 33C1 85 91			sta @REAL_MUL.B+3
  4775 33C3 AD 3A 9C			lda SYSTEM.ARCTAN.@01018E000.RESULT
  4776 33C6 85 86			sta @REAL_MUL.A
  4777 33C8 AD 3B 9C			lda SYSTEM.ARCTAN.@01018E000.RESULT+1
  4778 33CB 85 87			sta @REAL_MUL.A+1
  4779 33CD AD 3C 9C			lda SYSTEM.ARCTAN.@01018E000.RESULT+2
  4780 33D0 85 88			sta @REAL_MUL.A+2
  4781 33D2 AD 3D 9C			lda SYSTEM.ARCTAN.@01018E000.RESULT+3
  4782 33D5 85 89			sta @REAL_MUL.A+3
  4783 33D7 20 33 14			jsr @REAL_MUL
  4784 33DA A5 86			lda :eax
  4785 33DC 95 95			sta :STACKORIGIN-1,x
  4786 33DE A5 87			lda :eax+1
  4787 33E0 95 A5			sta :STACKORIGIN-1+STACKWIDTH,x
  4788 33E2 A5 88			lda :eax+2
  4789 33E4 95 B5			sta :STACKORIGIN-1+STACKWIDTH*2,x
  4790 33E6 A5 89			lda :eax+3
  4791 33E8 95 C5			sta :STACKORIGIN-1+STACKWIDTH*3,x
  4792 33EA A9 24			lda #$24
  4793 33EC 85 8E			sta @REAL_DIV.B
  4794 33EE A9 03			lda #$03
  4795 33F0 85 8F			sta @REAL_DIV.B+1
  4796 33F2 A9 00			lda #$00
  4797 33F4 85 90			sta @REAL_DIV.B+2
  4798 33F6 A9 00			lda #$00
  4799 33F8 85 91			sta @REAL_DIV.B+3
  4800 33FA B5 95			lda :STACKORIGIN-1,x
  4801 33FC 85 86			sta @REAL_DIV.A
  4802 33FE B5 A5			lda :STACKORIGIN-1+STACKWIDTH,x
  4803 3400 85 87			sta @REAL_DIV.A+1
  4804 3402 B5 B5			lda :STACKORIGIN-1+STACKWIDTH*2,x
  4805 3404 85 88			sta @REAL_DIV.A+2
  4806 3406 B5 C5			lda :STACKORIGIN-1+STACKWIDTH*3,x
  4807 3408 85 89			sta @REAL_DIV.A+3
  4808 340A 20 F2 14			jsr @REAL_DIV
  4809 340D CA				dex
  4810 340E 20 9A 15			jsr @REAL_ROUND
  4811 3411 A5 86			lda :eax
  4812 3413 8D 89 AB			sta W
  4813 3416 A5 87			lda :eax+1
  4814 3418 8D 8A AB			sta W+1
  4815 341B CA				dex
  4816
  4817 				; optimize OK (vservice.pas), line = 890
  4818
  4819 341C AC 83 AB 84 84 AC + 	mwy BALL :bp2
  4820 3426 A0 00			ldy #$00
  4821 3428 B1 84			lda (:bp2),y
  4822 342A 10 0E			jpl l_0A8A
  4823 342C AD 89 AB			lda W
  4824 342F 18 69 B4			add #$B4
  4825 3432 8D 89 AB			sta W
  4826 3435 90 03			scc
  4827 3437 EE 8A AB			inc W+1
  4828 343A			l_0A8A
  4829
  4830 				; optimize OK (vservice.pas), line = 891
  4831
  4832 343A AD 89 AB			lda W
  4833 343D 18 69 68			add #$68
  4834 3440 8D 89 AB			sta W
  4835 3443 AD 8A AB			lda W+1
  4836 3446 69 01			adc #$01
  4837 3448 8D 8A AB			sta W+1
  4838
  4839 				; optimize OK (vservice.pas), line = 892
  4840
  4841 344B A9 68			lda #$68
  4842 344D 85 8E			sta @SMALLINT.MOD.B
  4843 344F A9 01			lda #$01
  4844 3451 85 8F			sta @SMALLINT.MOD.B+1
  4845 3453 AD 89 AB			lda W
  4846 3456 85 86			sta @SMALLINT.MOD.A
  4847 3458 AD 8A AB			lda W+1
  4848 345B 85 87			sta @SMALLINT.MOD.A+1
  4849 345D 20 3F 12			jsr @SMALLINT.MOD
  4850 3460 A5 92			lda @SMALLINT.MOD.RESULT
  4851 3462 8D 89 AB			sta W
  4852 3465 A5 93			lda @SMALLINT.MOD.RESULT+1
  4853 3467 8D 8A AB			sta W+1
  4854 346A			l_0A63
  4855
  4856 				; optimize OK (vservice.pas), line = 895
  4857
  4858 346A AD 89 AB			lda W
  4859 346D 8D 87 AB			sta RESULT
  4860 3470 AD 8A AB			lda W+1
  4861 3473 8D 88 AB			sta RESULT+1
  4862 3476			@exit
  4863
  4864 				; ------------------------------------------------------------
  4865
  4866 = AB83			BALL	= DATAORIGIN+$0F66
  4867 = 9C1D			BALL.X	= DATAORIGIN+$0000
  4868 = 9C1F			BALL.Y	= DATAORIGIN+$0002
  4869 = 9C21			BALL.FINEX	= DATAORIGIN+$0004
  4870 = 9C23			BALL.FINEY	= DATAORIGIN+$0006
  4871 = 9C25			BALL.OLDX	= DATAORIGIN+$0008
  4872 = 9C27			BALL.OLDY	= DATAORIGIN+$000A
  4873 = 9C29			BALL.SPEED	= DATAORIGIN+$000C
  4874 = 9C2B			BALL.FINESPEED	= DATAORIGIN+$000E
  4875 = 9C2D			BALL.SPEEDX	= DATAORIGIN+$0010
  4876 = 9C2F			BALL.SPEEDY	= DATAORIGIN+$0012
  4877 = 9C31			BALL.SBD	= DATAORIGIN+$0014
  4878 = 9C33			BALL.BRWHIT	= DATAORIGIN+$0016
  4879 = 9C34			BALL.INPLAY	= DATAORIGIN+$0017
  4880 = 9C35			BALL.LAUNCH	= DATAORIGIN+$0018
  4881 = 9C36			BALL.ONVAUS	= DATAORIGIN+$0019
  4882 = 9C37			BALL.STM	= DATAORIGIN+$001A
  4883 = AB87			RESULT	= DATAORIGIN+$0F6A
  4884 = AB89			W	= DATAORIGIN+$0F6C
  4885
  4886 = AB83			@VarData	= BALL
  4887 = 0004			@VarDataSize	= 4
  4888
  4889 3476 60				rts						; ret
  4890 				.endl
  4891
  4892 3477			.local	START_BALL					; PROCEDURE
  4893
  4894 				; optimize OK (vservice.pas), line = 903
  4895
  4896 3477 AC 8B AB 84 84 AC + 	mwy BALL :bp2
  4897 3481 A0 19			ldy #BALL.ONVAUS-DATAORIGIN
  4898 3483 A0 00			ldy #BALL.X-DATAORIGIN
  4899 3485 AD 5E 9D			lda VAUS.X
  4900 3488 18 71 84			add (:bp2),y
  4901 348B 91 84			sta (:bp2),y
  4902 348D C8				iny
  4903 348E A9 00			lda #$00
  4904 3490 69 00			adc #$00
  4905 3492 91 84			sta (:bp2),y
  4906
  4907 				; optimize OK (vservice.pas), line = 909
  4908
  4909 3494 A0 02			ldy #BALL.Y-DATAORIGIN
  4910 3496 AD 5F 9D			lda VAUS.Y
  4911 3499 38 E9 03			sub #$03
  4912 349C 91 84			sta (:bp2),y
  4913 349E C8				iny
  4914 349F A9 00			lda #$00
  4915 34A1 E9 00			sbc #$00
  4916 34A3 91 84			sta (:bp2),y
  4917
  4918 				; optimize OK (vservice.pas), line = 914
  4919
  4920 34A5 A0 04			ldy #BALL.FINEX-DATAORIGIN
  4921 34A7 A9 00			lda #$00
  4922 34A9 91 84			sta (:bp2),y
  4923 34AB C8				iny
  4924 34AC 91 84			sta (:bp2),y
  4925
  4926 				; optimize OK (vservice.pas), line = 915
  4927
  4928 34AE A0 06			ldy #BALL.FINEY-DATAORIGIN
  4929 34B0 91 84			sta (:bp2),y
  4930 34B2 C8				iny
  4931 34B3 91 84			sta (:bp2),y
  4932
  4933 				; optimize OK (vservice.pas), line = 917
  4934
  4935 34B5 A0 17			ldy #BALL.INPLAY-DATAORIGIN
  4936 34B7 A9 01			lda #$01
  4937 34B9 91 84			sta (:bp2),y
  4938
  4939 				; optimize OK (vservice.pas), line = 919
  4940
  4941 34BB A0 14			ldy #BALL.SBD-DATAORIGIN
  4942 34BD A9 00			lda #$00
  4943 34BF 91 84			sta (:bp2),y
  4944 34C1 C8				iny
  4945 34C2 91 84			sta (:bp2),y
  4946
  4947 				; optimize OK (vservice.pas), line = 920
  4948
  4949 34C4 A0 16			ldy #BALL.BRWHIT-DATAORIGIN
  4950 34C6 91 84			sta (:bp2),y
  4951
  4952 				; ------------------------------------------------------------
  4953
  4954 = AB8B			BALL	= DATAORIGIN+$0F6E
  4955 = 9C1D			BALL.X	= DATAORIGIN+$0000
  4956 = 9C1F			BALL.Y	= DATAORIGIN+$0002
  4957 = 9C21			BALL.FINEX	= DATAORIGIN+$0004
  4958 = 9C23			BALL.FINEY	= DATAORIGIN+$0006
  4959 = 9C25			BALL.OLDX	= DATAORIGIN+$0008
  4960 = 9C27			BALL.OLDY	= DATAORIGIN+$000A
  4961 = 9C29			BALL.SPEED	= DATAORIGIN+$000C
  4962 = 9C2B			BALL.FINESPEED	= DATAORIGIN+$000E
  4963 = 9C2D			BALL.SPEEDX	= DATAORIGIN+$0010
  4964 = 9C2F			BALL.SPEEDY	= DATAORIGIN+$0012
  4965 = 9C31			BALL.SBD	= DATAORIGIN+$0014
  4966 = 9C33			BALL.BRWHIT	= DATAORIGIN+$0016
  4967 = 9C34			BALL.INPLAY	= DATAORIGIN+$0017
  4968 = 9C35			BALL.LAUNCH	= DATAORIGIN+$0018
  4969 = 9C36			BALL.ONVAUS	= DATAORIGIN+$0019
  4970 = 9C37			BALL.STM	= DATAORIGIN+$001A
  4971
  4972 = AB8B			@VarData	= BALL
  4973 = 0002			@VarDataSize	= 2
  4974
  4975 34C8			@exit
  4976 					.ifdef @new
  4977 					lda <@VarData
  4978 					sta :ztmp
  4979 					lda >@VarData
  4980 					ldy #@VarDataSize-1
  4981 					jmp @FreeMem
  4982 					els
  4983 34C8 60				rts						; ret
  4984 					eif
  4985 				.endl
  4986
  4987 34C9			.local	BALL_SPEED					; FUNCTION
  4988
  4989 				; ------------------------------------------------------------
  4990
  4991 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
  4992 				; as Pointer
  4993 34C9 B5 96			lda :STACKORIGIN,x
  4994 34CB 85 84			sta :bp2
  4995 34CD B5 A6			lda :STACKORIGIN+STACKWIDTH,x
  4996 34CF 85 85			sta :bp2+1
  4997 34D1 A0 1A			ldy #$1A
  4998 34D3 B1 84 99 8F AB 88 + 	mva:rpl (:bp2),y adr.BALL,y-
  4999 34DB CA				dex
  5000 34DC			@main
  5001
  5002 				; optimize OK (vservice.pas), line = 928
  5003
  5004 34DC AD 9F AB			lda BALL.SPEEDX
  5005 34DF 85 8E			sta :ecx
  5006 34E1 85 92			sta :ztmp8
  5007 34E3 AD A0 AB			lda BALL.SPEEDX+1
  5008 34E6 85 8F			sta :ecx+1
  5009 34E8 85 93			sta :ztmp9
  5010 34EA AD 9F AB			lda BALL.SPEEDX
  5011 34ED 85 86			sta :eax
  5012 34EF 85 94			sta :ztmp10
  5013 34F1 AD A0 AB			lda BALL.SPEEDX+1
  5014 34F4 85 87			sta :eax+1
  5015 34F6 85 95			sta :ztmp11
  5016 					.ifdef fmulinit
  5017 					fmulu_16
  5018 					els
  5019 34F8 20 FA 12			imulCX
  5020 					eif
  5021 34FB A5 95			lda :ztmp11
  5022 34FD 10 0D			bpl @+
  5023 34FF A5 88			lda :eax+2
  5024 3501 38 E5 92			sub :ztmp8
  5025 3504 85 88			sta :eax+2
  5026 3506 A5 89			lda :eax+3
  5027 3508 E5 93			sbc :ztmp9
  5028 350A 85 89			sta :eax+3
  5029 				@
  5030 350C A5 93			lda :ztmp9
  5031 350E 10 0D			bpl @+
  5032 3510 A5 88			lda :eax+2
  5033 3512 38 E5 94			sub :ztmp10
  5034 3515 85 88			sta :eax+2
  5035 3517 A5 89			lda :eax+3
  5036 3519 E5 95			sbc :ztmp11
  5037 351B 85 89			sta :eax+3
  5038 				@
  5039 351D A5 86			lda :eax
  5040 351F 85 9F			sta :STACKORIGIN+9
  5041 3521 A5 87			lda :eax+1
  5042 3523 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  5043 3525 A5 88			lda :eax+2
  5044 3527 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
  5045 3529 A5 89			lda :eax+3
  5046 352B 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
  5047 352D AD A1 AB			lda BALL.SPEEDY
  5048 3530 85 8E			sta :ecx
  5049 3532 85 92			sta :ztmp8
  5050 3534 AD A2 AB			lda BALL.SPEEDY+1
  5051 3537 85 8F			sta :ecx+1
  5052 3539 85 93			sta :ztmp9
  5053 353B AD A1 AB			lda BALL.SPEEDY
  5054 353E 85 86			sta :eax
  5055 3540 85 94			sta :ztmp10
  5056 3542 AD A2 AB			lda BALL.SPEEDY+1
  5057 3545 85 87			sta :eax+1
  5058 3547 85 95			sta :ztmp11
  5059 					.ifdef fmulinit
  5060 					fmulu_16
  5061 					els
  5062 3549 20 FA 12			imulCX
  5063 					eif
  5064 354C A5 95			lda :ztmp11
  5065 354E 10 0D			bpl @+
  5066 3550 A5 88			lda :eax+2
  5067 3552 38 E5 92			sub :ztmp8
  5068 3555 85 88			sta :eax+2
  5069 3557 A5 89			lda :eax+3
  5070 3559 E5 93			sbc :ztmp9
  5071 355B 85 89			sta :eax+3
  5072 				@
  5073 355D A5 93			lda :ztmp9
  5074 355F 10 0D			bpl @+
  5075 3561 A5 88			lda :eax+2
  5076 3563 38 E5 94			sub :ztmp10
  5077 3566 85 88			sta :eax+2
  5078 3568 A5 89			lda :eax+3
  5079 356A E5 95			sbc :ztmp11
  5080 356C 85 89			sta :eax+3
  5081 				@
  5082 356E A5 9F			lda :STACKORIGIN+9
  5083 3570 18 65 86			add :eax
  5084 3573 8D 28 9C			sta SYSTEM.SQRT.@010185000.X
  5085 3576 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  5086 3578 65 87			adc :eax+1
  5087 357A 8D 29 9C			sta SYSTEM.SQRT.@010185000.X+1
  5088 357D A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
  5089 357F 65 88			adc :eax+2
  5090 3581 8D 2A 9C			sta SYSTEM.SQRT.@010185000.X+2
  5091 3584 A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
  5092 3586 65 89			adc :eax+3
  5093 3588 8D 2B 9C			sta SYSTEM.SQRT.@010185000.X+3
  5094 358B 20 9B 1B			jsr SYSTEM.SQRT.@010185000
  5095 358E E8				inx
  5096 358F AD 2C 9C			lda SYSTEM.SQRT.@010185000.RESULT
  5097 3592 85 8A			sta :FP2MAN0
  5098 3594 AD 2D 9C			lda SYSTEM.SQRT.@010185000.RESULT+1
  5099 3597 85 8B			sta :FP2MAN1
  5100 3599 AD 2E 9C			lda SYSTEM.SQRT.@010185000.RESULT+2
  5101 359C 85 8C			sta :FP2MAN2
  5102 359E AD 2F 9C			lda SYSTEM.SQRT.@010185000.RESULT+3
  5103 35A1 85 8D			sta :FP2MAN3
  5104 35A3 20 DC 15			jsr @FROUND
  5105 35A6 A5 8E			lda :FPMAN0
  5106 35A8 8D AA AB			sta RESULT
  5107 35AB A5 8F			lda :FPMAN1
  5108 35AD 8D AB AB			sta RESULT+1
  5109 35B0 CA				dex
  5110 35B1			@exit
  5111
  5112 				; ------------------------------------------------------------
  5113
  5114 = AB8F			adr.BALL	= DATAORIGIN+$0F72	; [27] RECORD
  5115 35B1			.var BALL	= adr.BALL .word
  5116 = AB8F			BALL.X	= DATAORIGIN+$0F72
  5117 = AB91			BALL.Y	= DATAORIGIN+$0F74
  5118 = AB93			BALL.FINEX	= DATAORIGIN+$0F76
  5119 = AB95			BALL.FINEY	= DATAORIGIN+$0F78
  5120 = AB97			BALL.OLDX	= DATAORIGIN+$0F7A
  5121 = AB99			BALL.OLDY	= DATAORIGIN+$0F7C
  5122 = AB9B			BALL.SPEED	= DATAORIGIN+$0F7E
  5123 = AB9D			BALL.FINESPEED	= DATAORIGIN+$0F80
  5124 = AB9F			BALL.SPEEDX	= DATAORIGIN+$0F82
  5125 = ABA1			BALL.SPEEDY	= DATAORIGIN+$0F84
  5126 = ABA3			BALL.SBD	= DATAORIGIN+$0F86
  5127 = ABA5			BALL.BRWHIT	= DATAORIGIN+$0F88
  5128 = ABA6			BALL.INPLAY	= DATAORIGIN+$0F89
  5129 = ABA7			BALL.LAUNCH	= DATAORIGIN+$0F8A
  5130 = ABA8			BALL.ONVAUS	= DATAORIGIN+$0F8B
  5131 = ABA9			BALL.STM	= DATAORIGIN+$0F8C
  5132 = ABAA			RESULT	= DATAORIGIN+$0F8D
  5133
  5134 = AB8F			@VarData	= BALL.X
  5135 = 001B			@VarDataSize	= 27
  5136
  5137 35B1 60				rts						; ret
  5138 = 35B2 8F AB		BALL
  5138 				.endl
  5139
  5140 35B4			.local	MOVE_BALL					; PROCEDURE
  5141
  5142 				; optimize OK (vservice.pas), line = 942
  5143
  5144 35B4 AC AC AB 84 84 AC + 	mwy BALL :bp2
  5145 35BE A0 00			ldy #BALL.X-DATAORIGIN
  5146 35C0 B1 84			lda (:bp2),y
  5147 35C2 C8				iny
  5148 35C3 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  5149 35C5 A9 00			lda #$00
  5150 35C7 A0 04			ldy #BALL.FINEX-DATAORIGIN
  5151 35C9 18 71 84			add (:bp2),y
  5152 35CC 85 9F			sta :STACKORIGIN+9
  5153 35CE C8				iny
  5154 35CF A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  5155 35D1 71 84			adc (:bp2),y
  5156 35D3 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  5157 35D5 A0 10			ldy #BALL.SPEEDX-DATAORIGIN
  5158 35D7 A5 9F			lda :STACKORIGIN+9
  5159 35D9 18 71 84			add (:bp2),y
  5160 35DC 8D B0 AB			sta X
  5161 35DF C8				iny
  5162 35E0 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  5163 35E2 71 84			adc (:bp2),y
  5164 35E4 8D B1 AB			sta X+1
  5165
  5166 				; optimize OK (vservice.pas), line = 943
  5167
  5168 35E7 A0 02			ldy #BALL.Y-DATAORIGIN
  5169 35E9 B1 84			lda (:bp2),y
  5170 35EB C8				iny
  5171 35EC 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  5172 35EE A9 00			lda #$00
  5173 35F0 A0 06			ldy #BALL.FINEY-DATAORIGIN
  5174 35F2 18 71 84			add (:bp2),y
  5175 35F5 85 9F			sta :STACKORIGIN+9
  5176 35F7 C8				iny
  5177 35F8 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  5178 35FA 71 84			adc (:bp2),y
  5179 35FC 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  5180 35FE A0 12			ldy #BALL.SPEEDY-DATAORIGIN
  5181 3600 A5 9F			lda :STACKORIGIN+9
  5182 3602 18 71 84			add (:bp2),y
  5183 3605 8D B2 AB			sta Y
  5184 3608 C8				iny
  5185 3609 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  5186 360B 71 84			adc (:bp2),y
  5187 360D 8D B3 AB			sta Y+1
  5188
  5189 				; optimize OK (vservice.pas), line = 945
  5190
  5191 3610 A0 00			ldy #BALL.X-DATAORIGIN
  5192 3612 AD B1 AB			lda X+1
  5193 3615 91 84			sta (:bp2),y
  5194 3617 C8				iny
  5195 3618 A9 00			lda #$00
  5196 361A 91 84			sta (:bp2),y
  5197
  5198 				; optimize OK (vservice.pas), line = 946
  5199
  5200 361C A0 02			ldy #BALL.Y-DATAORIGIN
  5201 361E AD B3 AB			lda Y+1
  5202 3621 91 84			sta (:bp2),y
  5203 3623 C8				iny
  5204 3624 A9 00			lda #$00
  5205 3626 91 84			sta (:bp2),y
  5206
  5207 				; optimize OK (vservice.pas), line = 948
  5208
  5209 3628 A0 04			ldy #BALL.FINEX-DATAORIGIN
  5210 362A AD B0 AB			lda X
  5211 362D 91 84			sta (:bp2),y
  5212 362F C8				iny
  5213 3630 A9 00			lda #$00
  5214 3632 91 84			sta (:bp2),y
  5215
  5216 				; optimize OK (vservice.pas), line = 949
  5217
  5218 3634 A0 06			ldy #BALL.FINEY-DATAORIGIN
  5219 3636 AD B2 AB			lda Y
  5220 3639 91 84			sta (:bp2),y
  5221 363B C8				iny
  5222 363C A9 00			lda #$00
  5223 363E 91 84			sta (:bp2),y
  5224
  5225 				; optimize OK (vservice.pas), line = 954
  5226
  5227 3640 A0 00			ldy #BALL.X-DATAORIGIN
  5228 3642 B1 84			lda (:bp2),y
  5229 3644 C8				iny
  5230 3645 C9 D9			cmp #$D9
  5231 3647 B1 84			lda (:bp2),y
  5232 3649 E9 00			sbc #$00
  5233 364B 50 02			svc
  5234 364D 49 80			eor #$80
  5235 364F 30 67			jmi l_0B46
  5236
  5237 				; optimize OK (vservice.pas), line = 956
  5238
  5239 3651 A0 10			ldy #BALL.SPEEDX-DATAORIGIN
  5240 3653 A9 00			lda #$00
  5241 3655 38 F1 84			sub (:bp2),y
  5242 3658 85 9F			sta :STACKORIGIN+9
  5243 365A C8				iny
  5244 365B A9 00			lda #$00
  5245 365D F1 84			sbc (:bp2),y
  5246 365F 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  5247 3661 A0 10			ldy #BALL.SPEEDX-DATAORIGIN
  5248 3663 A5 9F			lda :STACKORIGIN+9
  5249 3665 91 84			sta (:bp2),y
  5250 3667 C8				iny
  5251 3668 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  5252 366A 91 84			sta (:bp2),y
  5253
  5254 				; optimize OK (vservice.pas), line = 957
  5255
  5256 366C A0 00			ldy #BALL.X-DATAORIGIN
  5257 366E A9 B0			lda #$B0
  5258 3670 38 F1 84			sub (:bp2),y
  5259 3673 85 9F			sta :STACKORIGIN+9
  5260 3675 C8				iny
  5261 3676 A9 01			lda #$01
  5262 3678 F1 84			sbc (:bp2),y
  5263 367A 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  5264 367C A0 00			ldy #BALL.X-DATAORIGIN
  5265 367E A5 9F			lda :STACKORIGIN+9
  5266 3680 91 84			sta (:bp2),y
  5267 3682 C8				iny
  5268 3683 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  5269 3685 91 84			sta (:bp2),y
  5270
  5271 				; optimize OK (vservice.pas), line = 958
  5272
  5273 3687 A0 04			ldy #BALL.FINEX-DATAORIGIN
  5274 3689 A9 FF			lda #$FF
  5275 368B 51 84			eor (:bp2),y
  5276 368D 85 9F			sta :STACKORIGIN+9
  5277 368F C8				iny
  5278 3690 A9 00			lda #$00
  5279 3692 F1 84			sbc (:bp2),y
  5280 3694 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  5281 3696 A0 04			ldy #BALL.FINEX-DATAORIGIN
  5282 3698 A5 9F			lda :STACKORIGIN+9
  5283 369A 91 84			sta (:bp2),y
  5284 369C C8				iny
  5285 369D A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  5286 369F 91 84			sta (:bp2),y
  5287
  5288 				; optimize OK (vservice.pas), line = 959
  5289
  5290 36A1 A9 F0			lda #$F0
  5291 36A3 8D CC 9C			sta BALL_BLOCK_SOUND.A
  5292 36A6 A9 00			lda #$00
  5293 36A8 8D CD 9C			sta BALL_BLOCK_SOUND.A+1
  5294 36AB A9 05			lda #$05
  5295 36AD 8D CE 9C			sta BALL_BLOCK_SOUND.B
  5296 36B0 A9 00			lda #$00
  5297 36B2 8D CF 9C			sta BALL_BLOCK_SOUND.B+1
  5298 36B5 20 9A 24			jsr BALL_BLOCK_SOUND
  5299 36B8			l_0B46
  5300
  5301 				; optimize OK (vservice.pas), line = 964
  5302
  5303 36B8 AC AC AB 84 84 AC + 	mwy BALL :bp2
  5304 36C2 A0 00			ldy #BALL.X-DATAORIGIN
  5305 36C4 B1 84			lda (:bp2),y
  5306 36C6 C8				iny
  5307 36C7 C9 0A			cmp #$0A
  5308 36C9 B1 84			lda (:bp2),y
  5309 36CB E9 00			sbc #$00
  5310 36CD 50 02			svc
  5311 36CF 49 80			eor #$80
  5312 36D1 10 67			jpl l_0B7B
  5313
  5314 				; optimize OK (vservice.pas), line = 966
  5315
  5316 36D3 A0 10			ldy #BALL.SPEEDX-DATAORIGIN
  5317 36D5 A9 00			lda #$00
  5318 36D7 38 F1 84			sub (:bp2),y
  5319 36DA 85 9F			sta :STACKORIGIN+9
  5320 36DC C8				iny
  5321 36DD A9 00			lda #$00
  5322 36DF F1 84			sbc (:bp2),y
  5323 36E1 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  5324 36E3 A0 10			ldy #BALL.SPEEDX-DATAORIGIN
  5325 36E5 A5 9F			lda :STACKORIGIN+9
  5326 36E7 91 84			sta (:bp2),y
  5327 36E9 C8				iny
  5328 36EA A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  5329 36EC 91 84			sta (:bp2),y
  5330
  5331 				; optimize OK (vservice.pas), line = 967
  5332
  5333 36EE A0 00			ldy #BALL.X-DATAORIGIN
  5334 36F0 A9 14			lda #$14
  5335 36F2 38 F1 84			sub (:bp2),y
  5336 36F5 85 9F			sta :STACKORIGIN+9
  5337 36F7 C8				iny
  5338 36F8 A9 00			lda #$00
  5339 36FA F1 84			sbc (:bp2),y
  5340 36FC 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  5341 36FE A0 00			ldy #BALL.X-DATAORIGIN
  5342 3700 A5 9F			lda :STACKORIGIN+9
  5343 3702 91 84			sta (:bp2),y
  5344 3704 C8				iny
  5345 3705 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  5346 3707 91 84			sta (:bp2),y
  5347
  5348 				; optimize OK (vservice.pas), line = 968
  5349
  5350 3709 A0 04			ldy #BALL.FINEX-DATAORIGIN
  5351 370B A9 FF			lda #$FF
  5352 370D 51 84			eor (:bp2),y
  5353 370F 85 9F			sta :STACKORIGIN+9
  5354 3711 C8				iny
  5355 3712 A9 00			lda #$00
  5356 3714 F1 84			sbc (:bp2),y
  5357 3716 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  5358 3718 A0 04			ldy #BALL.FINEX-DATAORIGIN
  5359 371A A5 9F			lda :STACKORIGIN+9
  5360 371C 91 84			sta (:bp2),y
  5361 371E C8				iny
  5362 371F A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  5363 3721 91 84			sta (:bp2),y
  5364
  5365 				; optimize OK (vservice.pas), line = 969
  5366
  5367 3723 A9 F0			lda #$F0
  5368 3725 8D CC 9C			sta BALL_BLOCK_SOUND.A
  5369 3728 A9 00			lda #$00
  5370 372A 8D CD 9C			sta BALL_BLOCK_SOUND.A+1
  5371 372D A9 05			lda #$05
  5372 372F 8D CE 9C			sta BALL_BLOCK_SOUND.B
  5373 3732 A9 00			lda #$00
  5374 3734 8D CF 9C			sta BALL_BLOCK_SOUND.B+1
  5375 3737 20 9A 24			jsr BALL_BLOCK_SOUND
  5376 373A			l_0B7B
  5377
  5378 				; optimize OK (vservice.pas), line = 974
  5379
  5380 373A AC AC AB 84 84 AC + 	mwy BALL :bp2
  5381 3744 A0 02			ldy #BALL.Y-DATAORIGIN
  5382 3746 B1 84			lda (:bp2),y
  5383 3748 C8				iny
  5384 3749 C9 0C			cmp #$0C
  5385 374B B1 84			lda (:bp2),y
  5386 374D E9 00			sbc #$00
  5387 374F 50 02			svc
  5388 3751 49 80			eor #$80
  5389 3753 10 67			jpl l_0BB0
  5390
  5391 				; optimize OK (vservice.pas), line = 976
  5392
  5393 3755 A0 12			ldy #BALL.SPEEDY-DATAORIGIN
  5394 3757 A9 00			lda #$00
  5395 3759 38 F1 84			sub (:bp2),y
  5396 375C 85 9F			sta :STACKORIGIN+9
  5397 375E C8				iny
  5398 375F A9 00			lda #$00
  5399 3761 F1 84			sbc (:bp2),y
  5400 3763 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  5401 3765 A0 12			ldy #BALL.SPEEDY-DATAORIGIN
  5402 3767 A5 9F			lda :STACKORIGIN+9
  5403 3769 91 84			sta (:bp2),y
  5404 376B C8				iny
  5405 376C A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  5406 376E 91 84			sta (:bp2),y
  5407
  5408 				; optimize OK (vservice.pas), line = 977
  5409
  5410 3770 A0 02			ldy #BALL.Y-DATAORIGIN
  5411 3772 A9 18			lda #$18
  5412 3774 38 F1 84			sub (:bp2),y
  5413 3777 85 9F			sta :STACKORIGIN+9
  5414 3779 C8				iny
  5415 377A A9 00			lda #$00
  5416 377C F1 84			sbc (:bp2),y
  5417 377E 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  5418 3780 A0 02			ldy #BALL.Y-DATAORIGIN
  5419 3782 A5 9F			lda :STACKORIGIN+9
  5420 3784 91 84			sta (:bp2),y
  5421 3786 C8				iny
  5422 3787 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  5423 3789 91 84			sta (:bp2),y
  5424
  5425 				; optimize OK (vservice.pas), line = 978
  5426
  5427 378B A0 06			ldy #BALL.FINEY-DATAORIGIN
  5428 378D A9 FF			lda #$FF
  5429 378F 51 84			eor (:bp2),y
  5430 3791 85 9F			sta :STACKORIGIN+9
  5431 3793 C8				iny
  5432 3794 A9 00			lda #$00
  5433 3796 F1 84			sbc (:bp2),y
  5434 3798 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  5435 379A A0 06			ldy #BALL.FINEY-DATAORIGIN
  5436 379C A5 9F			lda :STACKORIGIN+9
  5437 379E 91 84			sta (:bp2),y
  5438 37A0 C8				iny
  5439 37A1 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  5440 37A3 91 84			sta (:bp2),y
  5441
  5442 				; optimize OK (vservice.pas), line = 979
  5443
  5444 37A5 A9 F0			lda #$F0
  5445 37A7 8D CC 9C			sta BALL_BLOCK_SOUND.A
  5446 37AA A9 00			lda #$00
  5447 37AC 8D CD 9C			sta BALL_BLOCK_SOUND.A+1
  5448 37AF A9 05			lda #$05
  5449 37B1 8D CE 9C			sta BALL_BLOCK_SOUND.B
  5450 37B4 A9 00			lda #$00
  5451 37B6 8D CF 9C			sta BALL_BLOCK_SOUND.B+1
  5452 37B9 20 9A 24			jsr BALL_BLOCK_SOUND
  5453 37BC			l_0BB0
  5454
  5455 				; optimize OK (vservice.pas), line = 987
  5456
  5457 37BC AC AC AB 84 84 AC + 	mwy BALL :bp2
  5458 37C6 A0 02			ldy #BALL.Y-DATAORIGIN
  5459 37C8 B1 84			lda (:bp2),y
  5460 37CA 18 69 03			add #$03
  5461 37CD 85 9F			sta :STACKORIGIN+9
  5462 37CF C8				iny
  5463 37D0 B1 84			lda (:bp2),y
  5464 37D2 69 00			adc #$00
  5465 37D4 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  5466 37D6 A0 01			ldy #1
  5467 37D8 A5 9F			lda :STACKORIGIN+9
  5468 37DA C9 B9			cmp #$B9
  5469 37DC A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  5470 37DE E9 00			sbc #$00
  5471 37E0 50 02			svc
  5472 37E2 49 80			eor #$80
  5473 37E4 10 01			bpl @+
  5474 37E6 88				dey
  5475 				@
  5476 37E7 84 9F			sty :STACKORIGIN+9
  5477 37E9 A0 12			ldy #BALL.SPEEDY-DATAORIGIN
  5478 37EB B1 84			lda (:bp2),y
  5479 37ED 85 A0			sta :STACKORIGIN+10
  5480 37EF C8				iny
  5481 37F0 B1 84			lda (:bp2),y
  5482 37F2 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  5483 37F4 A0 01			ldy #1
  5484 37F6 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
  5485 37F8 30 04			bmi @+
  5486 37FA 05 A0			ora :STACKORIGIN+10
  5487 37FC D0 01			sne
  5488 				@
  5489 37FE 88				dey
  5490 				@
  5491 37FF 98				tya
  5492 3800 25 9F			and :STACKORIGIN+9
  5493 3802 85 9F			sta :STACKORIGIN+9
  5494 3804 A0 0A			ldy #BALL.OLDY-DATAORIGIN
  5495 3806 B1 84			lda (:bp2),y
  5496 3808 85 A0			sta :STACKORIGIN+10
  5497 380A C8				iny
  5498 380B B1 84			lda (:bp2),y
  5499 380D 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  5500 380F A0 01			ldy #1
  5501 3811 A5 A0			lda :STACKORIGIN+10
  5502 3813 C9 B9			cmp #$B9
  5503 3815 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
  5504 3817 E9 00			sbc #$00
  5505 3819 50 02			svc
  5506 381B 49 80			eor #$80
  5507 381D 30 01			bmi @+
  5508 381F 88				dey
  5509 				@
  5510 3820 98				tya
  5511 3821 25 9F			and :STACKORIGIN+9
  5512 3823 D0 03 4C 56 3B		jeq l_0BFF
  5513
  5514 				; optimize OK (vservice.pas), line = 991
  5515
  5516 3828 A0 00			ldy #BALL.X-DATAORIGIN
  5517 382A B1 84			lda (:bp2),y
  5518 382C 85 9F			sta :STACKORIGIN+9
  5519 382E C8				iny
  5520 382F AD 5E 9D			lda VAUS.X
  5521 3832 38 E9 03			sub #$03
  5522 3835 85 A0			sta :STACKORIGIN+10
  5523 3837 A9 00			lda #$00
  5524 3839 E9 00			sbc #$00
  5525 383B 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  5526 383D A5 A0			lda :STACKORIGIN+10
  5527 383F C5 9F			cmp :STACKORIGIN+9
  5528 3841 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
  5529 3843 F1 84			sbc (:bp2),y
  5530 3845 50 02			svc
  5531 3847 49 80			eor #$80
  5532 3849 30 03 4C 56 3B		jpl l_0C2E
  5533 384E A0 00			ldy #BALL.X-DATAORIGIN
  5534 3850 B1 84			lda (:bp2),y
  5535 3852 85 A0			sta :STACKORIGIN+10
  5536 3854 C8				iny
  5537 3855 B1 84			lda (:bp2),y
  5538 3857 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  5539 3859 AD 5E 9D			lda VAUS.X
  5540 385C 18 6D 66 9D			add VAUS.WIDTH
  5541 3860 85 A1			sta :STACKORIGIN+11
  5542 3862 A9 00			lda #$00
  5543 3864 69 00			adc #$00
  5544 3866 85 B1			sta :STACKORIGIN+STACKWIDTH+11
  5545 3868 A5 A1			lda :STACKORIGIN+11
  5546 386A 18 69 03			add #$03
  5547 386D 85 A1			sta :STACKORIGIN+11
  5548 386F A5 B1			lda :STACKORIGIN+STACKWIDTH+11
  5549 3871 69 00			adc #$00
  5550 3873 85 B1			sta :STACKORIGIN+STACKWIDTH+11
  5551 3875 A9 00			lda #$00
  5552 3877 69 00			adc #$00
  5553 3879 85 C1			sta :STACKORIGIN+STACKWIDTH*2+11
  5554 387B A9 00			lda #$00
  5555 387D 69 00			adc #$00
  5556 387F 85 D1			sta :STACKORIGIN+STACKWIDTH*3+11
  5557 3881 A0 00			ldy #$00
  5558 3883 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
  5559 3885 10 01			spl
  5560 3887 88				dey
  5561 3888 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  5562 388A 84 C0			sty :STACKORIGIN+STACKWIDTH*2+10
  5563 388C 84 D0			sty :STACKORIGIN+STACKWIDTH*3+10
  5564 388E A5 D0			lda :STACKORIGIN+STACKWIDTH*3+10
  5565 3890 C5 D1			cmp :STACKORIGIN+STACKWIDTH*3+11
  5566 3892 D0 10			bne @+
  5567 3894 A5 C0			lda :STACKORIGIN+STACKWIDTH*2+10
  5568 3896 C5 C1			cmp :STACKORIGIN+STACKWIDTH*2+11
  5569 3898 D0 0A			bne @+
  5570 389A A5 B0			lda :STACKORIGIN+STACKWIDTH+10
  5571 389C C5 B1			cmp :STACKORIGIN+STACKWIDTH+11
  5572 389E D0 04			bne @+
  5573 38A0 A5 A0			lda :STACKORIGIN+10
  5574 38A2 C5 A1			cmp :STACKORIGIN+11
  5575 				@
  5576 38A4 90 03 4C 56 3B		jcs l_0C2E
  5577 				@
  5578
  5579 				; optimize OK (vservice.pas), line = 994
  5580
  5581 38A9 A0 12			ldy #BALL.SPEEDY-DATAORIGIN
  5582 38AB A9 00			lda #$00
  5583 38AD 38 F1 84			sub (:bp2),y
  5584 38B0 85 9F			sta :STACKORIGIN+9
  5585 38B2 C8				iny
  5586 38B3 A9 00			lda #$00
  5587 38B5 F1 84			sbc (:bp2),y
  5588 38B7 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  5589 38B9 A0 12			ldy #BALL.SPEEDY-DATAORIGIN
  5590 38BB A5 9F			lda :STACKORIGIN+9
  5591 38BD 91 84			sta (:bp2),y
  5592 38BF C8				iny
  5593 38C0 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  5594 38C2 91 84			sta (:bp2),y
  5595
  5596 				; optimize OK (vservice.pas), line = 996
  5597
  5598 38C4 AD 6A 9D			lda VAUS.LETTER
  5599 38C7 C9 06			cmp #$06
  5600 38C9 D0 1D			jne l_0C52
  5601 38CB A0 18			ldy #BALL.LAUNCH-DATAORIGIN
  5602 38CD B1 84			lda (:bp2),y
  5603 38CF D0 17			jne l_0C52
  5604
  5605 				; optimize OK (vservice.pas), line = 998
  5606
  5607 38D1 A0 1A			ldy #BALL.STM-DATAORIGIN
  5608 38D3 91 84			sta (:bp2),y
  5609
  5610 				; optimize OK (vservice.pas), line = 999
  5611
  5612 38D5 A0 18			ldy #BALL.LAUNCH-DATAORIGIN
  5613 38D7 A9 01			lda #$01
  5614 38D9 91 84			sta (:bp2),y
  5615
  5616 				; optimize OK (vservice.pas), line = 1000
  5617
  5618 38DB A0 00			ldy #BALL.X-DATAORIGIN
  5619 38DD B1 84			lda (:bp2),y
  5620 38DF C8				iny
  5621 38E0 38 ED 5E 9D			sub VAUS.X
  5622 38E4 A0 19			ldy #BALL.ONVAUS-DATAORIGIN
  5623 38E6 91 84			sta (:bp2),y
  5624 38E8			l_0C52
  5625
  5626 				; optimize OK (vservice.pas), line = 1003
  5627
  5628 38E8 A9 2C			lda #$2C
  5629 38EA 8D CC 9C			sta BALL_BLOCK_SOUND.A
  5630 38ED A9 01			lda #$01
  5631 38EF 8D CD 9C			sta BALL_BLOCK_SOUND.A+1
  5632 38F2 A9 06			lda #$06
  5633 38F4 8D CE 9C			sta BALL_BLOCK_SOUND.B
  5634 38F7 A9 00			lda #$00
  5635 38F9 8D CF 9C			sta BALL_BLOCK_SOUND.B+1
  5636 38FC 20 9A 24			jsr BALL_BLOCK_SOUND
  5637
  5638 				; optimize OK (vservice.pas), line = 1007
  5639
  5640 38FF AC AC AB 84 84 AC + 	mwy BALL :bp2
  5641 3909 A0 00			ldy #BALL.X-DATAORIGIN
  5642 390B B1 84			lda (:bp2),y
  5643 390D 85 9F			sta :STACKORIGIN+9
  5644 390F C8				iny
  5645 3910 B1 84			lda (:bp2),y
  5646 3912 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  5647 3914 AD 5E 9D			lda VAUS.X
  5648 3917 18 69 0A			add #$0A
  5649 391A 85 A0			sta :STACKORIGIN+10
  5650 391C A9 00			lda #$00
  5651 391E 69 00			adc #$00
  5652 3920 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  5653 3922 A0 00			ldy #$00
  5654 3924 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  5655 3926 10 01			spl
  5656 3928 88				dey
  5657 3929 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  5658 392B 84 BF			sty :STACKORIGIN+STACKWIDTH*2+9
  5659 392D 84 CF			sty :STACKORIGIN+STACKWIDTH*3+9
  5660 392F				.LOCAL
  5661 392F A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
  5662 3931 38 E9 00			sub #$00
  5663 3934 D0 1C			bne L4
  5664 3936 A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
  5665 3938 C9 00			cmp #$00
  5666 393A D0 0A			bne L1
  5667 393C A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  5668 393E C5 B0			cmp :STACKORIGIN+STACKWIDTH+10
  5669 3940 D0 04			bne L1
  5670 3942 A5 9F			lda :STACKORIGIN+9
  5671 3944 C5 A0			cmp :STACKORIGIN+10
  5672 3946 F0 10		L1	beq L5
  5673 3948 B0 04			bcs L3
  5674 394A A9 FF			lda #$FF
  5675 394C D0 0A			bne L5
  5676 394E A9 01		L3	lda #$01
  5677 3950 D0 06			bne L5
  5678 3952 50 04		L4	bvc L5
  5679 3954 49 FF			eor #$FF
  5680 3956 09 01			ora #$01
  5681 3958			L5
  5682 					.ENDL
  5683 3958 30 03 4C 1B 3A		jpl l_0C82
  5684
  5685 				; optimize OK (vservice.pas), line = 1010
  5686
  5687 395D A0 10			ldy #BALL.SPEEDX-DATAORIGIN
  5688 395F A9 00			lda #$00
  5689 3961 38 F1 84			sub (:bp2),y
  5690 3964 85 9F			sta :STACKORIGIN+9
  5691 3966 C8				iny
  5692 3967 A9 00			lda #$00
  5693 3969 F1 84			sbc (:bp2),y
  5694 396B 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  5695 396D A0 10			ldy #BALL.SPEEDX-DATAORIGIN
  5696 396F A5 9F			lda :STACKORIGIN+9
  5697 3971 91 84			sta (:bp2),y
  5698 3973 C8				iny
  5699 3974 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  5700 3976 91 84			sta (:bp2),y
  5701
  5702 				; optimize OK (vservice.pas), line = 1014
  5703
  5704 3978 AD AC AB			lda BALL
  5705 397B 8D 83 AB			sta GET_BALL_DIRECTION.BALL
  5706 397E AD AD AB			lda BALL+1
  5707 3981 8D 84 AB			sta GET_BALL_DIRECTION.BALL+1
  5708 3984 20 BC 32			jsr GET_BALL_DIRECTION
  5709 3987 E8				inx
  5710 3988 AD 87 AB 95 96		mva GET_BALL_DIRECTION.RESULT :STACKORIGIN,x
  5711 398D AD 88 AB 95 A6		mva GET_BALL_DIRECTION.RESULT+1 :STACKORIGIN+STACKWIDTH,x
  5712 3992 A9 1E			lda #$1E
  5713 3994 20 E8 23			jsr SYSTEM.RANDOM.@010180000
  5714 3997 B5 96			lda :STACKORIGIN,x
  5715 3999 18 6D 62 9C			add SYSTEM.RANDOM.@010180000.RESULT
  5716 399D 8D B4 AB			sta ANGLE
  5717 39A0 B5 A6			lda :STACKORIGIN+STACKWIDTH,x
  5718 39A2 69 00			adc #$00
  5719 39A4 8D B5 AB			sta ANGLE+1
  5720 39A7 CA				dex
  5721
  5722 				; optimize OK (vservice.pas), line = 1022
  5723
  5724 39A8 A9 A0			lda #$A0
  5725 39AA 8D 18 AB			sta MIN.A
  5726 39AD A9 00			lda #$00
  5727 39AF 8D 19 AB			sta MIN.A+1
  5728 39B2 AD B4 AB			lda ANGLE
  5729 39B5 8D 1A AB			sta MIN.B
  5730 39B8 AD B5 AB			lda ANGLE+1
  5731 39BB 8D 1B AB			sta MIN.B+1
  5732 39BE 20 F9 25			jsr MIN
  5733 39C1 A9 78			lda #$78
  5734 39C3 8D 12 AB			sta MAX.A
  5735 39C6 A9 00			lda #$00
  5736 39C8 8D 13 AB			sta MAX.A+1
  5737 39CB AD 1C AB			lda MIN.RESULT
  5738 39CE 8D 14 AB			sta MAX.B
  5739 39D1 AD 1D AB			lda MIN.RESULT+1
  5740 39D4 8D 15 AB			sta MAX.B+1
  5741 39D7 20 CE 25			jsr MAX
  5742 39DA AD AC AB			lda BALL
  5743 39DD 8D 79 AB			sta SET_BALL_DIRECTION.BALL
  5744 39E0 AD AD AB			lda BALL+1
  5745 39E3 8D 7A AB			sta SET_BALL_DIRECTION.BALL+1
  5746 39E6 AD 16 AB			lda MAX.RESULT
  5747 39E9 8D 7D AB			sta SET_BALL_DIRECTION.ANGLE
  5748 39EC AD 17 AB			lda MAX.RESULT+1
  5749 39EF 8D 7E AB			sta SET_BALL_DIRECTION.ANGLE+1
  5750 39F2 20 31 31			jsr SET_BALL_DIRECTION
  5751
  5752 				; optimize OK (vservice.pas), line = 1027
  5753
  5754 39F5 AC AC AB 84 84 AC + 	mwy BALL :bp2
  5755 39FF A0 0C			ldy #BALL.SPEED-DATAORIGIN
  5756 3A01 B1 84			lda (:bp2),y
  5757 3A03 8D 6F AB			sta SET_BALL_SPEED.SPEED
  5758 3A06 C8				iny
  5759 3A07 B1 84			lda (:bp2),y
  5760 3A09 8D 70 AB			sta SET_BALL_SPEED.SPEED+1
  5761 3A0C AD AC AB			lda BALL
  5762 3A0F 8D 6B AB			sta SET_BALL_SPEED.BALL
  5763 3A12 AD AD AB			lda BALL+1
  5764 3A15 8D 6C AB			sta SET_BALL_SPEED.BALL+1
  5765 3A18 20 21 2F			jsr SET_BALL_SPEED
  5766 3A1B			l_0C82
  5767
  5768 				; optimize OK (vservice.pas), line = 1033
  5769
  5770 3A1B AC AC AB 84 84 AC + 	mwy BALL :bp2
  5771 3A25 A0 00			ldy #BALL.X-DATAORIGIN
  5772 3A27 B1 84			lda (:bp2),y
  5773 3A29 85 9F			sta :STACKORIGIN+9
  5774 3A2B C8				iny
  5775 3A2C B1 84			lda (:bp2),y
  5776 3A2E 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  5777 3A30 AD 5E 9D			lda VAUS.X
  5778 3A33 18 6D 66 9D			add VAUS.WIDTH
  5779 3A37 85 A0			sta :STACKORIGIN+10
  5780 3A39 A9 00			lda #$00
  5781 3A3B 69 00			adc #$00
  5782 3A3D 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  5783 3A3F A5 A0			lda :STACKORIGIN+10
  5784 3A41 38 E9 0A			sub #$0A
  5785 3A44 85 A0			sta :STACKORIGIN+10
  5786 3A46 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
  5787 3A48 E9 00			sbc #$00
  5788 3A4A 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  5789 3A4C A9 00			lda #$00
  5790 3A4E E9 00			sbc #$00
  5791 3A50 85 C0			sta :STACKORIGIN+STACKWIDTH*2+10
  5792 3A52 A9 00			lda #$00
  5793 3A54 E9 00			sbc #$00
  5794 3A56 85 D0			sta :STACKORIGIN+STACKWIDTH*3+10
  5795 3A58 A0 00			ldy #$00
  5796 3A5A A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  5797 3A5C 10 01			spl
  5798 3A5E 88				dey
  5799 3A5F 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  5800 3A61 84 BF			sty :STACKORIGIN+STACKWIDTH*2+9
  5801 3A63 84 CF			sty :STACKORIGIN+STACKWIDTH*3+9
  5802 3A65				.LOCAL
  5803 3A65 A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
  5804 3A67 38 E5 D0			sub :STACKORIGIN+STACKWIDTH*3+10
  5805 3A6A D0 1C			bne L4
  5806 3A6C A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
  5807 3A6E C5 C0			cmp :STACKORIGIN+STACKWIDTH*2+10
  5808 3A70 D0 0A			bne L1
  5809 3A72 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  5810 3A74 C5 B0			cmp :STACKORIGIN+STACKWIDTH+10
  5811 3A76 D0 04			bne L1
  5812 3A78 A5 9F			lda :STACKORIGIN+9
  5813 3A7A C5 A0			cmp :STACKORIGIN+10
  5814 3A7C F0 10		L1	beq L5
  5815 3A7E B0 04			bcs L3
  5816 3A80 A9 FF			lda #$FF
  5817 3A82 D0 0A			bne L5
  5818 3A84 A9 01		L3	lda #$01
  5819 3A86 D0 06			bne L5
  5820 3A88 50 04		L4	bvc L5
  5821 3A8A 49 FF			eor #$FF
  5822 3A8C 09 01			ora #$01
  5823 3A8E			L5
  5824 					.ENDL
  5825 3A8E 10 03 4C 56 3B		jmi l_0CC3
  5826 3A93 D0 03 4C 56 3B		jeq l_0CC3
  5827
  5828 				; optimize OK (vservice.pas), line = 1035
  5829
  5830 3A98 A0 10			ldy #BALL.SPEEDX-DATAORIGIN
  5831 3A9A A9 00			lda #$00
  5832 3A9C 38 F1 84			sub (:bp2),y
  5833 3A9F 85 9F			sta :STACKORIGIN+9
  5834 3AA1 C8				iny
  5835 3AA2 A9 00			lda #$00
  5836 3AA4 F1 84			sbc (:bp2),y
  5837 3AA6 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  5838 3AA8 A0 10			ldy #BALL.SPEEDX-DATAORIGIN
  5839 3AAA A5 9F			lda :STACKORIGIN+9
  5840 3AAC 91 84			sta (:bp2),y
  5841 3AAE C8				iny
  5842 3AAF A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  5843 3AB1 91 84			sta (:bp2),y
  5844
  5845 				; optimize OK (vservice.pas), line = 1036
  5846
  5847 3AB3 AD AC AB			lda BALL
  5848 3AB6 8D 83 AB			sta GET_BALL_DIRECTION.BALL
  5849 3AB9 AD AD AB			lda BALL+1
  5850 3ABC 8D 84 AB			sta GET_BALL_DIRECTION.BALL+1
  5851 3ABF 20 BC 32			jsr GET_BALL_DIRECTION
  5852 3AC2 E8				inx
  5853 3AC3 AD 87 AB 95 96		mva GET_BALL_DIRECTION.RESULT :STACKORIGIN,x
  5854 3AC8 AD 88 AB 95 A6		mva GET_BALL_DIRECTION.RESULT+1 :STACKORIGIN+STACKWIDTH,x
  5855 3ACD A9 1E			lda #$1E
  5856 3ACF 20 E8 23			jsr SYSTEM.RANDOM.@010180000
  5857 3AD2 B5 96			lda :STACKORIGIN,x
  5858 3AD4 38 ED 62 9C			sub SYSTEM.RANDOM.@010180000.RESULT
  5859 3AD8 8D B4 AB			sta ANGLE
  5860 3ADB B5 A6			lda :STACKORIGIN+STACKWIDTH,x
  5861 3ADD E9 00			sbc #$00
  5862 3ADF 8D B5 AB			sta ANGLE+1
  5863 3AE2 CA				dex
  5864
  5865 				; optimize OK (vservice.pas), line = 1037
  5866
  5867 3AE3 A9 14			lda #$14
  5868 3AE5 8D 12 AB			sta MAX.A
  5869 3AE8 A9 00			lda #$00
  5870 3AEA 8D 13 AB			sta MAX.A+1
  5871 3AED AD B4 AB			lda ANGLE
  5872 3AF0 8D 14 AB			sta MAX.B
  5873 3AF3 AD B5 AB			lda ANGLE+1
  5874 3AF6 8D 15 AB			sta MAX.B+1
  5875 3AF9 20 CE 25			jsr MAX
  5876 3AFC A9 3C			lda #$3C
  5877 3AFE 8D 18 AB			sta MIN.A
  5878 3B01 A9 00			lda #$00
  5879 3B03 8D 19 AB			sta MIN.A+1
  5880 3B06 AD 16 AB			lda MAX.RESULT
  5881 3B09 8D 1A AB			sta MIN.B
  5882 3B0C AD 17 AB			lda MAX.RESULT+1
  5883 3B0F 8D 1B AB			sta MIN.B+1
  5884 3B12 20 F9 25			jsr MIN
  5885 3B15 AD AC AB			lda BALL
  5886 3B18 8D 79 AB			sta SET_BALL_DIRECTION.BALL
  5887 3B1B AD AD AB			lda BALL+1
  5888 3B1E 8D 7A AB			sta SET_BALL_DIRECTION.BALL+1
  5889 3B21 AD 1C AB			lda MIN.RESULT
  5890 3B24 8D 7D AB			sta SET_BALL_DIRECTION.ANGLE
  5891 3B27 AD 1D AB			lda MIN.RESULT+1
  5892 3B2A 8D 7E AB			sta SET_BALL_DIRECTION.ANGLE+1
  5893 3B2D 20 31 31			jsr SET_BALL_DIRECTION
  5894
  5895 				; optimize OK (vservice.pas), line = 1038
  5896
  5897 3B30 AC AC AB 84 84 AC + 	mwy BALL :bp2
  5898 3B3A A0 0C			ldy #BALL.SPEED-DATAORIGIN
  5899 3B3C B1 84			lda (:bp2),y
  5900 3B3E 8D 6F AB			sta SET_BALL_SPEED.SPEED
  5901 3B41 C8				iny
  5902 3B42 B1 84			lda (:bp2),y
  5903 3B44 8D 70 AB			sta SET_BALL_SPEED.SPEED+1
  5904 3B47 AD AC AB			lda BALL
  5905 3B4A 8D 6B AB			sta SET_BALL_SPEED.BALL
  5906 3B4D AD AD AB			lda BALL+1
  5907 3B50 8D 6C AB			sta SET_BALL_SPEED.BALL+1
  5908 3B53 20 21 2F			jsr SET_BALL_SPEED
  5909 3B56			l_0CC3
  5910 3B56			l_0C2E
  5911 3B56			l_0BFF
  5912
  5913 				; optimize OK (vservice.pas), line = 1050
  5914
  5915 3B56 AC AC AB 84 84 AC + 	mwy BALL :bp2
  5916 3B60 A0 0A			ldy #BALL.OLDY-DATAORIGIN
  5917 3B62 B1 84			lda (:bp2),y
  5918 3B64 85 9F			sta :STACKORIGIN+9
  5919 3B66 C8				iny
  5920 3B67 B1 84			lda (:bp2),y
  5921 3B69 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  5922 3B6B A0 01			ldy #1
  5923 3B6D A5 9F			lda :STACKORIGIN+9
  5924 3B6F C9 B9			cmp #$B9
  5925 3B71 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  5926 3B73 E9 00			sbc #$00
  5927 3B75 50 02			svc
  5928 3B77 49 80			eor #$80
  5929 3B79 10 01			bpl @+
  5930 3B7B 88				dey
  5931 				@
  5932 3B7C 84 9F			sty :STACKORIGIN+9
  5933 3B7E A0 02			ldy #BALL.Y-DATAORIGIN
  5934 3B80 B1 84			lda (:bp2),y
  5935 3B82 85 A0			sta :STACKORIGIN+10
  5936 3B84 C8				iny
  5937 3B85 B1 84			lda (:bp2),y
  5938 3B87 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  5939 3B89 A0 01			ldy #1
  5940 3B8B A5 A0			lda :STACKORIGIN+10
  5941 3B8D C9 C9			cmp #$C9
  5942 3B8F A5 B0			lda :STACKORIGIN+STACKWIDTH+10
  5943 3B91 E9 00			sbc #$00
  5944 3B93 50 02			svc
  5945 3B95 49 80			eor #$80
  5946 3B97 10 01			bpl @+
  5947 3B99 88				dey
  5948 				@
  5949 3B9A 98				tya
  5950 3B9B 25 9F			and :STACKORIGIN+9
  5951 3B9D 85 9F			sta :STACKORIGIN+9
  5952 3B9F A0 12			ldy #BALL.SPEEDY-DATAORIGIN
  5953 3BA1 B1 84			lda (:bp2),y
  5954 3BA3 85 A0			sta :STACKORIGIN+10
  5955 3BA5 C8				iny
  5956 3BA6 B1 84			lda (:bp2),y
  5957 3BA8 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  5958 3BAA A0 01			ldy #1
  5959 3BAC A5 B0			lda :STACKORIGIN+STACKWIDTH+10
  5960 3BAE 30 04			bmi @+
  5961 3BB0 05 A0			ora :STACKORIGIN+10
  5962 3BB2 D0 01			sne
  5963 				@
  5964 3BB4 88				dey
  5965 				@
  5966 3BB5 98				tya
  5967 3BB6 25 9F			and :STACKORIGIN+9
  5968 3BB8 F0 15			jeq l_0D12
  5969
  5970 				; optimize OK (vservice.pas), line = 1052
  5971
  5972 3BBA A0 17			ldy #BALL.INPLAY-DATAORIGIN
  5973 3BBC A9 00			lda #$00
  5974 3BBE 91 84			sta (:bp2),y
  5975
  5976 				; optimize OK (vservice.pas), line = 1054
  5977
  5978 3BC0 AD AC AB			lda BALL
  5979 3BC3 8D 60 AB			sta REMOVE_BALL.BALL
  5980 3BC6 AD AD AB			lda BALL+1
  5981 3BC9 8D 61 AB			sta REMOVE_BALL.BALL+1
  5982 3BCC 20 77 2D			jsr REMOVE_BALL
  5983 3BCF			l_0D12
  5984
  5985 				; ------------------------------------------------------------
  5986
  5987 = ABAC			BALL	= DATAORIGIN+$0F8F
  5988 = 9C1D			BALL.X	= DATAORIGIN+$0000
  5989 = 9C1F			BALL.Y	= DATAORIGIN+$0002
  5990 = 9C21			BALL.FINEX	= DATAORIGIN+$0004
  5991 = 9C23			BALL.FINEY	= DATAORIGIN+$0006
  5992 = 9C25			BALL.OLDX	= DATAORIGIN+$0008
  5993 = 9C27			BALL.OLDY	= DATAORIGIN+$000A
  5994 = 9C29			BALL.SPEED	= DATAORIGIN+$000C
  5995 = 9C2B			BALL.FINESPEED	= DATAORIGIN+$000E
  5996 = 9C2D			BALL.SPEEDX	= DATAORIGIN+$0010
  5997 = 9C2F			BALL.SPEEDY	= DATAORIGIN+$0012
  5998 = 9C31			BALL.SBD	= DATAORIGIN+$0014
  5999 = 9C33			BALL.BRWHIT	= DATAORIGIN+$0016
  6000 = 9C34			BALL.INPLAY	= DATAORIGIN+$0017
  6001 = 9C35			BALL.LAUNCH	= DATAORIGIN+$0018
  6002 = 9C36			BALL.ONVAUS	= DATAORIGIN+$0019
  6003 = 9C37			BALL.STM	= DATAORIGIN+$001A
  6004 = ABB0			X	= DATAORIGIN+$0F93
  6005 = ABB2			Y	= DATAORIGIN+$0F95
  6006 = ABB4			ANGLE	= DATAORIGIN+$0F97
  6007
  6008 = ABAC			@VarData	= BALL
  6009 = 0008			@VarDataSize	= 8
  6010
  6011 3BCF			@exit
  6012 					.ifdef @new
  6013 					lda <@VarData
  6014 					sta :ztmp
  6015 					lda >@VarData
  6016 					ldy #@VarDataSize-1
  6017 					jmp @FreeMem
  6018 					els
  6019 3BCF 60				rts						; ret
  6020 					eif
  6021 				.endl
  6022
  6023 3BD0			.local	MODIFY_VAUS					; PROCEDURE
  6024
  6025 				; optimize OK (vservice.pas), line = 1061
  6026
  6027 3BD0 AD 66 9D			lda VAUS.WIDTH
  6028 3BD3 8D 64 9D			sta VAUS.OLDLEN
  6029 3BD6 A9 00			lda #$00
  6030 3BD8 8D 65 9D			sta VAUS.OLDLEN+1
  6031
  6032 				; optimize OK (vservice.pas), line = 1062
  6033
  6034 3BDB AD EE 9C			lda PLAYVAUS.WIDTH
  6035 3BDE 8D 66 9D			sta VAUS.WIDTH
  6036
  6037 				; optimize OK (vservice.pas), line = 1063
  6038
  6039 3BE1 AD F0 9C			lda PLAYVAUS.HEIGHT
  6040 3BE4 8D 67 9D			sta VAUS.HEIGHT
  6041
  6042 3BE7			@exit
  6043 					.ifdef @new
  6044 					lda <@VarData
  6045 					sta :ztmp
  6046 					lda >@VarData
  6047 					ldy #@VarDataSize-1
  6048 					jmp @FreeMem
  6049 					els
  6050 3BE7 60				rts						; ret
  6051 					eif
  6052 				.endl
  6053
  6054 3BE8			.local	SET_VAUS					; PROCEDURE
  6055
  6056 				; optimize OK (vservice.pas), line = 1068
  6057
  6058 3BE8 A9 5F			lda #$5F
  6059 3BEA 8D 5E 9D			sta VAUS.X
  6060
  6061 				; optimize OK (vservice.pas), line = 1069
  6062
  6063 3BED A9 B8			lda #$B8
  6064 3BEF 8D 5F 9D			sta VAUS.Y
  6065
  6066 				; optimize OK (vservice.pas), line = 1071
  6067
  6068 3BF2 A9 FF			lda #$FF
  6069 3BF4 8D 60 9D			sta VAUS.OLDX
  6070 3BF7 8D 61 9D			sta VAUS.OLDX+1
  6071
  6072 				; optimize OK (vservice.pas), line = 1072
  6073
  6074 3BFA 8D 62 9D			sta VAUS.OLDY
  6075 3BFD 8D 63 9D			sta VAUS.OLDY+1
  6076
  6077 				; optimize OK (vservice.pas), line = 1073
  6078
  6079 3C00 A9 00			lda #$00
  6080 3C02 8D 69 9D			sta VAUS.IFLASH
  6081
  6082 				; optimize OK (vservice.pas), line = 1077
  6083
  6084 3C05 8D 68 9D			sta VAUS.FLASH
  6085
  6086 				; optimize OK (vservice.pas), line = 1081
  6087
  6088 3C08 AD EE 9C			lda PLAYVAUS.WIDTH
  6089 3C0B 8D 66 9D			sta VAUS.WIDTH
  6090
  6091 				; optimize OK (vservice.pas), line = 1082
  6092
  6093 3C0E AD F0 9C			lda PLAYVAUS.HEIGHT
  6094 3C11 8D 67 9D			sta VAUS.HEIGHT
  6095
  6096 				; optimize OK (vservice.pas), line = 1083
  6097
  6098 3C14 AD 66 9D			lda VAUS.WIDTH
  6099 3C17 8D 64 9D			sta VAUS.OLDLEN
  6100 3C1A A9 00			lda #$00
  6101 3C1C 8D 65 9D			sta VAUS.OLDLEN+1
  6102
  6103 				; optimize OK (vservice.pas), line = 1084
  6104
  6105 3C1F A9 FF			lda #$FF
  6106 3C21 8D 6A 9D			sta VAUS.LETTER
  6107
  6108 3C24			@exit
  6109 					.ifdef @new
  6110 					lda <@VarData
  6111 					sta :ztmp
  6112 					lda >@VarData
  6113 					ldy #@VarDataSize-1
  6114 					jmp @FreeMem
  6115 					els
  6116 3C24 60				rts						; ret
  6117 					eif
  6118 				.endl
  6119
  6120 3C25			.local	START_VAUS					; PROCEDURE
  6121
  6122 				; optimize OK (vservice.pas), line = 1091
  6123
  6124 3C25 A9 D8			lda #$D8
  6125 3C27 38 ED 66 9D			sub VAUS.WIDTH
  6126 3C2B 85 9F			sta :STACKORIGIN+9
  6127 3C2D A9 00			lda #$00
  6128 3C2F E9 00			sbc #$00
  6129 3C31 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  6130 3C33 A0 00			ldy #$00
  6131 3C35 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  6132 3C37 10 01			spl
  6133 3C39 88				dey
  6134 3C3A 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  6135 3C3C 84 BF			sty :STACKORIGIN+STACKWIDTH*2+9
  6136 3C3E 84 CF			sty :STACKORIGIN+STACKWIDTH*3+9
  6137 3C40 A5 9F			lda :STACKORIGIN+9
  6138 3C42 38 E9 01			sub #$01
  6139 3C45 85 9F			sta :STACKORIGIN+9
  6140 3C47 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  6141 3C49 E9 00			sbc #$00
  6142 3C4B 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  6143 3C4D A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
  6144 3C4F E9 00			sbc #$00
  6145 3C51 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
  6146 3C53 A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
  6147 3C55 E9 00			sbc #$00
  6148 3C57 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
  6149 3C59 06 9F			asl :STACKORIGIN+9
  6150 3C5B 26 AF			rol :STACKORIGIN+STACKWIDTH+9
  6151 3C5D 26 BF			rol :STACKORIGIN+STACKWIDTH*2+9
  6152 3C5F 26 CF			rol :STACKORIGIN+STACKWIDTH*3+9
  6153 3C61 A9 14			lda #$14
  6154 3C63 8D D6 9C			sta MOUSE_X_LIMIT.MN
  6155 3C66 A9 00			lda #$00
  6156 3C68 8D D7 9C			sta MOUSE_X_LIMIT.MN+1
  6157 3C6B A5 9F			lda :STACKORIGIN+9
  6158 3C6D 8D D8 9C			sta MOUSE_X_LIMIT.MX
  6159 3C70 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  6160 3C72 8D D9 9C			sta MOUSE_X_LIMIT.MX+1
  6161 3C75 20 E1 24			jsr MOUSE_X_LIMIT
  6162
  6163 				; optimize OK (vservice.pas), line = 1092
  6164
  6165 3C78 A9 BE			lda #$BE
  6166 3C7A 8D DA 9C			sta MOUSEMOVE.X
  6167 3C7D A9 00			lda #$00
  6168 3C7F 8D DB 9C			sta MOUSEMOVE.X+1
  6169 3C82 A9 B8			lda #$B8
  6170 3C84 8D DC 9C			sta MOUSEMOVE.Y
  6171 3C87 A9 00			lda #$00
  6172 3C89 8D DD 9C			sta MOUSEMOVE.Y+1
  6173 3C8C 20 E2 24			jsr MOUSEMOVE
  6174
  6175 				; optimize OK (vservice.pas), line = 1093
  6176
  6177 3C8F A9 5F			lda #$5F
  6178 3C91 8D 5E 9D			sta VAUS.X
  6179
  6180 				; optimize OK (vservice.pas), line = 1094
  6181
  6182 3C94 A9 B8			lda #$B8
  6183 3C96 8D 5F 9D			sta VAUS.Y
  6184
  6185 3C99			@exit
  6186 					.ifdef @new
  6187 					lda <@VarData
  6188 					sta :ztmp
  6189 					lda >@VarData
  6190 					ldy #@VarDataSize-1
  6191 					jmp @FreeMem
  6192 					els
  6193 3C99 60				rts						; ret
  6194 					eif
  6195 				.endl
  6196
  6197 3C9A			.local	REMOVE_VAUS					; PROCEDURE
  6198
  6199 				; optimize OK (vservice.pas), line = 1108
  6200
  6201 3C9A AD 62 9D			lda VAUS.OLDY
  6202 3C9D 8D B6 AB			sta Y
  6203 3CA0 18 6D 67 9D			add VAUS.HEIGHT
  6204 3CA4 8D A8 3C			sta @FORTMP_0D92_0
  6205
  6206 3CA7			l_0D95
  6207 				; --- ForToDoCondition
  6208 3CA7 A9 00			lda @FORTMP_0D92_0::#$00
  6209 3CA9 CD B6 AB			cmp Y
  6210 3CAC B0 03 4C 79 3D		jcc l_0DA3
  6211
  6212 				; optimize OK (vservice.pas), line = 1111
  6213
  6214 3CB1 AD 60 9D			lda VAUS.OLDX
  6215 3CB4 85 A0			sta :STACKORIGIN+10
  6216 3CB6 A0 00			ldy #$00
  6217 3CB8 AD 61 9D			lda VAUS.OLDX+1
  6218 3CBB 10 01			spl
  6219 3CBD 88				dey
  6220 3CBE 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  6221 3CC0 84 C0			sty :STACKORIGIN+STACKWIDTH*2+10
  6222 3CC2 84 D0			sty :STACKORIGIN+STACKWIDTH*3+10
  6223 3CC4 A9 00			lda #$00
  6224 3CC6 85 B1			sta :STACKORIGIN+STACKWIDTH+11
  6225 3CC8 AD B6 AB			lda Y
  6226 3CCB 0A				asl @
  6227 3CCC 26 B1			rol :STACKORIGIN+STACKWIDTH+11
  6228 3CCE 18 6D 29 9B			add ROW
  6229 3CD2 85 84			sta :bp2
  6230 3CD4 AD 2A 9B			lda ROW+1
  6231 3CD7 65 B1			adc :STACKORIGIN+STACKWIDTH+11
  6232 3CD9 85 85			sta :bp2+1
  6233 3CDB A0 00			ldy #$00
  6234 3CDD A5 A0			lda :STACKORIGIN+10
  6235 3CDF 18 71 84			add (:bp2),y
  6236 3CE2 8D F4 AA			sta BLITROW.DST
  6237 3CE5 C8				iny
  6238 3CE6 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
  6239 3CE8 71 84			adc (:bp2),y
  6240 3CEA 8D F5 AA			sta BLITROW.DST+1
  6241 3CED A5 C0			lda :STACKORIGIN+STACKWIDTH*2+10
  6242 3CEF 69 00			adc #$00
  6243 3CF1 8D F6 AA			sta BLITROW.DST+2
  6244 3CF4 A5 D0			lda :STACKORIGIN+STACKWIDTH*3+10
  6245 3CF6 69 00			adc #$00
  6246 3CF8 8D F7 AA			sta BLITROW.DST+3
  6247 3CFB AD 60 9D			lda VAUS.OLDX
  6248 3CFE 85 A2			sta :STACKORIGIN+12
  6249 3D00 A0 00			ldy #$00
  6250 3D02 AD 61 9D			lda VAUS.OLDX+1
  6251 3D05 10 01			spl
  6252 3D07 88				dey
  6253 3D08 85 B2			sta :STACKORIGIN+STACKWIDTH+12
  6254 3D0A 84 C2			sty :STACKORIGIN+STACKWIDTH*2+12
  6255 3D0C 84 D2			sty :STACKORIGIN+STACKWIDTH*3+12
  6256 3D0E AD EA 9C			lda PLAYSCREEN.OFS
  6257 3D11 18 65 A2			add :STACKORIGIN+12
  6258 3D14 85 A1			sta :STACKORIGIN+11
  6259 3D16 AD EB 9C			lda PLAYSCREEN.OFS+1
  6260 3D19 65 B2			adc :STACKORIGIN+STACKWIDTH+12
  6261 3D1B 85 B1			sta :STACKORIGIN+STACKWIDTH+11
  6262 3D1D AD EC 9C			lda PLAYSCREEN.OFS+2
  6263 3D20 65 C2			adc :STACKORIGIN+STACKWIDTH*2+12
  6264 3D22 85 C1			sta :STACKORIGIN+STACKWIDTH*2+11
  6265 3D24 AD ED 9C			lda PLAYSCREEN.OFS+3
  6266 3D27 65 D2			adc :STACKORIGIN+STACKWIDTH*3+12
  6267 3D29 85 D1			sta :STACKORIGIN+STACKWIDTH*3+11
  6268 3D2B A9 00			lda #$00
  6269 3D2D 85 B2			sta :STACKORIGIN+STACKWIDTH+12
  6270 3D2F AD B6 AB			lda Y
  6271 3D32 0A				asl @
  6272 3D33 26 B2			rol :STACKORIGIN+STACKWIDTH+12
  6273 3D35 18 6D 29 9B			add ROW
  6274 3D39 85 84			sta :bp2
  6275 3D3B AD 2A 9B			lda ROW+1
  6276 3D3E 65 B2			adc :STACKORIGIN+STACKWIDTH+12
  6277 3D40 85 85			sta :bp2+1
  6278 3D42 A0 00			ldy #$00
  6279 3D44 A5 A1			lda :STACKORIGIN+11
  6280 3D46 18 71 84			add (:bp2),y
  6281 3D49 8D F0 AA			sta BLITROW.SRC
  6282 3D4C C8				iny
  6283 3D4D A5 B1			lda :STACKORIGIN+STACKWIDTH+11
  6284 3D4F 71 84			adc (:bp2),y
  6285 3D51 8D F1 AA			sta BLITROW.SRC+1
  6286 3D54 A5 C1			lda :STACKORIGIN+STACKWIDTH*2+11
  6287 3D56 69 00			adc #$00
  6288 3D58 8D F2 AA			sta BLITROW.SRC+2
  6289 3D5B A5 D1			lda :STACKORIGIN+STACKWIDTH*3+11
  6290 3D5D 69 00			adc #$00
  6291 3D5F 8D F3 AA			sta BLITROW.SRC+3
  6292 3D62 AD 64 9D			lda VAUS.OLDLEN
  6293 3D65 8D F8 AA			sta BLITROW.SIZE
  6294 3D68 AD 65 9D			lda VAUS.OLDLEN+1
  6295 3D6B 8D F9 AA			sta BLITROW.SIZE+1
  6296 3D6E 20 60 25			jsr BLITROW
  6297
  6298 				; --- ForToDoEpilog
  6299 3D71 EE B6 AB			inc Y
  6300 3D74 F0 03 4C A7 3C		jne l_0D95
  6301 3D79			l_0DA3
  6302
  6303 				; optimize OK (vservice.pas), line = 1113
  6304
  6305 3D79 AD 66 9D			lda VAUS.WIDTH
  6306 3D7C 8D 64 9D			sta VAUS.OLDLEN
  6307 3D7F A9 00			lda #$00
  6308 3D81 8D 65 9D			sta VAUS.OLDLEN+1
  6309
  6310 				; ------------------------------------------------------------
  6311
  6312 = ABB6			Y	= DATAORIGIN+$0F99
  6313
  6314 = ABB6			@VarData	= Y
  6315 = 0001			@VarDataSize	= 1
  6316
  6317 3D84			@exit
  6318 					.ifdef @new
  6319 					lda <@VarData
  6320 					sta :ztmp
  6321 					lda >@VarData
  6322 					ldy #@VarDataSize-1
  6323 					jmp @FreeMem
  6324 					els
  6325 3D84 60				rts						; ret
  6326 					eif
  6327 				.endl
  6328
  6329 3D85			.local	PLACE_VAUS					; PROCEDURE
  6330
  6331 				; optimize FAIL (0, vservice.pas), line = 1123
  6332
  6333 3D85 EE 69 9D			inc VAUS.IFLASH
  6334
  6335 				; optimize OK (vservice.pas), line = 1125
  6336
  6337 3D88 AD 69 9D			lda VAUS.IFLASH
  6338 3D8B C9 0B			cmp #$0B
  6339 3D8D 90 08			jcc l_0DE7
  6340
  6341 				; optimize FAIL (0, vservice.pas), line = 1127
  6342
  6343 3D8F EE 68 9D			inc VAUS.FLASH
  6344
  6345 				; optimize OK (vservice.pas), line = 1128
  6346
  6347 3D92 A9 00			lda #$00
  6348 3D94 8D 69 9D			sta VAUS.IFLASH
  6349 3D97			l_0DE7
  6350
  6351 				; optimize OK (vservice.pas), line = 1131
  6352
  6353 3D97 AD 68 9D			lda VAUS.FLASH
  6354 3D9A C9 0B			cmp #$0B
  6355 3D9C 90 05			jcc l_0E04
  6356 3D9E A9 00			lda #$00
  6357 3DA0 8D 68 9D			sta VAUS.FLASH
  6358 3DA3			l_0E04
  6359
  6360 				; optimize OK (vservice.pas), line = 1141
  6361
  6362 3DA3 A9 00			lda #$00
  6363 3DA5 8D B8 AB			sta Y
  6364 3DA8 AC 67 9D			ldy VAUS.HEIGHT
  6365 3DAB 88				dey
  6366 3DAC 8C B0 3D			sty @FORTMP_0E17_0
  6367
  6368 3DAF			l_0E1A
  6369 				; --- ForToDoCondition
  6370 3DAF A9 00			lda @FORTMP_0E17_0::#$00
  6371 3DB1 CD B8 AB			cmp Y
  6372 3DB4 B0 03 4C 41 3F		jcc l_0E28
  6373
  6374 				; optimize OK (vservice.pas), line = 1145
  6375
  6376 3DB9 AD 66 9D			lda VAUS.WIDTH
  6377 3DBC 85 8E			sta :ecx
  6378 3DBE AD B8 AB			lda Y
  6379 3DC1 85 86			sta :eax
  6380 					.ifdef fmulinit
  6381 					fmulu_8
  6382 					els
  6383 3DC3 20 AE 12			imulCL
  6384 					eif
  6385 3DC6 8D BA AB			sta CNT+1
  6386 3DC9 A5 86			lda :eax
  6387 3DCB 8D B9 AB			sta CNT
  6388
  6389 				; optimize OK (vservice.pas), line = 1147
  6390
  6391 3DCE AD B8 AB			lda Y
  6392 3DD1 18 6D 5F 9D			add VAUS.Y
  6393 3DD5 85 A1			sta :STACKORIGIN+11
  6394 3DD7 A9 00			lda #$00
  6395 3DD9 69 00			adc #$00
  6396 3DDB 06 A1			asl :STACKORIGIN+11
  6397 3DDD 2A				rol @
  6398 3DDE 85 B1			sta :STACKORIGIN+STACKWIDTH+11
  6399 3DE0 AD 29 9B			lda ROW
  6400 3DE3 18 65 A1			add :STACKORIGIN+11
  6401 3DE6 85 84			sta :bp2
  6402 3DE8 AD 2A 9B			lda ROW+1
  6403 3DEB 65 B1			adc :STACKORIGIN+STACKWIDTH+11
  6404 3DED 85 85			sta :bp2+1
  6405 3DEF A0 00			ldy #$00
  6406 3DF1 AD 5E 9D			lda VAUS.X
  6407 3DF4 18 71 84			add (:bp2),y
  6408 3DF7 8D DF AA			sta BLITZERO.DST
  6409 3DFA C8				iny
  6410 3DFB A9 00			lda #$00
  6411 3DFD 71 84			adc (:bp2),y
  6412 3DFF 8D E0 AA			sta BLITZERO.DST+1
  6413 3E02 A9 00			lda #$00
  6414 3E04 69 00			adc #$00
  6415 3E06 8D E1 AA			sta BLITZERO.DST+2
  6416 3E09 A9 00			lda #$00
  6417 3E0B 69 00			adc #$00
  6418 3E0D 8D E2 AA			sta BLITZERO.DST+3
  6419 3E10 AD F2 9C			lda PLAYVAUS.OFS
  6420 3E13 18 6D B9 AB			add CNT
  6421 3E17 8D DB AA			sta BLITZERO.SRC
  6422 3E1A AD F3 9C			lda PLAYVAUS.OFS+1
  6423 3E1D 6D BA AB			adc CNT+1
  6424 3E20 8D DC AA			sta BLITZERO.SRC+1
  6425 3E23 AD F4 9C			lda PLAYVAUS.OFS+2
  6426 3E26 69 00			adc #$00
  6427 3E28 8D DD AA			sta BLITZERO.SRC+2
  6428 3E2B AD F5 9C			lda PLAYVAUS.OFS+3
  6429 3E2E 69 00			adc #$00
  6430 3E30 8D DE AA			sta BLITZERO.SRC+3
  6431 3E33 AD 66 9D			lda VAUS.WIDTH
  6432 3E36 8D E3 AA			sta BLITZERO.SIZE
  6433 3E39 A9 00			lda #$00
  6434 3E3B 8D E4 AA			sta BLITZERO.SIZE+1
  6435 3E3E 20 E3 24			jsr BLITZERO
  6436
  6437 				; optimize OK (vservice.pas), line = 1149
  6438
  6439 3E41 AD B8 AB			lda Y
  6440 3E44 C9 02			cmp #$02
  6441 3E46 B0 03 4C 39 3F		jcc l_0E77
  6442 3E4B AD 67 9D			lda VAUS.HEIGHT
  6443 3E4E E9 02			sbc #$02
  6444 3E50 85 A1			sta :STACKORIGIN+11
  6445 3E52 A9 00			lda #$00
  6446 3E54 E9 00			sbc #$00
  6447 3E56 85 B1			sta :STACKORIGIN+STACKWIDTH+11
  6448 3E58 AD B8 AB			lda Y
  6449 3E5B C5 A1			cmp :STACKORIGIN+11
  6450 3E5D A9 00			lda #$00
  6451 3E5F E5 B1			sbc :STACKORIGIN+STACKWIDTH+11
  6452 3E61 50 02			svc
  6453 3E63 49 80			eor #$80
  6454 3E65 30 03 4C 39 3F		jpl l_0E77
  6455
  6456 				; optimize OK (vservice.pas), line = 1152
  6457
  6458 3E6A AC 68 9D			ldy VAUS.FLASH
  6459 3E6D B9 4C 10			lda adr.FLASH,y
  6460 3E70 8D 0A AB			sta PUTBYTE.V
  6461 3E73 AD B8 AB			lda Y
  6462 3E76 18 6D 5F 9D			add VAUS.Y
  6463 3E7A 85 A1			sta :STACKORIGIN+11
  6464 3E7C A9 00			lda #$00
  6465 3E7E 69 00			adc #$00
  6466 3E80 06 A1			asl :STACKORIGIN+11
  6467 3E82 2A				rol @
  6468 3E83 85 B1			sta :STACKORIGIN+STACKWIDTH+11
  6469 3E85 AD 29 9B			lda ROW
  6470 3E88 18 65 A1			add :STACKORIGIN+11
  6471 3E8B 85 84			sta :bp2
  6472 3E8D AD 2A 9B			lda ROW+1
  6473 3E90 65 B1			adc :STACKORIGIN+STACKWIDTH+11
  6474 3E92 85 85			sta :bp2+1
  6475 3E94 A0 00			ldy #$00
  6476 3E96 AD 5E 9D			lda VAUS.X
  6477 3E99 18 71 84			add (:bp2),y
  6478 3E9C 8D 06 AB			sta PUTBYTE.DST
  6479 3E9F C8				iny
  6480 3EA0 A9 00			lda #$00
  6481 3EA2 71 84			adc (:bp2),y
  6482 3EA4 8D 07 AB			sta PUTBYTE.DST+1
  6483 3EA7 A9 00			lda #$00
  6484 3EA9 69 00			adc #$00
  6485 3EAB 8D 08 AB			sta PUTBYTE.DST+2
  6486 3EAE A9 00			lda #$00
  6487 3EB0 69 00			adc #$00
  6488 3EB2 8D 09 AB			sta PUTBYTE.DST+3
  6489 3EB5 20 B8 25			jsr PUTBYTE
  6490
  6491 				; optimize OK (vservice.pas), line = 1155
  6492
  6493 3EB8 AC 68 9D			ldy VAUS.FLASH
  6494 3EBB B9 4C 10			lda adr.FLASH,y
  6495 3EBE 8D 0A AB			sta PUTBYTE.V
  6496 3EC1 AD 5E 9D			lda VAUS.X
  6497 3EC4 18 6D 66 9D			add VAUS.WIDTH
  6498 3EC8 85 A0			sta :STACKORIGIN+10
  6499 3ECA A9 00			lda #$00
  6500 3ECC 69 00			adc #$00
  6501 3ECE 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  6502 3ED0 A9 00			lda #$00
  6503 3ED2 69 00			adc #$00
  6504 3ED4 85 C0			sta :STACKORIGIN+STACKWIDTH*2+10
  6505 3ED6 A9 00			lda #$00
  6506 3ED8 69 00			adc #$00
  6507 3EDA 85 D0			sta :STACKORIGIN+STACKWIDTH*3+10
  6508 3EDC A5 A0			lda :STACKORIGIN+10
  6509 3EDE 38 E9 01			sub #$01
  6510 3EE1 85 A0			sta :STACKORIGIN+10
  6511 3EE3 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
  6512 3EE5 E9 00			sbc #$00
  6513 3EE7 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  6514 3EE9 A5 C0			lda :STACKORIGIN+STACKWIDTH*2+10
  6515 3EEB E9 00			sbc #$00
  6516 3EED 85 C0			sta :STACKORIGIN+STACKWIDTH*2+10
  6517 3EEF A5 D0			lda :STACKORIGIN+STACKWIDTH*3+10
  6518 3EF1 E9 00			sbc #$00
  6519 3EF3 85 D0			sta :STACKORIGIN+STACKWIDTH*3+10
  6520 3EF5 AD B8 AB			lda Y
  6521 3EF8 18 6D 5F 9D			add VAUS.Y
  6522 3EFC 85 A1			sta :STACKORIGIN+11
  6523 3EFE A9 00			lda #$00
  6524 3F00 69 00			adc #$00
  6525 3F02 06 A1			asl :STACKORIGIN+11
  6526 3F04 2A				rol @
  6527 3F05 85 B1			sta :STACKORIGIN+STACKWIDTH+11
  6528 3F07 AD 29 9B			lda ROW
  6529 3F0A 18 65 A1			add :STACKORIGIN+11
  6530 3F0D 85 84			sta :bp2
  6531 3F0F AD 2A 9B			lda ROW+1
  6532 3F12 65 B1			adc :STACKORIGIN+STACKWIDTH+11
  6533 3F14 85 85			sta :bp2+1
  6534 3F16 A0 00			ldy #$00
  6535 3F18 A5 A0			lda :STACKORIGIN+10
  6536 3F1A 18 71 84			add (:bp2),y
  6537 3F1D 8D 06 AB			sta PUTBYTE.DST
  6538 3F20 C8				iny
  6539 3F21 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
  6540 3F23 71 84			adc (:bp2),y
  6541 3F25 8D 07 AB			sta PUTBYTE.DST+1
  6542 3F28 A5 C0			lda :STACKORIGIN+STACKWIDTH*2+10
  6543 3F2A 69 00			adc #$00
  6544 3F2C 8D 08 AB			sta PUTBYTE.DST+2
  6545 3F2F A5 D0			lda :STACKORIGIN+STACKWIDTH*3+10
  6546 3F31 69 00			adc #$00
  6547 3F33 8D 09 AB			sta PUTBYTE.DST+3
  6548 3F36 20 B8 25			jsr PUTBYTE
  6549 3F39			l_0E77
  6550
  6551 				; --- ForToDoEpilog
  6552 3F39 EE B8 AB			inc Y
  6553 3F3C F0 03 4C AF 3D		jne l_0E1A
  6554 3F41			l_0E28
  6555
  6556 				; ------------------------------------------------------------
  6557
  6558 = ABB8			Y	= DATAORIGIN+$0F9B
  6559 = ABB9			CNT	= DATAORIGIN+$0F9C
  6560
  6561 = ABB8			@VarData	= Y
  6562 = 0003			@VarDataSize	= 3
  6563
  6564 3F41			@exit
  6565 					.ifdef @new
  6566 					lda <@VarData
  6567 					sta :ztmp
  6568 					lda >@VarData
  6569 					ldy #@VarDataSize-1
  6570 					jmp @FreeMem
  6571 					els
  6572 3F41 60				rts						; ret
  6573 					eif
  6574 				.endl
  6575
  6576 3F42			.local	MOVE_VAUS					; PROCEDURE
  6577
  6578 				; optimize OK (vservice.pas), line = 1166
  6579
  6580 3F42 A0 01			ldy #1
  6581 3F44 AD 61 9D			lda VAUS.OLDX+1
  6582 3F47 C9 FF			cmp #$FF
  6583 3F49 D0 05			bne @+
  6584 3F4B AD 60 9D			lda VAUS.OLDX
  6585 3F4E C9 FF			cmp #$FF
  6586 				@
  6587 3F50 D0 01			bne @+
  6588 3F52 88				dey
  6589 				@
  6590 3F53 84 9F			sty :STACKORIGIN+9
  6591 3F55 A0 01			ldy #1
  6592 3F57 AD 61 9D			lda VAUS.OLDX+1
  6593 3F5A C9 00			cmp #$00
  6594 3F5C D0 06			bne @+
  6595 3F5E AD 60 9D			lda VAUS.OLDX
  6596 3F61 CD 5E 9D			cmp VAUS.X
  6597 				@
  6598 3F64 D0 01			bne @+
  6599 3F66 88				dey
  6600 				@
  6601 3F67 98				tya
  6602 3F68 25 9F			and :STACKORIGIN+9
  6603 3F6A 85 9F			sta :STACKORIGIN+9
  6604 3F6C A0 01			ldy #1
  6605 3F6E A9 00			lda #$00
  6606 3F70 CD 65 9D			cmp VAUS.OLDLEN+1
  6607 3F73 D0 06			bne @+
  6608 3F75 AD 66 9D			lda VAUS.WIDTH
  6609 3F78 CD 64 9D			cmp VAUS.OLDLEN
  6610 				@
  6611 3F7B D0 01			bne @+
  6612 3F7D 88				dey
  6613 				@
  6614 3F7E 98				tya
  6615 3F7F 05 9F			ora :STACKORIGIN+9
  6616 3F81 F0 03			jeq l_0EF0
  6617
  6618 				; optimize FAIL ('REMOVE_VAUS', vservice.pas), line = 1167
  6619
  6620 3F83 20 9A 3C			jsr REMOVE_VAUS
  6621 3F86			l_0EF0
  6622
  6623 				; optimize OK (vservice.pas), line = 1169
  6624
  6625 3F86 AD 5E 9D			lda VAUS.X
  6626 3F89 8D 60 9D			sta VAUS.OLDX
  6627 3F8C A9 00			lda #$00
  6628 3F8E 8D 61 9D			sta VAUS.OLDX+1
  6629
  6630 				; optimize OK (vservice.pas), line = 1170
  6631
  6632 3F91 AD 5F 9D			lda VAUS.Y
  6633 3F94 8D 62 9D			sta VAUS.OLDY
  6634 3F97 A9 00			lda #$00
  6635 3F99 8D 63 9D			sta VAUS.OLDY+1
  6636
  6637 				; optimize OK (vservice.pas), line = 1177
  6638
  6639 3F9C A9 D8			lda #$D8
  6640 3F9E 38 ED 66 9D			sub VAUS.WIDTH
  6641 3FA2 8D 1A AB			sta MIN.B
  6642 3FA5 A9 00			lda #$00
  6643 3FA7 E9 00			sbc #$00
  6644 3FA9 8D 1B AB			sta MIN.B+1
  6645 3FAC AD BC AB			lda X
  6646 3FAF 8D 18 AB			sta MIN.A
  6647 3FB2 AD BD AB			lda X+1
  6648 3FB5 8D 19 AB			sta MIN.A+1
  6649 3FB8 20 F9 25			jsr MIN
  6650 3FBB A9 0A			lda #$0A
  6651 3FBD 8D 12 AB			sta MAX.A
  6652 3FC0 A9 00			lda #$00
  6653 3FC2 8D 13 AB			sta MAX.A+1
  6654 3FC5 AD 1C AB			lda MIN.RESULT
  6655 3FC8 8D 14 AB			sta MAX.B
  6656 3FCB AD 1D AB			lda MIN.RESULT+1
  6657 3FCE 8D 15 AB			sta MAX.B+1
  6658 3FD1 20 CE 25			jsr MAX
  6659 3FD4 AD 16 AB			lda MAX.RESULT
  6660 3FD7 8D 5E 9D			sta VAUS.X
  6661
  6662 				; optimize OK (vservice.pas), line = 1178
  6663
  6664 3FDA A9 C8			lda #$C8
  6665 3FDC 38 ED 67 9D			sub VAUS.HEIGHT
  6666 3FE0 8D 1A AB			sta MIN.B
  6667 3FE3 A9 00			lda #$00
  6668 3FE5 E9 00			sbc #$00
  6669 3FE7 8D 1B AB			sta MIN.B+1
  6670 3FEA AD BE AB			lda Y
  6671 3FED 8D 18 AB			sta MIN.A
  6672 3FF0 AD BF AB			lda Y+1
  6673 3FF3 8D 19 AB			sta MIN.A+1
  6674 3FF6 20 F9 25			jsr MIN
  6675 3FF9 A9 0C			lda #$0C
  6676 3FFB 8D 12 AB			sta MAX.A
  6677 3FFE A9 00			lda #$00
  6678 4000 8D 13 AB			sta MAX.A+1
  6679 4003 AD 1C AB			lda MIN.RESULT
  6680 4006 8D 14 AB			sta MAX.B
  6681 4009 AD 1D AB			lda MIN.RESULT+1
  6682 400C 8D 15 AB			sta MAX.B+1
  6683 400F 20 CE 25			jsr MAX
  6684 4012 AD 16 AB			lda MAX.RESULT
  6685 4015 8D 5F 9D			sta VAUS.Y
  6686
  6687 				; optimize FAIL ('PLACE_VAUS', vservice.pas), line = 1180
  6688
  6689 4018 20 85 3D			jsr PLACE_VAUS
  6690
  6691 				; ------------------------------------------------------------
  6692
  6693 = ABBC			X	= DATAORIGIN+$0F9F
  6694 = ABBE			Y	= DATAORIGIN+$0FA1
  6695
  6696 = ABBC			@VarData	= X
  6697 = 0004			@VarDataSize	= 4
  6698
  6699 401B			@exit
  6700 					.ifdef @new
  6701 					lda <@VarData
  6702 					sta :ztmp
  6703 					lda >@VarData
  6704 					ldy #@VarDataSize-1
  6705 					jmp @FreeMem
  6706 					els
  6707 401B 60				rts						; ret
  6708 					eif
  6709 				.endl
  6710
  6711 401C			.local	REMOVE_BLOCK					; PROCEDURE
  6712
  6713 				; optimize OK (vservice.pas), line = 1194
  6714
  6715 401C AD C0 AB			lda XA
  6716 401F 85 9F			sta :STACKORIGIN+9
  6717 4021 A9 00			lda #$00
  6718 4023 06 9F			asl :STACKORIGIN+9
  6719 4025 2A				rol @
  6720 4026 06 9F			asl :STACKORIGIN+9
  6721 4028 2A				rol @
  6722 4029 06 9F			asl :STACKORIGIN+9
  6723 402B 2A				rol @
  6724 402C 06 9F			asl :STACKORIGIN+9
  6725 402E 2A				rol @
  6726 402F 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  6727 4031 A5 9F			lda :STACKORIGIN+9
  6728 4033 18 69 09			add #$09
  6729 4036 8D C4 AB			sta XS
  6730 4039 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  6731 403B 69 00			adc #$00
  6732 403D 8D C5 AB			sta XS+1
  6733
  6734 				; optimize OK (vservice.pas), line = 1195
  6735
  6736 4040 AD C1 AB			lda YA
  6737 4043 85 9F			sta :STACKORIGIN+9
  6738 4045 A9 00			lda #$00
  6739 4047 06 9F			asl :STACKORIGIN+9
  6740 4049 2A				rol @
  6741 404A 06 9F			asl :STACKORIGIN+9
  6742 404C 2A				rol @
  6743 404D 06 9F			asl :STACKORIGIN+9
  6744 404F 2A				rol @
  6745 4050 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  6746 4052 A5 9F			lda :STACKORIGIN+9
  6747 4054 18 69 16			add #$16
  6748 4057 8D C6 AB			sta YS
  6749 405A A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  6750 405C 69 00			adc #$00
  6751 405E 8D C7 AB			sta YS+1
  6752
  6753 				; optimize OK (vservice.pas), line = 1197
  6754
  6755 4061 A9 00			lda #$00
  6756 4063 8D C3 AB			sta Y
  6757
  6758 4066			l_0F48
  6759 				; --- ForToDoCondition
  6760 4066 AD C3 AB			lda Y
  6761 4069 C9 08			cmp #$08
  6762 406B 90 03 4C A7 42		jcs l_0F56
  6763
  6764 				; optimize OK (vservice.pas), line = 1199
  6765
  6766 4070 AD C6 AB			lda YS
  6767 4073 6D C3 AB			adc Y
  6768 4076 A8				tay
  6769 4077 B9 13 A9			lda adr.MODY,y
  6770 407A 85 86			sta :eax
  6771 407C A9 00			lda #$00
  6772 407E 85 87			sta :eax+1
  6773 4080 AD 6B 9D			lda PATTERN.WIDTH
  6774 4083 85 8E			sta :ecx
  6775 4085 AD 6C 9D			lda PATTERN.WIDTH+1
  6776 4088 85 8F			sta :ecx+1
  6777 					.ifdef fmulinit
  6778 					fmulu_16
  6779 					els
  6780 408A 20 3E 13			imulCX_AL
  6781 					eif
  6782 408D A5 86			lda :eax
  6783 408F 8D C8 AB			sta YH
  6784 4092 A5 87			lda :eax+1
  6785 4094 8D C9 AB			sta YH+1
  6786
  6787 				; optimize OK (vservice.pas), line = 1207
  6788
  6789 4097 A9 00			lda #$00
  6790 4099 8D C2 AB			sta X
  6791
  6792 409C			l_0F72
  6793 				; --- ForToDoCondition
  6794 409C AD C2 AB			lda X
  6795 409F C9 10			cmp #$10
  6796 40A1 90 03 4C 9F 42		jcs l_0F80
  6797
  6798 				; optimize OK (vservice.pas), line = 1208
  6799
  6800 40A6 6D C4 AB			adc XS
  6801 40A9 85 9F			sta :STACKORIGIN+9
  6802 40AB A9 00			lda #$00
  6803 40AD 6D C5 AB			adc XS+1
  6804 40B0 C9 00			cmp #$00
  6805 40B2 D0 04			bne @+
  6806 40B4 A5 9F			lda :STACKORIGIN+9
  6807 40B6 C9 D8			cmp #$D8
  6808 				@
  6809 40B8 90 03 4C 97 42		jcs l_0F97
  6810
  6811 				; optimize OK (vservice.pas), line = 1214
  6812
  6813 40BD AD EA 9C			lda PLAYSCREEN.OFS
  6814 40C0 6D C2 AB			adc X
  6815 40C3 85 9F			sta :STACKORIGIN+9
  6816 40C5 AD EB 9C			lda PLAYSCREEN.OFS+1
  6817 40C8 69 00			adc #$00
  6818 40CA 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  6819 40CC AD EC 9C			lda PLAYSCREEN.OFS+2
  6820 40CF 69 00			adc #$00
  6821 40D1 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
  6822 40D3 AD ED 9C			lda PLAYSCREEN.OFS+3
  6823 40D6 69 00			adc #$00
  6824 40D8 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
  6825 40DA A5 9F			lda :STACKORIGIN+9
  6826 40DC 18 6D C4 AB			add XS
  6827 40E0 85 9F			sta :STACKORIGIN+9
  6828 40E2 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  6829 40E4 6D C5 AB			adc XS+1
  6830 40E7 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  6831 40E9 A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
  6832 40EB 69 00			adc #$00
  6833 40ED 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
  6834 40EF A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
  6835 40F1 69 00			adc #$00
  6836 40F3 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
  6837 40F5 AD C3 AB			lda Y
  6838 40F8 18 6D C6 AB			add YS
  6839 40FC 85 A0			sta :STACKORIGIN+10
  6840 40FE A9 00			lda #$00
  6841 4100 6D C7 AB			adc YS+1
  6842 4103 06 A0			asl :STACKORIGIN+10
  6843 4105 2A				rol @
  6844 4106 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  6845 4108 AD 29 9B			lda ROW
  6846 410B 18 65 A0			add :STACKORIGIN+10
  6847 410E 85 84			sta :bp2
  6848 4110 AD 2A 9B			lda ROW+1
  6849 4113 65 B0			adc :STACKORIGIN+STACKWIDTH+10
  6850 4115 85 85			sta :bp2+1
  6851 4117 A0 00			ldy #$00
  6852 4119 A5 9F			lda :STACKORIGIN+9
  6853 411B 18 71 84			add (:bp2),y
  6854 411E 8D 0B AB			sta GETBYTE.SRC
  6855 4121 C8				iny
  6856 4122 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  6857 4124 71 84			adc (:bp2),y
  6858 4126 8D 0C AB			sta GETBYTE.SRC+1
  6859 4129 A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
  6860 412B 69 00			adc #$00
  6861 412D 8D 0D AB			sta GETBYTE.SRC+2
  6862 4130 A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
  6863 4132 69 00			adc #$00
  6864 4134 8D 0E AB			sta GETBYTE.SRC+3
  6865 4137 20 C2 25			jsr GETBYTE
  6866 413A AD 0F AB			lda GETBYTE.RESULT
  6867 413D 29 80			and #$80
  6868 413F 8D CB AB			sta SHADOW
  6869
  6870 				; optimize OK (vservice.pas), line = 1218
  6871
  6872 4142 AD C2 AB			lda X
  6873 4145 18 6D C4 AB			add XS
  6874 4149 85 A0			sta :STACKORIGIN+10
  6875 414B A9 00			lda #$00
  6876 414D 6D C5 AB			adc XS+1
  6877 4150 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  6878 4152 AD 2B 9B			lda MODX
  6879 4155 18 65 A0			add :STACKORIGIN+10
  6880 4158 A8				tay
  6881 4159 AD 2C 9B			lda MODX+1
  6882 415C 65 B0			adc :STACKORIGIN+STACKWIDTH+10
  6883 415E 85 83			sta :bp+1
  6884 4160 AD 6F 9D			lda PATTERN.OFS
  6885 4163 18 71 82			add (:bp),y
  6886 4166 85 9F			sta :STACKORIGIN+9
  6887 4168 AD 70 9D			lda PATTERN.OFS+1
  6888 416B 69 00			adc #$00
  6889 416D 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  6890 416F AD 71 9D			lda PATTERN.OFS+2
  6891 4172 69 00			adc #$00
  6892 4174 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
  6893 4176 AD 72 9D			lda PATTERN.OFS+3
  6894 4179 69 00			adc #$00
  6895 417B 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
  6896 417D A5 9F			lda :STACKORIGIN+9
  6897 417F 18 6D C8 AB			add YH
  6898 4183 8D 0B AB			sta GETBYTE.SRC
  6899 4186 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  6900 4188 6D C9 AB			adc YH+1
  6901 418B 8D 0C AB			sta GETBYTE.SRC+1
  6902 418E A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
  6903 4190 69 00			adc #$00
  6904 4192 8D 0D AB			sta GETBYTE.SRC+2
  6905 4195 A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
  6906 4197 69 00			adc #$00
  6907 4199 8D 0E AB			sta GETBYTE.SRC+3
  6908 419C 20 C2 25			jsr GETBYTE
  6909 419F E8				inx
  6910 41A0 AD 0F AB			lda GETBYTE.RESULT
  6911 41A3 29 7F			and #$7F
  6912 41A5 0D CB AB			ora SHADOW
  6913 41A8 8D CA AB			sta CL
  6914 41AB CA				dex
  6915
  6916 				; optimize OK (vservice.pas), line = 1222
  6917
  6918 41AC AD C2 AB			lda X
  6919 41AF 18 6D C4 AB			add XS
  6920 41B3 85 A0			sta :STACKORIGIN+10
  6921 41B5 A9 00			lda #$00
  6922 41B7 6D C5 AB			adc XS+1
  6923 41BA 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  6924 41BC A9 00			lda #$00
  6925 41BE 69 00			adc #$00
  6926 41C0 85 C0			sta :STACKORIGIN+STACKWIDTH*2+10
  6927 41C2 A9 00			lda #$00
  6928 41C4 69 00			adc #$00
  6929 41C6 85 D0			sta :STACKORIGIN+STACKWIDTH*3+10
  6930 41C8 AD C3 AB			lda Y
  6931 41CB 18 6D C6 AB			add YS
  6932 41CF 85 A1			sta :STACKORIGIN+11
  6933 41D1 A9 00			lda #$00
  6934 41D3 6D C7 AB			adc YS+1
  6935 41D6 06 A1			asl :STACKORIGIN+11
  6936 41D8 2A				rol @
  6937 41D9 85 B1			sta :STACKORIGIN+STACKWIDTH+11
  6938 41DB AD 29 9B			lda ROW
  6939 41DE 18 65 A1			add :STACKORIGIN+11
  6940 41E1 85 84			sta :bp2
  6941 41E3 AD 2A 9B			lda ROW+1
  6942 41E6 65 B1			adc :STACKORIGIN+STACKWIDTH+11
  6943 41E8 85 85			sta :bp2+1
  6944 41EA A0 00			ldy #$00
  6945 41EC A5 A0			lda :STACKORIGIN+10
  6946 41EE 18 71 84			add (:bp2),y
  6947 41F1 8D 06 AB			sta PUTBYTE.DST
  6948 41F4 C8				iny
  6949 41F5 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
  6950 41F7 71 84			adc (:bp2),y
  6951 41F9 8D 07 AB			sta PUTBYTE.DST+1
  6952 41FC A5 C0			lda :STACKORIGIN+STACKWIDTH*2+10
  6953 41FE 69 00			adc #$00
  6954 4200 8D 08 AB			sta PUTBYTE.DST+2
  6955 4203 A5 D0			lda :STACKORIGIN+STACKWIDTH*3+10
  6956 4205 69 00			adc #$00
  6957 4207 8D 09 AB			sta PUTBYTE.DST+3
  6958 420A AD CA AB			lda CL
  6959 420D 8D 0A AB			sta PUTBYTE.V
  6960 4210 20 B8 25			jsr PUTBYTE
  6961
  6962 				; optimize OK (vservice.pas), line = 1227
  6963
  6964 4213 AD EA 9C			lda PLAYSCREEN.OFS
  6965 4216 18 6D C2 AB			add X
  6966 421A 85 A0			sta :STACKORIGIN+10
  6967 421C AD EB 9C			lda PLAYSCREEN.OFS+1
  6968 421F 69 00			adc #$00
  6969 4221 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  6970 4223 AD EC 9C			lda PLAYSCREEN.OFS+2
  6971 4226 69 00			adc #$00
  6972 4228 85 C0			sta :STACKORIGIN+STACKWIDTH*2+10
  6973 422A AD ED 9C			lda PLAYSCREEN.OFS+3
  6974 422D 69 00			adc #$00
  6975 422F 85 D0			sta :STACKORIGIN+STACKWIDTH*3+10
  6976 4231 A5 A0			lda :STACKORIGIN+10
  6977 4233 18 6D C4 AB			add XS
  6978 4237 85 A0			sta :STACKORIGIN+10
  6979 4239 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
  6980 423B 6D C5 AB			adc XS+1
  6981 423E 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  6982 4240 A5 C0			lda :STACKORIGIN+STACKWIDTH*2+10
  6983 4242 69 00			adc #$00
  6984 4244 85 C0			sta :STACKORIGIN+STACKWIDTH*2+10
  6985 4246 A5 D0			lda :STACKORIGIN+STACKWIDTH*3+10
  6986 4248 69 00			adc #$00
  6987 424A 85 D0			sta :STACKORIGIN+STACKWIDTH*3+10
  6988 424C AD C3 AB			lda Y
  6989 424F 18 6D C6 AB			add YS
  6990 4253 85 A1			sta :STACKORIGIN+11
  6991 4255 A9 00			lda #$00
  6992 4257 6D C7 AB			adc YS+1
  6993 425A 06 A1			asl :STACKORIGIN+11
  6994 425C 2A				rol @
  6995 425D 85 B1			sta :STACKORIGIN+STACKWIDTH+11
  6996 425F AD 29 9B			lda ROW
  6997 4262 18 65 A1			add :STACKORIGIN+11
  6998 4265 85 84			sta :bp2
  6999 4267 AD 2A 9B			lda ROW+1
  7000 426A 65 B1			adc :STACKORIGIN+STACKWIDTH+11
  7001 426C 85 85			sta :bp2+1
  7002 426E A0 00			ldy #$00
  7003 4270 A5 A0			lda :STACKORIGIN+10
  7004 4272 18 71 84			add (:bp2),y
  7005 4275 8D 06 AB			sta PUTBYTE.DST
  7006 4278 C8				iny
  7007 4279 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
  7008 427B 71 84			adc (:bp2),y
  7009 427D 8D 07 AB			sta PUTBYTE.DST+1
  7010 4280 A5 C0			lda :STACKORIGIN+STACKWIDTH*2+10
  7011 4282 69 00			adc #$00
  7012 4284 8D 08 AB			sta PUTBYTE.DST+2
  7013 4287 A5 D0			lda :STACKORIGIN+STACKWIDTH*3+10
  7014 4289 69 00			adc #$00
  7015 428B 8D 09 AB			sta PUTBYTE.DST+3
  7016 428E AD CA AB			lda CL
  7017 4291 8D 0A AB			sta PUTBYTE.V
  7018 4294 20 B8 25			jsr PUTBYTE
  7019 4297			l_0F97
  7020
  7021 				; --- ForToDoEpilog
  7022 4297 EE C2 AB			inc X
  7023 429A F0 03 4C 9C 40		jne l_0F72
  7024 429F			l_0F80
  7025
  7026 				; --- ForToDoEpilog
  7027 429F EE C3 AB			inc Y
  7028 42A2 F0 03 4C 66 40		jne l_0F48
  7029 42A7			l_0F56
  7030
  7031 				; optimize OK (vservice.pas), line = 1237
  7032
  7033 42A7 AD C6 AB			lda YS
  7034 42AA 18 69 04			add #$04
  7035 42AD 8D C3 AB			sta Y
  7036 42B0 AD C6 AB			lda YS
  7037 42B3 18 69 0C			add #$0C
  7038 42B6 8D BA 42			sta @FORTMP_1031_0
  7039
  7040 42B9			l_1034
  7041 				; --- ForToDoCondition
  7042 42B9 A9 00			lda @FORTMP_1031_0::#$00
  7043 42BB CD C3 AB			cmp Y
  7044 42BE B0 03 4C F7 43		jcc l_1042
  7045
  7046 				; optimize OK (vservice.pas), line = 1238
  7047
  7048 42C3 AD C4 AB			lda XS
  7049 42C6 18 69 08			add #$08
  7050 42C9 8D C2 AB			sta X
  7051 42CC AD C4 AB			lda XS
  7052 42CF 18 69 18			add #$18
  7053 42D2 8D D6 42			sta @FORTMP_1052_0
  7054
  7055 42D5			l_1055
  7056 				; --- ForToDoCondition
  7057 42D5 A9 00			lda @FORTMP_1052_0::#$00
  7058 42D7 CD C2 AB			cmp X
  7059 42DA B0 03 4C EF 43		jcc l_1063
  7060
  7061 				; optimize OK (vservice.pas), line = 1254
  7062
  7063 42DF AD C2 AB			lda X
  7064 42E2 C9 D8			cmp #$D8
  7065 42E4 90 03 4C E7 43		jcs l_1075
  7066
  7067 				; optimize OK (vservice.pas), line = 1258
  7068
  7069 42E9 AD EA 9C			lda PLAYSCREEN.OFS
  7070 42EC 6D C2 AB			adc X
  7071 42EF 85 9F			sta :STACKORIGIN+9
  7072 42F1 AD EB 9C			lda PLAYSCREEN.OFS+1
  7073 42F4 69 00			adc #$00
  7074 42F6 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  7075 42F8 AD EC 9C			lda PLAYSCREEN.OFS+2
  7076 42FB 69 00			adc #$00
  7077 42FD 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
  7078 42FF AD ED 9C			lda PLAYSCREEN.OFS+3
  7079 4302 69 00			adc #$00
  7080 4304 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
  7081 4306 A9 00			lda #$00
  7082 4308 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  7083 430A AD C3 AB			lda Y
  7084 430D 0A				asl @
  7085 430E 26 B0			rol :STACKORIGIN+STACKWIDTH+10
  7086 4310 18 6D 29 9B			add ROW
  7087 4314 85 84			sta :bp2
  7088 4316 AD 2A 9B			lda ROW+1
  7089 4319 65 B0			adc :STACKORIGIN+STACKWIDTH+10
  7090 431B 85 85			sta :bp2+1
  7091 431D A0 00			ldy #$00
  7092 431F A5 9F			lda :STACKORIGIN+9
  7093 4321 18 71 84			add (:bp2),y
  7094 4324 8D 0B AB			sta GETBYTE.SRC
  7095 4327 C8				iny
  7096 4328 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  7097 432A 71 84			adc (:bp2),y
  7098 432C 8D 0C AB			sta GETBYTE.SRC+1
  7099 432F A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
  7100 4331 69 00			adc #$00
  7101 4333 8D 0D AB			sta GETBYTE.SRC+2
  7102 4336 A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
  7103 4338 69 00			adc #$00
  7104 433A 8D 0E AB			sta GETBYTE.SRC+3
  7105 433D 20 C2 25			jsr GETBYTE
  7106 4340 AD 0F AB			lda GETBYTE.RESULT
  7107 4343 09 80			ora #$80
  7108 4345 8D CA AB			sta CL
  7109
  7110 				; optimize OK (vservice.pas), line = 1262
  7111
  7112 4348 A9 00			lda #$00
  7113 434A 85 B1			sta :STACKORIGIN+STACKWIDTH+11
  7114 434C AD C3 AB			lda Y
  7115 434F 0A				asl @
  7116 4350 26 B1			rol :STACKORIGIN+STACKWIDTH+11
  7117 4352 18 6D 29 9B			add ROW
  7118 4356 85 84			sta :bp2
  7119 4358 AD 2A 9B			lda ROW+1
  7120 435B 65 B1			adc :STACKORIGIN+STACKWIDTH+11
  7121 435D 85 85			sta :bp2+1
  7122 435F A0 00			ldy #$00
  7123 4361 AD C2 AB			lda X
  7124 4364 18 71 84			add (:bp2),y
  7125 4367 8D 06 AB			sta PUTBYTE.DST
  7126 436A C8				iny
  7127 436B A9 00			lda #$00
  7128 436D 71 84			adc (:bp2),y
  7129 436F 8D 07 AB			sta PUTBYTE.DST+1
  7130 4372 A9 00			lda #$00
  7131 4374 69 00			adc #$00
  7132 4376 8D 08 AB			sta PUTBYTE.DST+2
  7133 4379 A9 00			lda #$00
  7134 437B 69 00			adc #$00
  7135 437D 8D 09 AB			sta PUTBYTE.DST+3
  7136 4380 AD CA AB			lda CL
  7137 4383 8D 0A AB			sta PUTBYTE.V
  7138 4386 20 B8 25			jsr PUTBYTE
  7139
  7140 				; optimize OK (vservice.pas), line = 1267
  7141
  7142 4389 AD EA 9C			lda PLAYSCREEN.OFS
  7143 438C 18 6D C2 AB			add X
  7144 4390 85 A0			sta :STACKORIGIN+10
  7145 4392 AD EB 9C			lda PLAYSCREEN.OFS+1
  7146 4395 69 00			adc #$00
  7147 4397 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  7148 4399 AD EC 9C			lda PLAYSCREEN.OFS+2
  7149 439C 69 00			adc #$00
  7150 439E 85 C0			sta :STACKORIGIN+STACKWIDTH*2+10
  7151 43A0 AD ED 9C			lda PLAYSCREEN.OFS+3
  7152 43A3 69 00			adc #$00
  7153 43A5 85 D0			sta :STACKORIGIN+STACKWIDTH*3+10
  7154 43A7 A9 00			lda #$00
  7155 43A9 85 B1			sta :STACKORIGIN+STACKWIDTH+11
  7156 43AB AD C3 AB			lda Y
  7157 43AE 0A				asl @
  7158 43AF 26 B1			rol :STACKORIGIN+STACKWIDTH+11
  7159 43B1 18 6D 29 9B			add ROW
  7160 43B5 85 84			sta :bp2
  7161 43B7 AD 2A 9B			lda ROW+1
  7162 43BA 65 B1			adc :STACKORIGIN+STACKWIDTH+11
  7163 43BC 85 85			sta :bp2+1
  7164 43BE A0 00			ldy #$00
  7165 43C0 A5 A0			lda :STACKORIGIN+10
  7166 43C2 18 71 84			add (:bp2),y
  7167 43C5 8D 06 AB			sta PUTBYTE.DST
  7168 43C8 C8				iny
  7169 43C9 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
  7170 43CB 71 84			adc (:bp2),y
  7171 43CD 8D 07 AB			sta PUTBYTE.DST+1
  7172 43D0 A5 C0			lda :STACKORIGIN+STACKWIDTH*2+10
  7173 43D2 69 00			adc #$00
  7174 43D4 8D 08 AB			sta PUTBYTE.DST+2
  7175 43D7 A5 D0			lda :STACKORIGIN+STACKWIDTH*3+10
  7176 43D9 69 00			adc #$00
  7177 43DB 8D 09 AB			sta PUTBYTE.DST+3
  7178 43DE AD CA AB			lda CL
  7179 43E1 8D 0A AB			sta PUTBYTE.V
  7180 43E4 20 B8 25			jsr PUTBYTE
  7181 43E7			l_1075
  7182
  7183 				; --- ForToDoEpilog
  7184 43E7 EE C2 AB			inc X
  7185 43EA F0 03 4C D5 42		jne l_1055
  7186 43EF			l_1063
  7187
  7188 				; --- ForToDoEpilog
  7189 43EF EE C3 AB			inc Y
  7190 43F2 F0 03 4C B9 42		jne l_1034
  7191 43F7			l_1042
  7192
  7193 				; ------------------------------------------------------------
  7194
  7195 = ABC0			XA	= DATAORIGIN+$0FA3
  7196 = ABC1			YA	= DATAORIGIN+$0FA4
  7197 = ABC2			X	= DATAORIGIN+$0FA5
  7198 = ABC3			Y	= DATAORIGIN+$0FA6
  7199 = ABC4			XS	= DATAORIGIN+$0FA7
  7200 = ABC6			YS	= DATAORIGIN+$0FA9
  7201 = ABC8			YH	= DATAORIGIN+$0FAB
  7202 = ABCA			CL	= DATAORIGIN+$0FAD
  7203 = ABCB			SHADOW	= DATAORIGIN+$0FAE
  7204
  7205 = ABC0			@VarData	= XA
  7206 = 000C			@VarDataSize	= 12
  7207
  7208 43F7			@exit
  7209 					.ifdef @new
  7210 					lda <@VarData
  7211 					sta :ztmp
  7212 					lda >@VarData
  7213 					ldy #@VarDataSize-1
  7214 					jmp @FreeMem
  7215 					els
  7216 43F7 60				rts						; ret
  7217 					eif
  7218 				.endl
  7219
  7220 43F8			.local	PLACE_BLOCK					; PROCEDURE
  7221
  7222 				; optimize OK (vservice.pas), line = 1282
  7223
  7224 43F8 AD CE AB			lda XA
  7225 43FB 85 9F			sta :STACKORIGIN+9
  7226 43FD A9 00			lda #$00
  7227 43FF 06 9F			asl :STACKORIGIN+9
  7228 4401 2A				rol @
  7229 4402 06 9F			asl :STACKORIGIN+9
  7230 4404 2A				rol @
  7231 4405 06 9F			asl :STACKORIGIN+9
  7232 4407 2A				rol @
  7233 4408 06 9F			asl :STACKORIGIN+9
  7234 440A 2A				rol @
  7235 440B 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  7236 440D A5 9F			lda :STACKORIGIN+9
  7237 440F 18 69 09			add #$09
  7238 4412 8D D3 AB			sta XS
  7239 4415 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  7240 4417 69 00			adc #$00
  7241 4419 8D D4 AB			sta XS+1
  7242
  7243 				; optimize OK (vservice.pas), line = 1283
  7244
  7245 441C AD CF AB			lda YA
  7246 441F 85 9F			sta :STACKORIGIN+9
  7247 4421 A9 00			lda #$00
  7248 4423 06 9F			asl :STACKORIGIN+9
  7249 4425 2A				rol @
  7250 4426 06 9F			asl :STACKORIGIN+9
  7251 4428 2A				rol @
  7252 4429 06 9F			asl :STACKORIGIN+9
  7253 442B 2A				rol @
  7254 442C 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  7255 442E A5 9F			lda :STACKORIGIN+9
  7256 4430 18 69 16			add #$16
  7257 4433 8D D5 AB			sta YS
  7258 4436 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  7259 4438 69 00			adc #$00
  7260 443A 8D D6 AB			sta YS+1
  7261
  7262 				; optimize OK (vservice.pas), line = 1285
  7263
  7264 443D A9 00			lda #$00
  7265 443F 8D D2 AB			sta Y
  7266
  7267 4442			l_10E8
  7268 				; --- ForToDoCondition
  7269 4442 AD D2 AB			lda Y
  7270 4445 C9 08			cmp #$08
  7271 4447 90 03 4C F3 46		jcs l_10F6
  7272
  7273 				; optimize OK (vservice.pas), line = 1286
  7274
  7275 444C A9 00			lda #$00
  7276 444E 8D D1 AB			sta X
  7277
  7278 4451			l_10FF
  7279 				; --- ForToDoCondition
  7280 4451 AD D1 AB			lda X
  7281 4454 C9 10			cmp #$10
  7282 4456 90 03 4C EB 46		jcs l_110D
  7283
  7284 				; optimize OK (vservice.pas), line = 1291
  7285
  7286 445B AD EA 9C			lda PLAYSCREEN.OFS
  7287 445E 6D D3 AB			adc XS
  7288 4461 85 9F			sta :STACKORIGIN+9
  7289 4463 AD EB 9C			lda PLAYSCREEN.OFS+1
  7290 4466 6D D4 AB			adc XS+1
  7291 4469 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  7292 446B AD EC 9C			lda PLAYSCREEN.OFS+2
  7293 446E 69 00			adc #$00
  7294 4470 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
  7295 4472 AD ED 9C			lda PLAYSCREEN.OFS+3
  7296 4475 69 00			adc #$00
  7297 4477 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
  7298 4479 A5 9F			lda :STACKORIGIN+9
  7299 447B 18 6D D1 AB			add X
  7300 447F 85 9F			sta :STACKORIGIN+9
  7301 4481 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  7302 4483 69 00			adc #$00
  7303 4485 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  7304 4487 A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
  7305 4489 69 00			adc #$00
  7306 448B 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
  7307 448D A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
  7308 448F 69 00			adc #$00
  7309 4491 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
  7310 4493 AD D5 AB			lda YS
  7311 4496 18 6D D2 AB			add Y
  7312 449A 85 A0			sta :STACKORIGIN+10
  7313 449C AD D6 AB			lda YS+1
  7314 449F 69 00			adc #$00
  7315 44A1 06 A0			asl :STACKORIGIN+10
  7316 44A3 2A				rol @
  7317 44A4 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  7318 44A6 AD 29 9B			lda ROW
  7319 44A9 18 65 A0			add :STACKORIGIN+10
  7320 44AC 85 84			sta :bp2
  7321 44AE AD 2A 9B			lda ROW+1
  7322 44B1 65 B0			adc :STACKORIGIN+STACKWIDTH+10
  7323 44B3 85 85			sta :bp2+1
  7324 44B5 A0 00			ldy #$00
  7325 44B7 A5 9F			lda :STACKORIGIN+9
  7326 44B9 18 71 84			add (:bp2),y
  7327 44BC 8D 0B AB			sta GETBYTE.SRC
  7328 44BF C8				iny
  7329 44C0 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  7330 44C2 71 84			adc (:bp2),y
  7331 44C4 8D 0C AB			sta GETBYTE.SRC+1
  7332 44C7 A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
  7333 44C9 69 00			adc #$00
  7334 44CB 8D 0D AB			sta GETBYTE.SRC+2
  7335 44CE A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
  7336 44D0 69 00			adc #$00
  7337 44D2 8D 0E AB			sta GETBYTE.SRC+3
  7338 44D5 20 C2 25			jsr GETBYTE
  7339 44D8 AD 0F AB			lda GETBYTE.RESULT
  7340 44DB 29 80			and #$80
  7341 44DD 8D D9 AB			sta SHADOW
  7342
  7343 				; optimize OK (vservice.pas), line = 1293
  7344
  7345 44E0 AD D2 AB			lda Y
  7346 44E3 C9 07			cmp #$07
  7347 44E5 90 03 4C F8 45		jcs l_114C
  7348 44EA AD D1 AB			lda X
  7349 44ED C9 0F			cmp #$0F
  7350 44EF 90 03 4C F8 45		jcs l_114C
  7351
  7352 				; optimize OK (vservice.pas), line = 1298
  7353
  7354 44F4 AD D0 AB			lda BLOCK
  7355 44F7 38 E9 01			sub #$01
  7356 44FA 85 9F			sta :STACKORIGIN+9
  7357 44FC A9 00			lda #$00
  7358 44FE E9 00			sbc #$00
  7359 4500 A5 9F			lda :STACKORIGIN+9
  7360 4502 29 0F			and #$0F
  7361 4504 A8				tay
  7362 4505 B9 76 10			lda adr.COLORBLOCK,y
  7363 4508 29 7F			and #$7F
  7364 450A 0D D9 AB			ora SHADOW
  7365 450D 8D D7 AB			sta CL
  7366
  7367 				; optimize OK (vservice.pas), line = 1301
  7368
  7369 4510 AD D3 AB			lda XS
  7370 4513 18 6D D1 AB			add X
  7371 4517 85 A0			sta :STACKORIGIN+10
  7372 4519 AD D4 AB			lda XS+1
  7373 451C 69 00			adc #$00
  7374 451E 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  7375 4520 A9 00			lda #$00
  7376 4522 69 00			adc #$00
  7377 4524 85 C0			sta :STACKORIGIN+STACKWIDTH*2+10
  7378 4526 A9 00			lda #$00
  7379 4528 69 00			adc #$00
  7380 452A 85 D0			sta :STACKORIGIN+STACKWIDTH*3+10
  7381 452C AD D5 AB			lda YS
  7382 452F 18 6D D2 AB			add Y
  7383 4533 85 A1			sta :STACKORIGIN+11
  7384 4535 AD D6 AB			lda YS+1
  7385 4538 69 00			adc #$00
  7386 453A 06 A1			asl :STACKORIGIN+11
  7387 453C 2A				rol @
  7388 453D 85 B1			sta :STACKORIGIN+STACKWIDTH+11
  7389 453F AD 29 9B			lda ROW
  7390 4542 18 65 A1			add :STACKORIGIN+11
  7391 4545 85 84			sta :bp2
  7392 4547 AD 2A 9B			lda ROW+1
  7393 454A 65 B1			adc :STACKORIGIN+STACKWIDTH+11
  7394 454C 85 85			sta :bp2+1
  7395 454E A0 00			ldy #$00
  7396 4550 A5 A0			lda :STACKORIGIN+10
  7397 4552 18 71 84			add (:bp2),y
  7398 4555 8D 06 AB			sta PUTBYTE.DST
  7399 4558 C8				iny
  7400 4559 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
  7401 455B 71 84			adc (:bp2),y
  7402 455D 8D 07 AB			sta PUTBYTE.DST+1
  7403 4560 A5 C0			lda :STACKORIGIN+STACKWIDTH*2+10
  7404 4562 69 00			adc #$00
  7405 4564 8D 08 AB			sta PUTBYTE.DST+2
  7406 4567 A5 D0			lda :STACKORIGIN+STACKWIDTH*3+10
  7407 4569 69 00			adc #$00
  7408 456B 8D 09 AB			sta PUTBYTE.DST+3
  7409 456E AD D7 AB			lda CL
  7410 4571 8D 0A AB			sta PUTBYTE.V
  7411 4574 20 B8 25			jsr PUTBYTE
  7412
  7413 				; optimize OK (vservice.pas), line = 1304
  7414
  7415 4577 AD EA 9C			lda PLAYSCREEN.OFS
  7416 457A 18 6D D3 AB			add XS
  7417 457E 85 A0			sta :STACKORIGIN+10
  7418 4580 AD EB 9C			lda PLAYSCREEN.OFS+1
  7419 4583 6D D4 AB			adc XS+1
  7420 4586 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  7421 4588 AD EC 9C			lda PLAYSCREEN.OFS+2
  7422 458B 69 00			adc #$00
  7423 458D 85 C0			sta :STACKORIGIN+STACKWIDTH*2+10
  7424 458F AD ED 9C			lda PLAYSCREEN.OFS+3
  7425 4592 69 00			adc #$00
  7426 4594 85 D0			sta :STACKORIGIN+STACKWIDTH*3+10
  7427 4596 A5 A0			lda :STACKORIGIN+10
  7428 4598 18 6D D1 AB			add X
  7429 459C 85 A0			sta :STACKORIGIN+10
  7430 459E A5 B0			lda :STACKORIGIN+STACKWIDTH+10
  7431 45A0 69 00			adc #$00
  7432 45A2 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  7433 45A4 A5 C0			lda :STACKORIGIN+STACKWIDTH*2+10
  7434 45A6 69 00			adc #$00
  7435 45A8 85 C0			sta :STACKORIGIN+STACKWIDTH*2+10
  7436 45AA A5 D0			lda :STACKORIGIN+STACKWIDTH*3+10
  7437 45AC 69 00			adc #$00
  7438 45AE 85 D0			sta :STACKORIGIN+STACKWIDTH*3+10
  7439 45B0 AD D5 AB			lda YS
  7440 45B3 18 6D D2 AB			add Y
  7441 45B7 85 A1			sta :STACKORIGIN+11
  7442 45B9 AD D6 AB			lda YS+1
  7443 45BC 69 00			adc #$00
  7444 45BE 06 A1			asl :STACKORIGIN+11
  7445 45C0 2A				rol @
  7446 45C1 85 B1			sta :STACKORIGIN+STACKWIDTH+11
  7447 45C3 AD 29 9B			lda ROW
  7448 45C6 18 65 A1			add :STACKORIGIN+11
  7449 45C9 85 84			sta :bp2
  7450 45CB AD 2A 9B			lda ROW+1
  7451 45CE 65 B1			adc :STACKORIGIN+STACKWIDTH+11
  7452 45D0 85 85			sta :bp2+1
  7453 45D2 A0 00			ldy #$00
  7454 45D4 A5 A0			lda :STACKORIGIN+10
  7455 45D6 18 71 84			add (:bp2),y
  7456 45D9 8D 06 AB			sta PUTBYTE.DST
  7457 45DC C8				iny
  7458 45DD A5 B0			lda :STACKORIGIN+STACKWIDTH+10
  7459 45DF 71 84			adc (:bp2),y
  7460 45E1 8D 07 AB			sta PUTBYTE.DST+1
  7461 45E4 A5 C0			lda :STACKORIGIN+STACKWIDTH*2+10
  7462 45E6 69 00			adc #$00
  7463 45E8 8D 08 AB			sta PUTBYTE.DST+2
  7464 45EB A5 D0			lda :STACKORIGIN+STACKWIDTH*3+10
  7465 45ED 69 00			adc #$00
  7466 45EF 8D 09 AB			sta PUTBYTE.DST+3
  7467 45F2 AD D7 AB			lda CL
  7468 45F5 4C DD 46			jmp l_11AB
  7469 45F8			l_114C
  7470
  7471 				; optimize OK (vservice.pas), line = 1312
  7472
  7473 45F8 AD D3 AB			lda XS
  7474 45FB 18 6D D1 AB			add X
  7475 45FF 85 A0			sta :STACKORIGIN+10
  7476 4601 AD D4 AB			lda XS+1
  7477 4604 69 00			adc #$00
  7478 4606 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  7479 4608 A9 00			lda #$00
  7480 460A 69 00			adc #$00
  7481 460C 85 C0			sta :STACKORIGIN+STACKWIDTH*2+10
  7482 460E A9 00			lda #$00
  7483 4610 69 00			adc #$00
  7484 4612 85 D0			sta :STACKORIGIN+STACKWIDTH*3+10
  7485 4614 AD D5 AB			lda YS
  7486 4617 18 6D D2 AB			add Y
  7487 461B 85 A1			sta :STACKORIGIN+11
  7488 461D AD D6 AB			lda YS+1
  7489 4620 69 00			adc #$00
  7490 4622 06 A1			asl :STACKORIGIN+11
  7491 4624 2A				rol @
  7492 4625 85 B1			sta :STACKORIGIN+STACKWIDTH+11
  7493 4627 AD 29 9B			lda ROW
  7494 462A 18 65 A1			add :STACKORIGIN+11
  7495 462D 85 84			sta :bp2
  7496 462F AD 2A 9B			lda ROW+1
  7497 4632 65 B1			adc :STACKORIGIN+STACKWIDTH+11
  7498 4634 85 85			sta :bp2+1
  7499 4636 A0 00			ldy #$00
  7500 4638 A5 A0			lda :STACKORIGIN+10
  7501 463A 18 71 84			add (:bp2),y
  7502 463D 8D 06 AB			sta PUTBYTE.DST
  7503 4640 C8				iny
  7504 4641 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
  7505 4643 71 84			adc (:bp2),y
  7506 4645 8D 07 AB			sta PUTBYTE.DST+1
  7507 4648 A5 C0			lda :STACKORIGIN+STACKWIDTH*2+10
  7508 464A 69 00			adc #$00
  7509 464C 8D 08 AB			sta PUTBYTE.DST+2
  7510 464F A5 D0			lda :STACKORIGIN+STACKWIDTH*3+10
  7511 4651 69 00			adc #$00
  7512 4653 8D 09 AB			sta PUTBYTE.DST+3
  7513 4656 AD D9 AB			lda SHADOW
  7514 4659 8D 0A AB			sta PUTBYTE.V
  7515 465C 20 B8 25			jsr PUTBYTE
  7516
  7517 				; optimize OK (vservice.pas), line = 1315
  7518
  7519 465F AD EA 9C			lda PLAYSCREEN.OFS
  7520 4662 18 6D D3 AB			add XS
  7521 4666 85 A0			sta :STACKORIGIN+10
  7522 4668 AD EB 9C			lda PLAYSCREEN.OFS+1
  7523 466B 6D D4 AB			adc XS+1
  7524 466E 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  7525 4670 AD EC 9C			lda PLAYSCREEN.OFS+2
  7526 4673 69 00			adc #$00
  7527 4675 85 C0			sta :STACKORIGIN+STACKWIDTH*2+10
  7528 4677 AD ED 9C			lda PLAYSCREEN.OFS+3
  7529 467A 69 00			adc #$00
  7530 467C 85 D0			sta :STACKORIGIN+STACKWIDTH*3+10
  7531 467E A5 A0			lda :STACKORIGIN+10
  7532 4680 18 6D D1 AB			add X
  7533 4684 85 A0			sta :STACKORIGIN+10
  7534 4686 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
  7535 4688 69 00			adc #$00
  7536 468A 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  7537 468C A5 C0			lda :STACKORIGIN+STACKWIDTH*2+10
  7538 468E 69 00			adc #$00
  7539 4690 85 C0			sta :STACKORIGIN+STACKWIDTH*2+10
  7540 4692 A5 D0			lda :STACKORIGIN+STACKWIDTH*3+10
  7541 4694 69 00			adc #$00
  7542 4696 85 D0			sta :STACKORIGIN+STACKWIDTH*3+10
  7543 4698 AD D5 AB			lda YS
  7544 469B 18 6D D2 AB			add Y
  7545 469F 85 A1			sta :STACKORIGIN+11
  7546 46A1 AD D6 AB			lda YS+1
  7547 46A4 69 00			adc #$00
  7548 46A6 06 A1			asl :STACKORIGIN+11
  7549 46A8 2A				rol @
  7550 46A9 85 B1			sta :STACKORIGIN+STACKWIDTH+11
  7551 46AB AD 29 9B			lda ROW
  7552 46AE 18 65 A1			add :STACKORIGIN+11
  7553 46B1 85 84			sta :bp2
  7554 46B3 AD 2A 9B			lda ROW+1
  7555 46B6 65 B1			adc :STACKORIGIN+STACKWIDTH+11
  7556 46B8 85 85			sta :bp2+1
  7557 46BA A0 00			ldy #$00
  7558 46BC A5 A0			lda :STACKORIGIN+10
  7559 46BE 18 71 84			add (:bp2),y
  7560 46C1 8D 06 AB			sta PUTBYTE.DST
  7561 46C4 C8				iny
  7562 46C5 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
  7563 46C7 71 84			adc (:bp2),y
  7564 46C9 8D 07 AB			sta PUTBYTE.DST+1
  7565 46CC A5 C0			lda :STACKORIGIN+STACKWIDTH*2+10
  7566 46CE 69 00			adc #$00
  7567 46D0 8D 08 AB			sta PUTBYTE.DST+2
  7568 46D3 A5 D0			lda :STACKORIGIN+STACKWIDTH*3+10
  7569 46D5 69 00			adc #$00
  7570 46D7 8D 09 AB			sta PUTBYTE.DST+3
  7571 46DA AD D9 AB			lda SHADOW
  7572 46DD			l_11AB
  7573 46DD 8D 0A AB			sta PUTBYTE.V
  7574 46E0 20 B8 25			jsr PUTBYTE
  7575
  7576 				; --- ForToDoEpilog
  7577 46E3 EE D1 AB			inc X
  7578 46E6 F0 03 4C 51 44		jne l_10FF
  7579 46EB			l_110D
  7580
  7581 				; --- ForToDoEpilog
  7582 46EB EE D2 AB			inc Y
  7583 46EE F0 03 4C 42 44		jne l_10E8
  7584 46F3			l_10F6
  7585
  7586 				; optimize OK (vservice.pas), line = 1320
  7587
  7588 46F3 AD D5 AB			lda YS
  7589 46F6 18 69 04			add #$04
  7590 46F9 8D D2 AB			sta Y
  7591 46FC AD D5 AB			lda YS
  7592 46FF 18 69 0C			add #$0C
  7593 4702 8D 06 47			sta @FORTMP_11FF_0
  7594
  7595 4705			l_1202
  7596 				; --- ForToDoCondition
  7597 4705 A9 00			lda @FORTMP_11FF_0::#$00
  7598 4707 CD D2 AB			cmp Y
  7599 470A B0 03 4C 43 48		jcc l_1210
  7600
  7601 				; optimize OK (vservice.pas), line = 1321
  7602
  7603 470F AD D3 AB			lda XS
  7604 4712 18 69 08			add #$08
  7605 4715 8D D1 AB			sta X
  7606 4718 AD D3 AB			lda XS
  7607 471B 18 69 18			add #$18
  7608 471E 8D 22 47			sta @FORTMP_1220_0
  7609
  7610 4721			l_1223
  7611 				; --- ForToDoCondition
  7612 4721 A9 00			lda @FORTMP_1220_0::#$00
  7613 4723 CD D1 AB			cmp X
  7614 4726 B0 03 4C 3B 48		jcc l_1231
  7615
  7616 				; optimize OK (vservice.pas), line = 1322
  7617
  7618 472B AD D1 AB			lda X
  7619 472E C9 D8			cmp #$D8
  7620 4730 90 03 4C 33 48		jcs l_1243
  7621
  7622 				; optimize OK (vservice.pas), line = 1329
  7623
  7624 4735 AD EA 9C			lda PLAYSCREEN.OFS
  7625 4738 6D D1 AB			adc X
  7626 473B 85 9F			sta :STACKORIGIN+9
  7627 473D AD EB 9C			lda PLAYSCREEN.OFS+1
  7628 4740 69 00			adc #$00
  7629 4742 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  7630 4744 AD EC 9C			lda PLAYSCREEN.OFS+2
  7631 4747 69 00			adc #$00
  7632 4749 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
  7633 474B AD ED 9C			lda PLAYSCREEN.OFS+3
  7634 474E 69 00			adc #$00
  7635 4750 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
  7636 4752 A9 00			lda #$00
  7637 4754 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  7638 4756 AD D2 AB			lda Y
  7639 4759 0A				asl @
  7640 475A 26 B0			rol :STACKORIGIN+STACKWIDTH+10
  7641 475C 18 6D 29 9B			add ROW
  7642 4760 85 84			sta :bp2
  7643 4762 AD 2A 9B			lda ROW+1
  7644 4765 65 B0			adc :STACKORIGIN+STACKWIDTH+10
  7645 4767 85 85			sta :bp2+1
  7646 4769 A0 00			ldy #$00
  7647 476B A5 9F			lda :STACKORIGIN+9
  7648 476D 18 71 84			add (:bp2),y
  7649 4770 8D 0B AB			sta GETBYTE.SRC
  7650 4773 C8				iny
  7651 4774 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  7652 4776 71 84			adc (:bp2),y
  7653 4778 8D 0C AB			sta GETBYTE.SRC+1
  7654 477B A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
  7655 477D 69 00			adc #$00
  7656 477F 8D 0D AB			sta GETBYTE.SRC+2
  7657 4782 A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
  7658 4784 69 00			adc #$00
  7659 4786 8D 0E AB			sta GETBYTE.SRC+3
  7660 4789 20 C2 25			jsr GETBYTE
  7661 478C AD 0F AB			lda GETBYTE.RESULT
  7662 478F 29 7F			and #$7F
  7663 4791 8D D7 AB			sta CL
  7664
  7665 				; optimize OK (vservice.pas), line = 1333
  7666
  7667 4794 A9 00			lda #$00
  7668 4796 85 B1			sta :STACKORIGIN+STACKWIDTH+11
  7669 4798 AD D2 AB			lda Y
  7670 479B 0A				asl @
  7671 479C 26 B1			rol :STACKORIGIN+STACKWIDTH+11
  7672 479E 18 6D 29 9B			add ROW
  7673 47A2 85 84			sta :bp2
  7674 47A4 AD 2A 9B			lda ROW+1
  7675 47A7 65 B1			adc :STACKORIGIN+STACKWIDTH+11
  7676 47A9 85 85			sta :bp2+1
  7677 47AB A0 00			ldy #$00
  7678 47AD AD D1 AB			lda X
  7679 47B0 18 71 84			add (:bp2),y
  7680 47B3 8D 06 AB			sta PUTBYTE.DST
  7681 47B6 C8				iny
  7682 47B7 A9 00			lda #$00
  7683 47B9 71 84			adc (:bp2),y
  7684 47BB 8D 07 AB			sta PUTBYTE.DST+1
  7685 47BE A9 00			lda #$00
  7686 47C0 69 00			adc #$00
  7687 47C2 8D 08 AB			sta PUTBYTE.DST+2
  7688 47C5 A9 00			lda #$00
  7689 47C7 69 00			adc #$00
  7690 47C9 8D 09 AB			sta PUTBYTE.DST+3
  7691 47CC AD D7 AB			lda CL
  7692 47CF 8D 0A AB			sta PUTBYTE.V
  7693 47D2 20 B8 25			jsr PUTBYTE
  7694
  7695 				; optimize OK (vservice.pas), line = 1337
  7696
  7697 47D5 AD EA 9C			lda PLAYSCREEN.OFS
  7698 47D8 18 6D D1 AB			add X
  7699 47DC 85 A0			sta :STACKORIGIN+10
  7700 47DE AD EB 9C			lda PLAYSCREEN.OFS+1
  7701 47E1 69 00			adc #$00
  7702 47E3 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  7703 47E5 AD EC 9C			lda PLAYSCREEN.OFS+2
  7704 47E8 69 00			adc #$00
  7705 47EA 85 C0			sta :STACKORIGIN+STACKWIDTH*2+10
  7706 47EC AD ED 9C			lda PLAYSCREEN.OFS+3
  7707 47EF 69 00			adc #$00
  7708 47F1 85 D0			sta :STACKORIGIN+STACKWIDTH*3+10
  7709 47F3 A9 00			lda #$00
  7710 47F5 85 B1			sta :STACKORIGIN+STACKWIDTH+11
  7711 47F7 AD D2 AB			lda Y
  7712 47FA 0A				asl @
  7713 47FB 26 B1			rol :STACKORIGIN+STACKWIDTH+11
  7714 47FD 18 6D 29 9B			add ROW
  7715 4801 85 84			sta :bp2
  7716 4803 AD 2A 9B			lda ROW+1
  7717 4806 65 B1			adc :STACKORIGIN+STACKWIDTH+11
  7718 4808 85 85			sta :bp2+1
  7719 480A A0 00			ldy #$00
  7720 480C A5 A0			lda :STACKORIGIN+10
  7721 480E 18 71 84			add (:bp2),y
  7722 4811 8D 06 AB			sta PUTBYTE.DST
  7723 4814 C8				iny
  7724 4815 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
  7725 4817 71 84			adc (:bp2),y
  7726 4819 8D 07 AB			sta PUTBYTE.DST+1
  7727 481C A5 C0			lda :STACKORIGIN+STACKWIDTH*2+10
  7728 481E 69 00			adc #$00
  7729 4820 8D 08 AB			sta PUTBYTE.DST+2
  7730 4823 A5 D0			lda :STACKORIGIN+STACKWIDTH*3+10
  7731 4825 69 00			adc #$00
  7732 4827 8D 09 AB			sta PUTBYTE.DST+3
  7733 482A AD D7 AB			lda CL
  7734 482D 8D 0A AB			sta PUTBYTE.V
  7735 4830 20 B8 25			jsr PUTBYTE
  7736 4833			l_1243
  7737
  7738 				; --- ForToDoEpilog
  7739 4833 EE D1 AB			inc X
  7740 4836 F0 03 4C 21 47		jne l_1223
  7741 483B			l_1231
  7742
  7743 				; --- ForToDoEpilog
  7744 483B EE D2 AB			inc Y
  7745 483E F0 03 4C 05 47		jne l_1202
  7746 4843			l_1210
  7747
  7748 				; optimize OK (vservice.pas), line = 1340
  7749
  7750 4843 AD D0 AB			lda BLOCK
  7751 4846 C9 09			cmp #$09
  7752 4848 B0 03 4C 38 4B		jcc l_129F
  7753
  7754 				; optimize OK (vservice.pas), line = 1342
  7755
  7756 484D A9 00			lda #$00
  7757 484F 8D D8 AB			sta CL2
  7758
  7759 				; optimize OK (vservice.pas), line = 1343
  7760
  7761 4852 AD D0 AB			lda BLOCK
  7762 4855 29 0F			and #$0F
  7763 4857 C9 09			cmp #$09
  7764 4859 D0 19			jne l_12BA
  7765
  7766 				; optimize OK (vservice.pas), line = 1345
  7767
  7768 485B A9 CA			lda #$CA
  7769 485D 8D D8 AB			sta CL2
  7770
  7771 				; optimize OK (vservice.pas), line = 1346
  7772
  7773 4860 AD CF AB			lda YA
  7774 4863 0A				asl @
  7775 4864 0A				asl @
  7776 4865 0A				asl @
  7777 4866 0A				asl @
  7778 4867 18 6D CE AB			add XA
  7779 486B A8				tay
  7780 486C A9 19			lda #$19
  7781 486E 99 DD A3			sta adr.WALL,y
  7782 4871 4C 80 48			jmp l_12D9
  7783 4874			l_12BA
  7784
  7785 				; optimize OK (vservice.pas), line = 1352
  7786
  7787 4874 AD D0 AB			lda BLOCK
  7788 4877 C9 0A			cmp #$0A
  7789 4879 D0 05			jne l_12EB
  7790 487B A9 C9			lda #$C9
  7791 487D 8D D8 AB			sta CL2
  7792 4880			l_12D9
  7793 4880			l_12EB
  7794
  7795 				; optimize OK (vservice.pas), line = 1356
  7796
  7797 4880 A9 00			lda #$00
  7798 4882 8D D2 AB			sta Y
  7799
  7800 4885			l_12FB
  7801 				; --- ForToDoCondition
  7802 4885 AD D2 AB			lda Y
  7803 4888 C9 07			cmp #$07
  7804 488A 90 03 4C C4 49		jcs l_1309
  7805
  7806 				; optimize OK (vservice.pas), line = 1362
  7807
  7808 488F AD EA 9C			lda PLAYSCREEN.OFS
  7809 4892 6D D3 AB			adc XS
  7810 4895 85 9F			sta :STACKORIGIN+9
  7811 4897 AD EB 9C			lda PLAYSCREEN.OFS+1
  7812 489A 6D D4 AB			adc XS+1
  7813 489D 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  7814 489F AD EC 9C			lda PLAYSCREEN.OFS+2
  7815 48A2 69 00			adc #$00
  7816 48A4 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
  7817 48A6 AD ED 9C			lda PLAYSCREEN.OFS+3
  7818 48A9 69 00			adc #$00
  7819 48AB 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
  7820 48AD AD D2 AB			lda Y
  7821 48B0 18 6D D5 AB			add YS
  7822 48B4 85 A0			sta :STACKORIGIN+10
  7823 48B6 A9 00			lda #$00
  7824 48B8 6D D6 AB			adc YS+1
  7825 48BB 06 A0			asl :STACKORIGIN+10
  7826 48BD 2A				rol @
  7827 48BE 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  7828 48C0 AD 29 9B			lda ROW
  7829 48C3 18 65 A0			add :STACKORIGIN+10
  7830 48C6 85 84			sta :bp2
  7831 48C8 AD 2A 9B			lda ROW+1
  7832 48CB 65 B0			adc :STACKORIGIN+STACKWIDTH+10
  7833 48CD 85 85			sta :bp2+1
  7834 48CF A0 00			ldy #$00
  7835 48D1 A5 9F			lda :STACKORIGIN+9
  7836 48D3 18 71 84			add (:bp2),y
  7837 48D6 8D 0B AB			sta GETBYTE.SRC
  7838 48D9 C8				iny
  7839 48DA A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  7840 48DC 71 84			adc (:bp2),y
  7841 48DE 8D 0C AB			sta GETBYTE.SRC+1
  7842 48E1 A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
  7843 48E3 69 00			adc #$00
  7844 48E5 8D 0D AB			sta GETBYTE.SRC+2
  7845 48E8 A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
  7846 48EA 69 00			adc #$00
  7847 48EC 8D 0E AB			sta GETBYTE.SRC+3
  7848 48EF 20 C2 25			jsr GETBYTE
  7849 48F2 AD 0F AB			lda GETBYTE.RESULT
  7850 48F5 29 80			and #$80
  7851 48F7 8D D7 AB			sta CL
  7852
  7853 				; optimize OK (vservice.pas), line = 1364
  7854
  7855 48FA AD D8 AB			lda CL2
  7856 48FD 29 7F			and #$7F
  7857 48FF 0D D7 AB			ora CL
  7858 4902 8D D8 AB			sta CL2
  7859
  7860 				; optimize OK (vservice.pas), line = 1368
  7861
  7862 4905 AD D5 AB			lda YS
  7863 4908 18 6D D2 AB			add Y
  7864 490C 85 A1			sta :STACKORIGIN+11
  7865 490E AD D6 AB			lda YS+1
  7866 4911 69 00			adc #$00
  7867 4913 06 A1			asl :STACKORIGIN+11
  7868 4915 2A				rol @
  7869 4916 85 B1			sta :STACKORIGIN+STACKWIDTH+11
  7870 4918 AD 29 9B			lda ROW
  7871 491B 18 65 A1			add :STACKORIGIN+11
  7872 491E 85 84			sta :bp2
  7873 4920 AD 2A 9B			lda ROW+1
  7874 4923 65 B1			adc :STACKORIGIN+STACKWIDTH+11
  7875 4925 85 85			sta :bp2+1
  7876 4927 A0 00			ldy #$00
  7877 4929 AD D3 AB			lda XS
  7878 492C 18 71 84			add (:bp2),y
  7879 492F 8D 06 AB			sta PUTBYTE.DST
  7880 4932 C8				iny
  7881 4933 AD D4 AB			lda XS+1
  7882 4936 71 84			adc (:bp2),y
  7883 4938 8D 07 AB			sta PUTBYTE.DST+1
  7884 493B A9 00			lda #$00
  7885 493D 69 00			adc #$00
  7886 493F 8D 08 AB			sta PUTBYTE.DST+2
  7887 4942 A9 00			lda #$00
  7888 4944 69 00			adc #$00
  7889 4946 8D 09 AB			sta PUTBYTE.DST+3
  7890 4949 AD D8 AB			lda CL2
  7891 494C 8D 0A AB			sta PUTBYTE.V
  7892 494F 20 B8 25			jsr PUTBYTE
  7893
  7894 				; optimize OK (vservice.pas), line = 1372
  7895
  7896 4952 AD EA 9C			lda PLAYSCREEN.OFS
  7897 4955 18 6D D3 AB			add XS
  7898 4959 85 A0			sta :STACKORIGIN+10
  7899 495B AD EB 9C			lda PLAYSCREEN.OFS+1
  7900 495E 6D D4 AB			adc XS+1
  7901 4961 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  7902 4963 AD EC 9C			lda PLAYSCREEN.OFS+2
  7903 4966 69 00			adc #$00
  7904 4968 85 C0			sta :STACKORIGIN+STACKWIDTH*2+10
  7905 496A AD ED 9C			lda PLAYSCREEN.OFS+3
  7906 496D 69 00			adc #$00
  7907 496F 85 D0			sta :STACKORIGIN+STACKWIDTH*3+10
  7908 4971 AD D5 AB			lda YS
  7909 4974 18 6D D2 AB			add Y
  7910 4978 85 A1			sta :STACKORIGIN+11
  7911 497A AD D6 AB			lda YS+1
  7912 497D 69 00			adc #$00
  7913 497F 06 A1			asl :STACKORIGIN+11
  7914 4981 2A				rol @
  7915 4982 85 B1			sta :STACKORIGIN+STACKWIDTH+11
  7916 4984 AD 29 9B			lda ROW
  7917 4987 18 65 A1			add :STACKORIGIN+11
  7918 498A 85 84			sta :bp2
  7919 498C AD 2A 9B			lda ROW+1
  7920 498F 65 B1			adc :STACKORIGIN+STACKWIDTH+11
  7921 4991 85 85			sta :bp2+1
  7922 4993 A0 00			ldy #$00
  7923 4995 A5 A0			lda :STACKORIGIN+10
  7924 4997 18 71 84			add (:bp2),y
  7925 499A 8D 06 AB			sta PUTBYTE.DST
  7926 499D C8				iny
  7927 499E A5 B0			lda :STACKORIGIN+STACKWIDTH+10
  7928 49A0 71 84			adc (:bp2),y
  7929 49A2 8D 07 AB			sta PUTBYTE.DST+1
  7930 49A5 A5 C0			lda :STACKORIGIN+STACKWIDTH*2+10
  7931 49A7 69 00			adc #$00
  7932 49A9 8D 08 AB			sta PUTBYTE.DST+2
  7933 49AC A5 D0			lda :STACKORIGIN+STACKWIDTH*3+10
  7934 49AE 69 00			adc #$00
  7935 49B0 8D 09 AB			sta PUTBYTE.DST+3
  7936 49B3 AD D8 AB			lda CL2
  7937 49B6 8D 0A AB			sta PUTBYTE.V
  7938 49B9 20 B8 25			jsr PUTBYTE
  7939
  7940 				; --- ForToDoEpilog
  7941 49BC EE D2 AB			inc Y
  7942 49BF F0 03 4C 85 48		jne l_12FB
  7943 49C4			l_1309
  7944
  7945 				; optimize OK (vservice.pas), line = 1376
  7946
  7947 49C4 A9 00			lda #$00
  7948 49C6 8D D1 AB			sta X
  7949
  7950 49C9			l_1370
  7951 				; --- ForToDoCondition
  7952 49C9 AD D1 AB			lda X
  7953 49CC C9 0F			cmp #$0F
  7954 49CE 90 03 4C 38 4B		jcs l_137E
  7955
  7956 				; optimize OK (vservice.pas), line = 1380
  7957
  7958 49D3 AD EA 9C			lda PLAYSCREEN.OFS
  7959 49D6 6D D3 AB			adc XS
  7960 49D9 85 9F			sta :STACKORIGIN+9
  7961 49DB AD EB 9C			lda PLAYSCREEN.OFS+1
  7962 49DE 6D D4 AB			adc XS+1
  7963 49E1 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  7964 49E3 AD EC 9C			lda PLAYSCREEN.OFS+2
  7965 49E6 69 00			adc #$00
  7966 49E8 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
  7967 49EA AD ED 9C			lda PLAYSCREEN.OFS+3
  7968 49ED 69 00			adc #$00
  7969 49EF 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
  7970 49F1 A5 9F			lda :STACKORIGIN+9
  7971 49F3 18 6D D1 AB			add X
  7972 49F7 85 9F			sta :STACKORIGIN+9
  7973 49F9 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  7974 49FB 69 00			adc #$00
  7975 49FD 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  7976 49FF A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
  7977 4A01 69 00			adc #$00
  7978 4A03 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
  7979 4A05 A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
  7980 4A07 69 00			adc #$00
  7981 4A09 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
  7982 4A0B AD D6 AB			lda YS+1
  7983 4A0E 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  7984 4A10 AD D5 AB			lda YS
  7985 4A13 0A				asl @
  7986 4A14 26 B0			rol :STACKORIGIN+STACKWIDTH+10
  7987 4A16 18 6D 29 9B			add ROW
  7988 4A1A 85 84			sta :bp2
  7989 4A1C AD 2A 9B			lda ROW+1
  7990 4A1F 65 B0			adc :STACKORIGIN+STACKWIDTH+10
  7991 4A21 85 85			sta :bp2+1
  7992 4A23 A0 00			ldy #$00
  7993 4A25 A5 9F			lda :STACKORIGIN+9
  7994 4A27 18 71 84			add (:bp2),y
  7995 4A2A 8D 0B AB			sta GETBYTE.SRC
  7996 4A2D C8				iny
  7997 4A2E A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  7998 4A30 71 84			adc (:bp2),y
  7999 4A32 8D 0C AB			sta GETBYTE.SRC+1
  8000 4A35 A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
  8001 4A37 69 00			adc #$00
  8002 4A39 8D 0D AB			sta GETBYTE.SRC+2
  8003 4A3C A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
  8004 4A3E 69 00			adc #$00
  8005 4A40 8D 0E AB			sta GETBYTE.SRC+3
  8006 4A43 20 C2 25			jsr GETBYTE
  8007 4A46 AD 0F AB			lda GETBYTE.RESULT
  8008 4A49 29 80			and #$80
  8009 4A4B 8D D7 AB			sta CL
  8010
  8011 				; optimize OK (vservice.pas), line = 1382
  8012
  8013 4A4E AD D8 AB			lda CL2
  8014 4A51 29 7F			and #$7F
  8015 4A53 0D D7 AB			ora CL
  8016 4A56 8D D8 AB			sta CL2
  8017
  8018 				; optimize OK (vservice.pas), line = 1385
  8019
  8020 4A59 AD D3 AB			lda XS
  8021 4A5C 18 6D D1 AB			add X
  8022 4A60 85 A0			sta :STACKORIGIN+10
  8023 4A62 AD D4 AB			lda XS+1
  8024 4A65 69 00			adc #$00
  8025 4A67 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  8026 4A69 A9 00			lda #$00
  8027 4A6B 69 00			adc #$00
  8028 4A6D 85 C0			sta :STACKORIGIN+STACKWIDTH*2+10
  8029 4A6F A9 00			lda #$00
  8030 4A71 69 00			adc #$00
  8031 4A73 85 D0			sta :STACKORIGIN+STACKWIDTH*3+10
  8032 4A75 AD D6 AB			lda YS+1
  8033 4A78 85 B1			sta :STACKORIGIN+STACKWIDTH+11
  8034 4A7A AD D5 AB			lda YS
  8035 4A7D 0A				asl @
  8036 4A7E 26 B1			rol :STACKORIGIN+STACKWIDTH+11
  8037 4A80 18 6D 29 9B			add ROW
  8038 4A84 85 84			sta :bp2
  8039 4A86 AD 2A 9B			lda ROW+1
  8040 4A89 65 B1			adc :STACKORIGIN+STACKWIDTH+11
  8041 4A8B 85 85			sta :bp2+1
  8042 4A8D A0 00			ldy #$00
  8043 4A8F A5 A0			lda :STACKORIGIN+10
  8044 4A91 18 71 84			add (:bp2),y
  8045 4A94 8D 06 AB			sta PUTBYTE.DST
  8046 4A97 C8				iny
  8047 4A98 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
  8048 4A9A 71 84			adc (:bp2),y
  8049 4A9C 8D 07 AB			sta PUTBYTE.DST+1
  8050 4A9F A5 C0			lda :STACKORIGIN+STACKWIDTH*2+10
  8051 4AA1 69 00			adc #$00
  8052 4AA3 8D 08 AB			sta PUTBYTE.DST+2
  8053 4AA6 A5 D0			lda :STACKORIGIN+STACKWIDTH*3+10
  8054 4AA8 69 00			adc #$00
  8055 4AAA 8D 09 AB			sta PUTBYTE.DST+3
  8056 4AAD AD D8 AB			lda CL2
  8057 4AB0 8D 0A AB			sta PUTBYTE.V
  8058 4AB3 20 B8 25			jsr PUTBYTE
  8059
  8060 				; optimize OK (vservice.pas), line = 1388
  8061
  8062 4AB6 AD EA 9C			lda PLAYSCREEN.OFS
  8063 4AB9 18 6D D3 AB			add XS
  8064 4ABD 85 A0			sta :STACKORIGIN+10
  8065 4ABF AD EB 9C			lda PLAYSCREEN.OFS+1
  8066 4AC2 6D D4 AB			adc XS+1
  8067 4AC5 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  8068 4AC7 AD EC 9C			lda PLAYSCREEN.OFS+2
  8069 4ACA 69 00			adc #$00
  8070 4ACC 85 C0			sta :STACKORIGIN+STACKWIDTH*2+10
  8071 4ACE AD ED 9C			lda PLAYSCREEN.OFS+3
  8072 4AD1 69 00			adc #$00
  8073 4AD3 85 D0			sta :STACKORIGIN+STACKWIDTH*3+10
  8074 4AD5 A5 A0			lda :STACKORIGIN+10
  8075 4AD7 18 6D D1 AB			add X
  8076 4ADB 85 A0			sta :STACKORIGIN+10
  8077 4ADD A5 B0			lda :STACKORIGIN+STACKWIDTH+10
  8078 4ADF 69 00			adc #$00
  8079 4AE1 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  8080 4AE3 A5 C0			lda :STACKORIGIN+STACKWIDTH*2+10
  8081 4AE5 69 00			adc #$00
  8082 4AE7 85 C0			sta :STACKORIGIN+STACKWIDTH*2+10
  8083 4AE9 A5 D0			lda :STACKORIGIN+STACKWIDTH*3+10
  8084 4AEB 69 00			adc #$00
  8085 4AED 85 D0			sta :STACKORIGIN+STACKWIDTH*3+10
  8086 4AEF AD D6 AB			lda YS+1
  8087 4AF2 85 B1			sta :STACKORIGIN+STACKWIDTH+11
  8088 4AF4 AD D5 AB			lda YS
  8089 4AF7 0A				asl @
  8090 4AF8 26 B1			rol :STACKORIGIN+STACKWIDTH+11
  8091 4AFA 18 6D 29 9B			add ROW
  8092 4AFE 85 84			sta :bp2
  8093 4B00 AD 2A 9B			lda ROW+1
  8094 4B03 65 B1			adc :STACKORIGIN+STACKWIDTH+11
  8095 4B05 85 85			sta :bp2+1
  8096 4B07 A0 00			ldy #$00
  8097 4B09 A5 A0			lda :STACKORIGIN+10
  8098 4B0B 18 71 84			add (:bp2),y
  8099 4B0E 8D 06 AB			sta PUTBYTE.DST
  8100 4B11 C8				iny
  8101 4B12 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
  8102 4B14 71 84			adc (:bp2),y
  8103 4B16 8D 07 AB			sta PUTBYTE.DST+1
  8104 4B19 A5 C0			lda :STACKORIGIN+STACKWIDTH*2+10
  8105 4B1B 69 00			adc #$00
  8106 4B1D 8D 08 AB			sta PUTBYTE.DST+2
  8107 4B20 A5 D0			lda :STACKORIGIN+STACKWIDTH*3+10
  8108 4B22 69 00			adc #$00
  8109 4B24 8D 09 AB			sta PUTBYTE.DST+3
  8110 4B27 AD D8 AB			lda CL2
  8111 4B2A 8D 0A AB			sta PUTBYTE.V
  8112 4B2D 20 B8 25			jsr PUTBYTE
  8113
  8114 				; --- ForToDoEpilog
  8115 4B30 EE D1 AB			inc X
  8116 4B33 F0 03 4C C9 49		jne l_1370
  8117 4B38			l_137E
  8118 4B38			l_129F
  8119
  8120 				; ------------------------------------------------------------
  8121
  8122 = ABCE			XA	= DATAORIGIN+$0FB1
  8123 = ABCF			YA	= DATAORIGIN+$0FB2
  8124 = ABD0			BLOCK	= DATAORIGIN+$0FB3
  8125 = ABD1			X	= DATAORIGIN+$0FB4
  8126 = ABD2			Y	= DATAORIGIN+$0FB5
  8127 = ABD3			XS	= DATAORIGIN+$0FB6
  8128 = ABD5			YS	= DATAORIGIN+$0FB8
  8129 = ABD7			CL	= DATAORIGIN+$0FBA
  8130 = ABD8			CL2	= DATAORIGIN+$0FBB
  8131 = ABD9			SHADOW	= DATAORIGIN+$0FBC
  8132
  8133 = ABCE			@VarData	= XA
  8134 = 000C			@VarDataSize	= 12
  8135
  8136 4B38			@exit
  8137 					.ifdef @new
  8138 					lda <@VarData
  8139 					sta :ztmp
  8140 					lda >@VarData
  8141 					ldy #@VarDataSize-1
  8142 					jmp @FreeMem
  8143 					els
  8144 4B38 60				rts						; ret
  8145 					eif
  8146 				.endl
  8147
  8148 4B39			.local	PUT_WALL					; PROCEDURE
  8149
  8150 				; optimize OK (vservice.pas), line = 1398
  8151
  8152 4B39 A9 00			lda #$00
  8153 4B3B 8D DD AB			sta Y
  8154
  8155 4B3E			l_13EB
  8156 				; --- ForToDoCondition
  8157 4B3E AD DD AB			lda Y
  8158 4B41 C9 0F			cmp #$0F
  8159 4B43 B0 48			jcs l_13F9
  8160
  8161 				; optimize OK (vservice.pas), line = 1399
  8162
  8163 4B45 A9 00			lda #$00
  8164 4B47 8D DC AB			sta X
  8165
  8166 4B4A			l_1402
  8167 				; --- ForToDoCondition
  8168 4B4A AD DC AB			lda X
  8169 4B4D C9 0D			cmp #$0D
  8170 4B4F B0 37			jcs l_1410
  8171
  8172 				; optimize OK (vservice.pas), line = 1400
  8173
  8174 4B51 AD DD AB			lda Y
  8175 4B54 0A				asl @
  8176 4B55 0A				asl @
  8177 4B56 0A				asl @
  8178 4B57 0A				asl @
  8179 4B58 18 6D DC AB			add X
  8180 4B5C A8				tay
  8181 4B5D B9 DD A3			lda adr.WALL,y
  8182 4B60 F0 21			jeq l_142F
  8183 4B62 AD DD AB			lda Y
  8184 4B65 0A				asl @
  8185 4B66 0A				asl @
  8186 4B67 0A				asl @
  8187 4B68 0A				asl @
  8188 4B69 18 6D DC AB			add X
  8189 4B6D A8				tay
  8190 4B6E B9 DD A3			lda adr.WALL,y
  8191 4B71 8D D0 AB			sta PLACE_BLOCK.BLOCK
  8192 4B74 AD DC AB			lda X
  8193 4B77 8D CE AB			sta PLACE_BLOCK.XA
  8194 4B7A AD DD AB			lda Y
  8195 4B7D 8D CF AB			sta PLACE_BLOCK.YA
  8196 4B80 20 F8 43			jsr PLACE_BLOCK
  8197 4B83			l_142F
  8198
  8199 				; --- ForToDoEpilog
  8200 4B83 EE DC AB			inc X
  8201 4B86 D0 C2			jne l_1402
  8202 4B88			l_1410
  8203
  8204 				; --- ForToDoEpilog
  8205 4B88 EE DD AB			inc Y
  8206 4B8B D0 B1			jne l_13EB
  8207 4B8D			l_13F9
  8208
  8209 				; ------------------------------------------------------------
  8210
  8211 = ABDC			X	= DATAORIGIN+$0FBF
  8212 = ABDD			Y	= DATAORIGIN+$0FC0
  8213
  8214 = ABDC			@VarData	= X
  8215 = 0002			@VarDataSize	= 2
  8216
  8217 4B8D			@exit
  8218 					.ifdef @new
  8219 					lda <@VarData
  8220 					sta :ztmp
  8221 					lda >@VarData
  8222 					ldy #@VarDataSize-1
  8223 					jmp @FreeMem
  8224 					els
  8225 4B8D 60				rts						; ret
  8226 					eif
  8227 				.endl
  8228
  8229 4B8E			.local	SET_WALL					; PROCEDURE
  8230
  8231 				; optimize OK (vservice.pas), line = 1409
  8232
  8233 4B8E A9 00			lda #$00
  8234 4B90 8D 9D 9D			sta REMAIN_BLK
  8235
  8236 				; optimize OK (vservice.pas), line = 1410
  8237
  8238 4B93 AC BA 9D			ldy CUR_PLAYER
  8239 4B96 B9 AB 9D			lda adr.SCORE.WALL_N,y
  8240 4B99 8D E0 AB			sta WL
  8241
  8242 				; optimize OK (vservice.pas), line = 1413
  8243
  8244 4B9C A9 00			lda #$00
  8245 4B9E 8D DF AB			sta Y
  8246
  8247 4BA1			l_146D
  8248 				; --- ForToDoCondition
  8249 4BA1 AD DF AB			lda Y
  8250 4BA4 C9 0F			cmp #$0F
  8251 4BA6 B0 3D			jcs l_147B
  8252
  8253 				; optimize OK (vservice.pas), line = 1414
  8254
  8255 4BA8 A9 00			lda #$00
  8256 4BAA 8D DE AB			sta X
  8257
  8258 4BAD			l_1484
  8259 				; --- ForToDoCondition
  8260 4BAD AD DE AB			lda X
  8261 4BB0 C9 0D			cmp #$0D
  8262 4BB2 B0 2C			jcs l_1492
  8263
  8264 				; optimize OK (vservice.pas), line = 1417
  8265
  8266 4BB4 AD DF AB			lda Y
  8267 4BB7 0A				asl @
  8268 4BB8 0A				asl @
  8269 4BB9 0A				asl @
  8270 4BBA 0A				asl @
  8271 4BBB 18 6D DE AB			add X
  8272 4BBF A8				tay
  8273 4BC0 B9 DD A3			lda adr.WALL,y
  8274 4BC3 F0 16			jeq l_14CA
  8275 4BC5 AD DF AB			lda Y
  8276 4BC8 0A				asl @
  8277 4BC9 0A				asl @
  8278 4BCA 0A				asl @
  8279 4BCB 0A				asl @
  8280 4BCC 18 6D DE AB			add X
  8281 4BD0 A8				tay
  8282 4BD1 B9 DD A3			lda adr.WALL,y
  8283 4BD4 C9 0A			cmp #$0A
  8284 4BD6 F0 03			jeq l_14CA
  8285 4BD8 EE 9D 9D			inc REMAIN_BLK
  8286 4BDB			l_14CA
  8287
  8288 				; --- ForToDoEpilog
  8289 4BDB EE DE AB			inc X
  8290 4BDE D0 CD			jne l_1484
  8291 4BE0			l_1492
  8292
  8293 				; --- ForToDoEpilog
  8294 4BE0 EE DF AB			inc Y
  8295 4BE3 D0 BC			jne l_146D
  8296 4BE5			l_147B
  8297
  8298 				; optimize OK (vservice.pas), line = 1419
  8299
  8300 4BE5 AD E0 AB			lda WL
  8301 4BE8 38 E9 01			sub #$01
  8302 4BEB 85 86			sta @SMALLINT.MOD.A
  8303 4BED A9 00			lda #$00
  8304 4BEF E9 00			sbc #$00
  8305 4BF1 85 87			sta @SMALLINT.MOD.A+1
  8306 4BF3 A9 04			lda #$04
  8307 4BF5 85 8E			sta @SMALLINT.MOD.B
  8308 4BF7 A9 00			lda #$00
  8309 4BF9 85 8F			sta @SMALLINT.MOD.B+1
  8310 4BFB 20 3F 12			jsr @SMALLINT.MOD
  8311 4BFE A5 92			lda @SMALLINT.MOD.RESULT
  8312 4C00 8D E0 AB			sta WL
  8313
  8314 				; optimize OK (vservice.pas), line = 1421
  8315
  8316 4C03 8D E1 AB			sta @CASETMP_0007
  8317 4C06 C9 00			cmp #$00
  8318 4C08 D0 33			jne l_14F4
  8319 				@
  8320
  8321 				; optimize OK (vservice.pas), line = 1422
  8322
  8323 4C0A AD 73 9D 8D 6B 9D + 	:8 mva adr.PATTERN0+# adr.PATTERN+#
  8324 4C3A 4C 16 4D			jmp a_0007
  8325 4C3D			l_14F4
  8326 4C3D C9 01			cmp #$01
  8327 4C3F D0 33			jne l_14FD
  8328
  8329 				; optimize OK (vservice.pas), line = 1423
  8330
  8331 4C41 AD 7B 9D 8D 6B 9D + 	:8 mva adr.PATTERN1+# adr.PATTERN+#
  8332 4C71 4C 16 4D			jmp a_0007
  8333 4C74			l_14FD
  8334 4C74 C9 02			cmp #$02
  8335 4C76 D0 33			jne l_1506
  8336
  8337 				; optimize OK (vservice.pas), line = 1424
  8338
  8339 4C78 AD 83 9D 8D 6B 9D + 	:8 mva adr.PATTERN2+# adr.PATTERN+#
  8340 4CA8 4C 16 4D			jmp a_0007
  8341 4CAB			l_1506
  8342 4CAB C9 03			cmp #$03
  8343 4CAD D0 33			jne l_150F
  8344
  8345 				; optimize OK (vservice.pas), line = 1425
  8346
  8347 4CAF AD 8B 9D 8D 6B 9D + 	:8 mva adr.PATTERN3+# adr.PATTERN+#
  8348 4CDF 4C 16 4D			jmp a_0007
  8349 4CE2			l_150F
  8350 4CE2 C9 04			cmp #$04
  8351 4CE4 D0 30			jne l_1518
  8352
  8353 				; optimize OK (vservice.pas), line = 1426
  8354
  8355 4CE6 AD 93 9D 8D 6B 9D + 	:8 mva adr.PATTERN4+# adr.PATTERN+#
  8356 4D16			l_1518
  8357 4D16			a_0007
  8358
  8359 				; ------------------------------------------------------------
  8360
  8361 = ABDE			X	= DATAORIGIN+$0FC1
  8362 = ABDF			Y	= DATAORIGIN+$0FC2
  8363 = ABE0			WL	= DATAORIGIN+$0FC3
  8364 = ABE1			@CASETMP_0007	= DATAORIGIN+$0FC4
  8365
  8366 = ABDE			@VarData	= X
  8367 = 0004			@VarDataSize	= 4
  8368
  8369 4D16			@exit
  8370 					.ifdef @new
  8371 					lda <@VarData
  8372 					sta :ztmp
  8373 					lda >@VarData
  8374 					ldy #@VarDataSize-1
  8375 					jmp @FreeMem
  8376 					els
  8377 4D16 60				rts						; ret
  8378 					eif
  8379 				.endl
  8380
  8381 4D17			.local	SPLIT_LINE					; FUNCTION
  8382
  8383 				; optimize OK (vservice.pas), line = 1465
  8384
  8385 4D17 AC E2 AB 84 84 AC + 	mwy X1 :bp2
  8386 4D21 A0 00			ldy #$00
  8387 4D23 B1 84			lda (:bp2),y
  8388 4D25 18 69 10			add #$10
  8389 4D28 91 84			sta (:bp2),y
  8390 4D2A C8				iny
  8391 4D2B B1 84			lda (:bp2),y
  8392 4D2D 69 00			adc #$00
  8393 4D2F 91 84			sta (:bp2),y
  8394
  8395 				; optimize OK (vservice.pas), line = 1466
  8396
  8397 4D31 AC E4 AB 84 84 AC + 	mwy Y1 :bp2
  8398 4D3B A0 00			ldy #$00
  8399 4D3D B1 84			lda (:bp2),y
  8400 4D3F 18 69 18			add #$18
  8401 4D42 91 84			sta (:bp2),y
  8402 4D44 C8				iny
  8403 4D45 B1 84			lda (:bp2),y
  8404 4D47 69 00			adc #$00
  8405 4D49 91 84			sta (:bp2),y
  8406
  8407 				; optimize OK (vservice.pas), line = 1467
  8408
  8409 4D4B AC E6 AB 84 84 AC + 	mwy X2 :bp2
  8410 4D55 A0 00			ldy #$00
  8411 4D57 B1 84			lda (:bp2),y
  8412 4D59 18 69 10			add #$10
  8413 4D5C 91 84			sta (:bp2),y
  8414 4D5E C8				iny
  8415 4D5F B1 84			lda (:bp2),y
  8416 4D61 69 00			adc #$00
  8417 4D63 91 84			sta (:bp2),y
  8418
  8419 				; optimize OK (vservice.pas), line = 1468
  8420
  8421 4D65 AC E8 AB 84 84 AC + 	mwy Y2 :bp2
  8422 4D6F A0 00			ldy #$00
  8423 4D71 B1 84			lda (:bp2),y
  8424 4D73 18 69 18			add #$18
  8425 4D76 91 84			sta (:bp2),y
  8426 4D78 C8				iny
  8427 4D79 B1 84			lda (:bp2),y
  8428 4D7B 69 00			adc #$00
  8429 4D7D 91 84			sta (:bp2),y
  8430
  8431 				; optimize OK (vservice.pas), line = 1470
  8432
  8433 4D7F A9 00			lda #$00
  8434 4D81 8D 0B AC			sta COLLISION
  8435
  8436 				; optimize OK (vservice.pas), line = 1472
  8437
  8438 4D84 AC E2 AB 84 84 AC + 	mwy X1 :bp2
  8439 4D8E A0 00			ldy #$00
  8440 4D90 B1 84			lda (:bp2),y
  8441 4D92 85 9F			sta :STACKORIGIN+9
  8442 4D94 C8				iny
  8443 4D95 B1 84			lda (:bp2),y
  8444 4D97 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  8445 4D99 A0 00			ldy #$00
  8446 4D9B A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  8447 4D9D 10 01			spl
  8448 4D9F 88				dey
  8449 4DA0 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  8450 4DA2 84 BF			sty :STACKORIGIN+STACKWIDTH*2+9
  8451 4DA4 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
  8452 4DA6 66 AF			ror :STACKORIGIN+STACKWIDTH+9
  8453 4DA8 66 9F			ror :STACKORIGIN+9
  8454 4DAA 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
  8455 4DAC 66 AF			ror :STACKORIGIN+STACKWIDTH+9
  8456 4DAE 66 9F			ror :STACKORIGIN+9
  8457 4DB0 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
  8458 4DB2 66 AF			ror :STACKORIGIN+STACKWIDTH+9
  8459 4DB4 66 9F			ror :STACKORIGIN+9
  8460 4DB6 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
  8461 4DB8 66 AF			ror :STACKORIGIN+STACKWIDTH+9
  8462 4DBA 66 9F			ror :STACKORIGIN+9
  8463 4DBC A5 9F			lda :STACKORIGIN+9
  8464 4DBE 8D FF AB			sta XP1
  8465 4DC1 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  8466 4DC3 8D 00 AC			sta XP1+1
  8467
  8468 				; optimize OK (vservice.pas), line = 1473
  8469
  8470 4DC6 AC E4 AB 84 84 AC + 	mwy Y1 :bp2
  8471 4DD0 A0 00			ldy #$00
  8472 4DD2 B1 84			lda (:bp2),y
  8473 4DD4 85 9F			sta :STACKORIGIN+9
  8474 4DD6 C8				iny
  8475 4DD7 B1 84			lda (:bp2),y
  8476 4DD9 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  8477 4DDB A0 00			ldy #$00
  8478 4DDD A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  8479 4DDF 10 01			spl
  8480 4DE1 88				dey
  8481 4DE2 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  8482 4DE4 84 BF			sty :STACKORIGIN+STACKWIDTH*2+9
  8483 4DE6 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
  8484 4DE8 66 AF			ror :STACKORIGIN+STACKWIDTH+9
  8485 4DEA 66 9F			ror :STACKORIGIN+9
  8486 4DEC 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
  8487 4DEE 66 AF			ror :STACKORIGIN+STACKWIDTH+9
  8488 4DF0 66 9F			ror :STACKORIGIN+9
  8489 4DF2 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
  8490 4DF4 66 AF			ror :STACKORIGIN+STACKWIDTH+9
  8491 4DF6 66 9F			ror :STACKORIGIN+9
  8492 4DF8 A5 9F			lda :STACKORIGIN+9
  8493 4DFA 8D 01 AC			sta YP1
  8494 4DFD A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  8495 4DFF 8D 02 AC			sta YP1+1
  8496
  8497 				; optimize OK (vservice.pas), line = 1474
  8498
  8499 4E02 AC E6 AB 84 84 AC + 	mwy X2 :bp2
  8500 4E0C A0 00			ldy #$00
  8501 4E0E B1 84			lda (:bp2),y
  8502 4E10 85 9F			sta :STACKORIGIN+9
  8503 4E12 C8				iny
  8504 4E13 B1 84			lda (:bp2),y
  8505 4E15 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  8506 4E17 A0 00			ldy #$00
  8507 4E19 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  8508 4E1B 10 01			spl
  8509 4E1D 88				dey
  8510 4E1E 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  8511 4E20 84 BF			sty :STACKORIGIN+STACKWIDTH*2+9
  8512 4E22 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
  8513 4E24 66 AF			ror :STACKORIGIN+STACKWIDTH+9
  8514 4E26 66 9F			ror :STACKORIGIN+9
  8515 4E28 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
  8516 4E2A 66 AF			ror :STACKORIGIN+STACKWIDTH+9
  8517 4E2C 66 9F			ror :STACKORIGIN+9
  8518 4E2E 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
  8519 4E30 66 AF			ror :STACKORIGIN+STACKWIDTH+9
  8520 4E32 66 9F			ror :STACKORIGIN+9
  8521 4E34 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
  8522 4E36 66 AF			ror :STACKORIGIN+STACKWIDTH+9
  8523 4E38 66 9F			ror :STACKORIGIN+9
  8524 4E3A A5 9F			lda :STACKORIGIN+9
  8525 4E3C 8D 03 AC			sta XP2
  8526 4E3F A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  8527 4E41 8D 04 AC			sta XP2+1
  8528
  8529 				; optimize OK (vservice.pas), line = 1475
  8530
  8531 4E44 AC E8 AB 84 84 AC + 	mwy Y2 :bp2
  8532 4E4E A0 00			ldy #$00
  8533 4E50 B1 84			lda (:bp2),y
  8534 4E52 85 9F			sta :STACKORIGIN+9
  8535 4E54 C8				iny
  8536 4E55 B1 84			lda (:bp2),y
  8537 4E57 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  8538 4E59 A0 00			ldy #$00
  8539 4E5B A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  8540 4E5D 10 01			spl
  8541 4E5F 88				dey
  8542 4E60 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  8543 4E62 84 BF			sty :STACKORIGIN+STACKWIDTH*2+9
  8544 4E64 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
  8545 4E66 66 AF			ror :STACKORIGIN+STACKWIDTH+9
  8546 4E68 66 9F			ror :STACKORIGIN+9
  8547 4E6A 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
  8548 4E6C 66 AF			ror :STACKORIGIN+STACKWIDTH+9
  8549 4E6E 66 9F			ror :STACKORIGIN+9
  8550 4E70 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
  8551 4E72 66 AF			ror :STACKORIGIN+STACKWIDTH+9
  8552 4E74 66 9F			ror :STACKORIGIN+9
  8553 4E76 A5 9F			lda :STACKORIGIN+9
  8554 4E78 8D 05 AC			sta YP2
  8555 4E7B A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  8556 4E7D 8D 06 AC			sta YP2+1
  8557
  8558 				; optimize OK (vservice.pas), line = 1477
  8559
  8560 4E80 AC E2 AB 84 84 AC + 	mwy X1 :bp2
  8561 4E8A A0 00			ldy #$00
  8562 4E8C B1 84			lda (:bp2),y
  8563 4E8E 8D EF AB			sta XK
  8564 4E91 C8				iny
  8565 4E92 B1 84			lda (:bp2),y
  8566 4E94 8D F0 AB			sta XK+1
  8567
  8568 				; optimize OK (vservice.pas), line = 1478
  8569
  8570 4E97 AC E4 AB 84 84 AC + 	mwy Y1 :bp2
  8571 4EA1 A0 00			ldy #$00
  8572 4EA3 B1 84			lda (:bp2),y
  8573 4EA5 8D F1 AB			sta YK
  8574 4EA8 C8				iny
  8575 4EA9 B1 84			lda (:bp2),y
  8576 4EAB 8D F2 AB			sta YK+1
  8577
  8578 				; optimize OK (vservice.pas), line = 1479
  8579
  8580 4EAE AC E6 AB 84 84 AC + 	mwy X2 :bp2
  8581 4EB8 A0 00			ldy #$00
  8582 4EBA B1 84			lda (:bp2),y
  8583 4EBC 8D F3 AB			sta XJ
  8584 4EBF C8				iny
  8585 4EC0 B1 84			lda (:bp2),y
  8586 4EC2 8D F4 AB			sta XJ+1
  8587
  8588 				; optimize OK (vservice.pas), line = 1480
  8589
  8590 4EC5 AC E8 AB 84 84 AC + 	mwy Y2 :bp2
  8591 4ECF A0 00			ldy #$00
  8592 4ED1 B1 84			lda (:bp2),y
  8593 4ED3 8D F5 AB			sta YJ
  8594 4ED6 C8				iny
  8595 4ED7 B1 84			lda (:bp2),y
  8596 4ED9 8D F6 AB			sta YJ+1
  8597
  8598 				; optimize OK (vservice.pas), line = 1482
  8599
  8600 4EDC AC E2 AB 84 84 AC + 	mwy X1 :bp2
  8601 4EE6 A0 00			ldy #$00
  8602 4EE8 B1 84			lda (:bp2),y
  8603 4EEA 8D F7 AB			sta XH
  8604 4EED C8				iny
  8605 4EEE B1 84			lda (:bp2),y
  8606 4EF0 8D F8 AB			sta XH+1
  8607
  8608 				; optimize OK (vservice.pas), line = 1483
  8609
  8610 4EF3 AC E4 AB 84 84 AC + 	mwy Y1 :bp2
  8611 4EFD A0 00			ldy #$00
  8612 4EFF B1 84			lda (:bp2),y
  8613 4F01 8D F9 AB			sta YH
  8614 4F04 C8				iny
  8615 4F05 B1 84			lda (:bp2),y
  8616 4F07 8D FA AB			sta YH+1
  8617
  8618 				; optimize OK (vservice.pas), line = 1484
  8619
  8620 4F0A AC E6 AB 84 84 AC + 	mwy X2 :bp2
  8621 4F14 A0 00			ldy #$00
  8622 4F16 B1 84			lda (:bp2),y
  8623 4F18 8D FB AB			sta XN
  8624 4F1B C8				iny
  8625 4F1C B1 84			lda (:bp2),y
  8626 4F1E 8D FC AB			sta XN+1
  8627
  8628 				; optimize OK (vservice.pas), line = 1485
  8629
  8630 4F21 AC E8 AB 84 84 AC + 	mwy Y2 :bp2
  8631 4F2B A0 00			ldy #$00
  8632 4F2D B1 84			lda (:bp2),y
  8633 4F2F 8D FD AB			sta YN
  8634 4F32 C8				iny
  8635 4F33 B1 84			lda (:bp2),y
  8636 4F35 8D FE AB			sta YN+1
  8637
  8638 				; optimize OK (vservice.pas), line = 1492
  8639
  8640 4F38 AC E2 AB 84 84 AC + 	mwy X1 :bp2
  8641 4F42 A0 00			ldy #$00
  8642 4F44 B1 84			lda (:bp2),y
  8643 4F46 85 9F			sta :STACKORIGIN+9
  8644 4F48 C8				iny
  8645 4F49 B1 84			lda (:bp2),y
  8646 4F4B 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  8647 4F4D AC E6 AB 84 84 AC + 	mwy X2 :bp2
  8648 4F57 A0 00			ldy #$00
  8649 4F59 B1 84			lda (:bp2),y
  8650 4F5B 85 A0			sta :STACKORIGIN+10
  8651 4F5D C8				iny
  8652 4F5E B1 84			lda (:bp2),y
  8653 4F60 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  8654 4F62 A0 00			ldy #$00
  8655 4F64 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  8656 4F66 10 01			spl
  8657 4F68 88				dey
  8658 4F69 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  8659 4F6B 84 BF			sty :STACKORIGIN+STACKWIDTH*2+9
  8660 4F6D 84 CF			sty :STACKORIGIN+STACKWIDTH*3+9
  8661 4F6F A0 00			ldy #$00
  8662 4F71 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
  8663 4F73 10 01			spl
  8664 4F75 88				dey
  8665 4F76 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  8666 4F78 84 C0			sty :STACKORIGIN+STACKWIDTH*2+10
  8667 4F7A 84 D0			sty :STACKORIGIN+STACKWIDTH*3+10
  8668 4F7C A5 9F			lda :STACKORIGIN+9
  8669 4F7E 38 E5 A0			sub :STACKORIGIN+10
  8670 4F81 85 8A			sta SYSTEM.ABS.@010185000.X
  8671 4F83 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  8672 4F85 E5 B0			sbc :STACKORIGIN+STACKWIDTH+10
  8673 4F87 85 8B			sta SYSTEM.ABS.@010185000.X+1
  8674 4F89 A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
  8675 4F8B E5 C0			sbc :STACKORIGIN+STACKWIDTH*2+10
  8676 4F8D 85 8C			sta SYSTEM.ABS.@010185000.X+2
  8677 4F8F A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
  8678 4F91 E5 D0			sbc :STACKORIGIN+STACKWIDTH*3+10
  8679 4F93 85 8D			sta SYSTEM.ABS.@010185000.X+3
  8680 4F95 20 85 1B			jsr SYSTEM.ABS.@010185000
  8681 4F98 E8				inx
  8682 4F99 A0 01			ldy #1
  8683 4F9B				.LOCAL
  8684 4F9B A5 95			lda SYSTEM.ABS.@010185000.RESULT+3
  8685 4F9D 38 E9 00			sub #$00
  8686 4FA0 D0 1C			bne L4
  8687 4FA2 A5 94			lda SYSTEM.ABS.@010185000.RESULT+2
  8688 4FA4 C9 00			cmp #$00
  8689 4FA6 D0 0A			bne L1
  8690 4FA8 A5 93			lda SYSTEM.ABS.@010185000.RESULT+1
  8691 4FAA C9 00			cmp #$00
  8692 4FAC D0 04			bne L1
  8693 4FAE A5 92			lda SYSTEM.ABS.@010185000.RESULT
  8694 4FB0 C9 10			cmp #$10
  8695 4FB2 F0 10		L1	beq L5
  8696 4FB4 B0 04			bcs L3
  8697 4FB6 A9 FF			lda #$FF
  8698 4FB8 D0 0A			bne L5
  8699 4FBA A9 01		L3	lda #$01
  8700 4FBC D0 06			bne L5
  8701 4FBE 50 04		L4	bvc L5
  8702 4FC0 49 FF			eor #$FF
  8703 4FC2 09 01			ora #$01
  8704 4FC4			L5
  8705 					.ENDL
  8706 4FC4 F0 02			seq
  8707 4FC6 10 01			bpl @+
  8708 4FC8 88				dey
  8709 				@
  8710 4FC9 94 96			sty :STACKORIGIN,x
  8711 4FCB AC E8 AB 84 84 AC + 	mwy Y2 :bp2
  8712 4FD5 A0 00			ldy #$00
  8713 4FD7 B1 84			lda (:bp2),y
  8714 4FD9 85 9F			sta :STACKORIGIN+9
  8715 4FDB C8				iny
  8716 4FDC B1 84			lda (:bp2),y
  8717 4FDE 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  8718 4FE0 AC E4 AB 84 84 AC + 	mwy Y1 :bp2
  8719 4FEA A0 00			ldy #$00
  8720 4FEC B1 84			lda (:bp2),y
  8721 4FEE 85 A0			sta :STACKORIGIN+10
  8722 4FF0 C8				iny
  8723 4FF1 B1 84			lda (:bp2),y
  8724 4FF3 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  8725 4FF5 A0 00			ldy #$00
  8726 4FF7 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  8727 4FF9 10 01			spl
  8728 4FFB 88				dey
  8729 4FFC 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  8730 4FFE 84 BF			sty :STACKORIGIN+STACKWIDTH*2+9
  8731 5000 84 CF			sty :STACKORIGIN+STACKWIDTH*3+9
  8732 5002 A0 00			ldy #$00
  8733 5004 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
  8734 5006 10 01			spl
  8735 5008 88				dey
  8736 5009 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  8737 500B 84 C0			sty :STACKORIGIN+STACKWIDTH*2+10
  8738 500D 84 D0			sty :STACKORIGIN+STACKWIDTH*3+10
  8739 500F A5 9F			lda :STACKORIGIN+9
  8740 5011 38 E5 A0			sub :STACKORIGIN+10
  8741 5014 85 8A			sta SYSTEM.ABS.@010185000.X
  8742 5016 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  8743 5018 E5 B0			sbc :STACKORIGIN+STACKWIDTH+10
  8744 501A 85 8B			sta SYSTEM.ABS.@010185000.X+1
  8745 501C A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
  8746 501E E5 C0			sbc :STACKORIGIN+STACKWIDTH*2+10
  8747 5020 85 8C			sta SYSTEM.ABS.@010185000.X+2
  8748 5022 A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
  8749 5024 E5 D0			sbc :STACKORIGIN+STACKWIDTH*3+10
  8750 5026 85 8D			sta SYSTEM.ABS.@010185000.X+3
  8751 5028 20 85 1B			jsr SYSTEM.ABS.@010185000
  8752 502B CA				dex
  8753 502C A0 01			ldy #1
  8754 502E				.LOCAL
  8755 502E A5 95			lda SYSTEM.ABS.@010185000.RESULT+3
  8756 5030 38 E9 00			sub #$00
  8757 5033 D0 1C			bne L4
  8758 5035 A5 94			lda SYSTEM.ABS.@010185000.RESULT+2
  8759 5037 C9 00			cmp #$00
  8760 5039 D0 0A			bne L1
  8761 503B A5 93			lda SYSTEM.ABS.@010185000.RESULT+1
  8762 503D C9 00			cmp #$00
  8763 503F D0 04			bne L1
  8764 5041 A5 92			lda SYSTEM.ABS.@010185000.RESULT
  8765 5043 C9 08			cmp #$08
  8766 5045 F0 10		L1	beq L5
  8767 5047 B0 04			bcs L3
  8768 5049 A9 FF			lda #$FF
  8769 504B D0 0A			bne L5
  8770 504D A9 01		L3	lda #$01
  8771 504F D0 06			bne L5
  8772 5051 50 04		L4	bvc L5
  8773 5053 49 FF			eor #$FF
  8774 5055 09 01			ora #$01
  8775 5057			L5
  8776 					.ENDL
  8777 5057 F0 02			seq
  8778 5059 10 01			bpl @+
  8779 505B 88				dey
  8780 				@
  8781 505C 98				tya
  8782 505D 15 97			ora :STACKORIGIN+1,x
  8783 505F F0 05			jeq l_15A1
  8784
  8785 				; optimize OK (vservice.pas), line = 1493
  8786
  8787 5061 A9 01			lda #$01
  8788 5063 20 24 26			jsr FATAL_ERROR
  8789 5066			l_15A1
  8790
  8791 				; optimize OK (vservice.pas), line = 1496
  8792
  8793 5066 AD 00 AC			lda XP1+1
  8794 5069 CD 04 AC			cmp XP2+1
  8795 506C D0 06			bne @+
  8796 506E AD FF AB			lda XP1
  8797 5071 CD 03 AC			cmp XP2
  8798 				@
  8799 5074 D0 13			jne l_15C4x
  8800 5076 AD 02 AC			lda YP1+1
  8801 5079 CD 06 AC			cmp YP2+1
  8802 507C D0 06			bne @+
  8803 507E AD 01 AC			lda YP1
  8804 5081 CD 05 AC			cmp YP2
  8805 				@
  8806 5084 D0 03 4C ED 53		jeq l_15C4
  8807 5089			l_15C4x
  8808
  8809 				; optimize OK (vservice.pas), line = 1498
  8810
  8811 5089 AD 02 AC			lda YP1+1
  8812 508C CD 06 AC			cmp YP2+1
  8813 508F D0 06			bne @+
  8814 5091 AD 01 AC			lda YP1
  8815 5094 CD 05 AC			cmp YP2
  8816 				@
  8817 5097 D0 03 4C E5 51		jeq l_15D7
  8818
  8819 				; optimize OK (vservice.pas), line = 1500
  8820
  8821 509C AD 0B AC			lda COLLISION
  8822 509F 09 01			ora #$01
  8823 50A1 8D 0B AC			sta COLLISION
  8824
  8825 				; --- WhileProlog
  8826 50A4 4C BF 51			jmp l_15E4
  8827 50A7			l_15E5
  8828
  8829 				; optimize OK (vservice.pas), line = 1504
  8830
  8831 50A7 AD F7 AB			lda XH
  8832 50AA 85 9F			sta :STACKORIGIN+9
  8833 50AC A0 00			ldy #$00
  8834 50AE AD F8 AB			lda XH+1
  8835 50B1 10 01			spl
  8836 50B3 88				dey
  8837 50B4 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  8838 50B6 84 BF			sty :STACKORIGIN+STACKWIDTH*2+9
  8839 50B8 84 CF			sty :STACKORIGIN+STACKWIDTH*3+9
  8840 50BA AD FB AB			lda XN
  8841 50BD 85 A0			sta :STACKORIGIN+10
  8842 50BF A0 00			ldy #$00
  8843 50C1 AD FC AB			lda XN+1
  8844 50C4 10 01			spl
  8845 50C6 88				dey
  8846 50C7 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  8847 50C9 84 C0			sty :STACKORIGIN+STACKWIDTH*2+10
  8848 50CB 84 D0			sty :STACKORIGIN+STACKWIDTH*3+10
  8849 50CD A5 9F			lda :STACKORIGIN+9
  8850 50CF 18 65 A0			add :STACKORIGIN+10
  8851 50D2 85 9F			sta :STACKORIGIN+9
  8852 50D4 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  8853 50D6 65 B0			adc :STACKORIGIN+STACKWIDTH+10
  8854 50D8 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  8855 50DA A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
  8856 50DC 65 C0			adc :STACKORIGIN+STACKWIDTH*2+10
  8857 50DE 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
  8858 50E0 A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
  8859 50E2 65 D0			adc :STACKORIGIN+STACKWIDTH*3+10
  8860 50E4 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
  8861 50E6 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
  8862 50E8 66 AF			ror :STACKORIGIN+STACKWIDTH+9
  8863 50EA 66 9F			ror :STACKORIGIN+9
  8864 50EC A5 9F			lda :STACKORIGIN+9
  8865 50EE 8D EB AB			sta X
  8866 50F1 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  8867 50F3 8D EC AB			sta X+1
  8868
  8869 				; optimize OK (vservice.pas), line = 1505
  8870
  8871 50F6 AD F9 AB			lda YH
  8872 50F9 85 9F			sta :STACKORIGIN+9
  8873 50FB A0 00			ldy #$00
  8874 50FD AD FA AB			lda YH+1
  8875 5100 10 01			spl
  8876 5102 88				dey
  8877 5103 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  8878 5105 84 BF			sty :STACKORIGIN+STACKWIDTH*2+9
  8879 5107 84 CF			sty :STACKORIGIN+STACKWIDTH*3+9
  8880 5109 AD FD AB			lda YN
  8881 510C 85 A0			sta :STACKORIGIN+10
  8882 510E A0 00			ldy #$00
  8883 5110 AD FE AB			lda YN+1
  8884 5113 10 01			spl
  8885 5115 88				dey
  8886 5116 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  8887 5118 84 C0			sty :STACKORIGIN+STACKWIDTH*2+10
  8888 511A 84 D0			sty :STACKORIGIN+STACKWIDTH*3+10
  8889 511C A5 9F			lda :STACKORIGIN+9
  8890 511E 18 65 A0			add :STACKORIGIN+10
  8891 5121 85 9F			sta :STACKORIGIN+9
  8892 5123 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  8893 5125 65 B0			adc :STACKORIGIN+STACKWIDTH+10
  8894 5127 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  8895 5129 A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
  8896 512B 65 C0			adc :STACKORIGIN+STACKWIDTH*2+10
  8897 512D 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
  8898 512F A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
  8899 5131 65 D0			adc :STACKORIGIN+STACKWIDTH*3+10
  8900 5133 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
  8901 5135 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
  8902 5137 66 AF			ror :STACKORIGIN+STACKWIDTH+9
  8903 5139 66 9F			ror :STACKORIGIN+9
  8904 513B A5 9F			lda :STACKORIGIN+9
  8905 513D 8D ED AB			sta Y
  8906 5140 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  8907 5142 8D EE AB			sta Y+1
  8908
  8909 				; optimize OK (vservice.pas), line = 1507
  8910
  8911 5145 AD ED AB			lda Y
  8912 5148 85 9F			sta :STACKORIGIN+9
  8913 514A A0 00			ldy #$00
  8914 514C AD EE AB			lda Y+1
  8915 514F 10 01			spl
  8916 5151 88				dey
  8917 5152 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  8918 5154 84 BF			sty :STACKORIGIN+STACKWIDTH*2+9
  8919 5156 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
  8920 5158 66 AF			ror :STACKORIGIN+STACKWIDTH+9
  8921 515A 66 9F			ror :STACKORIGIN+9
  8922 515C 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
  8923 515E 66 AF			ror :STACKORIGIN+STACKWIDTH+9
  8924 5160 66 9F			ror :STACKORIGIN+9
  8925 5162 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
  8926 5164 66 AF			ror :STACKORIGIN+STACKWIDTH+9
  8927 5166 66 9F			ror :STACKORIGIN+9
  8928 5168 A5 9F			lda :STACKORIGIN+9
  8929 516A 8D 09 AC			sta YP
  8930 516D A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  8931 516F 8D 0A AC			sta YP+1
  8932
  8933 				; optimize OK (vservice.pas), line = 1509
  8934
  8935 5172 CD 02 AC			cmp YP1+1
  8936 5175 D0 06			bne @+
  8937 5177 AD 09 AC			lda YP
  8938 517A CD 01 AC			cmp YP1
  8939 				@
  8940 517D D0 18			jne l_161C
  8941
  8942 				; optimize OK (vservice.pas), line = 1511
  8943
  8944 517F AD EB AB			lda X
  8945 5182 8D F7 AB			sta XH
  8946 5185 AD EC AB			lda X+1
  8947 5188 8D F8 AB			sta XH+1
  8948
  8949 				; optimize OK (vservice.pas), line = 1512
  8950
  8951 518B AD ED AB			lda Y
  8952 518E 8D F9 AB			sta YH
  8953 5191 AD EE AB			lda Y+1
  8954 5194 8D FA AB			sta YH+1
  8955 5197			l_161C
  8956
  8957 				; optimize OK (vservice.pas), line = 1515
  8958
  8959 5197 AD 0A AC			lda YP+1
  8960 519A CD 06 AC			cmp YP2+1
  8961 519D D0 06			bne @+
  8962 519F AD 09 AC			lda YP
  8963 51A2 CD 05 AC			cmp YP2
  8964 				@
  8965 51A5 D0 18			jne l_163B
  8966
  8967 				; optimize OK (vservice.pas), line = 1517
  8968
  8969 51A7 AD EB AB			lda X
  8970 51AA 8D FB AB			sta XN
  8971 51AD AD EC AB			lda X+1
  8972 51B0 8D FC AB			sta XN+1
  8973
  8974 				; optimize OK (vservice.pas), line = 1518
  8975
  8976 51B3 AD ED AB			lda Y
  8977 51B6 8D FD AB			sta YN
  8978 51B9 AD EE AB			lda Y+1
  8979 51BC 8D FE AB			sta YN+1
  8980 51BF			l_163B
  8981 51BF			l_15E4
  8982
  8983 				; optimize OK (vservice.pas), line = 1502
  8984
  8985 51BF AD FD AB			lda YN
  8986 51C2 29 07			and #$07
  8987 51C4 85 9F			sta :STACKORIGIN+9
  8988 51C6 A0 01			ldy #1
  8989 51C8 A9 00			lda #$00
  8990 51CA 05 9F			ora :STACKORIGIN+9
  8991 51CC D0 01			bne @+
  8992 51CE 88				dey
  8993 				@
  8994 51CF 84 9F			sty :STACKORIGIN+9
  8995 51D1 AD FD AB			lda YN
  8996 51D4 A0 01			ldy #1
  8997 51D6 29 07			and #$07
  8998 51D8 C9 07			cmp #$07
  8999 				@
  9000 51DA D0 01			bne @+
  9001 51DC 88				dey
  9002 				@
  9003 51DD 98				tya
  9004 51DE 25 9F			and :STACKORIGIN+9
  9005 51E0 F0 03 4C A7 50		jne l_15E5
  9006 51E5			l_15D7
  9007
  9008 				; optimize OK (vservice.pas), line = 1524
  9009
  9010 51E5 AD 00 AC			lda XP1+1
  9011 51E8 CD 04 AC			cmp XP2+1
  9012 51EB D0 06			bne @+
  9013 51ED AD FF AB			lda XP1
  9014 51F0 CD 03 AC			cmp XP2
  9015 				@
  9016 51F3 D0 03 4C 47 53		jeq l_167A
  9017
  9018 				; optimize OK (vservice.pas), line = 1526
  9019
  9020 51F8 AD 0B AC			lda COLLISION
  9021 51FB 09 02			ora #$02
  9022 51FD 8D 0B AC			sta COLLISION
  9023
  9024 				; --- WhileProlog
  9025 5200 4C 21 53			jmp l_1687
  9026 5203			l_1688
  9027
  9028 				; optimize OK (vservice.pas), line = 1530
  9029
  9030 5203 AD EF AB			lda XK
  9031 5206 85 9F			sta :STACKORIGIN+9
  9032 5208 A0 00			ldy #$00
  9033 520A AD F0 AB			lda XK+1
  9034 520D 10 01			spl
  9035 520F 88				dey
  9036 5210 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  9037 5212 84 BF			sty :STACKORIGIN+STACKWIDTH*2+9
  9038 5214 84 CF			sty :STACKORIGIN+STACKWIDTH*3+9
  9039 5216 AD F3 AB			lda XJ
  9040 5219 85 A0			sta :STACKORIGIN+10
  9041 521B A0 00			ldy #$00
  9042 521D AD F4 AB			lda XJ+1
  9043 5220 10 01			spl
  9044 5222 88				dey
  9045 5223 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  9046 5225 84 C0			sty :STACKORIGIN+STACKWIDTH*2+10
  9047 5227 84 D0			sty :STACKORIGIN+STACKWIDTH*3+10
  9048 5229 A5 9F			lda :STACKORIGIN+9
  9049 522B 18 65 A0			add :STACKORIGIN+10
  9050 522E 85 9F			sta :STACKORIGIN+9
  9051 5230 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  9052 5232 65 B0			adc :STACKORIGIN+STACKWIDTH+10
  9053 5234 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  9054 5236 A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
  9055 5238 65 C0			adc :STACKORIGIN+STACKWIDTH*2+10
  9056 523A 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
  9057 523C A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
  9058 523E 65 D0			adc :STACKORIGIN+STACKWIDTH*3+10
  9059 5240 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
  9060 5242 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
  9061 5244 66 AF			ror :STACKORIGIN+STACKWIDTH+9
  9062 5246 66 9F			ror :STACKORIGIN+9
  9063 5248 A5 9F			lda :STACKORIGIN+9
  9064 524A 8D EB AB			sta X
  9065 524D A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  9066 524F 8D EC AB			sta X+1
  9067
  9068 				; optimize OK (vservice.pas), line = 1531
  9069
  9070 5252 AD F1 AB			lda YK
  9071 5255 85 9F			sta :STACKORIGIN+9
  9072 5257 A0 00			ldy #$00
  9073 5259 AD F2 AB			lda YK+1
  9074 525C 10 01			spl
  9075 525E 88				dey
  9076 525F 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  9077 5261 84 BF			sty :STACKORIGIN+STACKWIDTH*2+9
  9078 5263 84 CF			sty :STACKORIGIN+STACKWIDTH*3+9
  9079 5265 AD F5 AB			lda YJ
  9080 5268 85 A0			sta :STACKORIGIN+10
  9081 526A A0 00			ldy #$00
  9082 526C AD F6 AB			lda YJ+1
  9083 526F 10 01			spl
  9084 5271 88				dey
  9085 5272 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  9086 5274 84 C0			sty :STACKORIGIN+STACKWIDTH*2+10
  9087 5276 84 D0			sty :STACKORIGIN+STACKWIDTH*3+10
  9088 5278 A5 9F			lda :STACKORIGIN+9
  9089 527A 18 65 A0			add :STACKORIGIN+10
  9090 527D 85 9F			sta :STACKORIGIN+9
  9091 527F A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  9092 5281 65 B0			adc :STACKORIGIN+STACKWIDTH+10
  9093 5283 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  9094 5285 A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
  9095 5287 65 C0			adc :STACKORIGIN+STACKWIDTH*2+10
  9096 5289 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
  9097 528B A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
  9098 528D 65 D0			adc :STACKORIGIN+STACKWIDTH*3+10
  9099 528F 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
  9100 5291 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
  9101 5293 66 AF			ror :STACKORIGIN+STACKWIDTH+9
  9102 5295 66 9F			ror :STACKORIGIN+9
  9103 5297 A5 9F			lda :STACKORIGIN+9
  9104 5299 8D ED AB			sta Y
  9105 529C A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  9106 529E 8D EE AB			sta Y+1
  9107
  9108 				; optimize OK (vservice.pas), line = 1533
  9109
  9110 52A1 AD EB AB			lda X
  9111 52A4 85 9F			sta :STACKORIGIN+9
  9112 52A6 A0 00			ldy #$00
  9113 52A8 AD EC AB			lda X+1
  9114 52AB 10 01			spl
  9115 52AD 88				dey
  9116 52AE 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  9117 52B0 84 BF			sty :STACKORIGIN+STACKWIDTH*2+9
  9118 52B2 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
  9119 52B4 66 AF			ror :STACKORIGIN+STACKWIDTH+9
  9120 52B6 66 9F			ror :STACKORIGIN+9
  9121 52B8 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
  9122 52BA 66 AF			ror :STACKORIGIN+STACKWIDTH+9
  9123 52BC 66 9F			ror :STACKORIGIN+9
  9124 52BE 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
  9125 52C0 66 AF			ror :STACKORIGIN+STACKWIDTH+9
  9126 52C2 66 9F			ror :STACKORIGIN+9
  9127 52C4 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
  9128 52C6 66 AF			ror :STACKORIGIN+STACKWIDTH+9
  9129 52C8 66 9F			ror :STACKORIGIN+9
  9130 52CA A5 9F			lda :STACKORIGIN+9
  9131 52CC 8D 07 AC			sta XP
  9132 52CF A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  9133 52D1 8D 08 AC			sta XP+1
  9134
  9135 				; optimize OK (vservice.pas), line = 1535
  9136
  9137 52D4 CD 00 AC			cmp XP1+1
  9138 52D7 D0 06			bne @+
  9139 52D9 AD 07 AC			lda XP
  9140 52DC CD FF AB			cmp XP1
  9141 				@
  9142 52DF D0 18			jne l_16BF
  9143
  9144 				; optimize OK (vservice.pas), line = 1537
  9145
  9146 52E1 AD EB AB			lda X
  9147 52E4 8D EF AB			sta XK
  9148 52E7 AD EC AB			lda X+1
  9149 52EA 8D F0 AB			sta XK+1
  9150
  9151 				; optimize OK (vservice.pas), line = 1538
  9152
  9153 52ED AD ED AB			lda Y
  9154 52F0 8D F1 AB			sta YK
  9155 52F3 AD EE AB			lda Y+1
  9156 52F6 8D F2 AB			sta YK+1
  9157 52F9			l_16BF
  9158
  9159 				; optimize OK (vservice.pas), line = 1541
  9160
  9161 52F9 AD 08 AC			lda XP+1
  9162 52FC CD 04 AC			cmp XP2+1
  9163 52FF D0 06			bne @+
  9164 5301 AD 07 AC			lda XP
  9165 5304 CD 03 AC			cmp XP2
  9166 				@
  9167 5307 D0 18			jne l_16DE
  9168
  9169 				; optimize OK (vservice.pas), line = 1543
  9170
  9171 5309 AD EB AB			lda X
  9172 530C 8D F3 AB			sta XJ
  9173 530F AD EC AB			lda X+1
  9174 5312 8D F4 AB			sta XJ+1
  9175
  9176 				; optimize OK (vservice.pas), line = 1544
  9177
  9178 5315 AD ED AB			lda Y
  9179 5318 8D F5 AB			sta YJ
  9180 531B AD EE AB			lda Y+1
  9181 531E 8D F6 AB			sta YJ+1
  9182 5321			l_16DE
  9183 5321			l_1687
  9184
  9185 				; optimize OK (vservice.pas), line = 1528
  9186
  9187 5321 AD F3 AB			lda XJ
  9188 5324 29 0F			and #$0F
  9189 5326 85 9F			sta :STACKORIGIN+9
  9190 5328 A0 01			ldy #1
  9191 532A A9 00			lda #$00
  9192 532C 05 9F			ora :STACKORIGIN+9
  9193 532E D0 01			bne @+
  9194 5330 88				dey
  9195 				@
  9196 5331 84 9F			sty :STACKORIGIN+9
  9197 5333 AD F3 AB			lda XJ
  9198 5336 A0 01			ldy #1
  9199 5338 29 0F			and #$0F
  9200 533A C9 0F			cmp #$0F
  9201 				@
  9202 533C D0 01			bne @+
  9203 533E 88				dey
  9204 				@
  9205 533F 98				tya
  9206 5340 25 9F			and :STACKORIGIN+9
  9207 5342 F0 03 4C 03 52		jne l_1688
  9208 5347			l_167A
  9209
  9210 				; optimize OK (vservice.pas), line = 1555
  9211
  9212 5347 AD 0B AC			lda COLLISION
  9213 534A C9 01			cmp #$01
  9214 534C D0 03			jne l_171D
  9215 				; optimize OK (vservice.pas), line = 1557
  9216 				; optimize OK (vservice.pas), line = 1558
  9217 534E 4C BC 53			jmp l_1731
  9218 5351			l_171D
  9219
  9220 				; optimize OK (vservice.pas), line = 1560
  9221
  9222 5351 AD 0B AC			lda COLLISION
  9223 5354 C9 02			cmp #$02
  9224 5356 D0 2F			jne l_1743
  9225
  9226 				; optimize OK (vservice.pas), line = 1562
  9227
  9228 5358 AC E6 AB 84 84 AC + 	mwy X2 :bp2
  9229 5362 A0 00			ldy #$00
  9230 5364 AD F3 AB			lda XJ
  9231 5367 91 84			sta (:bp2),y
  9232 5369 C8				iny
  9233 536A AD F4 AB			lda XJ+1
  9234 536D 91 84			sta (:bp2),y
  9235
  9236 				; optimize OK (vservice.pas), line = 1563
  9237
  9238 536F AC E8 AB 84 84 AC + 	mwy Y2 :bp2
  9239 5379 A0 00			ldy #$00
  9240 537B AD F5 AB			lda YJ
  9241 537E 91 84			sta (:bp2),y
  9242 5380 C8				iny
  9243 5381 AD F6 AB			lda YJ+1
  9244 5384 4C E8 53			jmp l_1757
  9245 5387			l_1743
  9246
  9247 				; optimize OK (vservice.pas), line = 1565
  9248
  9249 5387 AD 0B AC			lda COLLISION
  9250 538A C9 03			cmp #$03
  9251 538C D0 5C			jne l_1769
  9252
  9253 				; optimize OK (vservice.pas), line = 1567
  9254
  9255 538E AC E2 AB 84 84 AC + 	mwy X1 :bp2
  9256 5398 A0 00			ldy #$00
  9257 539A AD F3 AB			lda XJ
  9258 539D 91 84			sta (:bp2),y
  9259 539F C8				iny
  9260 53A0 AD F4 AB			lda XJ+1
  9261 53A3 91 84			sta (:bp2),y
  9262
  9263 				; optimize OK (vservice.pas), line = 1568
  9264
  9265 53A5 AC E4 AB 84 84 AC + 	mwy Y1 :bp2
  9266 53AF A0 00			ldy #$00
  9267 53B1 AD F5 AB			lda YJ
  9268 53B4 91 84			sta (:bp2),y
  9269 53B6 C8				iny
  9270 53B7 AD F6 AB			lda YJ+1
  9271 53BA 91 84			sta (:bp2),y
  9272 53BC			l_1731
  9273
  9274 				; optimize OK (vservice.pas), line = 1569
  9275
  9276 53BC AC E6 AB 84 84 AC + 	mwy X2 :bp2
  9277 53C6 A0 00			ldy #$00
  9278 53C8 AD FB AB			lda XN
  9279 53CB 91 84			sta (:bp2),y
  9280 53CD C8				iny
  9281 53CE AD FC AB			lda XN+1
  9282 53D1 91 84			sta (:bp2),y
  9283
  9284 				; optimize OK (vservice.pas), line = 1570
  9285
  9286 53D3 AC E8 AB 84 84 AC + 	mwy Y2 :bp2
  9287 53DD A0 00			ldy #$00
  9288 53DF AD FD AB			lda YN
  9289 53E2 91 84			sta (:bp2),y
  9290 53E4 C8				iny
  9291 53E5 AD FE AB			lda YN+1
  9292 53E8			l_1757
  9293 53E8 91 84			sta (:bp2),y
  9294 53EA			l_1769
  9295 53EA 4C F2 53			jmp l_1789
  9296 53ED			l_15C4
  9297
  9298 				; optimize OK (vservice.pas), line = 1575
  9299
  9300 53ED A9 02			lda #$02
  9301 53EF 20 24 26			jsr FATAL_ERROR
  9302 53F2			l_1789
  9303
  9304 				; optimize OK (vservice.pas), line = 1578
  9305
  9306 53F2 AC E2 AB 84 84 AC + 	mwy X1 :bp2
  9307 53FC A0 00			ldy #$00
  9308 53FE B1 84			lda (:bp2),y
  9309 5400 38 E9 10			sub #$10
  9310 5403 91 84			sta (:bp2),y
  9311 5405 C8				iny
  9312 5406 B1 84			lda (:bp2),y
  9313 5408 E9 00			sbc #$00
  9314 540A 91 84			sta (:bp2),y
  9315
  9316 				; optimize OK (vservice.pas), line = 1579
  9317
  9318 540C AC E4 AB 84 84 AC + 	mwy Y1 :bp2
  9319 5416 A0 00			ldy #$00
  9320 5418 B1 84			lda (:bp2),y
  9321 541A 38 E9 18			sub #$18
  9322 541D 91 84			sta (:bp2),y
  9323 541F C8				iny
  9324 5420 B1 84			lda (:bp2),y
  9325 5422 E9 00			sbc #$00
  9326 5424 91 84			sta (:bp2),y
  9327
  9328 				; optimize OK (vservice.pas), line = 1580
  9329
  9330 5426 AC E6 AB 84 84 AC + 	mwy X2 :bp2
  9331 5430 A0 00			ldy #$00
  9332 5432 B1 84			lda (:bp2),y
  9333 5434 38 E9 10			sub #$10
  9334 5437 91 84			sta (:bp2),y
  9335 5439 C8				iny
  9336 543A B1 84			lda (:bp2),y
  9337 543C E9 00			sbc #$00
  9338 543E 91 84			sta (:bp2),y
  9339
  9340 				; optimize OK (vservice.pas), line = 1581
  9341
  9342 5440 AC E8 AB 84 84 AC + 	mwy Y2 :bp2
  9343 544A A0 00			ldy #$00
  9344 544C B1 84			lda (:bp2),y
  9345 544E 38 E9 18			sub #$18
  9346 5451 91 84			sta (:bp2),y
  9347 5453 C8				iny
  9348 5454 B1 84			lda (:bp2),y
  9349 5456 E9 00			sbc #$00
  9350 5458 91 84			sta (:bp2),y
  9351
  9352 				; optimize OK (vservice.pas), line = 1584
  9353
  9354 545A AC E2 AB 84 84 AC + 	mwy X1 :bp2
  9355 5464 A0 00			ldy #$00
  9356 5466 B1 84			lda (:bp2),y
  9357 5468 8D 14 AB			sta MAX.B
  9358 546B C8				iny
  9359 546C B1 84			lda (:bp2),y
  9360 546E 8D 15 AB			sta MAX.B+1
  9361 5471 A9 00			lda #$00
  9362 5473 8D 12 AB			sta MAX.A
  9363 5476 8D 13 AB			sta MAX.A+1
  9364 5479 20 CE 25			jsr MAX
  9365 547C A9 CF			lda #$CF
  9366 547E 8D 18 AB			sta MIN.A
  9367 5481 A9 00			lda #$00
  9368 5483 8D 19 AB			sta MIN.A+1
  9369 5486 AD 16 AB			lda MAX.RESULT
  9370 5489 8D 1A AB			sta MIN.B
  9371 548C AD 17 AB			lda MAX.RESULT+1
  9372 548F 8D 1B AB			sta MIN.B+1
  9373 5492 20 F9 25			jsr MIN
  9374 5495 AC E2 AB 84 84 AC + 	mwy X1 :bp2
  9375 549F A0 00			ldy #$00
  9376 54A1 AD 1C AB			lda MIN.RESULT
  9377 54A4 91 84			sta (:bp2),y
  9378 54A6 C8				iny
  9379 54A7 AD 1D AB			lda MIN.RESULT+1
  9380 54AA 91 84			sta (:bp2),y
  9381
  9382 				; optimize OK (vservice.pas), line = 1585
  9383
  9384 54AC AC E6 AB 84 84 AC + 	mwy X2 :bp2
  9385 54B6 A0 00			ldy #$00
  9386 54B8 B1 84			lda (:bp2),y
  9387 54BA 8D 14 AB			sta MAX.B
  9388 54BD C8				iny
  9389 54BE B1 84			lda (:bp2),y
  9390 54C0 8D 15 AB			sta MAX.B+1
  9391 54C3 A9 00			lda #$00
  9392 54C5 8D 12 AB			sta MAX.A
  9393 54C8 8D 13 AB			sta MAX.A+1
  9394 54CB 20 CE 25			jsr MAX
  9395 54CE A9 CF			lda #$CF
  9396 54D0 8D 18 AB			sta MIN.A
  9397 54D3 A9 00			lda #$00
  9398 54D5 8D 19 AB			sta MIN.A+1
  9399 54D8 AD 16 AB			lda MAX.RESULT
  9400 54DB 8D 1A AB			sta MIN.B
  9401 54DE AD 17 AB			lda MAX.RESULT+1
  9402 54E1 8D 1B AB			sta MIN.B+1
  9403 54E4 20 F9 25			jsr MIN
  9404 54E7 AC E6 AB 84 84 AC + 	mwy X2 :bp2
  9405 54F1 A0 00			ldy #$00
  9406 54F3 AD 1C AB			lda MIN.RESULT
  9407 54F6 91 84			sta (:bp2),y
  9408 54F8 C8				iny
  9409 54F9 AD 1D AB			lda MIN.RESULT+1
  9410 54FC 91 84			sta (:bp2),y
  9411
  9412 				; optimize OK (vservice.pas), line = 1592
  9413
  9414 54FE AD 0B AC			lda COLLISION
  9415 5501 8D EA AB			sta RESULT
  9416 5504			@exit
  9417
  9418 				; ------------------------------------------------------------
  9419
  9420 = ABE2			X1	= DATAORIGIN+$0FC5
  9421 = ABE4			Y1	= DATAORIGIN+$0FC7
  9422 = ABE6			X2	= DATAORIGIN+$0FC9
  9423 = ABE8			Y2	= DATAORIGIN+$0FCB
  9424 = ABEA			RESULT	= DATAORIGIN+$0FCD
  9425 = ABEB			X	= DATAORIGIN+$0FCE
  9426 = ABED			Y	= DATAORIGIN+$0FD0
  9427 = ABEF			XK	= DATAORIGIN+$0FD2
  9428 = ABF1			YK	= DATAORIGIN+$0FD4
  9429 = ABF3			XJ	= DATAORIGIN+$0FD6
  9430 = ABF5			YJ	= DATAORIGIN+$0FD8
  9431 = ABF7			XH	= DATAORIGIN+$0FDA
  9432 = ABF9			YH	= DATAORIGIN+$0FDC
  9433 = ABFB			XN	= DATAORIGIN+$0FDE
  9434 = ABFD			YN	= DATAORIGIN+$0FE0
  9435 = ABFF			XP1	= DATAORIGIN+$0FE2
  9436 = AC01			YP1	= DATAORIGIN+$0FE4
  9437 = AC03			XP2	= DATAORIGIN+$0FE6
  9438 = AC05			YP2	= DATAORIGIN+$0FE8
  9439 = AC07			XP	= DATAORIGIN+$0FEA
  9440 = AC09			YP	= DATAORIGIN+$0FEC
  9441 = AC0B			COLLISION	= DATAORIGIN+$0FEE
  9442
  9443 = ABE2			@VarData	= X1
  9444 = 0029			@VarDataSize	= 41
  9445
  9446 5504 60				rts						; ret
  9447 				.endl
  9448
  9449 5505			.local	SHOOT_BLOCK					; PROCEDURE
  9450
  9451 				; optimize OK (vservice.pas), line = 1603
  9452
  9453 5505 AD 0D AC			lda XB+1
  9454 5508 10 03 4C A5 58		jmi l_17DD
  9455 550D AD 0C AC			lda XB
  9456 5510 C9 0D			cmp #$0D
  9457 5512 AD 0D AC			lda XB+1
  9458 5515 E9 00			sbc #$00
  9459 5517 50 02			svc
  9460 5519 49 80			eor #$80
  9461 551B 30 03 4C A5 58		jpl l_17DD
  9462 5520 AD 0F AC			lda YB+1
  9463 5523 10 03 4C A5 58		jmi l_17DD
  9464 5528 AD 0E AC			lda YB
  9465 552B C9 0F			cmp #$0F
  9466 552D AD 0F AC			lda YB+1
  9467 5530 E9 00			sbc #$00
  9468 5532 50 02			svc
  9469 5534 49 80			eor #$80
  9470 5536 30 03 4C A5 58		jpl l_17DD
  9471
  9472 				; optimize OK (vservice.pas), line = 1605
  9473
  9474 553B A9 10			lda #$10
  9475 553D 85 8E			sta :ecx
  9476 553F 85 92			sta :ztmp8
  9477 5541 A9 00			lda #$00
  9478 5543 85 8F			sta :ecx+1
  9479 5545 85 93			sta :ztmp9
  9480 5547 AD 0E AC			lda YB
  9481 554A 85 86			sta :eax
  9482 554C 85 94			sta :ztmp10
  9483 554E AD 0F AC			lda YB+1
  9484 5551 85 87			sta :eax+1
  9485 5553 85 95			sta :ztmp11
  9486 					.ifdef fmulinit
  9487 					fmulu_16
  9488 					els
  9489 5555 20 FA 12			imulCX
  9490 					eif
  9491 5558 A5 95			lda :ztmp11
  9492 555A 10 0D			bpl @+
  9493 555C A5 88			lda :eax+2
  9494 555E 38 E5 92			sub :ztmp8
  9495 5561 85 88			sta :eax+2
  9496 5563 A5 89			lda :eax+3
  9497 5565 E5 93			sbc :ztmp9
  9498 5567 85 89			sta :eax+3
  9499 				@
  9500 5569 A5 93			lda :ztmp9
  9501 556B 10 0D			bpl @+
  9502 556D A5 88			lda :eax+2
  9503 556F 38 E5 94			sub :ztmp10
  9504 5572 85 88			sta :eax+2
  9505 5574 A5 89			lda :eax+3
  9506 5576 E5 95			sbc :ztmp11
  9507 5578 85 89			sta :eax+3
  9508 				@
  9509 557A AD 0C AC			lda XB
  9510 557D 18 65 86			add :eax
  9511 5580 A8				tay
  9512 5581 B9 DD A3			lda adr.WALL,y
  9513 5584 D0 03 4C A5 58		jeq l_17FB
  9514
  9515 				; optimize OK (vservice.pas), line = 1607
  9516
  9517 5589 A9 10			lda #$10
  9518 558B 85 8E			sta :ecx
  9519 558D 85 92			sta :ztmp8
  9520 558F A9 00			lda #$00
  9521 5591 85 8F			sta :ecx+1
  9522 5593 85 93			sta :ztmp9
  9523 5595 AD 0E AC			lda YB
  9524 5598 85 86			sta :eax
  9525 559A 85 94			sta :ztmp10
  9526 559C AD 0F AC			lda YB+1
  9527 559F 85 87			sta :eax+1
  9528 55A1 85 95			sta :ztmp11
  9529 					.ifdef fmulinit
  9530 					fmulu_16
  9531 					els
  9532 55A3 20 FA 12			imulCX
  9533 					eif
  9534 55A6 A5 95			lda :ztmp11
  9535 55A8 10 0D			bpl @+
  9536 55AA A5 88			lda :eax+2
  9537 55AC 38 E5 92			sub :ztmp8
  9538 55AF 85 88			sta :eax+2
  9539 55B1 A5 89			lda :eax+3
  9540 55B3 E5 93			sbc :ztmp9
  9541 55B5 85 89			sta :eax+3
  9542 				@
  9543 55B7 A5 93			lda :ztmp9
  9544 55B9 10 0D			bpl @+
  9545 55BB A5 88			lda :eax+2
  9546 55BD 38 E5 94			sub :ztmp10
  9547 55C0 85 88			sta :eax+2
  9548 55C2 A5 89			lda :eax+3
  9549 55C4 E5 95			sbc :ztmp11
  9550 55C6 85 89			sta :eax+3
  9551 				@
  9552 55C8 AD 0C AC			lda XB
  9553 55CB 18 65 86			add :eax
  9554 55CE A8				tay
  9555 55CF B9 DD A3			lda adr.WALL,y
  9556 55D2 C9 0A			cmp #$0A
  9557 55D4 90 03 4C 92 57		jcs l_1819
  9558
  9559 				; optimize OK (vservice.pas), line = 1609
  9560
  9561 55D9 AD 0C AC			lda XB
  9562 55DC 8D C0 AB			sta REMOVE_BLOCK.XA
  9563 55DF AD 0E AC			lda YB
  9564 55E2 8D C1 AB			sta REMOVE_BLOCK.YA
  9565 55E5 20 1C 40			jsr REMOVE_BLOCK
  9566
  9567 				; optimize FAIL (0, vservice.pas), line = 1610
  9568
  9569 55E8 CE 9D 9D			dec REMAIN_BLK
  9570
  9571 				; optimize OK (vservice.pas), line = 1614
  9572
  9573 55EB AD BA 9D			lda CUR_PLAYER
  9574 55EE 0A				asl @
  9575 55EF 0A				asl @
  9576 55F0 85 9F			sta :STACKORIGIN+9
  9577 55F2 A9 10			lda #$10
  9578 55F4 85 8E			sta :ecx
  9579 55F6 85 92			sta :ztmp8
  9580 55F8 A9 00			lda #$00
  9581 55FA 85 8F			sta :ecx+1
  9582 55FC 85 93			sta :ztmp9
  9583 55FE AD 0E AC			lda YB
  9584 5601 85 86			sta :eax
  9585 5603 85 94			sta :ztmp10
  9586 5605 AD 0F AC			lda YB+1
  9587 5608 85 87			sta :eax+1
  9588 560A 85 95			sta :ztmp11
  9589 					.ifdef fmulinit
  9590 					fmulu_16
  9591 					els
  9592 560C 20 FA 12			imulCX
  9593 					eif
  9594 560F A5 95			lda :ztmp11
  9595 5611 10 0D			bpl @+
  9596 5613 A5 88			lda :eax+2
  9597 5615 38 E5 92			sub :ztmp8
  9598 5618 85 88			sta :eax+2
  9599 561A A5 89			lda :eax+3
  9600 561C E5 93			sbc :ztmp9
  9601 561E 85 89			sta :eax+3
  9602 				@
  9603 5620 A5 93			lda :ztmp9
  9604 5622 10 0D			bpl @+
  9605 5624 A5 88			lda :eax+2
  9606 5626 38 E5 94			sub :ztmp10
  9607 5629 85 88			sta :eax+2
  9608 562B A5 89			lda :eax+3
  9609 562D E5 95			sbc :ztmp11
  9610 562F 85 89			sta :eax+3
  9611 				@
  9612 5631 AD 0C AC			lda XB
  9613 5634 18 65 86			add :eax
  9614 5637 A8				tay
  9615 5638 B9 DD A3			lda adr.WALL,y
  9616 563B 0A				asl @
  9617 563C A8				tay
  9618 563D B9 57 10			lda adr.SCORE_WALL,y
  9619 5640 85 A0			sta :STACKORIGIN+10
  9620 5642 B9 58 10			lda adr.SCORE_WALL+1,y
  9621 5645 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  9622 5647 A4 9F			ldy :STACKORIGIN+9
  9623 5649 B9 9F 9D			lda adr.SCORE.PLAYER,y
  9624 564C 18 65 A0			add :STACKORIGIN+10
  9625 564F 99 9F 9D			sta adr.SCORE.PLAYER,y
  9626 5652 B9 A0 9D			lda adr.SCORE.PLAYER+1,y
  9627 5655 65 B0			adc :STACKORIGIN+STACKWIDTH+10
  9628 5657 99 A0 9D			sta adr.SCORE.PLAYER+1,y
  9629 565A B9 A1 9D			lda adr.SCORE.PLAYER+2,y
  9630 565D 69 00			adc #$00
  9631 565F 99 A1 9D			sta adr.SCORE.PLAYER+2,y
  9632 5662 B9 A2 9D			lda adr.SCORE.PLAYER+3,y
  9633 5665 69 00			adc #$00
  9634 5667 99 A2 9D			sta adr.SCORE.PLAYER+3,y
  9635
  9636 				; optimize OK (vservice.pas), line = 1616
  9637
  9638 566A A9 2C			lda #$2C
  9639 566C 8D 63 9C			sta SYSTEM.RANDOM.@010184000.RANGE
  9640 566F A9 01			lda #$01
  9641 5671 8D 64 9C			sta SYSTEM.RANDOM.@010184000.RANGE+1
  9642 5674 20 FF 23			jsr SYSTEM.RANDOM.@010184000
  9643 5677 AD CA 9D			lda LETT.INCOMING
  9644 567A 18 6D 65 9C			add SYSTEM.RANDOM.@010184000.RESULT
  9645 567E 8D CA 9D			sta LETT.INCOMING
  9646 5681 AD CB 9D			lda LETT.INCOMING+1
  9647 5684 6D 66 9C			adc SYSTEM.RANDOM.@010184000.RESULT+1
  9648 5687 8D CB 9D			sta LETT.INCOMING+1
  9649
  9650 				; optimize OK (vservice.pas), line = 1618
  9651
  9652 568A AD 0C AC			lda XB
  9653 568D 85 9F			sta :STACKORIGIN+9
  9654 568F A0 00			ldy #$00
  9655 5691 AD 0D AC			lda XB+1
  9656 5694 10 01			spl
  9657 5696 88				dey
  9658 5697 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  9659 5699 84 BF			sty :STACKORIGIN+STACKWIDTH*2+9
  9660 569B 84 CF			sty :STACKORIGIN+STACKWIDTH*3+9
  9661 569D 06 9F			asl :STACKORIGIN+9
  9662 569F 26 AF			rol :STACKORIGIN+STACKWIDTH+9
  9663 56A1 26 BF			rol :STACKORIGIN+STACKWIDTH*2+9
  9664 56A3 26 CF			rol :STACKORIGIN+STACKWIDTH*3+9
  9665 56A5 06 9F			asl :STACKORIGIN+9
  9666 56A7 26 AF			rol :STACKORIGIN+STACKWIDTH+9
  9667 56A9 06 9F			asl :STACKORIGIN+9
  9668 56AB 26 AF			rol :STACKORIGIN+STACKWIDTH+9
  9669 56AD 06 9F			asl :STACKORIGIN+9
  9670 56AF 26 AF			rol :STACKORIGIN+STACKWIDTH+9
  9671 56B1 A5 9F			lda :STACKORIGIN+9
  9672 56B3 18 69 09			add #$09
  9673 56B6 8D CC 9D			sta LETT.NEXTX
  9674 56B9 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  9675 56BB 69 00			adc #$00
  9676 56BD 8D CD 9D			sta LETT.NEXTX+1
  9677
  9678 				; optimize OK (vservice.pas), line = 1619
  9679
  9680 56C0 AD 0E AC			lda YB
  9681 56C3 85 9F			sta :STACKORIGIN+9
  9682 56C5 A0 00			ldy #$00
  9683 56C7 AD 0F AC			lda YB+1
  9684 56CA 10 01			spl
  9685 56CC 88				dey
  9686 56CD 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  9687 56CF 84 BF			sty :STACKORIGIN+STACKWIDTH*2+9
  9688 56D1 84 CF			sty :STACKORIGIN+STACKWIDTH*3+9
  9689 56D3 A5 9F			lda :STACKORIGIN+9
  9690 56D5 18 69 01			add #$01
  9691 56D8 85 9F			sta :STACKORIGIN+9
  9692 56DA A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  9693 56DC 69 00			adc #$00
  9694 56DE 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  9695 56E0 A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
  9696 56E2 69 00			adc #$00
  9697 56E4 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
  9698 56E6 A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
  9699 56E8 69 00			adc #$00
  9700 56EA 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
  9701 56EC 06 9F			asl :STACKORIGIN+9
  9702 56EE 26 AF			rol :STACKORIGIN+STACKWIDTH+9
  9703 56F0 06 9F			asl :STACKORIGIN+9
  9704 56F2 26 AF			rol :STACKORIGIN+STACKWIDTH+9
  9705 56F4 06 9F			asl :STACKORIGIN+9
  9706 56F6 26 AF			rol :STACKORIGIN+STACKWIDTH+9
  9707 56F8 A5 9F			lda :STACKORIGIN+9
  9708 56FA 18 69 16			add #$16
  9709 56FD 8D CE 9D			sta LETT.NEXTY
  9710 5700 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  9711 5702 69 00			adc #$00
  9712 5704 8D CF 9D			sta LETT.NEXTY+1
  9713
  9714 				; optimize FAIL ('RANDOM_LETTER_DROP', vservice.pas), line = 1620
  9715
  9716 5707 20 9E 28			jsr RANDOM_LETTER_DROP
  9717 570A AD 31 AB			lda RANDOM_LETTER_DROP.RESULT
  9718 570D 8D D0 9D			sta LETT.NEXTTYPE
  9719 5710 AD 32 AB			lda RANDOM_LETTER_DROP.RESULT+1
  9720 5713 8D D1 9D			sta LETT.NEXTTYPE+1
  9721
  9722 				; optimize OK (vservice.pas), line = 1622
  9723
  9724 5716 A9 10			lda #$10
  9725 5718 85 8E			sta :ecx
  9726 571A 85 92			sta :ztmp8
  9727 571C A9 00			lda #$00
  9728 571E 85 8F			sta :ecx+1
  9729 5720 85 93			sta :ztmp9
  9730 5722 AD 0E AC			lda YB
  9731 5725 85 86			sta :eax
  9732 5727 85 94			sta :ztmp10
  9733 5729 AD 0F AC			lda YB+1
  9734 572C 85 87			sta :eax+1
  9735 572E 85 95			sta :ztmp11
  9736 					.ifdef fmulinit
  9737 					fmulu_16
  9738 					els
  9739 5730 20 FA 12			imulCX
  9740 					eif
  9741 5733 A5 95			lda :ztmp11
  9742 5735 10 0D			bpl @+
  9743 5737 A5 88			lda :eax+2
  9744 5739 38 E5 92			sub :ztmp8
  9745 573C 85 88			sta :eax+2
  9746 573E A5 89			lda :eax+3
  9747 5740 E5 93			sbc :ztmp9
  9748 5742 85 89			sta :eax+3
  9749 				@
  9750 5744 A5 93			lda :ztmp9
  9751 5746 10 0D			bpl @+
  9752 5748 A5 88			lda :eax+2
  9753 574A 38 E5 94			sub :ztmp10
  9754 574D 85 88			sta :eax+2
  9755 574F A5 89			lda :eax+3
  9756 5751 E5 95			sbc :ztmp11
  9757 5753 85 89			sta :eax+3
  9758 				@
  9759 5755 AD 0C AC			lda XB
  9760 5758 18 65 86			add :eax
  9761 575B A8				tay
  9762 575C A9 00			lda #$00
  9763 575E 99 DD A3			sta adr.WALL,y
  9764
  9765 				; optimize OK (vservice.pas), line = 1623
  9766
  9767 5761 A9 B8			lda #$B8
  9768 5763 8D CC 9C			sta BALL_BLOCK_SOUND.A
  9769 5766 A9 01			lda #$01
  9770 5768 8D CD 9C			sta BALL_BLOCK_SOUND.A+1
  9771 576B A9 03			lda #$03
  9772 576D 8D CE 9C			sta BALL_BLOCK_SOUND.B
  9773 5770 A9 00			lda #$00
  9774 5772 8D CF 9C			sta BALL_BLOCK_SOUND.B+1
  9775 5775 20 9A 24			jsr BALL_BLOCK_SOUND
  9776
  9777 				; optimize OK (vservice.pas), line = 1624
  9778
  9779 5778 AC 10 AC 84 84 AC + 	mwy BALL :bp2
  9780 5782 A0 14			ldy #BALL.SBD-DATAORIGIN
  9781 5784 A9 00			lda #$00
  9782 5786 91 84			sta (:bp2),y
  9783 5788 C8				iny
  9784 5789 91 84			sta (:bp2),y
  9785
  9786 				; optimize OK (vservice.pas), line = 1625
  9787
  9788 578B A0 16			ldy #BALL.BRWHIT-DATAORIGIN
  9789 578D 91 84			sta (:bp2),y
  9790 578F 4C A5 58			jmp l_187D
  9791 5792			l_1819
  9792
  9793 				; optimize OK (vservice.pas), line = 1630
  9794
  9795 5792 A9 10			lda #$10
  9796 5794 85 8E			sta :ecx
  9797 5796 85 92			sta :ztmp8
  9798 5798 A9 00			lda #$00
  9799 579A 85 8F			sta :ecx+1
  9800 579C 85 93			sta :ztmp9
  9801 579E AD 0E AC			lda YB
  9802 57A1 85 86			sta :eax
  9803 57A3 85 94			sta :ztmp10
  9804 57A5 AD 0F AC			lda YB+1
  9805 57A8 85 87			sta :eax+1
  9806 57AA 85 95			sta :ztmp11
  9807 					.ifdef fmulinit
  9808 					fmulu_16
  9809 					els
  9810 57AC 20 FA 12			imulCX
  9811 					eif
  9812 57AF A5 95			lda :ztmp11
  9813 57B1 10 0D			bpl @+
  9814 57B3 A5 88			lda :eax+2
  9815 57B5 38 E5 92			sub :ztmp8
  9816 57B8 85 88			sta :eax+2
  9817 57BA A5 89			lda :eax+3
  9818 57BC E5 93			sbc :ztmp9
  9819 57BE 85 89			sta :eax+3
  9820 				@
  9821 57C0 A5 93			lda :ztmp9
  9822 57C2 10 0D			bpl @+
  9823 57C4 A5 88			lda :eax+2
  9824 57C6 38 E5 94			sub :ztmp10
  9825 57C9 85 88			sta :eax+2
  9826 57CB A5 89			lda :eax+3
  9827 57CD E5 95			sbc :ztmp11
  9828 57CF 85 89			sta :eax+3
  9829 				@
  9830 57D1 AD 0C AC			lda XB
  9831 57D4 18 65 86			add :eax
  9832 57D7 A8				tay
  9833 57D8 B9 DD A3			lda adr.WALL,y
  9834 57DB 29 0F			and #$0F
  9835 57DD C9 09			cmp #$09
  9836 57DF F0 03 4C 6C 58		jne l_189E
  9837
  9838 				; optimize OK (vservice.pas), line = 1632
  9839
  9840 57E4 AC 10 AC 84 84 AC + 	mwy BALL :bp2
  9841 57EE A0 16			ldy #BALL.BRWHIT-DATAORIGIN
  9842 57F0 A9 00			lda #$00
  9843 57F2 91 84			sta (:bp2),y
  9844
  9845 				; optimize OK (vservice.pas), line = 1633
  9846
  9847 57F4 A9 10			lda #$10
  9848 57F6 85 8E			sta :ecx
  9849 57F8 85 92			sta :ztmp8
  9850 57FA A9 00			lda #$00
  9851 57FC 85 8F			sta :ecx+1
  9852 57FE 85 93			sta :ztmp9
  9853 5800 AD 0E AC			lda YB
  9854 5803 85 86			sta :eax
  9855 5805 85 94			sta :ztmp10
  9856 5807 AD 0F AC			lda YB+1
  9857 580A 85 87			sta :eax+1
  9858 580C 85 95			sta :ztmp11
  9859 					.ifdef fmulinit
  9860 					fmulu_16
  9861 					els
  9862 580E 20 FA 12			imulCX
  9863 					eif
  9864 5811 A5 95			lda :ztmp11
  9865 5813 10 0D			bpl @+
  9866 5815 A5 88			lda :eax+2
  9867 5817 38 E5 92			sub :ztmp8
  9868 581A 85 88			sta :eax+2
  9869 581C A5 89			lda :eax+3
  9870 581E E5 93			sbc :ztmp9
  9871 5820 85 89			sta :eax+3
  9872 				@
  9873 5822 A5 93			lda :ztmp9
  9874 5824 10 0D			bpl @+
  9875 5826 A5 88			lda :eax+2
  9876 5828 38 E5 94			sub :ztmp10
  9877 582B 85 88			sta :eax+2
  9878 582D A5 89			lda :eax+3
  9879 582F E5 95			sbc :ztmp11
  9880 5831 85 89			sta :eax+3
  9881 				@
  9882 5833 AD 0C AC			lda XB
  9883 5836 18 65 86			add :eax
  9884 5839 A8				tay
  9885 583A B9 DD A3			lda adr.WALL,y
  9886 583D 38 E9 10			sub #$10
  9887 5840 99 DD A3			sta adr.WALL,y
  9888
  9889 				; optimize OK (vservice.pas), line = 1635
  9890
  9891 5843 A9 72			lda #$72
  9892 5845 8D CC 9C			sta BALL_BLOCK_SOUND.A
  9893 5848 A9 01			lda #$01
  9894 584A 8D CD 9C			sta BALL_BLOCK_SOUND.A+1
  9895 584D A9 04			lda #$04
  9896 584F 8D CE 9C			sta BALL_BLOCK_SOUND.B
  9897 5852 A9 00			lda #$00
  9898 5854 8D CF 9C			sta BALL_BLOCK_SOUND.B+1
  9899 5857 20 9A 24			jsr BALL_BLOCK_SOUND
  9900
  9901 				; optimize OK (vservice.pas), line = 1636
  9902
  9903 585A AD 0C AC			lda XB
  9904 585D 8D 2F AB			sta SHINE.XB
  9905 5860 AD 0E AC			lda YB
  9906 5863 8D 30 AB			sta SHINE.YB
  9907 5866 20 62 28			jsr SHINE
  9908 5869 4C A5 58			jmp l_18C0
  9909 586C			l_189E
  9910
  9911 				; optimize OK (vservice.pas), line = 1640
  9912
  9913 586C AC 10 AC 84 84 AC + 	mwy BALL :bp2
  9914 5876 A0 16			ldy #BALL.BRWHIT-DATAORIGIN
  9915 5878 B1 84			lda (:bp2),y
  9916 587A 18 69 01			add #$01
  9917 587D 91 84			sta (:bp2),y
  9918
  9919 				; optimize OK (vservice.pas), line = 1641
  9920
  9921 587F AD 0C AC			lda XB
  9922 5882 8D 2F AB			sta SHINE.XB
  9923 5885 AD 0E AC			lda YB
  9924 5888 8D 30 AB			sta SHINE.YB
  9925 588B 20 62 28			jsr SHINE
  9926
  9927 				; optimize OK (vservice.pas), line = 1643
  9928
  9929 588E A9 C8			lda #$C8
  9930 5890 8D CC 9C			sta BALL_BLOCK_SOUND.A
  9931 5893 A9 00			lda #$00
  9932 5895 8D CD 9C			sta BALL_BLOCK_SOUND.A+1
  9933 5898 A9 07			lda #$07
  9934 589A 8D CE 9C			sta BALL_BLOCK_SOUND.B
  9935 589D A9 00			lda #$00
  9936 589F 8D CF 9C			sta BALL_BLOCK_SOUND.B+1
  9937 58A2 20 9A 24			jsr BALL_BLOCK_SOUND
  9938 58A5			l_18C0
  9939 58A5			l_187D
  9940 58A5			l_17FB
  9941 58A5			l_17DD
  9942
  9943 				; ------------------------------------------------------------
  9944
  9945 = AC0C			XB	= DATAORIGIN+$0FEF
  9946 = AC0E			YB	= DATAORIGIN+$0FF1
  9947 = AC10			BALL	= DATAORIGIN+$0FF3
  9948 = 9C1D			BALL.X	= DATAORIGIN+$0000
  9949 = 9C1F			BALL.Y	= DATAORIGIN+$0002
  9950 = 9C21			BALL.FINEX	= DATAORIGIN+$0004
  9951 = 9C23			BALL.FINEY	= DATAORIGIN+$0006
  9952 = 9C25			BALL.OLDX	= DATAORIGIN+$0008
  9953 = 9C27			BALL.OLDY	= DATAORIGIN+$000A
  9954 = 9C29			BALL.SPEED	= DATAORIGIN+$000C
  9955 = 9C2B			BALL.FINESPEED	= DATAORIGIN+$000E
  9956 = 9C2D			BALL.SPEEDX	= DATAORIGIN+$0010
  9957 = 9C2F			BALL.SPEEDY	= DATAORIGIN+$0012
  9958 = 9C31			BALL.SBD	= DATAORIGIN+$0014
  9959 = 9C33			BALL.BRWHIT	= DATAORIGIN+$0016
  9960 = 9C34			BALL.INPLAY	= DATAORIGIN+$0017
  9961 = 9C35			BALL.LAUNCH	= DATAORIGIN+$0018
  9962 = 9C36			BALL.ONVAUS	= DATAORIGIN+$0019
  9963 = 9C37			BALL.STM	= DATAORIGIN+$001A
  9964
  9965 = AC0C			@VarData	= XB
  9966 = 0006			@VarDataSize	= 6
  9967
  9968 58A5			@exit
  9969 					.ifdef @new
  9970 					lda <@VarData
  9971 					sta :ztmp
  9972 					lda >@VarData
  9973 					ldy #@VarDataSize-1
  9974 					jmp @FreeMem
  9975 					els
  9976 58A5 60				rts						; ret
  9977 					eif
  9978 				.endl
  9979
  9980 58A6			.local	SHOOT_BLOCK_WITH_FIRE				; PROCEDURE
  9981
  9982 				; optimize OK (vservice.pas), line = 1654
  9983
  9984 58A6 AD 15 AC			lda XB+1
  9985 58A9 10 03 4C 52 5B		jmi l_1903
  9986 58AE AD 14 AC			lda XB
  9987 58B1 C9 0D			cmp #$0D
  9988 58B3 AD 15 AC			lda XB+1
  9989 58B6 E9 00			sbc #$00
  9990 58B8 50 02			svc
  9991 58BA 49 80			eor #$80
  9992 58BC 30 03 4C 52 5B		jpl l_1903
  9993 58C1 AD 17 AC			lda YB+1
  9994 58C4 10 03 4C 52 5B		jmi l_1903
  9995 58C9 AD 16 AC			lda YB
  9996 58CC C9 0F			cmp #$0F
  9997 58CE AD 17 AC			lda YB+1
  9998 58D1 E9 00			sbc #$00
  9999 58D3 50 02			svc
 10000 58D5 49 80			eor #$80
 10001 58D7 30 03 4C 52 5B		jpl l_1903
 10002
 10003 				; optimize OK (vservice.pas), line = 1656
 10004
 10005 58DC A9 10			lda #$10
 10006 58DE 85 8E			sta :ecx
 10007 58E0 85 92			sta :ztmp8
 10008 58E2 A9 00			lda #$00
 10009 58E4 85 8F			sta :ecx+1
 10010 58E6 85 93			sta :ztmp9
 10011 58E8 AD 16 AC			lda YB
 10012 58EB 85 86			sta :eax
 10013 58ED 85 94			sta :ztmp10
 10014 58EF AD 17 AC			lda YB+1
 10015 58F2 85 87			sta :eax+1
 10016 58F4 85 95			sta :ztmp11
 10017 					.ifdef fmulinit
 10018 					fmulu_16
 10019 					els
 10020 58F6 20 FA 12			imulCX
 10021 					eif
 10022 58F9 A5 95			lda :ztmp11
 10023 58FB 10 0D			bpl @+
 10024 58FD A5 88			lda :eax+2
 10025 58FF 38 E5 92			sub :ztmp8
 10026 5902 85 88			sta :eax+2
 10027 5904 A5 89			lda :eax+3
 10028 5906 E5 93			sbc :ztmp9
 10029 5908 85 89			sta :eax+3
 10030 				@
 10031 590A A5 93			lda :ztmp9
 10032 590C 10 0D			bpl @+
 10033 590E A5 88			lda :eax+2
 10034 5910 38 E5 94			sub :ztmp10
 10035 5913 85 88			sta :eax+2
 10036 5915 A5 89			lda :eax+3
 10037 5917 E5 95			sbc :ztmp11
 10038 5919 85 89			sta :eax+3
 10039 				@
 10040 591B AD 14 AC			lda XB
 10041 591E 18 65 86			add :eax
 10042 5921 A8				tay
 10043 5922 B9 DD A3			lda adr.WALL,y
 10044 5925 D0 03 4C 52 5B		jeq l_1921
 10045
 10046 				; optimize OK (vservice.pas), line = 1658
 10047
 10048 592A A9 10			lda #$10
 10049 592C 85 8E			sta :ecx
 10050 592E 85 92			sta :ztmp8
 10051 5930 A9 00			lda #$00
 10052 5932 85 8F			sta :ecx+1
 10053 5934 85 93			sta :ztmp9
 10054 5936 AD 16 AC			lda YB
 10055 5939 85 86			sta :eax
 10056 593B 85 94			sta :ztmp10
 10057 593D AD 17 AC			lda YB+1
 10058 5940 85 87			sta :eax+1
 10059 5942 85 95			sta :ztmp11
 10060 					.ifdef fmulinit
 10061 					fmulu_16
 10062 					els
 10063 5944 20 FA 12			imulCX
 10064 					eif
 10065 5947 A5 95			lda :ztmp11
 10066 5949 10 0D			bpl @+
 10067 594B A5 88			lda :eax+2
 10068 594D 38 E5 92			sub :ztmp8
 10069 5950 85 88			sta :eax+2
 10070 5952 A5 89			lda :eax+3
 10071 5954 E5 93			sbc :ztmp9
 10072 5956 85 89			sta :eax+3
 10073 				@
 10074 5958 A5 93			lda :ztmp9
 10075 595A 10 0D			bpl @+
 10076 595C A5 88			lda :eax+2
 10077 595E 38 E5 94			sub :ztmp10
 10078 5961 85 88			sta :eax+2
 10079 5963 A5 89			lda :eax+3
 10080 5965 E5 95			sbc :ztmp11
 10081 5967 85 89			sta :eax+3
 10082 				@
 10083 5969 AD 14 AC			lda XB
 10084 596C 18 65 86			add :eax
 10085 596F A8				tay
 10086 5970 B9 DD A3			lda adr.WALL,y
 10087 5973 C9 0A			cmp #$0A
 10088 5975 90 03 4C 65 5A		jcs l_193F
 10089
 10090 				; optimize OK (vservice.pas), line = 1660
 10091
 10092 597A AD 14 AC			lda XB
 10093 597D 8D C0 AB			sta REMOVE_BLOCK.XA
 10094 5980 AD 16 AC			lda YB
 10095 5983 8D C1 AB			sta REMOVE_BLOCK.YA
 10096 5986 20 1C 40			jsr REMOVE_BLOCK
 10097
 10098 				; optimize FAIL (0, vservice.pas), line = 1661
 10099
 10100 5989 CE 9D 9D			dec REMAIN_BLK
 10101
 10102 				; optimize OK (vservice.pas), line = 1662
 10103
 10104 598C AD BA 9D			lda CUR_PLAYER
 10105 598F 0A				asl @
 10106 5990 0A				asl @
 10107 5991 85 9F			sta :STACKORIGIN+9
 10108 5993 A9 10			lda #$10
 10109 5995 85 8E			sta :ecx
 10110 5997 85 92			sta :ztmp8
 10111 5999 A9 00			lda #$00
 10112 599B 85 8F			sta :ecx+1
 10113 599D 85 93			sta :ztmp9
 10114 599F AD 16 AC			lda YB
 10115 59A2 85 86			sta :eax
 10116 59A4 85 94			sta :ztmp10
 10117 59A6 AD 17 AC			lda YB+1
 10118 59A9 85 87			sta :eax+1
 10119 59AB 85 95			sta :ztmp11
 10120 					.ifdef fmulinit
 10121 					fmulu_16
 10122 					els
 10123 59AD 20 FA 12			imulCX
 10124 					eif
 10125 59B0 A5 95			lda :ztmp11
 10126 59B2 10 0D			bpl @+
 10127 59B4 A5 88			lda :eax+2
 10128 59B6 38 E5 92			sub :ztmp8
 10129 59B9 85 88			sta :eax+2
 10130 59BB A5 89			lda :eax+3
 10131 59BD E5 93			sbc :ztmp9
 10132 59BF 85 89			sta :eax+3
 10133 				@
 10134 59C1 A5 93			lda :ztmp9
 10135 59C3 10 0D			bpl @+
 10136 59C5 A5 88			lda :eax+2
 10137 59C7 38 E5 94			sub :ztmp10
 10138 59CA 85 88			sta :eax+2
 10139 59CC A5 89			lda :eax+3
 10140 59CE E5 95			sbc :ztmp11
 10141 59D0 85 89			sta :eax+3
 10142 				@
 10143 59D2 AD 14 AC			lda XB
 10144 59D5 18 65 86			add :eax
 10145 59D8 A8				tay
 10146 59D9 B9 DD A3			lda adr.WALL,y
 10147 59DC 0A				asl @
 10148 59DD A8				tay
 10149 59DE B9 57 10			lda adr.SCORE_WALL,y
 10150 59E1 85 A0			sta :STACKORIGIN+10
 10151 59E3 B9 58 10			lda adr.SCORE_WALL+1,y
 10152 59E6 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 10153 59E8 A4 9F			ldy :STACKORIGIN+9
 10154 59EA B9 9F 9D			lda adr.SCORE.PLAYER,y
 10155 59ED 18 65 A0			add :STACKORIGIN+10
 10156 59F0 99 9F 9D			sta adr.SCORE.PLAYER,y
 10157 59F3 B9 A0 9D			lda adr.SCORE.PLAYER+1,y
 10158 59F6 65 B0			adc :STACKORIGIN+STACKWIDTH+10
 10159 59F8 99 A0 9D			sta adr.SCORE.PLAYER+1,y
 10160 59FB B9 A1 9D			lda adr.SCORE.PLAYER+2,y
 10161 59FE 69 00			adc #$00
 10162 5A00 99 A1 9D			sta adr.SCORE.PLAYER+2,y
 10163 5A03 B9 A2 9D			lda adr.SCORE.PLAYER+3,y
 10164 5A06 69 00			adc #$00
 10165 5A08 99 A2 9D			sta adr.SCORE.PLAYER+3,y
 10166
 10167 				; optimize OK (vservice.pas), line = 1663
 10168
 10169 5A0B A9 10			lda #$10
 10170 5A0D 85 8E			sta :ecx
 10171 5A0F 85 92			sta :ztmp8
 10172 5A11 A9 00			lda #$00
 10173 5A13 85 8F			sta :ecx+1
 10174 5A15 85 93			sta :ztmp9
 10175 5A17 AD 16 AC			lda YB
 10176 5A1A 85 86			sta :eax
 10177 5A1C 85 94			sta :ztmp10
 10178 5A1E AD 17 AC			lda YB+1
 10179 5A21 85 87			sta :eax+1
 10180 5A23 85 95			sta :ztmp11
 10181 					.ifdef fmulinit
 10182 					fmulu_16
 10183 					els
 10184 5A25 20 FA 12			imulCX
 10185 					eif
 10186 5A28 A5 95			lda :ztmp11
 10187 5A2A 10 0D			bpl @+
 10188 5A2C A5 88			lda :eax+2
 10189 5A2E 38 E5 92			sub :ztmp8
 10190 5A31 85 88			sta :eax+2
 10191 5A33 A5 89			lda :eax+3
 10192 5A35 E5 93			sbc :ztmp9
 10193 5A37 85 89			sta :eax+3
 10194 				@
 10195 5A39 A5 93			lda :ztmp9
 10196 5A3B 10 0D			bpl @+
 10197 5A3D A5 88			lda :eax+2
 10198 5A3F 38 E5 94			sub :ztmp10
 10199 5A42 85 88			sta :eax+2
 10200 5A44 A5 89			lda :eax+3
 10201 5A46 E5 95			sbc :ztmp11
 10202 5A48 85 89			sta :eax+3
 10203 				@
 10204 5A4A AD 14 AC			lda XB
 10205 5A4D 18 65 86			add :eax
 10206 5A50 A8				tay
 10207 5A51 A9 00			lda #$00
 10208 5A53 99 DD A3			sta adr.WALL,y
 10209
 10210 				; optimize OK (vservice.pas), line = 1664
 10211
 10212 5A56 A9 B8			lda #$B8
 10213 5A58 8D CC 9C			sta BALL_BLOCK_SOUND.A
 10214 5A5B A9 01			lda #$01
 10215 5A5D 8D CD 9C			sta BALL_BLOCK_SOUND.A+1
 10216 5A60 A9 03			lda #$03
 10217 5A62 4C 47 5B			jmp l_1977
 10218 5A65			l_193F
 10219
 10220 				; optimize OK (vservice.pas), line = 1669
 10221
 10222 5A65 A9 10			lda #$10
 10223 5A67 85 8E			sta :ecx
 10224 5A69 85 92			sta :ztmp8
 10225 5A6B A9 00			lda #$00
 10226 5A6D 85 8F			sta :ecx+1
 10227 5A6F 85 93			sta :ztmp9
 10228 5A71 AD 16 AC			lda YB
 10229 5A74 85 86			sta :eax
 10230 5A76 85 94			sta :ztmp10
 10231 5A78 AD 17 AC			lda YB+1
 10232 5A7B 85 87			sta :eax+1
 10233 5A7D 85 95			sta :ztmp11
 10234 					.ifdef fmulinit
 10235 					fmulu_16
 10236 					els
 10237 5A7F 20 FA 12			imulCX
 10238 					eif
 10239 5A82 A5 95			lda :ztmp11
 10240 5A84 10 0D			bpl @+
 10241 5A86 A5 88			lda :eax+2
 10242 5A88 38 E5 92			sub :ztmp8
 10243 5A8B 85 88			sta :eax+2
 10244 5A8D A5 89			lda :eax+3
 10245 5A8F E5 93			sbc :ztmp9
 10246 5A91 85 89			sta :eax+3
 10247 				@
 10248 5A93 A5 93			lda :ztmp9
 10249 5A95 10 0D			bpl @+
 10250 5A97 A5 88			lda :eax+2
 10251 5A99 38 E5 94			sub :ztmp10
 10252 5A9C 85 88			sta :eax+2
 10253 5A9E A5 89			lda :eax+3
 10254 5AA0 E5 95			sbc :ztmp11
 10255 5AA2 85 89			sta :eax+3
 10256 				@
 10257 5AA4 AD 14 AC			lda XB
 10258 5AA7 18 65 86			add :eax
 10259 5AAA A8				tay
 10260 5AAB B9 DD A3			lda adr.WALL,y
 10261 5AAE 29 0F			and #$0F
 10262 5AB0 C9 09			cmp #$09
 10263 5AB2 D0 78			jne l_1998
 10264
 10265 				; optimize OK (vservice.pas), line = 1671
 10266
 10267 5AB4 A9 10			lda #$10
 10268 5AB6 85 8E			sta :ecx
 10269 5AB8 85 92			sta :ztmp8
 10270 5ABA A9 00			lda #$00
 10271 5ABC 85 8F			sta :ecx+1
 10272 5ABE 85 93			sta :ztmp9
 10273 5AC0 AD 16 AC			lda YB
 10274 5AC3 85 86			sta :eax
 10275 5AC5 85 94			sta :ztmp10
 10276 5AC7 AD 17 AC			lda YB+1
 10277 5ACA 85 87			sta :eax+1
 10278 5ACC 85 95			sta :ztmp11
 10279 					.ifdef fmulinit
 10280 					fmulu_16
 10281 					els
 10282 5ACE 20 FA 12			imulCX
 10283 					eif
 10284 5AD1 A5 95			lda :ztmp11
 10285 5AD3 10 0D			bpl @+
 10286 5AD5 A5 88			lda :eax+2
 10287 5AD7 38 E5 92			sub :ztmp8
 10288 5ADA 85 88			sta :eax+2
 10289 5ADC A5 89			lda :eax+3
 10290 5ADE E5 93			sbc :ztmp9
 10291 5AE0 85 89			sta :eax+3
 10292 				@
 10293 5AE2 A5 93			lda :ztmp9
 10294 5AE4 10 0D			bpl @+
 10295 5AE6 A5 88			lda :eax+2
 10296 5AE8 38 E5 94			sub :ztmp10
 10297 5AEB 85 88			sta :eax+2
 10298 5AED A5 89			lda :eax+3
 10299 5AEF E5 95			sbc :ztmp11
 10300 5AF1 85 89			sta :eax+3
 10301 				@
 10302 5AF3 AD 14 AC			lda XB
 10303 5AF6 18 65 86			add :eax
 10304 5AF9 A8				tay
 10305 5AFA B9 DD A3			lda adr.WALL,y
 10306 5AFD 38 E9 10			sub #$10
 10307 5B00 99 DD A3			sta adr.WALL,y
 10308
 10309 				; optimize OK (vservice.pas), line = 1672
 10310
 10311 5B03 A9 72			lda #$72
 10312 5B05 8D CC 9C			sta BALL_BLOCK_SOUND.A
 10313 5B08 A9 01			lda #$01
 10314 5B0A 8D CD 9C			sta BALL_BLOCK_SOUND.A+1
 10315 5B0D A9 04			lda #$04
 10316 5B0F 8D CE 9C			sta BALL_BLOCK_SOUND.B
 10317 5B12 A9 00			lda #$00
 10318 5B14 8D CF 9C			sta BALL_BLOCK_SOUND.B+1
 10319 5B17 20 9A 24			jsr BALL_BLOCK_SOUND
 10320
 10321 				; optimize OK (vservice.pas), line = 1673
 10322
 10323 5B1A AD 14 AC			lda XB
 10324 5B1D 8D 2F AB			sta SHINE.XB
 10325 5B20 AD 16 AC			lda YB
 10326 5B23 8D 30 AB			sta SHINE.YB
 10327 5B26 20 62 28			jsr SHINE
 10328 5B29 4C 52 5B			jmp l_19B6
 10329 5B2C			l_1998
 10330
 10331 				; optimize OK (vservice.pas), line = 1677
 10332
 10333 5B2C AD 14 AC			lda XB
 10334 5B2F 8D 2F AB			sta SHINE.XB
 10335 5B32 AD 16 AC			lda YB
 10336 5B35 8D 30 AB			sta SHINE.YB
 10337 5B38 20 62 28			jsr SHINE
 10338
 10339 				; optimize OK (vservice.pas), line = 1678
 10340
 10341 5B3B A9 C8			lda #$C8
 10342 5B3D 8D CC 9C			sta BALL_BLOCK_SOUND.A
 10343 5B40 A9 00			lda #$00
 10344 5B42 8D CD 9C			sta BALL_BLOCK_SOUND.A+1
 10345 5B45 A9 07			lda #$07
 10346 5B47			l_1977
 10347 5B47 8D CE 9C			sta BALL_BLOCK_SOUND.B
 10348 5B4A A9 00			lda #$00
 10349 5B4C 8D CF 9C			sta BALL_BLOCK_SOUND.B+1
 10350 5B4F 20 9A 24			jsr BALL_BLOCK_SOUND
 10351 5B52			l_19B6
 10352 5B52			l_1921
 10353 5B52			l_1903
 10354
 10355 				; ------------------------------------------------------------
 10356
 10357 = AC14			XB	= DATAORIGIN+$0FF7
 10358 = AC16			YB	= DATAORIGIN+$0FF9
 10359
 10360 = AC14			@VarData	= XB
 10361 = 0004			@VarDataSize	= 4
 10362
 10363 5B52			@exit
 10364 					.ifdef @new
 10365 					lda <@VarData
 10366 					sta :ztmp
 10367 					lda >@VarData
 10368 					ldy #@VarDataSize-1
 10369 					jmp @FreeMem
 10370 					els
 10371 5B52 60				rts						; ret
 10372 					eif
 10373 				.endl
 10374
 10375 5B53			.local	BALL_HIT_BLOCK					; PROCEDURE
 10376
 10377 				; optimize OK (vservice.pas), line = 1710
 10378
 10379 5B53 A9 FF			lda #$FF
 10380 5B55 8D 44 AC			sta EMERGENCY
 10381
 10382 				; optimize OK (vservice.pas), line = 1712
 10383
 10384 5B58 AC 18 AC 84 84 AC + 	mwy BALL :bp2
 10385 5B62 A0 00			ldy #BALL.X-DATAORIGIN
 10386 5B64 B1 84			lda (:bp2),y
 10387 5B66 38 E9 09			sub #$09
 10388 5B69 8D 30 AC			sta NX
 10389 5B6C C8				iny
 10390 5B6D B1 84			lda (:bp2),y
 10391 5B6F E9 00			sbc #$00
 10392 5B71 8D 31 AC			sta NX+1
 10393
 10394 				; optimize OK (vservice.pas), line = 1713
 10395
 10396 5B74 A0 02			ldy #BALL.Y-DATAORIGIN
 10397 5B76 B1 84			lda (:bp2),y
 10398 5B78 38 E9 16			sub #$16
 10399 5B7B 8D 32 AC			sta NY
 10400 5B7E C8				iny
 10401 5B7F B1 84			lda (:bp2),y
 10402 5B81 E9 00			sbc #$00
 10403 5B83 8D 33 AC			sta NY+1
 10404
 10405 				; optimize OK (vservice.pas), line = 1716
 10406
 10407 5B86 A0 08			ldy #BALL.OLDX-DATAORIGIN
 10408 5B88 B1 84			lda (:bp2),y
 10409 5B8A 38 E9 09			sub #$09
 10410 5B8D 8D 24 AC			sta OX
 10411 5B90 C8				iny
 10412 5B91 B1 84			lda (:bp2),y
 10413 5B93 E9 00			sbc #$00
 10414 5B95 8D 25 AC			sta OX+1
 10415
 10416 				; optimize OK (vservice.pas), line = 1717
 10417
 10418 5B98 A0 0A			ldy #BALL.OLDY-DATAORIGIN
 10419 5B9A B1 84			lda (:bp2),y
 10420 5B9C 38 E9 16			sub #$16
 10421 5B9F 8D 26 AC			sta OY
 10422 5BA2 C8				iny
 10423 5BA3 B1 84			lda (:bp2),y
 10424 5BA5 E9 00			sbc #$00
 10425 5BA7 8D 27 AC			sta OY+1
 10426
 10427 				; optimize OK (vservice.pas), line = 1719
 10428
 10429 5BAA AD 30 AC			lda NX
 10430 5BAD 85 9F			sta :STACKORIGIN+9
 10431 5BAF A0 00			ldy #$00
 10432 5BB1 AD 31 AC			lda NX+1
 10433 5BB4 10 01			spl
 10434 5BB6 88				dey
 10435 5BB7 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 10436 5BB9 84 BF			sty :STACKORIGIN+STACKWIDTH*2+9
 10437 5BBB 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
 10438 5BBD 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 10439 5BBF 66 9F			ror :STACKORIGIN+9
 10440 5BC1 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
 10441 5BC3 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 10442 5BC5 66 9F			ror :STACKORIGIN+9
 10443 5BC7 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
 10444 5BC9 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 10445 5BCB 66 9F			ror :STACKORIGIN+9
 10446 5BCD 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
 10447 5BCF 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 10448 5BD1 66 9F			ror :STACKORIGIN+9
 10449 5BD3 A5 9F			lda :STACKORIGIN+9
 10450 5BD5 8D 20 AC			sta XB
 10451 5BD8 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 10452 5BDA 8D 21 AC			sta XB+1
 10453
 10454 				; optimize OK (vservice.pas), line = 1720
 10455
 10456 5BDD AD 32 AC			lda NY
 10457 5BE0 85 9F			sta :STACKORIGIN+9
 10458 5BE2 A0 00			ldy #$00
 10459 5BE4 AD 33 AC			lda NY+1
 10460 5BE7 10 01			spl
 10461 5BE9 88				dey
 10462 5BEA 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 10463 5BEC 84 BF			sty :STACKORIGIN+STACKWIDTH*2+9
 10464 5BEE 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
 10465 5BF0 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 10466 5BF2 66 9F			ror :STACKORIGIN+9
 10467 5BF4 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
 10468 5BF6 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 10469 5BF8 66 9F			ror :STACKORIGIN+9
 10470 5BFA 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
 10471 5BFC 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 10472 5BFE 66 9F			ror :STACKORIGIN+9
 10473 5C00 A5 9F			lda :STACKORIGIN+9
 10474 5C02 8D 22 AC			sta YB
 10475 5C05 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 10476 5C07 8D 23 AC			sta YB+1
 10477
 10478 				; optimize OK (vservice.pas), line = 1724
 10479
 10480 5C0A A9 10			lda #$10
 10481 5C0C 85 8E			sta :ecx
 10482 5C0E 85 92			sta :ztmp8
 10483 5C10 A9 00			lda #$00
 10484 5C12 85 8F			sta :ecx+1
 10485 5C14 85 93			sta :ztmp9
 10486 5C16 AD 22 AC			lda YB
 10487 5C19 85 86			sta :eax
 10488 5C1B 85 94			sta :ztmp10
 10489 5C1D AD 23 AC			lda YB+1
 10490 5C20 85 87			sta :eax+1
 10491 5C22 85 95			sta :ztmp11
 10492 					.ifdef fmulinit
 10493 					fmulu_16
 10494 					els
 10495 5C24 20 FA 12			imulCX
 10496 					eif
 10497 5C27 A5 95			lda :ztmp11
 10498 5C29 10 0D			bpl @+
 10499 5C2B A5 88			lda :eax+2
 10500 5C2D 38 E5 92			sub :ztmp8
 10501 5C30 85 88			sta :eax+2
 10502 5C32 A5 89			lda :eax+3
 10503 5C34 E5 93			sbc :ztmp9
 10504 5C36 85 89			sta :eax+3
 10505 				@
 10506 5C38 A5 93			lda :ztmp9
 10507 5C3A 10 0D			bpl @+
 10508 5C3C A5 88			lda :eax+2
 10509 5C3E 38 E5 94			sub :ztmp10
 10510 5C41 85 88			sta :eax+2
 10511 5C43 A5 89			lda :eax+3
 10512 5C45 E5 95			sbc :ztmp11
 10513 5C47 85 89			sta :eax+3
 10514 				@
 10515 5C49 AD 20 AC			lda XB
 10516 5C4C 18 65 86			add :eax
 10517 5C4F A8				tay
 10518 5C50 B9 DD A3			lda adr.WALL,y
 10519 5C53 D0 03 4C C6 6D		jeq l_1A1D
 10520
 10521 				; optimize OK (vservice.pas), line = 1726
 10522
 10523 5C58 A9 24			lda <OX
 10524 5C5A 8D E2 AB			sta SPLIT_LINE.X1
 10525 5C5D A9 AC			lda >OX
 10526 5C5F 8D E3 AB			sta SPLIT_LINE.X1+1
 10527 5C62 A9 26			lda <OY
 10528 5C64 8D E4 AB			sta SPLIT_LINE.Y1
 10529 5C67 A9 AC			lda >OY
 10530 5C69 8D E5 AB			sta SPLIT_LINE.Y1+1
 10531 5C6C A9 30			lda <NX
 10532 5C6E 8D E6 AB			sta SPLIT_LINE.X2
 10533 5C71 A9 AC			lda >NX
 10534 5C73 8D E7 AB			sta SPLIT_LINE.X2+1
 10535 5C76 A9 32			lda <NY
 10536 5C78 8D E8 AB			sta SPLIT_LINE.Y2
 10537 5C7B A9 AC			lda >NY
 10538 5C7D 8D E9 AB			sta SPLIT_LINE.Y2+1
 10539 5C80 20 17 4D			jsr SPLIT_LINE
 10540 5C83 AD EA AB			lda SPLIT_LINE.RESULT
 10541 5C86 8D 45 AC			sta COLLISION
 10542
 10543 				; optimize OK (vservice.pas), line = 1732
 10544
 10545 5C89 C9 03			cmp #$03
 10546 5C8B F0 03 4C 55 61		jne l_1A38
 10547
 10548 				; optimize OK (vservice.pas), line = 1734
 10549
 10550 5C90 AC 18 AC 84 84 AC + 	mwy BALL :bp2
 10551 5C9A A0 08			ldy #BALL.OLDX-DATAORIGIN
 10552 5C9C B1 84			lda (:bp2),y
 10553 5C9E 38 ED 24 AC			sub OX
 10554 5CA2 85 9F			sta :STACKORIGIN+9
 10555 5CA4 C8				iny
 10556 5CA5 B1 84			lda (:bp2),y
 10557 5CA7 ED 25 AC			sbc OX+1
 10558 5CAA 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 10559 5CAC A5 9F			lda :STACKORIGIN+9
 10560 5CAE 38 E9 09			sub #$09
 10561 5CB1 8D 28 AC			sta LX
 10562 5CB4 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 10563 5CB6 E9 00			sbc #$00
 10564 5CB8 8D 29 AC			sta LX+1
 10565
 10566 				; optimize OK (vservice.pas), line = 1735
 10567
 10568 5CBB A0 0A			ldy #BALL.OLDY-DATAORIGIN
 10569 5CBD B1 84			lda (:bp2),y
 10570 5CBF 38 ED 26 AC			sub OY
 10571 5CC3 85 9F			sta :STACKORIGIN+9
 10572 5CC5 C8				iny
 10573 5CC6 B1 84			lda (:bp2),y
 10574 5CC8 ED 27 AC			sbc OY+1
 10575 5CCB 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 10576 5CCD A5 9F			lda :STACKORIGIN+9
 10577 5CCF 38 E9 16			sub #$16
 10578 5CD2 8D 2A AC			sta LY
 10579 5CD5 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 10580 5CD7 E9 00			sbc #$00
 10581 5CD9 8D 2B AC			sta LY+1
 10582
 10583 				; optimize OK (vservice.pas), line = 1737
 10584
 10585 5CDC A0 08			ldy #BALL.OLDX-DATAORIGIN
 10586 5CDE B1 84			lda (:bp2),y
 10587 5CE0 38 ED 30 AC			sub NX
 10588 5CE4 85 9F			sta :STACKORIGIN+9
 10589 5CE6 C8				iny
 10590 5CE7 B1 84			lda (:bp2),y
 10591 5CE9 ED 31 AC			sbc NX+1
 10592 5CEC 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 10593 5CEE A5 9F			lda :STACKORIGIN+9
 10594 5CF0 38 E9 09			sub #$09
 10595 5CF3 8D 2C AC			sta MX
 10596 5CF6 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 10597 5CF8 E9 00			sbc #$00
 10598 5CFA 8D 2D AC			sta MX+1
 10599
 10600 				; optimize OK (vservice.pas), line = 1738
 10601
 10602 5CFD A0 0A			ldy #BALL.OLDY-DATAORIGIN
 10603 5CFF B1 84			lda (:bp2),y
 10604 5D01 38 ED 32 AC			sub NY
 10605 5D05 85 9F			sta :STACKORIGIN+9
 10606 5D07 C8				iny
 10607 5D08 B1 84			lda (:bp2),y
 10608 5D0A ED 33 AC			sbc NY+1
 10609 5D0D 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 10610 5D0F A5 9F			lda :STACKORIGIN+9
 10611 5D11 38 E9 16			sub #$16
 10612 5D14 8D 2E AC			sta MY
 10613 5D17 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 10614 5D19 E9 00			sbc #$00
 10615 5D1B 8D 2F AC			sta MY+1
 10616
 10617 				; optimize OK (vservice.pas), line = 1740
 10618
 10619 5D1E AD 28 AC			lda LX
 10620 5D21 85 8E			sta :ecx
 10621 5D23 85 86			sta :eax
 10622 5D25 AD 29 AC			lda LX+1
 10623 5D28 85 8F			sta :ecx+1
 10624 5D2A 85 87			sta :eax+1
 10625 					.ifdef fmulinit
 10626 					fmulu_16
 10627 					els
 10628 5D2C 20 FA 12			imulCX
 10629 					eif
 10630 5D2F A5 86			lda :eax
 10631 5D31 85 9F			sta :STACKORIGIN+9
 10632 5D33 A5 87			lda :eax+1
 10633 5D35 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 10634 5D37 AD 2A AC			lda LY
 10635 5D3A 85 8E			sta :ecx
 10636 5D3C 85 86			sta :eax
 10637 5D3E AD 2B AC			lda LY+1
 10638 5D41 85 8F			sta :ecx+1
 10639 5D43 85 87			sta :eax+1
 10640 					.ifdef fmulinit
 10641 					fmulu_16
 10642 					els
 10643 5D45 20 FA 12			imulCX
 10644 					eif
 10645 5D48 A5 86			lda :eax
 10646 5D4A 18 65 9F			add :STACKORIGIN+9
 10647 5D4D 8D 34 AC			sta F1
 10648 5D50 A5 87			lda :eax+1
 10649 5D52 65 AF			adc :STACKORIGIN+STACKWIDTH+9
 10650 5D54 8D 35 AC			sta F1+1
 10651
 10652 				; optimize OK (vservice.pas), line = 1741
 10653
 10654 5D57 AD 2C AC			lda MX
 10655 5D5A 85 8E			sta :ecx
 10656 5D5C 85 86			sta :eax
 10657 5D5E AD 2D AC			lda MX+1
 10658 5D61 85 8F			sta :ecx+1
 10659 5D63 85 87			sta :eax+1
 10660 					.ifdef fmulinit
 10661 					fmulu_16
 10662 					els
 10663 5D65 20 FA 12			imulCX
 10664 					eif
 10665 5D68 A5 86			lda :eax
 10666 5D6A 85 9F			sta :STACKORIGIN+9
 10667 5D6C A5 87			lda :eax+1
 10668 5D6E 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 10669 5D70 AD 2E AC			lda MY
 10670 5D73 85 8E			sta :ecx
 10671 5D75 85 86			sta :eax
 10672 5D77 AD 2F AC			lda MY+1
 10673 5D7A 85 8F			sta :ecx+1
 10674 5D7C 85 87			sta :eax+1
 10675 					.ifdef fmulinit
 10676 					fmulu_16
 10677 					els
 10678 5D7E 20 FA 12			imulCX
 10679 					eif
 10680 5D81 A5 86			lda :eax
 10681 5D83 18 65 9F			add :STACKORIGIN+9
 10682 5D86 8D 36 AC			sta F2
 10683 5D89 A5 87			lda :eax+1
 10684 5D8B 65 AF			adc :STACKORIGIN+STACKWIDTH+9
 10685 5D8D 8D 37 AC			sta F2+1
 10686
 10687 				; optimize OK (vservice.pas), line = 1743
 10688
 10689 5D90 AD 34 AC			lda F1
 10690 5D93 CD 36 AC			cmp F2
 10691 5D96 AD 35 AC			lda F1+1
 10692 5D99 ED 37 AC			sbc F2+1
 10693 5D9C 50 02			svc
 10694 5D9E 49 80			eor #$80
 10695 5DA0 30 03 4C 7B 5F		jpl l_1AAB
 10696
 10697 				; optimize OK (vservice.pas), line = 1749
 10698
 10699 5DA5 AD 24 AC			lda OX
 10700 5DA8 85 A0			sta :STACKORIGIN+10
 10701 5DAA A0 00			ldy #$00
 10702 5DAC AD 25 AC			lda OX+1
 10703 5DAF 10 01			spl
 10704 5DB1 88				dey
 10705 5DB2 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 10706 5DB4 84 C0			sty :STACKORIGIN+STACKWIDTH*2+10
 10707 5DB6 46 C0			lsr :STACKORIGIN+STACKWIDTH*2+10
 10708 5DB8 66 B0			ror :STACKORIGIN+STACKWIDTH+10
 10709 5DBA 66 A0			ror :STACKORIGIN+10
 10710 5DBC 46 C0			lsr :STACKORIGIN+STACKWIDTH*2+10
 10711 5DBE 66 B0			ror :STACKORIGIN+STACKWIDTH+10
 10712 5DC0 66 A0			ror :STACKORIGIN+10
 10713 5DC2 46 C0			lsr :STACKORIGIN+STACKWIDTH*2+10
 10714 5DC4 66 B0			ror :STACKORIGIN+STACKWIDTH+10
 10715 5DC6 66 A0			ror :STACKORIGIN+10
 10716 5DC8 46 C0			lsr :STACKORIGIN+STACKWIDTH*2+10
 10717 5DCA 66 B0			ror :STACKORIGIN+STACKWIDTH+10
 10718 5DCC 66 A0			ror :STACKORIGIN+10
 10719 5DCE A5 A0			lda :STACKORIGIN+10
 10720 5DD0 8D 12 AB			sta MAX.A
 10721 5DD3 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
 10722 5DD5 8D 13 AB			sta MAX.A+1
 10723 5DD8 A9 00			lda #$00
 10724 5DDA 8D 14 AB			sta MAX.B
 10725 5DDD 8D 15 AB			sta MAX.B+1
 10726 5DE0 20 CE 25			jsr MAX
 10727 5DE3 A9 0C			lda #$0C
 10728 5DE5 8D 18 AB			sta MIN.A
 10729 5DE8 A9 00			lda #$00
 10730 5DEA 8D 19 AB			sta MIN.A+1
 10731 5DED AD 16 AB			lda MAX.RESULT
 10732 5DF0 8D 1A AB			sta MIN.B
 10733 5DF3 AD 17 AB			lda MAX.RESULT+1
 10734 5DF6 8D 1B AB			sta MIN.B+1
 10735 5DF9 20 F9 25			jsr MIN
 10736 5DFC AD 1C AB			lda MIN.RESULT
 10737 5DFF 8D 20 AC			sta XB
 10738 5E02 AD 1D AB			lda MIN.RESULT+1
 10739 5E05 8D 21 AC			sta XB+1
 10740
 10741 				; optimize OK (vservice.pas), line = 1750
 10742
 10743 5E08 AD 26 AC			lda OY
 10744 5E0B 85 9F			sta :STACKORIGIN+9
 10745 5E0D A0 00			ldy #$00
 10746 5E0F AD 27 AC			lda OY+1
 10747 5E12 10 01			spl
 10748 5E14 88				dey
 10749 5E15 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 10750 5E17 84 BF			sty :STACKORIGIN+STACKWIDTH*2+9
 10751 5E19 84 CF			sty :STACKORIGIN+STACKWIDTH*3+9
 10752 5E1B A5 9F			lda :STACKORIGIN+9
 10753 5E1D 18 69 18			add #$18
 10754 5E20 85 9F			sta :STACKORIGIN+9
 10755 5E22 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 10756 5E24 69 00			adc #$00
 10757 5E26 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 10758 5E28 A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
 10759 5E2A 69 00			adc #$00
 10760 5E2C 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
 10761 5E2E A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
 10762 5E30 69 00			adc #$00
 10763 5E32 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
 10764 5E34 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
 10765 5E36 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 10766 5E38 66 9F			ror :STACKORIGIN+9
 10767 5E3A 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
 10768 5E3C 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 10769 5E3E 66 9F			ror :STACKORIGIN+9
 10770 5E40 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
 10771 5E42 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 10772 5E44 66 9F			ror :STACKORIGIN+9
 10773 5E46 A5 9F			lda :STACKORIGIN+9
 10774 5E48 38 E9 03			sub #$03
 10775 5E4B 8D 22 AC			sta YB
 10776 5E4E A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 10777 5E50 E9 00			sbc #$00
 10778 5E52 8D 23 AC			sta YB+1
 10779
 10780 				; optimize OK (vservice.pas), line = 1753
 10781
 10782 5E55 A9 10			lda #$10
 10783 5E57 85 8E			sta :ecx
 10784 5E59 85 92			sta :ztmp8
 10785 5E5B A9 00			lda #$00
 10786 5E5D 85 8F			sta :ecx+1
 10787 5E5F 85 93			sta :ztmp9
 10788 5E61 AD 22 AC			lda YB
 10789 5E64 85 86			sta :eax
 10790 5E66 85 94			sta :ztmp10
 10791 5E68 AD 23 AC			lda YB+1
 10792 5E6B 85 87			sta :eax+1
 10793 5E6D 85 95			sta :ztmp11
 10794 					.ifdef fmulinit
 10795 					fmulu_16
 10796 					els
 10797 5E6F 20 FA 12			imulCX
 10798 					eif
 10799 5E72 A5 95			lda :ztmp11
 10800 5E74 10 0D			bpl @+
 10801 5E76 A5 88			lda :eax+2
 10802 5E78 38 E5 92			sub :ztmp8
 10803 5E7B 85 88			sta :eax+2
 10804 5E7D A5 89			lda :eax+3
 10805 5E7F E5 93			sbc :ztmp9
 10806 5E81 85 89			sta :eax+3
 10807 				@
 10808 5E83 A5 93			lda :ztmp9
 10809 5E85 10 0D			bpl @+
 10810 5E87 A5 88			lda :eax+2
 10811 5E89 38 E5 94			sub :ztmp10
 10812 5E8C 85 88			sta :eax+2
 10813 5E8E A5 89			lda :eax+3
 10814 5E90 E5 95			sbc :ztmp11
 10815 5E92 85 89			sta :eax+3
 10816 				@
 10817 5E94 AD 20 AC			lda XB
 10818 5E97 18 65 86			add :eax
 10819 5E9A A8				tay
 10820 5E9B B9 DD A3			lda adr.WALL,y
 10821 5E9E F0 03 4C 60 5F		jne l_1AE7
 10822
 10823 				; optimize OK (vservice.pas), line = 1755
 10824
 10825 5EA3 AD 30 AC			lda NX
 10826 5EA6 85 9F			sta :STACKORIGIN+9
 10827 5EA8 A0 00			ldy #$00
 10828 5EAA AD 31 AC			lda NX+1
 10829 5EAD 10 01			spl
 10830 5EAF 88				dey
 10831 5EB0 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 10832 5EB2 84 BF			sty :STACKORIGIN+STACKWIDTH*2+9
 10833 5EB4 84 CF			sty :STACKORIGIN+STACKWIDTH*3+9
 10834 5EB6 46 CF			lsr :STACKORIGIN+STACKWIDTH*3+9
 10835 5EB8 66 BF			ror :STACKORIGIN+STACKWIDTH*2+9
 10836 5EBA 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 10837 5EBC 66 9F			ror :STACKORIGIN+9
 10838 5EBE 46 CF			lsr :STACKORIGIN+STACKWIDTH*3+9
 10839 5EC0 66 BF			ror :STACKORIGIN+STACKWIDTH*2+9
 10840 5EC2 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 10841 5EC4 66 9F			ror :STACKORIGIN+9
 10842 5EC6 46 CF			lsr :STACKORIGIN+STACKWIDTH*3+9
 10843 5EC8 66 BF			ror :STACKORIGIN+STACKWIDTH*2+9
 10844 5ECA 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 10845 5ECC 66 9F			ror :STACKORIGIN+9
 10846 5ECE 46 CF			lsr :STACKORIGIN+STACKWIDTH*3+9
 10847 5ED0 66 BF			ror :STACKORIGIN+STACKWIDTH*2+9
 10848 5ED2 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 10849 5ED4 66 9F			ror :STACKORIGIN+9
 10850 5ED6 A9 00			lda #$00
 10851 5ED8 8D 12 AB			sta MAX.A
 10852 5EDB 8D 13 AB			sta MAX.A+1
 10853 5EDE A5 9F			lda :STACKORIGIN+9
 10854 5EE0 8D 14 AB			sta MAX.B
 10855 5EE3 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 10856 5EE5 8D 15 AB			sta MAX.B+1
 10857 5EE8 20 CE 25			jsr MAX
 10858 5EEB A9 0C			lda #$0C
 10859 5EED 8D 18 AB			sta MIN.A
 10860 5EF0 A9 00			lda #$00
 10861 5EF2 8D 19 AB			sta MIN.A+1
 10862 5EF5 AD 16 AB			lda MAX.RESULT
 10863 5EF8 8D 1A AB			sta MIN.B
 10864 5EFB AD 17 AB			lda MAX.RESULT+1
 10865 5EFE 8D 1B AB			sta MIN.B+1
 10866 5F01 20 F9 25			jsr MIN
 10867 5F04 AD 1C AB			lda MIN.RESULT
 10868 5F07 8D 20 AC			sta XB
 10869 5F0A AD 1D AB			lda MIN.RESULT+1
 10870 5F0D 8D 21 AC			sta XB+1
 10871
 10872 				; optimize OK (vservice.pas), line = 1756
 10873
 10874 5F10 AD 32 AC			lda NY
 10875 5F13 85 9F			sta :STACKORIGIN+9
 10876 5F15 A0 00			ldy #$00
 10877 5F17 AD 33 AC			lda NY+1
 10878 5F1A 10 01			spl
 10879 5F1C 88				dey
 10880 5F1D 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 10881 5F1F 84 BF			sty :STACKORIGIN+STACKWIDTH*2+9
 10882 5F21 84 CF			sty :STACKORIGIN+STACKWIDTH*3+9
 10883 5F23 A5 9F			lda :STACKORIGIN+9
 10884 5F25 18 69 18			add #$18
 10885 5F28 85 9F			sta :STACKORIGIN+9
 10886 5F2A A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 10887 5F2C 69 00			adc #$00
 10888 5F2E 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 10889 5F30 A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
 10890 5F32 69 00			adc #$00
 10891 5F34 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
 10892 5F36 A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
 10893 5F38 69 00			adc #$00
 10894 5F3A 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
 10895 5F3C 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
 10896 5F3E 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 10897 5F40 66 9F			ror :STACKORIGIN+9
 10898 5F42 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
 10899 5F44 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 10900 5F46 66 9F			ror :STACKORIGIN+9
 10901 5F48 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
 10902 5F4A 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 10903 5F4C 66 9F			ror :STACKORIGIN+9
 10904 5F4E A5 9F			lda :STACKORIGIN+9
 10905 5F50 38 E9 03			sub #$03
 10906 5F53 8D 22 AC			sta YB
 10907 5F56 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 10908 5F58 E9 00			sbc #$00
 10909 5F5A 8D 23 AC			sta YB+1
 10910 5F5D 4C 78 5F			jmp l_1B0F
 10911 5F60			l_1AE7
 10912
 10913 				; optimize OK (vservice.pas), line = 1760
 10914
 10915 5F60 AD 24 AC			lda OX
 10916 5F63 8D 30 AC			sta NX
 10917 5F66 AD 25 AC			lda OX+1
 10918 5F69 8D 31 AC			sta NX+1
 10919
 10920 				; optimize OK (vservice.pas), line = 1761
 10921
 10922 5F6C AD 26 AC			lda OY
 10923 5F6F 8D 32 AC			sta NY
 10924 5F72 AD 27 AC			lda OY+1
 10925 5F75 8D 33 AC			sta NY+1
 10926 5F78			l_1B0F
 10927 5F78 4C 55 61			jmp l_1B22
 10928 5F7B			l_1AAB
 10929
 10930 				; optimize OK (vservice.pas), line = 1771
 10931
 10932 5F7B AD 30 AC			lda NX
 10933 5F7E 85 9F			sta :STACKORIGIN+9
 10934 5F80 A0 00			ldy #$00
 10935 5F82 AD 31 AC			lda NX+1
 10936 5F85 10 01			spl
 10937 5F87 88				dey
 10938 5F88 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 10939 5F8A 84 BF			sty :STACKORIGIN+STACKWIDTH*2+9
 10940 5F8C 84 CF			sty :STACKORIGIN+STACKWIDTH*3+9
 10941 5F8E 46 CF			lsr :STACKORIGIN+STACKWIDTH*3+9
 10942 5F90 66 BF			ror :STACKORIGIN+STACKWIDTH*2+9
 10943 5F92 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 10944 5F94 66 9F			ror :STACKORIGIN+9
 10945 5F96 46 CF			lsr :STACKORIGIN+STACKWIDTH*3+9
 10946 5F98 66 BF			ror :STACKORIGIN+STACKWIDTH*2+9
 10947 5F9A 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 10948 5F9C 66 9F			ror :STACKORIGIN+9
 10949 5F9E 46 CF			lsr :STACKORIGIN+STACKWIDTH*3+9
 10950 5FA0 66 BF			ror :STACKORIGIN+STACKWIDTH*2+9
 10951 5FA2 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 10952 5FA4 66 9F			ror :STACKORIGIN+9
 10953 5FA6 46 CF			lsr :STACKORIGIN+STACKWIDTH*3+9
 10954 5FA8 66 BF			ror :STACKORIGIN+STACKWIDTH*2+9
 10955 5FAA 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 10956 5FAC 66 9F			ror :STACKORIGIN+9
 10957 5FAE A9 00			lda #$00
 10958 5FB0 8D 12 AB			sta MAX.A
 10959 5FB3 8D 13 AB			sta MAX.A+1
 10960 5FB6 A5 9F			lda :STACKORIGIN+9
 10961 5FB8 8D 14 AB			sta MAX.B
 10962 5FBB A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 10963 5FBD 8D 15 AB			sta MAX.B+1
 10964 5FC0 20 CE 25			jsr MAX
 10965 5FC3 A9 0C			lda #$0C
 10966 5FC5 8D 18 AB			sta MIN.A
 10967 5FC8 A9 00			lda #$00
 10968 5FCA 8D 19 AB			sta MIN.A+1
 10969 5FCD AD 16 AB			lda MAX.RESULT
 10970 5FD0 8D 1A AB			sta MIN.B
 10971 5FD3 AD 17 AB			lda MAX.RESULT+1
 10972 5FD6 8D 1B AB			sta MIN.B+1
 10973 5FD9 20 F9 25			jsr MIN
 10974 5FDC AD 1C AB			lda MIN.RESULT
 10975 5FDF 8D 20 AC			sta XB
 10976 5FE2 AD 1D AB			lda MIN.RESULT+1
 10977 5FE5 8D 21 AC			sta XB+1
 10978
 10979 				; optimize OK (vservice.pas), line = 1772
 10980
 10981 5FE8 AD 32 AC			lda NY
 10982 5FEB 85 9F			sta :STACKORIGIN+9
 10983 5FED A0 00			ldy #$00
 10984 5FEF AD 33 AC			lda NY+1
 10985 5FF2 10 01			spl
 10986 5FF4 88				dey
 10987 5FF5 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 10988 5FF7 84 BF			sty :STACKORIGIN+STACKWIDTH*2+9
 10989 5FF9 84 CF			sty :STACKORIGIN+STACKWIDTH*3+9
 10990 5FFB A5 9F			lda :STACKORIGIN+9
 10991 5FFD 18 69 18			add #$18
 10992 6000 85 9F			sta :STACKORIGIN+9
 10993 6002 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 10994 6004 69 00			adc #$00
 10995 6006 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 10996 6008 A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
 10997 600A 69 00			adc #$00
 10998 600C 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
 10999 600E A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
 11000 6010 69 00			adc #$00
 11001 6012 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
 11002 6014 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
 11003 6016 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 11004 6018 66 9F			ror :STACKORIGIN+9
 11005 601A 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
 11006 601C 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 11007 601E 66 9F			ror :STACKORIGIN+9
 11008 6020 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
 11009 6022 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 11010 6024 66 9F			ror :STACKORIGIN+9
 11011 6026 A5 9F			lda :STACKORIGIN+9
 11012 6028 38 E9 03			sub #$03
 11013 602B 8D 22 AC			sta YB
 11014 602E A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 11015 6030 E9 00			sbc #$00
 11016 6032 8D 23 AC			sta YB+1
 11017
 11018 				; optimize OK (vservice.pas), line = 1774
 11019
 11020 6035 A9 10			lda #$10
 11021 6037 85 8E			sta :ecx
 11022 6039 85 92			sta :ztmp8
 11023 603B A9 00			lda #$00
 11024 603D 85 8F			sta :ecx+1
 11025 603F 85 93			sta :ztmp9
 11026 6041 AD 22 AC			lda YB
 11027 6044 85 86			sta :eax
 11028 6046 85 94			sta :ztmp10
 11029 6048 AD 23 AC			lda YB+1
 11030 604B 85 87			sta :eax+1
 11031 604D 85 95			sta :ztmp11
 11032 					.ifdef fmulinit
 11033 					fmulu_16
 11034 					els
 11035 604F 20 FA 12			imulCX
 11036 					eif
 11037 6052 A5 95			lda :ztmp11
 11038 6054 10 0D			bpl @+
 11039 6056 A5 88			lda :eax+2
 11040 6058 38 E5 92			sub :ztmp8
 11041 605B 85 88			sta :eax+2
 11042 605D A5 89			lda :eax+3
 11043 605F E5 93			sbc :ztmp9
 11044 6061 85 89			sta :eax+3
 11045 				@
 11046 6063 A5 93			lda :ztmp9
 11047 6065 10 0D			bpl @+
 11048 6067 A5 88			lda :eax+2
 11049 6069 38 E5 94			sub :ztmp10
 11050 606C 85 88			sta :eax+2
 11051 606E A5 89			lda :eax+3
 11052 6070 E5 95			sbc :ztmp11
 11053 6072 85 89			sta :eax+3
 11054 				@
 11055 6074 AD 20 AC			lda XB
 11056 6077 18 65 86			add :eax
 11057 607A A8				tay
 11058 607B B9 DD A3			lda adr.WALL,y
 11059 607E F0 03 4C 55 61		jne l_1B5D
 11060
 11061 				; optimize OK (vservice.pas), line = 1776
 11062
 11063 6083 AD 24 AC			lda OX
 11064 6086 8D 30 AC			sta NX
 11065 6089 AD 25 AC			lda OX+1
 11066 608C 8D 31 AC			sta NX+1
 11067
 11068 				; optimize OK (vservice.pas), line = 1777
 11069
 11070 608F AD 26 AC			lda OY
 11071 6092 8D 32 AC			sta NY
 11072 6095 AD 27 AC			lda OY+1
 11073 6098 8D 33 AC			sta NY+1
 11074
 11075 				; optimize OK (vservice.pas), line = 1779
 11076
 11077 609B AD 30 AC			lda NX
 11078 609E 85 9F			sta :STACKORIGIN+9
 11079 60A0 A0 00			ldy #$00
 11080 60A2 AD 31 AC			lda NX+1
 11081 60A5 10 01			spl
 11082 60A7 88				dey
 11083 60A8 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 11084 60AA 84 BF			sty :STACKORIGIN+STACKWIDTH*2+9
 11085 60AC 84 CF			sty :STACKORIGIN+STACKWIDTH*3+9
 11086 60AE 46 CF			lsr :STACKORIGIN+STACKWIDTH*3+9
 11087 60B0 66 BF			ror :STACKORIGIN+STACKWIDTH*2+9
 11088 60B2 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 11089 60B4 66 9F			ror :STACKORIGIN+9
 11090 60B6 46 CF			lsr :STACKORIGIN+STACKWIDTH*3+9
 11091 60B8 66 BF			ror :STACKORIGIN+STACKWIDTH*2+9
 11092 60BA 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 11093 60BC 66 9F			ror :STACKORIGIN+9
 11094 60BE 46 CF			lsr :STACKORIGIN+STACKWIDTH*3+9
 11095 60C0 66 BF			ror :STACKORIGIN+STACKWIDTH*2+9
 11096 60C2 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 11097 60C4 66 9F			ror :STACKORIGIN+9
 11098 60C6 46 CF			lsr :STACKORIGIN+STACKWIDTH*3+9
 11099 60C8 66 BF			ror :STACKORIGIN+STACKWIDTH*2+9
 11100 60CA 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 11101 60CC 66 9F			ror :STACKORIGIN+9
 11102 60CE A9 00			lda #$00
 11103 60D0 8D 12 AB			sta MAX.A
 11104 60D3 8D 13 AB			sta MAX.A+1
 11105 60D6 A5 9F			lda :STACKORIGIN+9
 11106 60D8 8D 14 AB			sta MAX.B
 11107 60DB A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 11108 60DD 8D 15 AB			sta MAX.B+1
 11109 60E0 20 CE 25			jsr MAX
 11110 60E3 A9 0C			lda #$0C
 11111 60E5 8D 18 AB			sta MIN.A
 11112 60E8 A9 00			lda #$00
 11113 60EA 8D 19 AB			sta MIN.A+1
 11114 60ED AD 16 AB			lda MAX.RESULT
 11115 60F0 8D 1A AB			sta MIN.B
 11116 60F3 AD 17 AB			lda MAX.RESULT+1
 11117 60F6 8D 1B AB			sta MIN.B+1
 11118 60F9 20 F9 25			jsr MIN
 11119 60FC AD 1C AB			lda MIN.RESULT
 11120 60FF 8D 20 AC			sta XB
 11121 6102 AD 1D AB			lda MIN.RESULT+1
 11122 6105 8D 21 AC			sta XB+1
 11123
 11124 				; optimize OK (vservice.pas), line = 1780
 11125
 11126 6108 AD 32 AC			lda NY
 11127 610B 85 9F			sta :STACKORIGIN+9
 11128 610D A0 00			ldy #$00
 11129 610F AD 33 AC			lda NY+1
 11130 6112 10 01			spl
 11131 6114 88				dey
 11132 6115 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 11133 6117 84 BF			sty :STACKORIGIN+STACKWIDTH*2+9
 11134 6119 84 CF			sty :STACKORIGIN+STACKWIDTH*3+9
 11135 611B A5 9F			lda :STACKORIGIN+9
 11136 611D 18 69 18			add #$18
 11137 6120 85 9F			sta :STACKORIGIN+9
 11138 6122 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 11139 6124 69 00			adc #$00
 11140 6126 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 11141 6128 A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
 11142 612A 69 00			adc #$00
 11143 612C 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
 11144 612E A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
 11145 6130 69 00			adc #$00
 11146 6132 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
 11147 6134 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
 11148 6136 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 11149 6138 66 9F			ror :STACKORIGIN+9
 11150 613A 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
 11151 613C 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 11152 613E 66 9F			ror :STACKORIGIN+9
 11153 6140 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
 11154 6142 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 11155 6144 66 9F			ror :STACKORIGIN+9
 11156 6146 A5 9F			lda :STACKORIGIN+9
 11157 6148 38 E9 03			sub #$03
 11158 614B 8D 22 AC			sta YB
 11159 614E A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 11160 6150 E9 00			sbc #$00
 11161 6152 8D 23 AC			sta YB+1
 11162 6155			l_1B5D
 11163 6155			l_1B22
 11164 6155			l_1A38
 11165
 11166 				; optimize OK (vservice.pas), line = 1786
 11167
 11168 6155 AC 18 AC 84 84 AC + 	mwy BALL :bp2
 11169 615F A0 00			ldy #BALL.X-DATAORIGIN
 11170 6161 AD 30 AC			lda NX
 11171 6164 18 69 09			add #$09
 11172 6167 91 84			sta (:bp2),y
 11173 6169 C8				iny
 11174 616A AD 31 AC			lda NX+1
 11175 616D 69 00			adc #$00
 11176 616F 91 84			sta (:bp2),y
 11177
 11178 				; optimize OK (vservice.pas), line = 1787
 11179
 11180 6171 A0 02			ldy #BALL.Y-DATAORIGIN
 11181 6173 AD 32 AC			lda NY
 11182 6176 18 69 16			add #$16
 11183 6179 91 84			sta (:bp2),y
 11184 617B C8				iny
 11185 617C AD 33 AC			lda NY+1
 11186 617F 69 00			adc #$00
 11187 6181 91 84			sta (:bp2),y
 11188
 11189 				; optimize OK (vservice.pas), line = 1791
 11190
 11191 6183 AD 20 AC			lda XB
 11192 6186 8D 0C AC			sta SHOOT_BLOCK.XB
 11193 6189 AD 21 AC			lda XB+1
 11194 618C 8D 0D AC			sta SHOOT_BLOCK.XB+1
 11195 618F AD 22 AC			lda YB
 11196 6192 8D 0E AC			sta SHOOT_BLOCK.YB
 11197 6195 AD 23 AC			lda YB+1
 11198 6198 8D 0F AC			sta SHOOT_BLOCK.YB+1
 11199 619B AD 18 AC			lda BALL
 11200 619E 8D 10 AC			sta SHOOT_BLOCK.BALL
 11201 61A1 AD 19 AC			lda BALL+1
 11202 61A4 8D 11 AC			sta SHOOT_BLOCK.BALL+1
 11203 61A7 20 05 55			jsr SHOOT_BLOCK
 11204
 11205 				; optimize OK (vservice.pas), line = 1793
 11206
 11207 61AA AD 30 AC			lda NX
 11208 61AD 29 0F			and #$0F
 11209 61AF 85 9F			sta :STACKORIGIN+9
 11210 61B1 A9 00			lda #$00
 11211 61B3 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 11212 61B5 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
 11213 61B7 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
 11214 61B9 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 11215 61BB 66 9F			ror :STACKORIGIN+9
 11216 61BD A5 9F			lda :STACKORIGIN+9
 11217 61BF 8D 1C AC			sta X
 11218 61C2 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 11219 61C4 8D 1D AC			sta X+1
 11220
 11221 				; optimize OK (vservice.pas), line = 1794
 11222
 11223 61C7 AD 32 AC			lda NY
 11224 61CA 29 07			and #$07
 11225 61CC 8D 1E AC			sta Y
 11226 61CF A9 00			lda #$00
 11227 61D1 8D 1F AC			sta Y+1
 11228
 11229 				; optimize OK (vservice.pas), line = 1806
 11230
 11231 61D4 AD 1D AC			lda X+1
 11232 61D7 0D 1C AC			ora X
 11233 61DA F0 25			jeq l_1BEB
 11234 61DC AD 1D AC			lda X+1
 11235 61DF D0 05			bne @+
 11236 61E1 AD 1C AC			lda X
 11237 61E4 C9 07			cmp #$07
 11238 				@
 11239 61E6 F0 19			jeq l_1BEB
 11240 61E8 AD 1F AC			lda Y+1
 11241 61EB 0D 1E AC			ora Y
 11242 61EE F0 11			jeq l_1BEB
 11243 				@
 11244 61F0 AD 1F AC			lda Y+1
 11245 61F3 D0 05			bne @+
 11246 61F5 AD 1E AC			lda Y
 11247 61F8 C9 07			cmp #$07
 11248 				@
 11249 61FA F0 05			jeq l_1BEB
 11250
 11251 				; optimize OK (vservice.pas), line = 1807
 11252
 11253 61FC A9 03			lda #$03
 11254 61FE 20 24 26			jsr FATAL_ERROR
 11255 6201			l_1BEB
 11256
 11257 				; optimize OK (vservice.pas), line = 1822
 11258
 11259 6201 AD 1E AC			lda Y
 11260 6204 CD 1C AC			cmp X
 11261 6207 AD 1F AC			lda Y+1
 11262 620A ED 1D AC			sbc X+1
 11263 620D 50 02			svc
 11264 620F 49 80			eor #$80
 11265 6211 30 03 4C AA 62		jpl l_1C12
 11266 6216 AD 1E AC			lda Y
 11267 6219 85 A2			sta :STACKORIGIN+12
 11268 621B A0 00			ldy #$00
 11269 621D AD 1F AC			lda Y+1
 11270 6220 10 01			spl
 11271 6222 88				dey
 11272 6223 85 B2			sta :STACKORIGIN+STACKWIDTH+12
 11273 6225 84 C2			sty :STACKORIGIN+STACKWIDTH*2+12
 11274 6227 84 D2			sty :STACKORIGIN+STACKWIDTH*3+12
 11275 6229 A9 07			lda #$07
 11276 622B 38 E5 A2			sub :STACKORIGIN+12
 11277 622E 85 A1			sta :STACKORIGIN+11
 11278 6230 A9 00			lda #$00
 11279 6232 E5 B2			sbc :STACKORIGIN+STACKWIDTH+12
 11280 6234 85 B1			sta :STACKORIGIN+STACKWIDTH+11
 11281 6236 A9 00			lda #$00
 11282 6238 E5 C2			sbc :STACKORIGIN+STACKWIDTH*2+12
 11283 623A 85 C1			sta :STACKORIGIN+STACKWIDTH*2+11
 11284 623C A9 00			lda #$00
 11285 623E E5 D2			sbc :STACKORIGIN+STACKWIDTH*3+12
 11286 6240 85 D1			sta :STACKORIGIN+STACKWIDTH*3+11
 11287 6242 AD 1C AC			lda X
 11288 6245 85 A0			sta :STACKORIGIN+10
 11289 6247 A0 00			ldy #$00
 11290 6249 AD 1D AC			lda X+1
 11291 624C 10 01			spl
 11292 624E 88				dey
 11293 624F 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 11294 6251 84 C0			sty :STACKORIGIN+STACKWIDTH*2+10
 11295 6253 84 D0			sty :STACKORIGIN+STACKWIDTH*3+10
 11296 6255				.LOCAL
 11297 6255 A5 D0			lda :STACKORIGIN+STACKWIDTH*3+10
 11298 6257 38 E5 D1			sub :STACKORIGIN+STACKWIDTH*3+11
 11299 625A D0 1C			bne L4
 11300 625C A5 C0			lda :STACKORIGIN+STACKWIDTH*2+10
 11301 625E C5 C1			cmp :STACKORIGIN+STACKWIDTH*2+11
 11302 6260 D0 0A			bne L1
 11303 6262 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
 11304 6264 C5 B1			cmp :STACKORIGIN+STACKWIDTH+11
 11305 6266 D0 04			bne L1
 11306 6268 A5 A0			lda :STACKORIGIN+10
 11307 626A C5 A1			cmp :STACKORIGIN+11
 11308 626C F0 10		L1	beq L5
 11309 626E B0 04			bcs L3
 11310 6270 A9 FF			lda #$FF
 11311 6272 D0 0A			bne L5
 11312 6274 A9 01		L3	lda #$01
 11313 6276 D0 06			bne L5
 11314 6278 50 04		L4	bvc L5
 11315 627A 49 FF			eor #$FF
 11316 627C 09 01			ora #$01
 11317 627E			L5
 11318 					.ENDL
 11319 627E 10 2A			jpl l_1C12
 11320
 11321 				; optimize OK (vservice.pas), line = 1824
 11322
 11323 6280 AC 18 AC 84 84 AC + 	mwy BALL :bp2
 11324 628A A0 12			ldy #BALL.SPEEDY-DATAORIGIN
 11325 628C A9 00			lda #$00
 11326 628E 38 F1 84			sub (:bp2),y
 11327 6291 85 9F			sta :STACKORIGIN+9
 11328 6293 C8				iny
 11329 6294 A9 00			lda #$00
 11330 6296 F1 84			sbc (:bp2),y
 11331 6298 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 11332 629A A0 12			ldy #BALL.SPEEDY-DATAORIGIN
 11333 629C A5 9F			lda :STACKORIGIN+9
 11334 629E 91 84			sta (:bp2),y
 11335 62A0 C8				iny
 11336 62A1 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 11337 62A3 91 84			sta (:bp2),y
 11338
 11339 				; optimize OK (vservice.pas), line = 1825
 11340
 11341 62A5 A9 01			lda #$01
 11342 62A7 8D 44 AC			sta EMERGENCY
 11343 62AA			l_1C12
 11344
 11345 				; optimize OK (vservice.pas), line = 1829
 11346
 11347 62AA AD 1E AC			lda Y
 11348 62AD 85 A0			sta :STACKORIGIN+10
 11349 62AF A0 00			ldy #$00
 11350 62B1 AD 1F AC			lda Y+1
 11351 62B4 10 01			spl
 11352 62B6 88				dey
 11353 62B7 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 11354 62B9 84 C0			sty :STACKORIGIN+STACKWIDTH*2+10
 11355 62BB 84 D0			sty :STACKORIGIN+STACKWIDTH*3+10
 11356 62BD A9 07			lda #$07
 11357 62BF 38 E5 A0			sub :STACKORIGIN+10
 11358 62C2 85 9F			sta :STACKORIGIN+9
 11359 62C4 A9 00			lda #$00
 11360 62C6 E5 B0			sbc :STACKORIGIN+STACKWIDTH+10
 11361 62C8 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 11362 62CA A9 00			lda #$00
 11363 62CC E5 C0			sbc :STACKORIGIN+STACKWIDTH*2+10
 11364 62CE 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
 11365 62D0 A9 00			lda #$00
 11366 62D2 E5 D0			sbc :STACKORIGIN+STACKWIDTH*3+10
 11367 62D4 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
 11368 62D6 AD 1C AC			lda X
 11369 62D9 85 A0			sta :STACKORIGIN+10
 11370 62DB A0 00			ldy #$00
 11371 62DD AD 1D AC			lda X+1
 11372 62E0 10 01			spl
 11373 62E2 88				dey
 11374 62E3 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 11375 62E5 84 C0			sty :STACKORIGIN+STACKWIDTH*2+10
 11376 62E7 84 D0			sty :STACKORIGIN+STACKWIDTH*3+10
 11377 62E9				.LOCAL
 11378 62E9 A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
 11379 62EB 38 E5 D0			sub :STACKORIGIN+STACKWIDTH*3+10
 11380 62EE D0 1C			bne L4
 11381 62F0 A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
 11382 62F2 C5 C0			cmp :STACKORIGIN+STACKWIDTH*2+10
 11383 62F4 D0 0A			bne L1
 11384 62F6 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 11385 62F8 C5 B0			cmp :STACKORIGIN+STACKWIDTH+10
 11386 62FA D0 04			bne L1
 11387 62FC A5 9F			lda :STACKORIGIN+9
 11388 62FE C5 A0			cmp :STACKORIGIN+10
 11389 6300 F0 10		L1	beq L5
 11390 6302 B0 04			bcs L3
 11391 6304 A9 FF			lda #$FF
 11392 6306 D0 0A			bne L5
 11393 6308 A9 01		L3	lda #$01
 11394 630A D0 06			bne L5
 11395 630C 50 04		L4	bvc L5
 11396 630E 49 FF			eor #$FF
 11397 6310 09 01			ora #$01
 11398 6312			L5
 11399 					.ENDL
 11400 6312 10 3C			jpl l_1C43
 11401 6314 AD 1C AC			lda X
 11402 6317 CD 1E AC			cmp Y
 11403 631A AD 1D AC			lda X+1
 11404 631D ED 1F AC			sbc Y+1
 11405 6320 50 02			svc
 11406 6322 49 80			eor #$80
 11407 6324 10 2A			jpl l_1C43
 11408
 11409 				; optimize OK (vservice.pas), line = 1831
 11410
 11411 6326 AC 18 AC 84 84 AC + 	mwy BALL :bp2
 11412 6330 A0 12			ldy #BALL.SPEEDY-DATAORIGIN
 11413 6332 A9 00			lda #$00
 11414 6334 38 F1 84			sub (:bp2),y
 11415 6337 85 9F			sta :STACKORIGIN+9
 11416 6339 C8				iny
 11417 633A A9 00			lda #$00
 11418 633C F1 84			sbc (:bp2),y
 11419 633E 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 11420 6340 A0 12			ldy #BALL.SPEEDY-DATAORIGIN
 11421 6342 A5 9F			lda :STACKORIGIN+9
 11422 6344 91 84			sta (:bp2),y
 11423 6346 C8				iny
 11424 6347 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 11425 6349 91 84			sta (:bp2),y
 11426
 11427 				; optimize OK (vservice.pas), line = 1832
 11428
 11429 634B A9 03			lda #$03
 11430 634D 8D 44 AC			sta EMERGENCY
 11431 6350			l_1C43
 11432
 11433 				; optimize OK (vservice.pas), line = 1836
 11434
 11435 6350 AD 1C AC			lda X
 11436 6353 CD 1E AC			cmp Y
 11437 6356 AD 1D AC			lda X+1
 11438 6359 ED 1F AC			sbc Y+1
 11439 635C 50 02			svc
 11440 635E 49 80			eor #$80
 11441 6360 30 03 4C F9 63		jpl l_1C74
 11442 6365 AD 1C AC			lda X
 11443 6368 85 A2			sta :STACKORIGIN+12
 11444 636A A0 00			ldy #$00
 11445 636C AD 1D AC			lda X+1
 11446 636F 10 01			spl
 11447 6371 88				dey
 11448 6372 85 B2			sta :STACKORIGIN+STACKWIDTH+12
 11449 6374 84 C2			sty :STACKORIGIN+STACKWIDTH*2+12
 11450 6376 84 D2			sty :STACKORIGIN+STACKWIDTH*3+12
 11451 6378 A9 07			lda #$07
 11452 637A 38 E5 A2			sub :STACKORIGIN+12
 11453 637D 85 A1			sta :STACKORIGIN+11
 11454 637F A9 00			lda #$00
 11455 6381 E5 B2			sbc :STACKORIGIN+STACKWIDTH+12
 11456 6383 85 B1			sta :STACKORIGIN+STACKWIDTH+11
 11457 6385 A9 00			lda #$00
 11458 6387 E5 C2			sbc :STACKORIGIN+STACKWIDTH*2+12
 11459 6389 85 C1			sta :STACKORIGIN+STACKWIDTH*2+11
 11460 638B A9 00			lda #$00
 11461 638D E5 D2			sbc :STACKORIGIN+STACKWIDTH*3+12
 11462 638F 85 D1			sta :STACKORIGIN+STACKWIDTH*3+11
 11463 6391 AD 1E AC			lda Y
 11464 6394 85 A0			sta :STACKORIGIN+10
 11465 6396 A0 00			ldy #$00
 11466 6398 AD 1F AC			lda Y+1
 11467 639B 10 01			spl
 11468 639D 88				dey
 11469 639E 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 11470 63A0 84 C0			sty :STACKORIGIN+STACKWIDTH*2+10
 11471 63A2 84 D0			sty :STACKORIGIN+STACKWIDTH*3+10
 11472 63A4				.LOCAL
 11473 63A4 A5 D0			lda :STACKORIGIN+STACKWIDTH*3+10
 11474 63A6 38 E5 D1			sub :STACKORIGIN+STACKWIDTH*3+11
 11475 63A9 D0 1C			bne L4
 11476 63AB A5 C0			lda :STACKORIGIN+STACKWIDTH*2+10
 11477 63AD C5 C1			cmp :STACKORIGIN+STACKWIDTH*2+11
 11478 63AF D0 0A			bne L1
 11479 63B1 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
 11480 63B3 C5 B1			cmp :STACKORIGIN+STACKWIDTH+11
 11481 63B5 D0 04			bne L1
 11482 63B7 A5 A0			lda :STACKORIGIN+10
 11483 63B9 C5 A1			cmp :STACKORIGIN+11
 11484 63BB F0 10		L1	beq L5
 11485 63BD B0 04			bcs L3
 11486 63BF A9 FF			lda #$FF
 11487 63C1 D0 0A			bne L5
 11488 63C3 A9 01		L3	lda #$01
 11489 63C5 D0 06			bne L5
 11490 63C7 50 04		L4	bvc L5
 11491 63C9 49 FF			eor #$FF
 11492 63CB 09 01			ora #$01
 11493 63CD			L5
 11494 					.ENDL
 11495 63CD 10 2A			jpl l_1C74
 11496
 11497 				; optimize OK (vservice.pas), line = 1838
 11498
 11499 63CF AC 18 AC 84 84 AC + 	mwy BALL :bp2
 11500 63D9 A0 10			ldy #BALL.SPEEDX-DATAORIGIN
 11501 63DB A9 00			lda #$00
 11502 63DD 38 F1 84			sub (:bp2),y
 11503 63E0 85 9F			sta :STACKORIGIN+9
 11504 63E2 C8				iny
 11505 63E3 A9 00			lda #$00
 11506 63E5 F1 84			sbc (:bp2),y
 11507 63E7 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 11508 63E9 A0 10			ldy #BALL.SPEEDX-DATAORIGIN
 11509 63EB A5 9F			lda :STACKORIGIN+9
 11510 63ED 91 84			sta (:bp2),y
 11511 63EF C8				iny
 11512 63F0 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 11513 63F2 91 84			sta (:bp2),y
 11514
 11515 				; optimize OK (vservice.pas), line = 1839
 11516
 11517 63F4 A9 02			lda #$02
 11518 63F6 8D 44 AC			sta EMERGENCY
 11519 63F9			l_1C74
 11520
 11521 				; optimize OK (vservice.pas), line = 1843
 11522
 11523 63F9 AD 1C AC			lda X
 11524 63FC 85 A0			sta :STACKORIGIN+10
 11525 63FE A0 00			ldy #$00
 11526 6400 AD 1D AC			lda X+1
 11527 6403 10 01			spl
 11528 6405 88				dey
 11529 6406 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 11530 6408 84 C0			sty :STACKORIGIN+STACKWIDTH*2+10
 11531 640A 84 D0			sty :STACKORIGIN+STACKWIDTH*3+10
 11532 640C A9 07			lda #$07
 11533 640E 38 E5 A0			sub :STACKORIGIN+10
 11534 6411 85 9F			sta :STACKORIGIN+9
 11535 6413 A9 00			lda #$00
 11536 6415 E5 B0			sbc :STACKORIGIN+STACKWIDTH+10
 11537 6417 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 11538 6419 A9 00			lda #$00
 11539 641B E5 C0			sbc :STACKORIGIN+STACKWIDTH*2+10
 11540 641D 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
 11541 641F A9 00			lda #$00
 11542 6421 E5 D0			sbc :STACKORIGIN+STACKWIDTH*3+10
 11543 6423 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
 11544 6425 AD 1E AC			lda Y
 11545 6428 85 A0			sta :STACKORIGIN+10
 11546 642A A0 00			ldy #$00
 11547 642C AD 1F AC			lda Y+1
 11548 642F 10 01			spl
 11549 6431 88				dey
 11550 6432 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 11551 6434 84 C0			sty :STACKORIGIN+STACKWIDTH*2+10
 11552 6436 84 D0			sty :STACKORIGIN+STACKWIDTH*3+10
 11553 6438				.LOCAL
 11554 6438 A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
 11555 643A 38 E5 D0			sub :STACKORIGIN+STACKWIDTH*3+10
 11556 643D D0 1C			bne L4
 11557 643F A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
 11558 6441 C5 C0			cmp :STACKORIGIN+STACKWIDTH*2+10
 11559 6443 D0 0A			bne L1
 11560 6445 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 11561 6447 C5 B0			cmp :STACKORIGIN+STACKWIDTH+10
 11562 6449 D0 04			bne L1
 11563 644B A5 9F			lda :STACKORIGIN+9
 11564 644D C5 A0			cmp :STACKORIGIN+10
 11565 644F F0 10		L1	beq L5
 11566 6451 B0 04			bcs L3
 11567 6453 A9 FF			lda #$FF
 11568 6455 D0 0A			bne L5
 11569 6457 A9 01		L3	lda #$01
 11570 6459 D0 06			bne L5
 11571 645B 50 04		L4	bvc L5
 11572 645D 49 FF			eor #$FF
 11573 645F 09 01			ora #$01
 11574 6461			L5
 11575 					.ENDL
 11576 6461 10 3C			jpl l_1CA5
 11577 6463 AD 1E AC			lda Y
 11578 6466 CD 1C AC			cmp X
 11579 6469 AD 1F AC			lda Y+1
 11580 646C ED 1D AC			sbc X+1
 11581 646F 50 02			svc
 11582 6471 49 80			eor #$80
 11583 6473 10 2A			jpl l_1CA5
 11584
 11585 				; optimize OK (vservice.pas), line = 1845
 11586
 11587 6475 AC 18 AC 84 84 AC + 	mwy BALL :bp2
 11588 647F A0 10			ldy #BALL.SPEEDX-DATAORIGIN
 11589 6481 A9 00			lda #$00
 11590 6483 38 F1 84			sub (:bp2),y
 11591 6486 85 9F			sta :STACKORIGIN+9
 11592 6488 C8				iny
 11593 6489 A9 00			lda #$00
 11594 648B F1 84			sbc (:bp2),y
 11595 648D 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 11596 648F A0 10			ldy #BALL.SPEEDX-DATAORIGIN
 11597 6491 A5 9F			lda :STACKORIGIN+9
 11598 6493 91 84			sta (:bp2),y
 11599 6495 C8				iny
 11600 6496 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 11601 6498 91 84			sta (:bp2),y
 11602
 11603 				; optimize OK (vservice.pas), line = 1846
 11604
 11605 649A A9 04			lda #$04
 11606 649C 8D 44 AC			sta EMERGENCY
 11607 649F			l_1CA5
 11608
 11609 				; optimize OK (vservice.pas), line = 1850
 11610
 11611 649F AD 1D AC			lda X+1
 11612 64A2 CD 1F AC			cmp Y+1
 11613 64A5 D0 06			bne @+
 11614 64A7 AD 1C AC			lda X
 11615 64AA CD 1E AC			cmp Y
 11616 				@
 11617 64AD F0 5A			jeq l_1CD6x
 11618 64AF AD 1E AC			lda Y
 11619 64B2 85 A2			sta :STACKORIGIN+12
 11620 64B4 A0 00			ldy #$00
 11621 64B6 AD 1F AC			lda Y+1
 11622 64B9 10 01			spl
 11623 64BB 88				dey
 11624 64BC 85 B2			sta :STACKORIGIN+STACKWIDTH+12
 11625 64BE 84 C2			sty :STACKORIGIN+STACKWIDTH*2+12
 11626 64C0 84 D2			sty :STACKORIGIN+STACKWIDTH*3+12
 11627 64C2 A9 07			lda #$07
 11628 64C4 38 E5 A2			sub :STACKORIGIN+12
 11629 64C7 85 A1			sta :STACKORIGIN+11
 11630 64C9 A9 00			lda #$00
 11631 64CB E5 B2			sbc :STACKORIGIN+STACKWIDTH+12
 11632 64CD 85 B1			sta :STACKORIGIN+STACKWIDTH+11
 11633 64CF A9 00			lda #$00
 11634 64D1 E5 C2			sbc :STACKORIGIN+STACKWIDTH*2+12
 11635 64D3 85 C1			sta :STACKORIGIN+STACKWIDTH*2+11
 11636 64D5 A9 00			lda #$00
 11637 64D7 E5 D2			sbc :STACKORIGIN+STACKWIDTH*3+12
 11638 64D9 85 D1			sta :STACKORIGIN+STACKWIDTH*3+11
 11639 64DB AD 1C AC			lda X
 11640 64DE 85 A0			sta :STACKORIGIN+10
 11641 64E0 A0 00			ldy #$00
 11642 64E2 AD 1D AC			lda X+1
 11643 64E5 10 01			spl
 11644 64E7 88				dey
 11645 64E8 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 11646 64EA 84 C0			sty :STACKORIGIN+STACKWIDTH*2+10
 11647 64EC 84 D0			sty :STACKORIGIN+STACKWIDTH*3+10
 11648 64EE A5 D0			lda :STACKORIGIN+STACKWIDTH*3+10
 11649 64F0 C5 D1			cmp :STACKORIGIN+STACKWIDTH*3+11
 11650 64F2 D0 10			bne @+
 11651 64F4 A5 C0			lda :STACKORIGIN+STACKWIDTH*2+10
 11652 64F6 C5 C1			cmp :STACKORIGIN+STACKWIDTH*2+11
 11653 64F8 D0 0A			bne @+
 11654 64FA A5 B0			lda :STACKORIGIN+STACKWIDTH+10
 11655 64FC C5 B1			cmp :STACKORIGIN+STACKWIDTH+11
 11656 64FE D0 04			bne @+
 11657 6500 A5 A0			lda :STACKORIGIN+10
 11658 6502 C5 A1			cmp :STACKORIGIN+11
 11659 				@
 11660 6504 F0 03 4C C6 6D		jne l_1CD6
 11661 6509			l_1CD6x
 11662
 11663 				; optimize OK (vservice.pas), line = 1852
 11664
 11665 6509 A9 00			lda #$00
 11666 650B 8D 38 AC			sta DEFLECT
 11667 650E 8D 39 AC			sta DEFLECT+1
 11668
 11669 				; optimize OK (vservice.pas), line = 1853
 11670
 11671 6511 8D 46 AC			sta TOUCH
 11672
 11673 				; optimize OK (vservice.pas), line = 1861
 11674
 11675 6514 AD 1C AC			lda X
 11676 6517 C9 05			cmp #$05
 11677 6519 AD 1D AC			lda X+1
 11678 651C E9 00			sbc #$00
 11679 651E 50 02			svc
 11680 6520 49 80			eor #$80
 11681 6522 30 08			jmi l_1CF0
 11682 6524 AD 46 AC			lda TOUCH
 11683 6527 09 01			ora #$01
 11684 6529 8D 46 AC			sta TOUCH
 11685 652C			l_1CF0
 11686
 11687 				; optimize OK (vservice.pas), line = 1862
 11688
 11689 652C AD 1E AC			lda Y
 11690 652F C9 05			cmp #$05
 11691 6531 AD 1F AC			lda Y+1
 11692 6534 E9 00			sbc #$00
 11693 6536 50 02			svc
 11694 6538 49 80			eor #$80
 11695 653A 30 08			jmi l_1D0E
 11696 653C AD 46 AC			lda TOUCH
 11697 653F 09 02			ora #$02
 11698 6541 8D 46 AC			sta TOUCH
 11699 6544			l_1D0E
 11700
 11701 				; optimize OK (vservice.pas), line = 1872
 11702
 11703 6544 A9 FF			lda #$FF
 11704 6546 8D 28 AC			sta LX
 11705 6549 8D 29 AC			sta LX+1
 11706
 11707 654C			l_1D24
 11708 				; --- ForToDoCondition
 11709 654C AD 28 AC			lda LX
 11710 654F C9 02			cmp #$02
 11711 6551 AD 29 AC			lda LX+1
 11712 6554 E9 00			sbc #$00
 11713 6556 50 02			svc
 11714 6558 49 80			eor #$80
 11715 655A 0A				asl @
 11716 655B B0 03 4C D3 67		jcc l_1D30
 11717
 11718 				; optimize OK (vservice.pas), line = 1873
 11719
 11720 6560 A9 FF			lda #$FF
 11721 6562 8D 2A AC			sta LY
 11722 6565 8D 2B AC			sta LY+1
 11723
 11724 6568			l_1D39
 11725 				; --- ForToDoCondition
 11726 6568 AD 2A AC			lda LY
 11727 656B C9 02			cmp #$02
 11728 656D AD 2B AC			lda LY+1
 11729 6570 E9 00			sbc #$00
 11730 6572 50 02			svc
 11731 6574 49 80			eor #$80
 11732 6576 0A				asl @
 11733 6577 B0 03 4C C5 67		jcc l_1D45
 11734
 11735 				; optimize FAIL (1, vservice.pas), line = 1875
 11736
 11737 657C E8				inx
 11738 657D A9 00 95 96			mva #$00 :STACKORIGIN,x
 11739 6581 95 A6			sta :STACKORIGIN+STACKWIDTH,x
 11740 6583 E8				inx
 11741 6584 A9 0C 95 96			mva #$0C :STACKORIGIN,x
 11742 6588 A9 00 95 A6			mva #$00 :STACKORIGIN+STACKWIDTH,x
 11743 658C AD 20 AC			lda XB
 11744 658F 18 6D 28 AC			add LX
 11745 6593 8D 18 AB			sta MIN.A
 11746 6596 AD 21 AC			lda XB+1
 11747 6599 6D 29 AC			adc LX+1
 11748 659C 8D 19 AB			sta MIN.A+1
 11749 659F B5 96			lda :STACKORIGIN,x
 11750 65A1 8D 1A AB			sta MIN.B
 11751 65A4 B5 A6			lda :STACKORIGIN+STACKWIDTH,x
 11752 65A6 8D 1B AB			sta MIN.B+1
 11753 65A9 CA				dex
 11754 65AA 20 F9 25			jsr MIN
 11755 65AD AD 1C AB			lda MIN.RESULT
 11756 65B0 8D 12 AB			sta MAX.A
 11757 65B3 AD 1D AB			lda MIN.RESULT+1
 11758 65B6 8D 13 AB			sta MAX.A+1
 11759 65B9 B5 96			lda :STACKORIGIN,x
 11760 65BB 8D 14 AB			sta MAX.B
 11761 65BE B5 A6			lda :STACKORIGIN+STACKWIDTH,x
 11762 65C0 8D 15 AB			sta MAX.B+1
 11763 65C3 CA				dex
 11764 65C4 20 CE 25			jsr MAX
 11765 65C7 AD 16 AB			lda MAX.RESULT
 11766 65CA 8D 2C AC			sta MX
 11767 65CD AD 17 AB			lda MAX.RESULT+1
 11768 65D0 8D 2D AC			sta MX+1
 11769
 11770 				; optimize OK (vservice.pas), line = 1876
 11771
 11772 65D3 AD 22 AC			lda YB
 11773 65D6 18 6D 2A AC			add LY
 11774 65DA 8D 2E AC			sta MY
 11775 65DD AD 23 AC			lda YB+1
 11776 65E0 6D 2B AC			adc LY+1
 11777 65E3 8D 2F AC			sta MY+1
 11778
 11779 				; optimize OK (vservice.pas), line = 1880
 11780
 11781 65E6 AD 20 AC			lda XB
 11782 65E9 85 9F			sta :STACKORIGIN+9
 11783 65EB A0 00			ldy #$00
 11784 65ED AD 21 AC			lda XB+1
 11785 65F0 10 01			spl
 11786 65F2 88				dey
 11787 65F3 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 11788 65F5 84 BF			sty :STACKORIGIN+STACKWIDTH*2+9
 11789 65F7 84 CF			sty :STACKORIGIN+STACKWIDTH*3+9
 11790 65F9 AD 28 AC			lda LX
 11791 65FC 85 A0			sta :STACKORIGIN+10
 11792 65FE A0 00			ldy #$00
 11793 6600 AD 29 AC			lda LX+1
 11794 6603 10 01			spl
 11795 6605 88				dey
 11796 6606 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 11797 6608 84 C0			sty :STACKORIGIN+STACKWIDTH*2+10
 11798 660A 84 D0			sty :STACKORIGIN+STACKWIDTH*3+10
 11799 660C A5 9F			lda :STACKORIGIN+9
 11800 660E 18 65 A0			add :STACKORIGIN+10
 11801 6611 F0 03 4C 1F 67		jne l_1D9Ax
 11802 6616 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 11803 6618 65 B0			adc :STACKORIGIN+STACKWIDTH+10
 11804 661A 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 11805 661C A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
 11806 661E 65 C0			adc :STACKORIGIN+STACKWIDTH*2+10
 11807 6620 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
 11808 6622 A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
 11809 6624 65 D0			adc :STACKORIGIN+STACKWIDTH*3+10
 11810 6626 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
 11811 6628 10 03 4C 1F 67		jmi l_1D9Ax
 11812 662D AD 20 AC			lda XB
 11813 6630 85 A0			sta :STACKORIGIN+10
 11814 6632 A0 00			ldy #$00
 11815 6634 AD 21 AC			lda XB+1
 11816 6637 10 01			spl
 11817 6639 88				dey
 11818 663A 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 11819 663C 84 C0			sty :STACKORIGIN+STACKWIDTH*2+10
 11820 663E 84 D0			sty :STACKORIGIN+STACKWIDTH*3+10
 11821 6640 AD 28 AC			lda LX
 11822 6643 85 A1			sta :STACKORIGIN+11
 11823 6645 A0 00			ldy #$00
 11824 6647 AD 29 AC			lda LX+1
 11825 664A 10 01			spl
 11826 664C 88				dey
 11827 664D 85 B1			sta :STACKORIGIN+STACKWIDTH+11
 11828 664F 84 C1			sty :STACKORIGIN+STACKWIDTH*2+11
 11829 6651 84 D1			sty :STACKORIGIN+STACKWIDTH*3+11
 11830 6653 A5 A0			lda :STACKORIGIN+10
 11831 6655 18 65 A1			add :STACKORIGIN+11
 11832 6658 85 A0			sta :STACKORIGIN+10
 11833 665A A5 B0			lda :STACKORIGIN+STACKWIDTH+10
 11834 665C 65 B1			adc :STACKORIGIN+STACKWIDTH+11
 11835 665E 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 11836 6660 A5 C0			lda :STACKORIGIN+STACKWIDTH*2+10
 11837 6662 65 C1			adc :STACKORIGIN+STACKWIDTH*2+11
 11838 6664 85 C0			sta :STACKORIGIN+STACKWIDTH*2+10
 11839 6666 A5 D0			lda :STACKORIGIN+STACKWIDTH*3+10
 11840 6668 65 D1			adc :STACKORIGIN+STACKWIDTH*3+11
 11841 666A 85 D0			sta :STACKORIGIN+STACKWIDTH*3+10
 11842 666C				.LOCAL
 11843 666C A5 D0			lda :STACKORIGIN+STACKWIDTH*3+10
 11844 666E 38 E9 00			sub #$00
 11845 6671 D0 1C			bne L4
 11846 6673 A5 C0			lda :STACKORIGIN+STACKWIDTH*2+10
 11847 6675 C9 00			cmp #$00
 11848 6677 D0 0A			bne L1
 11849 6679 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
 11850 667B C9 00			cmp #$00
 11851 667D D0 04			bne L1
 11852 667F A5 A0			lda :STACKORIGIN+10
 11853 6681 C9 0C			cmp #$0C
 11854 6683 F0 10		L1	beq L5
 11855 6685 B0 04			bcs L3
 11856 6687 A9 FF			lda #$FF
 11857 6689 D0 0A			bne L5
 11858 668B A9 01		L3	lda #$01
 11859 668D D0 06			bne L5
 11860 668F 50 04		L4	bvc L5
 11861 6691 49 FF			eor #$FF
 11862 6693 09 01			ora #$01
 11863 6695			L5
 11864 					.ENDL
 11865 6695 F0 02			seq
 11866 6697 10 03			bpl @+
 11867 6699 4C 9F 66			jmp *+6
 11868 669C 4C 1F 67		@	jmp l_1D9Ax
 11869 669F A9 10			lda #$10
 11870 66A1 85 8E			sta :ecx
 11871 66A3 85 92			sta :ztmp8
 11872 66A5 A9 00			lda #$00
 11873 66A7 85 8F			sta :ecx+1
 11874 66A9 85 93			sta :ztmp9
 11875 66AB AD 2E AC			lda MY
 11876 66AE 85 86			sta :eax
 11877 66B0 85 94			sta :ztmp10
 11878 66B2 AD 2F AC			lda MY+1
 11879 66B5 85 87			sta :eax+1
 11880 66B7 85 95			sta :ztmp11
 11881 					.ifdef fmulinit
 11882 					fmulu_16
 11883 					els
 11884 66B9 20 FA 12			imulCX
 11885 					eif
 11886 66BC A5 95			lda :ztmp11
 11887 66BE 10 0D			bpl @+
 11888 66C0 A5 88			lda :eax+2
 11889 66C2 38 E5 92			sub :ztmp8
 11890 66C5 85 88			sta :eax+2
 11891 66C7 A5 89			lda :eax+3
 11892 66C9 E5 93			sbc :ztmp9
 11893 66CB 85 89			sta :eax+3
 11894 				@
 11895 66CD A5 93			lda :ztmp9
 11896 66CF 10 0D			bpl @+
 11897 66D1 A5 88			lda :eax+2
 11898 66D3 38 E5 94			sub :ztmp10
 11899 66D6 85 88			sta :eax+2
 11900 66D8 A5 89			lda :eax+3
 11901 66DA E5 95			sbc :ztmp11
 11902 66DC 85 89			sta :eax+3
 11903 				@
 11904 66DE A5 86			lda :eax
 11905 66E0 85 A1			sta :STACKORIGIN+11
 11906 66E2 A5 87			lda :eax+1
 11907 66E4 85 B1			sta :STACKORIGIN+STACKWIDTH+11
 11908 66E6 A5 88			lda :eax+2
 11909 66E8 85 C1			sta :STACKORIGIN+STACKWIDTH*2+11
 11910 66EA A5 89			lda :eax+3
 11911 66EC 85 D1			sta :STACKORIGIN+STACKWIDTH*3+11
 11912 66EE AD 2C AC			lda MX
 11913 66F1 85 A0			sta :STACKORIGIN+10
 11914 66F3 A0 00			ldy #$00
 11915 66F5 AD 2D AC			lda MX+1
 11916 66F8 10 01			spl
 11917 66FA 88				dey
 11918 66FB 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 11919 66FD 84 C0			sty :STACKORIGIN+STACKWIDTH*2+10
 11920 66FF 84 D0			sty :STACKORIGIN+STACKWIDTH*3+10
 11921 6701 A5 A0			lda :STACKORIGIN+10
 11922 6703 18 65 A1			add :STACKORIGIN+11
 11923 6706 85 A0			sta :STACKORIGIN+10
 11924 6708 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
 11925 670A 65 B1			adc :STACKORIGIN+STACKWIDTH+11
 11926 670C 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 11927 670E A5 A0			lda :STACKORIGIN+10
 11928 6710 18 69 00			add #$00
 11929 6713 A8				tay
 11930 6714 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
 11931 6716 69 00			adc #$00
 11932 6718 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 11933 671A B9 DD A3			lda adr.WALL,y
 11934 671D F0 4D			jeq l_1D9A
 11935 				@
 11936 671F			l_1D9Ax
 11937
 11938 				; optimize OK (vservice.pas), line = 1883
 11939
 11940 671F AD 28 AC			lda LX
 11941 6722 18 69 01			add #$01
 11942 6725 85 86			sta :eax
 11943 6727 AD 29 AC			lda LX+1
 11944 672A 69 00			adc #$00
 11945 672C 85 87			sta :eax+1
 11946 672E A9 06			lda #$06
 11947 6730 85 8E			sta :ecx
 11948 6732 A9 00			lda #$00
 11949 6734 85 8F			sta :ecx+1
 11950 					.ifdef fmulinit
 11951 					fmulu_16
 11952 					els
 11953 6736 20 FA 12			imulCX
 11954 					eif
 11955 6739 AD 2A AC			lda LY
 11956 673C 18 69 01			add #$01
 11957 673F 85 A0			sta :STACKORIGIN+10
 11958 6741 AD 2B AC			lda LY+1
 11959 6744 69 00			adc #$00
 11960 6746 06 A0			asl :STACKORIGIN+10
 11961 6748 2A				rol @
 11962 6749 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 11963 674B A5 86			lda :eax
 11964 674D 18 65 A0			add :STACKORIGIN+10
 11965 6750 85 9F			sta :STACKORIGIN+9
 11966 6752 A5 87			lda :eax+1
 11967 6754 65 B0			adc :STACKORIGIN+STACKWIDTH+10
 11968 6756 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 11969 6758 A5 9F			lda :STACKORIGIN+9
 11970 675A 18 69 00			add #$00
 11971 675D A8				tay
 11972 675E A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 11973 6760 69 00			adc #$00
 11974 6762 A9 01			lda #$01
 11975 6764 99 47 AC			sta adr.ADJW,y
 11976 6767 A9 00			lda #$00
 11977 6769 4C B4 67			jmp l_1DBB
 11978 676C			l_1D9A
 11979
 11980 				; optimize OK (vservice.pas), line = 1885
 11981
 11982 676C AD 28 AC			lda LX
 11983 676F 18 69 01			add #$01
 11984 6772 85 86			sta :eax
 11985 6774 AD 29 AC			lda LX+1
 11986 6777 69 00			adc #$00
 11987 6779 85 87			sta :eax+1
 11988 677B A9 06			lda #$06
 11989 677D 85 8E			sta :ecx
 11990 677F A9 00			lda #$00
 11991 6781 85 8F			sta :ecx+1
 11992 					.ifdef fmulinit
 11993 					fmulu_16
 11994 					els
 11995 6783 20 FA 12			imulCX
 11996 					eif
 11997 6786 AD 2A AC			lda LY
 11998 6789 18 69 01			add #$01
 11999 678C 85 A0			sta :STACKORIGIN+10
 12000 678E AD 2B AC			lda LY+1
 12001 6791 69 00			adc #$00
 12002 6793 06 A0			asl :STACKORIGIN+10
 12003 6795 2A				rol @
 12004 6796 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 12005 6798 A5 86			lda :eax
 12006 679A 18 65 A0			add :STACKORIGIN+10
 12007 679D 85 9F			sta :STACKORIGIN+9
 12008 679F A5 87			lda :eax+1
 12009 67A1 65 B0			adc :STACKORIGIN+STACKWIDTH+10
 12010 67A3 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 12011 67A5 A5 9F			lda :STACKORIGIN+9
 12012 67A7 18 69 00			add #$00
 12013 67AA A8				tay
 12014 67AB A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 12015 67AD 69 00			adc #$00
 12016 67AF A9 00			lda #$00
 12017 67B1 99 47 AC			sta adr.ADJW,y
 12018 67B4			l_1DBB
 12019 67B4 99 48 AC			sta adr.ADJW+1,y
 12020
 12021 				; --- ForToDoEpilog
 12022 67B7 EE 2A AC			inc LY
 12023 67BA F0 03 4C 68 65		jne l_1D39
 12024 67BF EE 2B AC			inc LY+1
 12025 67C2 4C 68 65			jmp l_1D39
 12026 67C5			l_1D45
 12027
 12028 				; --- ForToDoEpilog
 12029 67C5 EE 28 AC			inc LX
 12030 67C8 F0 03 4C 4C 65		jne l_1D24
 12031 67CD EE 29 AC			inc LX+1
 12032 67D0 4C 4C 65			jmp l_1D24
 12033 67D3			l_1D30
 12034
 12035 				; optimize OK (vservice.pas), line = 1904
 12036
 12037 67D3 AD 47 AC			lda adr.ADJW
 12038 67D6 85 9F			sta :STACKORIGIN+9
 12039 67D8 AD 48 AC			lda adr.ADJW+1
 12040 67DB 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 12041 67DD AD 4D AC			lda adr.ADJW+$06
 12042 67E0 85 A0			sta :STACKORIGIN+10
 12043 67E2 AD 4E AC			lda adr.ADJW+1+$06
 12044 67E5 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 12045 67E7 06 A0			asl :STACKORIGIN+10
 12046 67E9 26 B0			rol :STACKORIGIN+STACKWIDTH+10
 12047 67EB A5 9F			lda :STACKORIGIN+9
 12048 67ED 18 65 A0			add :STACKORIGIN+10
 12049 67F0 85 9F			sta :STACKORIGIN+9
 12050 67F2 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 12051 67F4 65 B0			adc :STACKORIGIN+STACKWIDTH+10
 12052 67F6 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 12053 67F8 AD 53 AC			lda adr.ADJW+$0C
 12054 67FB 85 A0			sta :STACKORIGIN+10
 12055 67FD AD 54 AC			lda adr.ADJW+1+$0C
 12056 6800 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 12057 6802 06 A0			asl :STACKORIGIN+10
 12058 6804 26 B0			rol :STACKORIGIN+STACKWIDTH+10
 12059 6806 06 A0			asl :STACKORIGIN+10
 12060 6808 26 B0			rol :STACKORIGIN+STACKWIDTH+10
 12061 680A A5 9F			lda :STACKORIGIN+9
 12062 680C 18 65 A0			add :STACKORIGIN+10
 12063 680F 85 9F			sta :STACKORIGIN+9
 12064 6811 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 12065 6813 65 B0			adc :STACKORIGIN+STACKWIDTH+10
 12066 6815 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 12067 6817 AD 55 AC			lda adr.ADJW+$0E
 12068 681A 85 A0			sta :STACKORIGIN+10
 12069 681C AD 56 AC			lda adr.ADJW+1+$0E
 12070 681F 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 12071 6821 06 A0			asl :STACKORIGIN+10
 12072 6823 26 B0			rol :STACKORIGIN+STACKWIDTH+10
 12073 6825 06 A0			asl :STACKORIGIN+10
 12074 6827 26 B0			rol :STACKORIGIN+STACKWIDTH+10
 12075 6829 06 A0			asl :STACKORIGIN+10
 12076 682B 26 B0			rol :STACKORIGIN+STACKWIDTH+10
 12077 682D A5 9F			lda :STACKORIGIN+9
 12078 682F 18 65 A0			add :STACKORIGIN+10
 12079 6832 85 9F			sta :STACKORIGIN+9
 12080 6834 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 12081 6836 65 B0			adc :STACKORIGIN+STACKWIDTH+10
 12082 6838 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 12083 683A AD 57 AC			lda adr.ADJW+$10
 12084 683D 85 A0			sta :STACKORIGIN+10
 12085 683F AD 58 AC			lda adr.ADJW+1+$10
 12086 6842 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 12087 6844 06 A0			asl :STACKORIGIN+10
 12088 6846 26 B0			rol :STACKORIGIN+STACKWIDTH+10
 12089 6848 06 A0			asl :STACKORIGIN+10
 12090 684A 26 B0			rol :STACKORIGIN+STACKWIDTH+10
 12091 684C 06 A0			asl :STACKORIGIN+10
 12092 684E 26 B0			rol :STACKORIGIN+STACKWIDTH+10
 12093 6850 06 A0			asl :STACKORIGIN+10
 12094 6852 26 B0			rol :STACKORIGIN+STACKWIDTH+10
 12095 6854 A5 9F			lda :STACKORIGIN+9
 12096 6856 18 65 A0			add :STACKORIGIN+10
 12097 6859 85 9F			sta :STACKORIGIN+9
 12098 685B A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 12099 685D 65 B0			adc :STACKORIGIN+STACKWIDTH+10
 12100 685F 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 12101 6861 AD 51 AC			lda adr.ADJW+$0A
 12102 6864 85 A0			sta :STACKORIGIN+10
 12103 6866 AD 52 AC			lda adr.ADJW+1+$0A
 12104 6869 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 12105 686B 06 A0			asl :STACKORIGIN+10
 12106 686D 26 B0			rol :STACKORIGIN+STACKWIDTH+10
 12107 686F 06 A0			asl :STACKORIGIN+10
 12108 6871 26 B0			rol :STACKORIGIN+STACKWIDTH+10
 12109 6873 06 A0			asl :STACKORIGIN+10
 12110 6875 26 B0			rol :STACKORIGIN+STACKWIDTH+10
 12111 6877 06 A0			asl :STACKORIGIN+10
 12112 6879 26 B0			rol :STACKORIGIN+STACKWIDTH+10
 12113 687B 06 A0			asl :STACKORIGIN+10
 12114 687D 26 B0			rol :STACKORIGIN+STACKWIDTH+10
 12115 687F A5 9F			lda :STACKORIGIN+9
 12116 6881 18 65 A0			add :STACKORIGIN+10
 12117 6884 85 9F			sta :STACKORIGIN+9
 12118 6886 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 12119 6888 65 B0			adc :STACKORIGIN+STACKWIDTH+10
 12120 688A 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 12121 688C AD 4B AC			lda adr.ADJW+$04
 12122 688F 85 A0			sta :STACKORIGIN+10
 12123 6891 AD 4C AC			lda adr.ADJW+1+$04
 12124 6894 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 12125 6896 06 A0			asl :STACKORIGIN+10
 12126 6898 26 B0			rol :STACKORIGIN+STACKWIDTH+10
 12127 689A 06 A0			asl :STACKORIGIN+10
 12128 689C 26 B0			rol :STACKORIGIN+STACKWIDTH+10
 12129 689E 06 A0			asl :STACKORIGIN+10
 12130 68A0 26 B0			rol :STACKORIGIN+STACKWIDTH+10
 12131 68A2 06 A0			asl :STACKORIGIN+10
 12132 68A4 26 B0			rol :STACKORIGIN+STACKWIDTH+10
 12133 68A6 06 A0			asl :STACKORIGIN+10
 12134 68A8 26 B0			rol :STACKORIGIN+STACKWIDTH+10
 12135 68AA 06 A0			asl :STACKORIGIN+10
 12136 68AC 26 B0			rol :STACKORIGIN+STACKWIDTH+10
 12137 68AE A5 9F			lda :STACKORIGIN+9
 12138 68B0 18 65 A0			add :STACKORIGIN+10
 12139 68B3 85 9F			sta :STACKORIGIN+9
 12140 68B5 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 12141 68B7 65 B0			adc :STACKORIGIN+STACKWIDTH+10
 12142 68B9 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 12143 68BB AD 49 AC			lda adr.ADJW+$02
 12144 68BE 85 A0			sta :STACKORIGIN+10
 12145 68C0 AD 4A AC			lda adr.ADJW+1+$02
 12146 68C3 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 12147 68C5 06 A0			asl :STACKORIGIN+10
 12148 68C7 26 B0			rol :STACKORIGIN+STACKWIDTH+10
 12149 68C9 06 A0			asl :STACKORIGIN+10
 12150 68CB 26 B0			rol :STACKORIGIN+STACKWIDTH+10
 12151 68CD 06 A0			asl :STACKORIGIN+10
 12152 68CF 26 B0			rol :STACKORIGIN+STACKWIDTH+10
 12153 68D1 06 A0			asl :STACKORIGIN+10
 12154 68D3 26 B0			rol :STACKORIGIN+STACKWIDTH+10
 12155 68D5 06 A0			asl :STACKORIGIN+10
 12156 68D7 26 B0			rol :STACKORIGIN+STACKWIDTH+10
 12157 68D9 06 A0			asl :STACKORIGIN+10
 12158 68DB 26 B0			rol :STACKORIGIN+STACKWIDTH+10
 12159 68DD 06 A0			asl :STACKORIGIN+10
 12160 68DF 26 B0			rol :STACKORIGIN+STACKWIDTH+10
 12161 68E1 A5 9F			lda :STACKORIGIN+9
 12162 68E3 18 65 A0			add :STACKORIGIN+10
 12163 68E6 8D 3A AC			sta AROUND
 12164 68E9 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 12165 68EB 65 B0			adc :STACKORIGIN+STACKWIDTH+10
 12166 68ED 8D 3B AC			sta AROUND+1
 12167
 12168 				; optimize OK (vservice.pas), line = 1935
 12169
 12170 68F0 AD 46 AC			lda TOUCH
 12171 68F3 F0 03 4C B1 69		jne l_1E5A
 12172
 12173 				; optimize OK (vservice.pas), line = 1937
 12174
 12175 68F8 AD 3A AC			lda AROUND
 12176 68FB 29 83			and #$83
 12177 68FD D0 0A			jne l_1E70
 12178 68FF A9 11			lda #$11
 12179 6901 8D 38 AC			sta DEFLECT
 12180 6904 A9 00			lda #$00
 12181 6906 8D 39 AC			sta DEFLECT+1
 12182 6909			l_1E70
 12183
 12184 				; optimize OK (vservice.pas), line = 1938
 12185
 12186 6909 AD 3A AC			lda AROUND
 12187 690C 29 83			and #$83
 12188 690E C9 01			cmp #$01
 12189 6910 D0 0A			jne l_1E8C
 12190 6912 A9 33			lda #$33
 12191 6914 8D 38 AC			sta DEFLECT
 12192 6917 A9 00			lda #$00
 12193 6919 8D 39 AC			sta DEFLECT+1
 12194 691C			l_1E8C
 12195
 12196 				; optimize OK (vservice.pas), line = 1939
 12197
 12198 691C AD 3A AC			lda AROUND
 12199 691F 29 83			and #$83
 12200 6921 C9 02			cmp #$02
 12201 6923 D0 0A			jne l_1EA8
 12202 6925 A9 10			lda #$10
 12203 6927 8D 38 AC			sta DEFLECT
 12204 692A A9 00			lda #$00
 12205 692C 8D 39 AC			sta DEFLECT+1
 12206 692F			l_1EA8
 12207
 12208 				; optimize OK (vservice.pas), line = 1940
 12209
 12210 692F AD 3A AC			lda AROUND
 12211 6932 29 83			and #$83
 12212 6934 C9 03			cmp #$03
 12213 6936 D0 0A			jne l_1EC4
 12214 6938 A9 12			lda #$12
 12215 693A 8D 38 AC			sta DEFLECT
 12216 693D A9 00			lda #$00
 12217 693F 8D 39 AC			sta DEFLECT+1
 12218 6942			l_1EC4
 12219
 12220 				; optimize OK (vservice.pas), line = 1941
 12221
 12222 6942 AD 3A AC			lda AROUND
 12223 6945 29 83			and #$83
 12224 6947 C9 80			cmp #$80
 12225 6949 D0 0A			jne l_1EE0
 12226 694B A9 01			lda #$01
 12227 694D 8D 38 AC			sta DEFLECT
 12228 6950 A9 00			lda #$00
 12229 6952 8D 39 AC			sta DEFLECT+1
 12230 6955			l_1EE0
 12231
 12232 				; optimize OK (vservice.pas), line = 1942
 12233
 12234 6955 AD 3A AC			lda AROUND
 12235 6958 29 83			and #$83
 12236 695A C9 81			cmp #$81
 12237 695C D0 0A			jne l_1EFC
 12238 695E A9 21			lda #$21
 12239 6960 8D 38 AC			sta DEFLECT
 12240 6963 A9 00			lda #$00
 12241 6965 8D 39 AC			sta DEFLECT+1
 12242 6968			l_1EFC
 12243
 12244 				; optimize OK (vservice.pas), line = 1943
 12245
 12246 6968 AD 3A AC			lda AROUND
 12247 696B 29 83			and #$83
 12248 696D C9 82			cmp #$82
 12249 696F D0 0A			jne l_1F18
 12250 6971 A9 11			lda #$11
 12251 6973 8D 38 AC			sta DEFLECT
 12252 6976 A9 00			lda #$00
 12253 6978 8D 39 AC			sta DEFLECT+1
 12254 697B			l_1F18
 12255
 12256 				; optimize OK (vservice.pas), line = 1945
 12257
 12258 697B A9 05			lda #$05
 12259 697D 8D 44 AC			sta EMERGENCY
 12260
 12261 				; optimize OK (vservice.pas), line = 1946
 12262
 12263 6980 AD 22 AC			lda YB
 12264 6983 38 E9 01			sub #$01
 12265 6986 8D 0E AC			sta SHOOT_BLOCK.YB
 12266 6989 AD 23 AC			lda YB+1
 12267 698C E9 00			sbc #$00
 12268 698E 8D 0F AC			sta SHOOT_BLOCK.YB+1
 12269 6991 AD 20 AC			lda XB
 12270 6994 38 E9 01			sub #$01
 12271 6997 8D 0C AC			sta SHOOT_BLOCK.XB
 12272 699A AD 21 AC			lda XB+1
 12273 699D E9 00			sbc #$00
 12274 699F 8D 0D AC			sta SHOOT_BLOCK.XB+1
 12275 69A2 AD 18 AC			lda BALL
 12276 69A5 8D 10 AC			sta SHOOT_BLOCK.BALL
 12277 69A8 AD 19 AC			lda BALL+1
 12278 69AB 8D 11 AC			sta SHOOT_BLOCK.BALL+1
 12279 69AE 20 05 55			jsr SHOOT_BLOCK
 12280 69B1			l_1E5A
 12281
 12282 				; optimize OK (vservice.pas), line = 1951
 12283
 12284 69B1 AD 46 AC			lda TOUCH
 12285 69B4 C9 01			cmp #$01
 12286 69B6 F0 03 4C 74 6A		jne l_1F46
 12287
 12288 				; optimize OK (vservice.pas), line = 1953
 12289
 12290 69BB AD 3A AC			lda AROUND
 12291 69BE 29 0E			and #$0E
 12292 69C0 D0 0A			jne l_1F5C
 12293 69C2 A9 21			lda #$21
 12294 69C4 8D 38 AC			sta DEFLECT
 12295 69C7 A9 00			lda #$00
 12296 69C9 8D 39 AC			sta DEFLECT+1
 12297 69CC			l_1F5C
 12298
 12299 				; optimize OK (vservice.pas), line = 1954
 12300
 12301 69CC AD 3A AC			lda AROUND
 12302 69CF 29 0E			and #$0E
 12303 69D1 C9 02			cmp #$02
 12304 69D3 D0 0A			jne l_1F78
 12305 69D5 A9 20			lda #$20
 12306 69D7 8D 38 AC			sta DEFLECT
 12307 69DA A9 00			lda #$00
 12308 69DC 8D 39 AC			sta DEFLECT+1
 12309 69DF			l_1F78
 12310
 12311 				; optimize OK (vservice.pas), line = 1955
 12312
 12313 69DF AD 3A AC			lda AROUND
 12314 69E2 29 0E			and #$0E
 12315 69E4 C9 04			cmp #$04
 12316 69E6 D0 0A			jne l_1F94
 12317 69E8 A9 33			lda #$33
 12318 69EA 8D 38 AC			sta DEFLECT
 12319 69ED A9 00			lda #$00
 12320 69EF 8D 39 AC			sta DEFLECT+1
 12321 69F2			l_1F94
 12322
 12323 				; optimize OK (vservice.pas), line = 1956
 12324
 12325 69F2 AD 3A AC			lda AROUND
 12326 69F5 29 0E			and #$0E
 12327 69F7 C9 06			cmp #$06
 12328 69F9 D0 0A			jne l_1FB0
 12329 69FB A9 22			lda #$22
 12330 69FD 8D 38 AC			sta DEFLECT
 12331 6A00 A9 00			lda #$00
 12332 6A02 8D 39 AC			sta DEFLECT+1
 12333 6A05			l_1FB0
 12334
 12335 				; optimize OK (vservice.pas), line = 1957
 12336
 12337 6A05 AD 3A AC			lda AROUND
 12338 6A08 29 0E			and #$0E
 12339 6A0A C9 08			cmp #$08
 12340 6A0C D0 0A			jne l_1FCC
 12341 6A0E A9 01			lda #$01
 12342 6A10 8D 38 AC			sta DEFLECT
 12343 6A13 A9 00			lda #$00
 12344 6A15 8D 39 AC			sta DEFLECT+1
 12345 6A18			l_1FCC
 12346
 12347 				; optimize OK (vservice.pas), line = 1958
 12348
 12349 6A18 AD 3A AC			lda AROUND
 12350 6A1B 29 0E			and #$0E
 12351 6A1D C9 0A			cmp #$0A
 12352 6A1F D0 0A			jne l_1FE8
 12353 6A21 A9 21			lda #$21
 12354 6A23 8D 38 AC			sta DEFLECT
 12355 6A26 A9 00			lda #$00
 12356 6A28 8D 39 AC			sta DEFLECT+1
 12357 6A2B			l_1FE8
 12358
 12359 				; optimize OK (vservice.pas), line = 1959
 12360
 12361 6A2B AD 3A AC			lda AROUND
 12362 6A2E 29 0E			and #$0E
 12363 6A30 C9 0C			cmp #$0C
 12364 6A32 D0 0A			jne l_2004
 12365 6A34 A9 11			lda #$11
 12366 6A36 8D 38 AC			sta DEFLECT
 12367 6A39 A9 00			lda #$00
 12368 6A3B 8D 39 AC			sta DEFLECT+1
 12369 6A3E			l_2004
 12370
 12371 				; optimize OK (vservice.pas), line = 1961
 12372
 12373 6A3E A9 08			lda #$08
 12374 6A40 8D 44 AC			sta EMERGENCY
 12375
 12376 				; optimize OK (vservice.pas), line = 1962
 12377
 12378 6A43 AD 22 AC			lda YB
 12379 6A46 38 E9 01			sub #$01
 12380 6A49 8D 0E AC			sta SHOOT_BLOCK.YB
 12381 6A4C AD 23 AC			lda YB+1
 12382 6A4F E9 00			sbc #$00
 12383 6A51 8D 0F AC			sta SHOOT_BLOCK.YB+1
 12384 6A54 AD 20 AC			lda XB
 12385 6A57 18 69 01			add #$01
 12386 6A5A 8D 0C AC			sta SHOOT_BLOCK.XB
 12387 6A5D AD 21 AC			lda XB+1
 12388 6A60 69 00			adc #$00
 12389 6A62 8D 0D AC			sta SHOOT_BLOCK.XB+1
 12390 6A65 AD 18 AC			lda BALL
 12391 6A68 8D 10 AC			sta SHOOT_BLOCK.BALL
 12392 6A6B AD 19 AC			lda BALL+1
 12393 6A6E 8D 11 AC			sta SHOOT_BLOCK.BALL+1
 12394 6A71 20 05 55			jsr SHOOT_BLOCK
 12395 6A74			l_1F46
 12396
 12397 				; optimize OK (vservice.pas), line = 1965
 12398
 12399 6A74 AD 46 AC			lda TOUCH
 12400 6A77 C9 02			cmp #$02
 12401 6A79 F0 03 4C 37 6B		jne l_2032
 12402
 12403 				; optimize OK (vservice.pas), line = 1967
 12404
 12405 6A7E AD 3A AC			lda AROUND
 12406 6A81 29 E0			and #$E0
 12407 6A83 D0 0A			jne l_2048
 12408 6A85 A9 12			lda #$12
 12409 6A87 8D 38 AC			sta DEFLECT
 12410 6A8A A9 00			lda #$00
 12411 6A8C 8D 39 AC			sta DEFLECT+1
 12412 6A8F			l_2048
 12413
 12414 				; optimize OK (vservice.pas), line = 1968
 12415
 12416 6A8F AD 3A AC			lda AROUND
 12417 6A92 29 E0			and #$E0
 12418 6A94 C9 20			cmp #$20
 12419 6A96 D0 0A			jne l_2064
 12420 6A98 A9 10			lda #$10
 12421 6A9A 8D 38 AC			sta DEFLECT
 12422 6A9D A9 00			lda #$00
 12423 6A9F 8D 39 AC			sta DEFLECT+1
 12424 6AA2			l_2064
 12425
 12426 				; optimize OK (vservice.pas), line = 1969
 12427
 12428 6AA2 AD 3A AC			lda AROUND
 12429 6AA5 29 E0			and #$E0
 12430 6AA7 C9 40			cmp #$40
 12431 6AA9 D0 0A			jne l_2080
 12432 6AAB A9 33			lda #$33
 12433 6AAD 8D 38 AC			sta DEFLECT
 12434 6AB0 A9 00			lda #$00
 12435 6AB2 8D 39 AC			sta DEFLECT+1
 12436 6AB5			l_2080
 12437
 12438 				; optimize OK (vservice.pas), line = 1970
 12439
 12440 6AB5 AD 3A AC			lda AROUND
 12441 6AB8 29 E0			and #$E0
 12442 6ABA C9 60			cmp #$60
 12443 6ABC D0 0A			jne l_209C
 12444 6ABE A9 11			lda #$11
 12445 6AC0 8D 38 AC			sta DEFLECT
 12446 6AC3 A9 00			lda #$00
 12447 6AC5 8D 39 AC			sta DEFLECT+1
 12448 6AC8			l_209C
 12449
 12450 				; optimize OK (vservice.pas), line = 1971
 12451
 12452 6AC8 AD 3A AC			lda AROUND
 12453 6ACB 29 E0			and #$E0
 12454 6ACD C9 80			cmp #$80
 12455 6ACF D0 0A			jne l_20B8
 12456 6AD1 A9 02			lda #$02
 12457 6AD3 8D 38 AC			sta DEFLECT
 12458 6AD6 A9 00			lda #$00
 12459 6AD8 8D 39 AC			sta DEFLECT+1
 12460 6ADB			l_20B8
 12461
 12462 				; optimize OK (vservice.pas), line = 1972
 12463
 12464 6ADB AD 3A AC			lda AROUND
 12465 6ADE 29 E0			and #$E0
 12466 6AE0 C9 A0			cmp #$A0
 12467 6AE2 D0 0A			jne l_20D4
 12468 6AE4 A9 12			lda #$12
 12469 6AE6 8D 38 AC			sta DEFLECT
 12470 6AE9 A9 00			lda #$00
 12471 6AEB 8D 39 AC			sta DEFLECT+1
 12472 6AEE			l_20D4
 12473
 12474 				; optimize OK (vservice.pas), line = 1973
 12475
 12476 6AEE AD 3A AC			lda AROUND
 12477 6AF1 29 E0			and #$E0
 12478 6AF3 C9 C0			cmp #$C0
 12479 6AF5 D0 0A			jne l_20F0
 12480 6AF7 A9 22			lda #$22
 12481 6AF9 8D 38 AC			sta DEFLECT
 12482 6AFC A9 00			lda #$00
 12483 6AFE 8D 39 AC			sta DEFLECT+1
 12484 6B01			l_20F0
 12485
 12486 				; optimize OK (vservice.pas), line = 1975
 12487
 12488 6B01 A9 06			lda #$06
 12489 6B03 8D 44 AC			sta EMERGENCY
 12490
 12491 				; optimize OK (vservice.pas), line = 1976
 12492
 12493 6B06 AD 22 AC			lda YB
 12494 6B09 18 69 01			add #$01
 12495 6B0C 8D 0E AC			sta SHOOT_BLOCK.YB
 12496 6B0F AD 23 AC			lda YB+1
 12497 6B12 69 00			adc #$00
 12498 6B14 8D 0F AC			sta SHOOT_BLOCK.YB+1
 12499 6B17 AD 20 AC			lda XB
 12500 6B1A 38 E9 01			sub #$01
 12501 6B1D 8D 0C AC			sta SHOOT_BLOCK.XB
 12502 6B20 AD 21 AC			lda XB+1
 12503 6B23 E9 00			sbc #$00
 12504 6B25 8D 0D AC			sta SHOOT_BLOCK.XB+1
 12505 6B28 AD 18 AC			lda BALL
 12506 6B2B 8D 10 AC			sta SHOOT_BLOCK.BALL
 12507 6B2E AD 19 AC			lda BALL+1
 12508 6B31 8D 11 AC			sta SHOOT_BLOCK.BALL+1
 12509 6B34 20 05 55			jsr SHOOT_BLOCK
 12510 6B37			l_2032
 12511
 12512 				; optimize OK (vservice.pas), line = 1979
 12513
 12514 6B37 AD 46 AC			lda TOUCH
 12515 6B3A C9 03			cmp #$03
 12516 6B3C F0 03 4C FA 6B		jne l_211E
 12517
 12518 				; optimize OK (vservice.pas), line = 1981
 12519
 12520 6B41 AD 3A AC			lda AROUND
 12521 6B44 29 38			and #$38
 12522 6B46 D0 0A			jne l_2134
 12523 6B48 A9 22			lda #$22
 12524 6B4A 8D 38 AC			sta DEFLECT
 12525 6B4D A9 00			lda #$00
 12526 6B4F 8D 39 AC			sta DEFLECT+1
 12527 6B52			l_2134
 12528
 12529 				; optimize OK (vservice.pas), line = 1982
 12530
 12531 6B52 AD 3A AC			lda AROUND
 12532 6B55 29 38			and #$38
 12533 6B57 C9 08			cmp #$08
 12534 6B59 D0 0A			jne l_2150
 12535 6B5B A9 02			lda #$02
 12536 6B5D 8D 38 AC			sta DEFLECT
 12537 6B60 A9 00			lda #$00
 12538 6B62 8D 39 AC			sta DEFLECT+1
 12539 6B65			l_2150
 12540
 12541 				; optimize OK (vservice.pas), line = 1983
 12542
 12543 6B65 AD 3A AC			lda AROUND
 12544 6B68 29 38			and #$38
 12545 6B6A C9 10			cmp #$10
 12546 6B6C D0 0A			jne l_216C
 12547 6B6E A9 33			lda #$33
 12548 6B70 8D 38 AC			sta DEFLECT
 12549 6B73 A9 00			lda #$00
 12550 6B75 8D 39 AC			sta DEFLECT+1
 12551 6B78			l_216C
 12552
 12553 				; optimize OK (vservice.pas), line = 1984
 12554
 12555 6B78 AD 3A AC			lda AROUND
 12556 6B7B 29 38			and #$38
 12557 6B7D C9 18			cmp #$18
 12558 6B7F D0 0A			jne l_2188
 12559 6B81 A9 12			lda #$12
 12560 6B83 8D 38 AC			sta DEFLECT
 12561 6B86 A9 00			lda #$00
 12562 6B88 8D 39 AC			sta DEFLECT+1
 12563 6B8B			l_2188
 12564
 12565 				; optimize OK (vservice.pas), line = 1985
 12566
 12567 6B8B AD 3A AC			lda AROUND
 12568 6B8E 29 38			and #$38
 12569 6B90 C9 20			cmp #$20
 12570 6B92 D0 0A			jne l_21A4
 12571 6B94 A9 20			lda #$20
 12572 6B96 8D 38 AC			sta DEFLECT
 12573 6B99 A9 00			lda #$00
 12574 6B9B 8D 39 AC			sta DEFLECT+1
 12575 6B9E			l_21A4
 12576
 12577 				; optimize OK (vservice.pas), line = 1986
 12578
 12579 6B9E AD 3A AC			lda AROUND
 12580 6BA1 29 38			and #$38
 12581 6BA3 C9 28			cmp #$28
 12582 6BA5 D0 0A			jne l_21C0
 12583 6BA7 A9 22			lda #$22
 12584 6BA9 8D 38 AC			sta DEFLECT
 12585 6BAC A9 00			lda #$00
 12586 6BAE 8D 39 AC			sta DEFLECT+1
 12587 6BB1			l_21C0
 12588
 12589 				; optimize OK (vservice.pas), line = 1987
 12590
 12591 6BB1 AD 3A AC			lda AROUND
 12592 6BB4 29 38			and #$38
 12593 6BB6 C9 30			cmp #$30
 12594 6BB8 D0 0A			jne l_21DC
 12595 6BBA A9 21			lda #$21
 12596 6BBC 8D 38 AC			sta DEFLECT
 12597 6BBF A9 00			lda #$00
 12598 6BC1 8D 39 AC			sta DEFLECT+1
 12599 6BC4			l_21DC
 12600
 12601 				; optimize OK (vservice.pas), line = 1989
 12602
 12603 6BC4 A9 07			lda #$07
 12604 6BC6 8D 44 AC			sta EMERGENCY
 12605
 12606 				; optimize OK (vservice.pas), line = 1990
 12607
 12608 6BC9 AD 22 AC			lda YB
 12609 6BCC 18 69 01			add #$01
 12610 6BCF 8D 0E AC			sta SHOOT_BLOCK.YB
 12611 6BD2 AD 23 AC			lda YB+1
 12612 6BD5 69 00			adc #$00
 12613 6BD7 8D 0F AC			sta SHOOT_BLOCK.YB+1
 12614 6BDA AD 20 AC			lda XB
 12615 6BDD 18 69 01			add #$01
 12616 6BE0 8D 0C AC			sta SHOOT_BLOCK.XB
 12617 6BE3 AD 21 AC			lda XB+1
 12618 6BE6 69 00			adc #$00
 12619 6BE8 8D 0D AC			sta SHOOT_BLOCK.XB+1
 12620 6BEB AD 18 AC			lda BALL
 12621 6BEE 8D 10 AC			sta SHOOT_BLOCK.BALL
 12622 6BF1 AD 19 AC			lda BALL+1
 12623 6BF4 8D 11 AC			sta SHOOT_BLOCK.BALL+1
 12624 6BF7 20 05 55			jsr SHOOT_BLOCK
 12625 6BFA			l_211E
 12626
 12627 				; optimize OK (vservice.pas), line = 1996
 12628
 12629 6BFA AD 38 AC			lda DEFLECT
 12630 6BFD 85 9F			sta :STACKORIGIN+9
 12631 6BFF A0 00			ldy #$00
 12632 6C01 AD 39 AC			lda DEFLECT+1
 12633 6C04 10 01			spl
 12634 6C06 88				dey
 12635 6C07 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 12636 6C09 84 BF			sty :STACKORIGIN+STACKWIDTH*2+9
 12637 6C0B 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
 12638 6C0D 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 12639 6C0F 66 9F			ror :STACKORIGIN+9
 12640 6C11 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
 12641 6C13 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 12642 6C15 66 9F			ror :STACKORIGIN+9
 12643 6C17 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
 12644 6C19 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 12645 6C1B 66 9F			ror :STACKORIGIN+9
 12646 6C1D 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
 12647 6C1F 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 12648 6C21 66 9F			ror :STACKORIGIN+9
 12649 6C23 A5 9F			lda :STACKORIGIN+9
 12650 6C25 8D 40 AC			sta MYX
 12651 6C28 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 12652 6C2A 8D 41 AC			sta MYX+1
 12653
 12654 				; optimize OK (vservice.pas), line = 1997
 12655
 12656 6C2D AD 38 AC			lda DEFLECT
 12657 6C30 29 0F			and #$0F
 12658 6C32 8D 42 AC			sta MYY
 12659 6C35 A9 00			lda #$00
 12660 6C37 8D 43 AC			sta MYY+1
 12661
 12662 				; optimize OK (vservice.pas), line = 1999
 12663
 12664 6C3A AD 41 AC			lda MYX+1
 12665 6C3D D0 05			bne @+
 12666 6C3F AD 40 AC			lda MYX
 12667 6C42 C9 01			cmp #$01
 12668 				@
 12669 6C44 D0 50			jne l_221B
 12670 6C46 AC 18 AC 84 84 AC + 	mwy BALL :bp2
 12671 6C50 A0 10			ldy #BALL.SPEEDX-DATAORIGIN
 12672 6C52 B1 84			lda (:bp2),y
 12673 6C54 85 8A			sta SYSTEM.ABS.@010184000.X
 12674 6C56 C8				iny
 12675 6C57 B1 84			lda (:bp2),y
 12676 6C59 85 8B			sta SYSTEM.ABS.@010184000.X+1
 12677 6C5B 20 6D 1B			jsr SYSTEM.ABS.@010184000
 12678 6C5E E8				inx
 12679 6C5F A5 92 95 96			mva SYSTEM.ABS.@010184000.RESULT :STACKORIGIN,x
 12680 6C63 A5 93 95 A6			mva SYSTEM.ABS.@010184000.RESULT+1 :STACKORIGIN+STACKWIDTH,x
 12681 6C67 A9 00			lda #$00
 12682 6C69 38 F5 96			sub :STACKORIGIN,x
 12683 6C6C 95 96			sta :STACKORIGIN,x
 12684 6C6E A9 00			lda #$00
 12685 6C70 F5 A6			sbc :STACKORIGIN+STACKWIDTH,x
 12686 6C72 95 A6			sta :STACKORIGIN+STACKWIDTH,x
 12687 6C74 A9 00			lda #$00
 12688 6C76 E9 00			sbc #$00
 12689 6C78 95 B6			sta :STACKORIGIN+STACKWIDTH*2,x
 12690 6C7A A9 00			lda #$00
 12691 6C7C E9 00			sbc #$00
 12692 6C7E 95 C6			sta :STACKORIGIN+STACKWIDTH*3,x
 12693 6C80 AC 18 AC 84 84 AC + 	mwy BALL :bp2
 12694 6C8A A0 10			ldy #BALL.SPEEDX-DATAORIGIN
 12695 6C8C B5 96			lda :STACKORIGIN,x
 12696 6C8E 91 84			sta (:bp2),y
 12697 6C90 C8				iny
 12698 6C91 B5 A6			lda :STACKORIGIN+STACKWIDTH,x
 12699 6C93 91 84			sta (:bp2),y
 12700 6C95 CA				dex
 12701 6C96			l_221B
 12702
 12703 				; optimize OK (vservice.pas), line = 2000
 12704
 12705 6C96 AD 41 AC			lda MYX+1
 12706 6C99 D0 05			bne @+
 12707 6C9B AD 40 AC			lda MYX
 12708 6C9E C9 02			cmp #$02
 12709 				@
 12710 6CA0 D0 2D			jne l_2238
 12711 6CA2 AC 18 AC 84 84 AC + 	mwy BALL :bp2
 12712 6CAC A0 10			ldy #BALL.SPEEDX-DATAORIGIN
 12713 6CAE B1 84			lda (:bp2),y
 12714 6CB0 85 8A			sta SYSTEM.ABS.@010184000.X
 12715 6CB2 C8				iny
 12716 6CB3 B1 84			lda (:bp2),y
 12717 6CB5 85 8B			sta SYSTEM.ABS.@010184000.X+1
 12718 6CB7 20 6D 1B			jsr SYSTEM.ABS.@010184000
 12719 6CBA AC 18 AC 84 84 AC + 	mwy BALL :bp2
 12720 6CC4 A0 10			ldy #BALL.SPEEDX-DATAORIGIN
 12721 6CC6 A5 92			lda SYSTEM.ABS.@010184000.RESULT
 12722 6CC8 91 84			sta (:bp2),y
 12723 6CCA C8				iny
 12724 6CCB A5 93			lda SYSTEM.ABS.@010184000.RESULT+1
 12725 6CCD 91 84			sta (:bp2),y
 12726 6CCF			l_2238
 12727
 12728 				; optimize OK (vservice.pas), line = 2001
 12729
 12730 6CCF AD 41 AC			lda MYX+1
 12731 6CD2 D0 05			bne @+
 12732 6CD4 AD 40 AC			lda MYX
 12733 6CD7 C9 03			cmp #$03
 12734 				@
 12735 6CD9 D0 25			jne l_2252
 12736 6CDB AC 18 AC 84 84 AC + 	mwy BALL :bp2
 12737 6CE5 A0 10			ldy #BALL.SPEEDX-DATAORIGIN
 12738 6CE7 A9 00			lda #$00
 12739 6CE9 38 F1 84			sub (:bp2),y
 12740 6CEC 85 9F			sta :STACKORIGIN+9
 12741 6CEE C8				iny
 12742 6CEF A9 00			lda #$00
 12743 6CF1 F1 84			sbc (:bp2),y
 12744 6CF3 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 12745 6CF5 A0 10			ldy #BALL.SPEEDX-DATAORIGIN
 12746 6CF7 A5 9F			lda :STACKORIGIN+9
 12747 6CF9 91 84			sta (:bp2),y
 12748 6CFB C8				iny
 12749 6CFC A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 12750 6CFE 91 84			sta (:bp2),y
 12751 6D00			l_2252
 12752
 12753 				; optimize OK (vservice.pas), line = 2003
 12754
 12755 6D00 AD 43 AC			lda MYY+1
 12756 6D03 D0 05			bne @+
 12757 6D05 AD 42 AC			lda MYY
 12758 6D08 C9 01			cmp #$01
 12759 				@
 12760 6D0A D0 50			jne l_226E
 12761 6D0C AC 18 AC 84 84 AC + 	mwy BALL :bp2
 12762 6D16 A0 12			ldy #BALL.SPEEDY-DATAORIGIN
 12763 6D18 B1 84			lda (:bp2),y
 12764 6D1A 85 8A			sta SYSTEM.ABS.@010184000.X
 12765 6D1C C8				iny
 12766 6D1D B1 84			lda (:bp2),y
 12767 6D1F 85 8B			sta SYSTEM.ABS.@010184000.X+1
 12768 6D21 20 6D 1B			jsr SYSTEM.ABS.@010184000
 12769 6D24 E8				inx
 12770 6D25 A5 92 95 96			mva SYSTEM.ABS.@010184000.RESULT :STACKORIGIN,x
 12771 6D29 A5 93 95 A6			mva SYSTEM.ABS.@010184000.RESULT+1 :STACKORIGIN+STACKWIDTH,x
 12772 6D2D A9 00			lda #$00
 12773 6D2F 38 F5 96			sub :STACKORIGIN,x
 12774 6D32 95 96			sta :STACKORIGIN,x
 12775 6D34 A9 00			lda #$00
 12776 6D36 F5 A6			sbc :STACKORIGIN+STACKWIDTH,x
 12777 6D38 95 A6			sta :STACKORIGIN+STACKWIDTH,x
 12778 6D3A A9 00			lda #$00
 12779 6D3C E9 00			sbc #$00
 12780 6D3E 95 B6			sta :STACKORIGIN+STACKWIDTH*2,x
 12781 6D40 A9 00			lda #$00
 12782 6D42 E9 00			sbc #$00
 12783 6D44 95 C6			sta :STACKORIGIN+STACKWIDTH*3,x
 12784 6D46 AC 18 AC 84 84 AC + 	mwy BALL :bp2
 12785 6D50 A0 12			ldy #BALL.SPEEDY-DATAORIGIN
 12786 6D52 B5 96			lda :STACKORIGIN,x
 12787 6D54 91 84			sta (:bp2),y
 12788 6D56 C8				iny
 12789 6D57 B5 A6			lda :STACKORIGIN+STACKWIDTH,x
 12790 6D59 91 84			sta (:bp2),y
 12791 6D5B CA				dex
 12792 6D5C			l_226E
 12793
 12794 				; optimize OK (vservice.pas), line = 2004
 12795
 12796 6D5C AD 43 AC			lda MYY+1
 12797 6D5F D0 05			bne @+
 12798 6D61 AD 42 AC			lda MYY
 12799 6D64 C9 02			cmp #$02
 12800 				@
 12801 6D66 D0 2D			jne l_228B
 12802 6D68 AC 18 AC 84 84 AC + 	mwy BALL :bp2
 12803 6D72 A0 12			ldy #BALL.SPEEDY-DATAORIGIN
 12804 6D74 B1 84			lda (:bp2),y
 12805 6D76 85 8A			sta SYSTEM.ABS.@010184000.X
 12806 6D78 C8				iny
 12807 6D79 B1 84			lda (:bp2),y
 12808 6D7B 85 8B			sta SYSTEM.ABS.@010184000.X+1
 12809 6D7D 20 6D 1B			jsr SYSTEM.ABS.@010184000
 12810 6D80 AC 18 AC 84 84 AC + 	mwy BALL :bp2
 12811 6D8A A0 12			ldy #BALL.SPEEDY-DATAORIGIN
 12812 6D8C A5 92			lda SYSTEM.ABS.@010184000.RESULT
 12813 6D8E 91 84			sta (:bp2),y
 12814 6D90 C8				iny
 12815 6D91 A5 93			lda SYSTEM.ABS.@010184000.RESULT+1
 12816 6D93 91 84			sta (:bp2),y
 12817 6D95			l_228B
 12818
 12819 				; optimize OK (vservice.pas), line = 2005
 12820
 12821 6D95 AD 43 AC			lda MYY+1
 12822 6D98 D0 05			bne @+
 12823 6D9A AD 42 AC			lda MYY
 12824 6D9D C9 03			cmp #$03
 12825 				@
 12826 6D9F D0 25			jne l_22A5
 12827 6DA1 AC 18 AC 84 84 AC + 	mwy BALL :bp2
 12828 6DAB A0 12			ldy #BALL.SPEEDY-DATAORIGIN
 12829 6DAD A9 00			lda #$00
 12830 6DAF 38 F1 84			sub (:bp2),y
 12831 6DB2 85 9F			sta :STACKORIGIN+9
 12832 6DB4 C8				iny
 12833 6DB5 A9 00			lda #$00
 12834 6DB7 F1 84			sbc (:bp2),y
 12835 6DB9 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 12836 6DBB A0 12			ldy #BALL.SPEEDY-DATAORIGIN
 12837 6DBD A5 9F			lda :STACKORIGIN+9
 12838 6DBF 91 84			sta (:bp2),y
 12839 6DC1 C8				iny
 12840 6DC2 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 12841 6DC4 91 84			sta (:bp2),y
 12842 6DC6			l_22A5
 12843 6DC6			l_1CD6
 12844 6DC6			l_1A1D
 12845
 12846 				; optimize OK (vservice.pas), line = 2015
 12847
 12848 6DC6 AC 18 AC 84 84 AC + 	mwy BALL :bp2
 12849 6DD0 A0 16			ldy #BALL.BRWHIT-DATAORIGIN
 12850 6DD2 B1 84			lda (:bp2),y
 12851 6DD4 C9 65			cmp #$65
 12852 6DD6 B0 03 4C FA 6F		jcc l_22C6
 12853
 12854 				; optimize OK (vservice.pas), line = 2018
 12855
 12856 6DDB AD 44 AC			lda EMERGENCY
 12857 6DDE C9 FF			cmp #$FF
 12858 6DE0 D0 05			jne l_22D9
 12859 6DE2 A9 04			lda #$04
 12860 6DE4 20 24 26			jsr FATAL_ERROR
 12861 6DE7			l_22D9
 12862
 12863 				; optimize OK (vservice.pas), line = 2020
 12864
 12865 6DE7 AC 44 AC			ldy EMERGENCY
 12866 6DEA B9 6D 10			lda adr.EMERG_DEV,y
 12867 6DED 8D 3C AC			sta MIMAX
 12868 6DF0 A9 00			lda #$00
 12869 6DF2 8D 3D AC			sta MIMAX+1
 12870
 12871 				; optimize OK (vservice.pas), line = 2046
 12872
 12873 6DF5 AD 44 AC			lda EMERGENCY
 12874 6DF8 8D 59 AC			sta @CASETMP_0008
 12875 6DFB C9 05			cmp #$05
 12876 6DFD D0 2F			jne l_22F2
 12877 				@
 12878
 12879 				; optimize OK (vservice.pas), line = 2049
 12880
 12881 6DFF AD 4D AC			lda adr.ADJW+$06
 12882 6E02 0D 4E AC			ora adr.ADJW+1+$06
 12883 6E05 D0 0D			jne l_2308
 12884 6E07 AD 3C AC			lda MIMAX
 12885 6E0A 29 0F			and #$0F
 12886 6E0C 8D 3C AC			sta MIMAX
 12887 6E0F A9 00			lda #$00
 12888 6E11 8D 3D AC			sta MIMAX+1
 12889 6E14			l_2308
 12890
 12891 				; optimize OK (vservice.pas), line = 2050
 12892
 12893 6E14 AD 49 AC			lda adr.ADJW+$02
 12894 6E17 0D 4A AC			ora adr.ADJW+1+$02
 12895 6E1A D0 0F			jne l_232E
 12896 6E1C AD 3C AC			lda MIMAX
 12897 6E1F 29 F0			and #$F0
 12898 6E21 09 03			ora #$03
 12899 6E23 8D 3C AC			sta MIMAX
 12900 6E26 A9 00			lda #$00
 12901 6E28 8D 3D AC			sta MIMAX+1
 12902 6E2B			l_232E
 12903 6E2B 4C CA 6E			jmp a_0008
 12904 6E2E			l_22F2
 12905 6E2E C9 06			cmp #$06
 12906 6E30 D0 31			jne l_2345
 12907
 12908 				; optimize OK (vservice.pas), line = 2054
 12909
 12910 6E32 AD 49 AC			lda adr.ADJW+$02
 12911 6E35 0D 4A AC			ora adr.ADJW+1+$02
 12912 6E38 D0 0F			jne l_235B
 12913 6E3A AD 3C AC			lda MIMAX
 12914 6E3D 29 0F			and #$0F
 12915 6E3F 09 10			ora #$10
 12916 6E41 8D 3C AC			sta MIMAX
 12917 6E44 A9 00			lda #$00
 12918 6E46 8D 3D AC			sta MIMAX+1
 12919 6E49			l_235B
 12920
 12921 				; optimize OK (vservice.pas), line = 2055
 12922
 12923 6E49 AD 51 AC			lda adr.ADJW+$0A
 12924 6E4C 0D 52 AC			ora adr.ADJW+1+$0A
 12925 6E4F D0 0F			jne l_2381
 12926 6E51 AD 3C AC			lda MIMAX
 12927 6E54 29 F0			and #$F0
 12928 6E56 09 04			ora #$04
 12929 6E58 8D 3C AC			sta MIMAX
 12930 6E5B A9 00			lda #$00
 12931 6E5D 8D 3D AC			sta MIMAX+1
 12932 6E60			l_2381
 12933 6E60 4C CA 6E			jmp a_0008
 12934 6E63			l_2345
 12935 6E63 C9 07			cmp #$07
 12936 6E65 D0 31			jne l_2398
 12937
 12938 				; optimize OK (vservice.pas), line = 2059
 12939
 12940 6E67 AD 51 AC			lda adr.ADJW+$0A
 12941 6E6A 0D 52 AC			ora adr.ADJW+1+$0A
 12942 6E6D D0 0F			jne l_23AE
 12943 6E6F AD 3C AC			lda MIMAX
 12944 6E72 29 0F			and #$0F
 12945 6E74 09 20			ora #$20
 12946 6E76 8D 3C AC			sta MIMAX
 12947 6E79 A9 00			lda #$00
 12948 6E7B 8D 3D AC			sta MIMAX+1
 12949 6E7E			l_23AE
 12950
 12951 				; optimize OK (vservice.pas), line = 2060
 12952
 12953 6E7E AD 55 AC			lda adr.ADJW+$0E
 12954 6E81 0D 56 AC			ora adr.ADJW+1+$0E
 12955 6E84 D0 0F			jne l_23D4
 12956 6E86 AD 3C AC			lda MIMAX
 12957 6E89 29 F0			and #$F0
 12958 6E8B 09 05			ora #$05
 12959 6E8D 8D 3C AC			sta MIMAX
 12960 6E90 A9 00			lda #$00
 12961 6E92 8D 3D AC			sta MIMAX+1
 12962 6E95			l_23D4
 12963 6E95 4C CA 6E			jmp a_0008
 12964 6E98			l_2398
 12965 6E98 C9 08			cmp #$08
 12966 6E9A D0 2E			jne l_23EB
 12967
 12968 				; optimize OK (vservice.pas), line = 2064
 12969
 12970 6E9C AD 55 AC			lda adr.ADJW+$0E
 12971 6E9F 0D 56 AC			ora adr.ADJW+1+$0E
 12972 6EA2 D0 0F			jne l_2401
 12973 6EA4 AD 3C AC			lda MIMAX
 12974 6EA7 29 0F			and #$0F
 12975 6EA9 09 30			ora #$30
 12976 6EAB 8D 3C AC			sta MIMAX
 12977 6EAE A9 00			lda #$00
 12978 6EB0 8D 3D AC			sta MIMAX+1
 12979 6EB3			l_2401
 12980
 12981 				; optimize OK (vservice.pas), line = 2065
 12982
 12983 6EB3 AD 4D AC			lda adr.ADJW+$06
 12984 6EB6 0D 4E AC			ora adr.ADJW+1+$06
 12985 6EB9 D0 0F			jne l_2427
 12986 6EBB AD 3C AC			lda MIMAX
 12987 6EBE 29 F0			and #$F0
 12988 6EC0 09 06			ora #$06
 12989 6EC2 8D 3C AC			sta MIMAX
 12990 6EC5 A9 00			lda #$00
 12991 6EC7 8D 3D AC			sta MIMAX+1
 12992 6ECA			l_2427
 12993 6ECA			l_23EB
 12994 6ECA			a_0008
 12995
 12996 				; --- RepeatUntilProlog
 12997 6ECA			l_243E
 12998
 12999 				; optimize OK (vservice.pas), line = 2072
 13000
 13001 6ECA AD 3C AC			lda MIMAX
 13002 6ECD 85 A0			sta :STACKORIGIN+10
 13003 6ECF AD 3D AC			lda MIMAX+1
 13004 6ED2 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 13005 6ED4 46 B0			lsr :STACKORIGIN+STACKWIDTH+10
 13006 6ED6 66 A0			ror :STACKORIGIN+10
 13007 6ED8 46 B0			lsr :STACKORIGIN+STACKWIDTH+10
 13008 6EDA 66 A0			ror :STACKORIGIN+10
 13009 6EDC 46 B0			lsr :STACKORIGIN+STACKWIDTH+10
 13010 6EDE 66 A0			ror :STACKORIGIN+10
 13011 6EE0 46 B0			lsr :STACKORIGIN+STACKWIDTH+10
 13012 6EE2 66 A0			ror :STACKORIGIN+10
 13013 6EE4 A9 5A			lda #$5A
 13014 6EE6 85 8E			sta :ecx
 13015 6EE8 A9 00			lda #$00
 13016 6EEA 85 8F			sta :ecx+1
 13017 6EEC A5 A0			lda :STACKORIGIN+10
 13018 6EEE 85 86			sta :eax
 13019 6EF0 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
 13020 6EF2 85 87			sta :eax+1
 13021 					.ifdef fmulinit
 13022 					fmulu_16
 13023 					els
 13024 6EF4 20 FA 12			imulCX
 13025 					eif
 13026 6EF7 A5 86			lda :eax
 13027 6EF9 8D 28 AC			sta LX
 13028 6EFC A5 87			lda :eax+1
 13029 6EFE 8D 29 AC			sta LX+1
 13030
 13031 				; optimize OK (vservice.pas), line = 2073
 13032
 13033 6F01 AD 3C AC			lda MIMAX
 13034 6F04 29 0F			and #$0F
 13035 6F06 85 86			sta :eax
 13036 6F08 A9 00			lda #$00
 13037 6F0A 85 87			sta :eax+1
 13038 6F0C A9 5A			lda #$5A
 13039 6F0E 85 8E			sta :ecx
 13040 6F10 A9 00			lda #$00
 13041 6F12 85 8F			sta :ecx+1
 13042 					.ifdef fmulinit
 13043 					fmulu_16
 13044 					els
 13045 6F14 20 3E 13			imulCX_AL
 13046 					eif
 13047 6F17 A5 86			lda :eax
 13048 6F19 8D 2C AC			sta MX
 13049 6F1C A5 87			lda :eax+1
 13050 6F1E 8D 2D AC			sta MX+1
 13051
 13052 				; optimize OK (vservice.pas), line = 2074
 13053
 13054 6F21 AD 2C AC			lda MX
 13055 6F24 38 ED 28 AC			sub LX
 13056 6F28 8D 63 9C			sta SYSTEM.RANDOM.@010184000.RANGE
 13057 6F2B AD 2D AC			lda MX+1
 13058 6F2E ED 29 AC			sbc LX+1
 13059 6F31 8D 64 9C			sta SYSTEM.RANDOM.@010184000.RANGE+1
 13060 6F34 20 FF 23			jsr SYSTEM.RANDOM.@010184000
 13061 6F37 AD 65 9C			lda SYSTEM.RANDOM.@010184000.RESULT
 13062 6F3A 18 6D 28 AC			add LX
 13063 6F3E 8D 3E AC			sta ANGLE
 13064 6F41 AD 66 9C			lda SYSTEM.RANDOM.@010184000.RESULT+1
 13065 6F44 6D 29 AC			adc LX+1
 13066 6F47 8D 3F AC			sta ANGLE+1
 13067
 13068 				; optimize OK (vservice.pas), line = 2077
 13069
 13070 6F4A A9 5A			lda #$5A
 13071 6F4C 85 8E			sta @SMALLINT.MOD.B
 13072 6F4E A9 00			lda #$00
 13073 6F50 85 8F			sta @SMALLINT.MOD.B+1
 13074 6F52 AD 3E AC			lda ANGLE
 13075 6F55 85 86			sta @SMALLINT.MOD.A
 13076 6F57 AD 3F AC			lda ANGLE+1
 13077 6F5A 85 87			sta @SMALLINT.MOD.A+1
 13078 6F5C 20 3F 12			jsr @SMALLINT.MOD
 13079 6F5F A5 92			lda @SMALLINT.MOD.RESULT
 13080 6F61 C9 1F			cmp #$1F
 13081 6F63 A5 93			lda @SMALLINT.MOD.RESULT+1
 13082 6F65 E9 00			sbc #$00
 13083 6F67 50 02			svc
 13084 6F69 49 80			eor #$80
 13085 6F6B 10 03 4C CA 6E		jmi l_243E
 13086 6F70 A9 5A			lda #$5A
 13087 6F72 85 8E			sta @SMALLINT.MOD.B
 13088 6F74 A9 00			lda #$00
 13089 6F76 85 8F			sta @SMALLINT.MOD.B+1
 13090 6F78 AD 3E AC			lda ANGLE
 13091 6F7B 85 86			sta @SMALLINT.MOD.A
 13092 6F7D AD 3F AC			lda ANGLE+1
 13093 6F80 85 87			sta @SMALLINT.MOD.A+1
 13094 6F82 20 3F 12			jsr @SMALLINT.MOD
 13095 6F85 A5 92			lda @SMALLINT.MOD.RESULT
 13096 6F87 C9 3C			cmp #$3C
 13097 6F89 A5 93			lda @SMALLINT.MOD.RESULT+1
 13098 6F8B E9 00			sbc #$00
 13099 6F8D 50 02			svc
 13100 6F8F 49 80			eor #$80
 13101 6F91 30 03 4C CA 6E		jpl l_243E
 13102
 13103 				; optimize OK (vservice.pas), line = 2081
 13104
 13105 6F96 A9 68			lda #$68
 13106 6F98 85 8E			sta @SMALLINT.MOD.B
 13107 6F9A A9 01			lda #$01
 13108 6F9C 85 8F			sta @SMALLINT.MOD.B+1
 13109 6F9E AD 3E AC			lda ANGLE
 13110 6FA1 85 86			sta @SMALLINT.MOD.A
 13111 6FA3 AD 3F AC			lda ANGLE+1
 13112 6FA6 85 87			sta @SMALLINT.MOD.A+1
 13113 6FA8 20 3F 12			jsr @SMALLINT.MOD
 13114 6FAB A5 92			lda @SMALLINT.MOD.RESULT
 13115 6FAD 8D 7D AB			sta SET_BALL_DIRECTION.ANGLE
 13116 6FB0 A5 93			lda @SMALLINT.MOD.RESULT+1
 13117 6FB2 8D 7E AB			sta SET_BALL_DIRECTION.ANGLE+1
 13118 6FB5 AD 18 AC			lda BALL
 13119 6FB8 8D 79 AB			sta SET_BALL_DIRECTION.BALL
 13120 6FBB AD 19 AC			lda BALL+1
 13121 6FBE 8D 7A AB			sta SET_BALL_DIRECTION.BALL+1
 13122 6FC1 20 31 31			jsr SET_BALL_DIRECTION
 13123
 13124 				; optimize OK (vservice.pas), line = 2082
 13125
 13126 6FC4 AC 18 AC 84 84 AC + 	mwy BALL :bp2
 13127 6FCE A0 0C			ldy #BALL.SPEED-DATAORIGIN
 13128 6FD0 B1 84			lda (:bp2),y
 13129 6FD2 8D 6F AB			sta SET_BALL_SPEED.SPEED
 13130 6FD5 C8				iny
 13131 6FD6 B1 84			lda (:bp2),y
 13132 6FD8 8D 70 AB			sta SET_BALL_SPEED.SPEED+1
 13133 6FDB AD 18 AC			lda BALL
 13134 6FDE 8D 6B AB			sta SET_BALL_SPEED.BALL
 13135 6FE1 AD 19 AC			lda BALL+1
 13136 6FE4 8D 6C AB			sta SET_BALL_SPEED.BALL+1
 13137 6FE7 20 21 2F			jsr SET_BALL_SPEED
 13138
 13139 				; optimize OK (vservice.pas), line = 2084
 13140
 13141 6FEA AC 18 AC 84 84 AC + 	mwy BALL :bp2
 13142 6FF4 A0 16			ldy #BALL.BRWHIT-DATAORIGIN
 13143 6FF6 A9 00			lda #$00
 13144 6FF8 91 84			sta (:bp2),y
 13145 6FFA			l_22C6
 13146
 13147 				; ------------------------------------------------------------
 13148
 13149 = AC18			BALL	= DATAORIGIN+$0FFB
 13150 = 9C1D			BALL.X	= DATAORIGIN+$0000
 13151 = 9C1F			BALL.Y	= DATAORIGIN+$0002
 13152 = 9C21			BALL.FINEX	= DATAORIGIN+$0004
 13153 = 9C23			BALL.FINEY	= DATAORIGIN+$0006
 13154 = 9C25			BALL.OLDX	= DATAORIGIN+$0008
 13155 = 9C27			BALL.OLDY	= DATAORIGIN+$000A
 13156 = 9C29			BALL.SPEED	= DATAORIGIN+$000C
 13157 = 9C2B			BALL.FINESPEED	= DATAORIGIN+$000E
 13158 = 9C2D			BALL.SPEEDX	= DATAORIGIN+$0010
 13159 = 9C2F			BALL.SPEEDY	= DATAORIGIN+$0012
 13160 = 9C31			BALL.SBD	= DATAORIGIN+$0014
 13161 = 9C33			BALL.BRWHIT	= DATAORIGIN+$0016
 13162 = 9C34			BALL.INPLAY	= DATAORIGIN+$0017
 13163 = 9C35			BALL.LAUNCH	= DATAORIGIN+$0018
 13164 = 9C36			BALL.ONVAUS	= DATAORIGIN+$0019
 13165 = 9C37			BALL.STM	= DATAORIGIN+$001A
 13166 = AC1C			X	= DATAORIGIN+$0FFF
 13167 = AC1E			Y	= DATAORIGIN+$1001
 13168 = AC20			XB	= DATAORIGIN+$1003
 13169 = AC22			YB	= DATAORIGIN+$1005
 13170 = AC24			OX	= DATAORIGIN+$1007
 13171 = AC26			OY	= DATAORIGIN+$1009
 13172 = AC28			LX	= DATAORIGIN+$100B
 13173 = AC2A			LY	= DATAORIGIN+$100D
 13174 = AC2C			MX	= DATAORIGIN+$100F
 13175 = AC2E			MY	= DATAORIGIN+$1011
 13176 = AC30			NX	= DATAORIGIN+$1013
 13177 = AC32			NY	= DATAORIGIN+$1015
 13178 = AC34			F1	= DATAORIGIN+$1017
 13179 = AC36			F2	= DATAORIGIN+$1019
 13180 = AC38			DEFLECT	= DATAORIGIN+$101B
 13181 = AC3A			AROUND	= DATAORIGIN+$101D
 13182 = AC3C			MIMAX	= DATAORIGIN+$101F
 13183 = AC3E			ANGLE	= DATAORIGIN+$1021
 13184 = AC40			MYX	= DATAORIGIN+$1023
 13185 = AC42			MYY	= DATAORIGIN+$1025
 13186 = AC44			EMERGENCY	= DATAORIGIN+$1027
 13187 = AC45			COLLISION	= DATAORIGIN+$1028
 13188 = AC46			TOUCH	= DATAORIGIN+$1029
 13189 = AC47			adr.ADJW	= [DATAORIGIN+$102A] .array [3] [3] .word
 13190 6FFA			.var ADJW	= adr.ADJW .word
 13191 = AC59			@CASETMP_0008	= DATAORIGIN+$103C
 13192
 13193 = AC18			@VarData	= BALL
 13194 = 0034			@VarDataSize	= 52
 13195
 13196 6FFA			@exit
 13197 					.ifdef @new
 13198 					lda <@VarData
 13199 					sta :ztmp
 13200 					lda >@VarData
 13201 					ldy #@VarDataSize-1
 13202 					jmp @FreeMem
 13203 					els
 13204 6FFA 60				rts						; ret
 13205 					eif
 13206 = 6FFB 47 AC		ADJW
 13206 				.endl
 13207
 13208 6FFD			.local	FILL_PICTURE_WITH_PATTERN			; PROCEDURE
 13209
 13210 				; optimize OK (vservice.pas), line = 2099
 13211
 13212 6FFD A9 00			lda #$00
 13213 6FFF 8D 60 AC			sta K
 13214 7002 8D 61 AC			sta K+1
 13215
 13216 7005			l_24A8
 13217 				; --- ForToDoCondition
 13218 7005 AD 61 AC			lda K+1
 13219 7008 C9 01			cmp #$01
 13220 700A 90 0B			bcc @+
 13221 700C D0 49			jne l_24B4
 13222 700E AD 60 AC			lda K
 13223 7011 C9 3F			cmp #$3F
 13224 7013 90 02			bcc @+
 13225 7015 D0 40			jne l_24B4
 13226 				@
 13227
 13228 				; optimize OK (vservice.pas), line = 2100
 13229
 13230 7017 AC 5A AC 84 84 AC + 	mwy PATT :bp2
 13231 7021 A0 00			ldy #PATT.WIDTH-DATAORIGIN
 13232 7023 B1 84			lda (:bp2),y
 13233 7025 85 8E			sta @WORD.MOD.B
 13234 7027 C8				iny
 13235 7028 B1 84			lda (:bp2),y
 13236 702A 85 8F			sta @WORD.MOD.B+1
 13237 702C AD 60 AC			lda K
 13238 702F 85 86			sta @WORD.MOD.A
 13239 7031 AD 61 AC			lda K+1
 13240 7034 85 87			sta @WORD.MOD.A+1
 13241 7036 20 8F 13			jsr @WORD.MOD
 13242 7039 AD 2B 9B			lda MODX
 13243 703C 18 6D 60 AC			add K
 13244 7040 A8				tay
 13245 7041 AD 2C 9B			lda MODX+1
 13246 7044 6D 61 AC			adc K+1
 13247 7047 85 83			sta :bp+1
 13248 7049 A5 92			lda @WORD.MOD.RESULT
 13249 704B 91 82			sta (:bp),y
 13250
 13251 				; --- ForToDoEpilog
 13252 704D EE 60 AC			inc K
 13253 7050 D0 B3			jne l_24A8
 13254 7052 EE 61 AC			inc K+1
 13255 7055 D0 AE			jne l_24A8
 13256 7057			l_24B4
 13257
 13258 				; optimize OK (vservice.pas), line = 2104
 13259
 13260 7057 A9 00			lda #$00
 13261 7059 8D 63 AC			sta Y
 13262
 13263 705C			l_24CE
 13264 				; --- ForToDoCondition
 13265 705C AD 63 AC			lda Y
 13266 705F C9 C8			cmp #$C8
 13267 7061 B0 2E			jcs l_24DC
 13268
 13269 				; optimize OK (vservice.pas), line = 2105
 13270
 13271 7063 AC 5A AC 84 84 AC + 	mwy PATT :bp2
 13272 706D A0 02			ldy #PATT.HEIGHT-DATAORIGIN
 13273 706F B1 84			lda (:bp2),y
 13274 7071 85 8E			sta @WORD.MOD.B
 13275 7073 C8				iny
 13276 7074 B1 84			lda (:bp2),y
 13277 7076 85 8F			sta @WORD.MOD.B+1
 13278 7078 AD 63 AC			lda Y
 13279 707B 85 86			sta @WORD.MOD.A
 13280 707D A9 00			lda #$00
 13281 707F 85 87			sta @WORD.MOD.A+1
 13282 7081 20 8F 13			jsr @WORD.MOD
 13283 7084 A5 92			lda @WORD.MOD.RESULT
 13284 7086 AC 63 AC			ldy Y
 13285 7089 99 13 A9			sta adr.MODY,y
 13286
 13287 				; --- ForToDoEpilog
 13288 708C EE 63 AC			inc Y
 13289 708F D0 CB			jne l_24CE
 13290 7091			l_24DC
 13291
 13292 				; optimize OK (vservice.pas), line = 2110
 13293
 13294 7091 A9 0A			lda #$0A
 13295 7093 8D 63 AC			sta Y
 13296
 13297 7096			l_24F8
 13298 				; --- ForToDoCondition
 13299 7096 AC 63 AC			ldy Y
 13300 7099 C0 C7			cpy #$C7
 13301 709B 90 03 4C DC 71		jcs l_2506
 13302
 13303 				; optimize OK (vservice.pas), line = 2112
 13304
 13305 70A0 B9 13 A9			lda adr.MODY,y
 13306 70A3 85 86			sta :eax
 13307 70A5 AC 5A AC 84 84 AC + 	mwy PATT :bp2
 13308 70AF A0 00			ldy #PATT.WIDTH-DATAORIGIN
 13309 70B1 B1 84			lda (:bp2),y
 13310 70B3 85 8E			sta :ecx
 13311 70B5 C8				iny
 13312 70B6 B1 84			lda (:bp2),y
 13313 70B8 85 8F			sta :ecx+1
 13314 70BA A9 00			lda #$00
 13315 70BC 85 87			sta :eax+1
 13316 					.ifdef fmulinit
 13317 					fmulu_16
 13318 					els
 13319 70BE 20 FA 12			imulCX
 13320 					eif
 13321 70C1 A5 86			lda :eax
 13322 70C3 8D 5E AC			sta YB
 13323 70C6 A5 87			lda :eax+1
 13324 70C8 8D 5F AC			sta YB+1
 13325
 13326 				; optimize OK (vservice.pas), line = 2113
 13327
 13328 70CB A9 00			lda #$00
 13329 70CD 8D 60 AC			sta K
 13330 70D0 8D 61 AC			sta K+1
 13331
 13332 				; optimize OK (vservice.pas), line = 2114
 13333
 13334 70D3 A9 09			lda #$09
 13335 70D5 8D 62 AC			sta X
 13336
 13337 70D8			l_2521
 13338 				; --- ForToDoCondition
 13339 70D8 AD 62 AC			lda X
 13340 70DB C9 D8			cmp #$D8
 13341 70DD 90 03 4C 85 71		jcs l_252F
 13342
 13343 				; optimize OK (vservice.pas), line = 2117
 13344
 13345 70E2 AC 5A AC 84 84 AC + 	mwy PATT :bp2
 13346 70EC A0 04			ldy #PATT.OFS-DATAORIGIN
 13347 70EE B1 84			lda (:bp2),y
 13348 70F0 85 9F			sta :STACKORIGIN+9
 13349 70F2 C8				iny
 13350 70F3 B1 84			lda (:bp2),y
 13351 70F5 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 13352 70F7 C8				iny
 13353 70F8 B1 84			lda (:bp2),y
 13354 70FA 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
 13355 70FC C8				iny
 13356 70FD B1 84			lda (:bp2),y
 13357 70FF 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
 13358 7101 AC 2B 9B 84 84 AC + 	mwy MODX :bp2
 13359 710B AC 62 AC			ldy X
 13360 710E A5 9F			lda :STACKORIGIN+9
 13361 7110 18 71 84			add (:bp2),y
 13362 7113 85 9F			sta :STACKORIGIN+9
 13363 7115 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 13364 7117 69 00			adc #$00
 13365 7119 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 13366 711B A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
 13367 711D 69 00			adc #$00
 13368 711F 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
 13369 7121 A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
 13370 7123 69 00			adc #$00
 13371 7125 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
 13372 7127 A5 9F			lda :STACKORIGIN+9
 13373 7129 18 6D 5E AC			add YB
 13374 712D 8D 0B AB			sta GETBYTE.SRC
 13375 7130 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 13376 7132 6D 5F AC			adc YB+1
 13377 7135 8D 0C AB			sta GETBYTE.SRC+1
 13378 7138 A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
 13379 713A 69 00			adc #$00
 13380 713C 8D 0D AB			sta GETBYTE.SRC+2
 13381 713F A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
 13382 7141 69 00			adc #$00
 13383 7143 8D 0E AB			sta GETBYTE.SRC+3
 13384 7146 20 C2 25			jsr GETBYTE
 13385 7149 AD 0F AB			lda GETBYTE.RESULT
 13386 714C 8D 64 AC			sta CL
 13387
 13388 				; optimize OK (vservice.pas), line = 2119
 13389
 13390 714F A9 80			lda #$80
 13391 7151 8D 65 AC			sta SHADOW
 13392
 13393 				; optimize OK (vservice.pas), line = 2124
 13394
 13395 7154 AD 63 AC			lda Y
 13396 7157 C9 10			cmp #$10
 13397 7159 90 07			jcc l_2564x
 13398 715B AD 62 AC			lda X
 13399 715E C9 12			cmp #$12
 13400 7160 B0 05			jcs l_2564
 13401 7162			l_2564x
 13402 7162 A9 00			lda #$00
 13403 7164 8D 65 AC			sta SHADOW
 13404 7167			l_2564
 13405
 13406 				; optimize OK (vservice.pas), line = 2129
 13407
 13408 7167 AD 64 AC			lda CL
 13409 716A 29 7F			and #$7F
 13410 716C 0D 65 AC			ora SHADOW
 13411 716F AC 60 AC			ldy K
 13412 7172 99 DD A4			sta adr.TMP,y
 13413
 13414 				; optimize FAIL (0, vservice.pas), line = 2130
 13415
 13416 7175 EE 60 AC			inc K
 13417 7178 D0 03			sne
 13418 717A EE 61 AC			inc K+1
 13419
 13420 				; --- ForToDoEpilog
 13421 717D EE 62 AC			inc X
 13422 7180 F0 03 4C D8 70		jne l_2521
 13423 7185			l_252F
 13424
 13425 				; optimize OK (vservice.pas), line = 2133
 13426
 13427 7185 AD EA 9C			lda PLAYSCREEN.OFS
 13428 7188 18 69 09			add #$09
 13429 718B 85 A0			sta :STACKORIGIN+10
 13430 718D AD EB 9C			lda PLAYSCREEN.OFS+1
 13431 7190 69 00			adc #$00
 13432 7192 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 13433 7194 AD EC 9C			lda PLAYSCREEN.OFS+2
 13434 7197 69 00			adc #$00
 13435 7199 85 C0			sta :STACKORIGIN+STACKWIDTH*2+10
 13436 719B AD ED 9C			lda PLAYSCREEN.OFS+3
 13437 719E 69 00			adc #$00
 13438 71A0 85 D0			sta :STACKORIGIN+STACKWIDTH*3+10
 13439 71A2 AD 63 AC			lda Y
 13440 71A5 85 86			sta :eax
 13441 71A7 A9 00			lda #$00
 13442 71A9 85 87			sta :eax+1
 13443 71AB 20 28 19			jsr @mul320
 13444 71AE A5 A0			lda :STACKORIGIN+10
 13445 71B0 18 65 86			add :eax
 13446 71B3 8D E9 AA			sta BLITTMP.DST
 13447 71B6 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
 13448 71B8 65 87			adc :eax+1
 13449 71BA 8D EA AA			sta BLITTMP.DST+1
 13450 71BD A5 C0			lda :STACKORIGIN+STACKWIDTH*2+10
 13451 71BF 65 88			adc :eax+2
 13452 71C1 8D EB AA			sta BLITTMP.DST+2
 13453 71C4 A5 D0			lda :STACKORIGIN+STACKWIDTH*3+10
 13454 71C6 65 89			adc :eax+3
 13455 71C8 8D EC AA			sta BLITTMP.DST+3
 13456 71CB AD 60 AC			lda K
 13457 71CE 8D ED AA			sta BLITTMP.SIZE
 13458 71D1 20 33 25			jsr BLITTMP
 13459
 13460 				; --- ForToDoEpilog
 13461 71D4 EE 63 AC			inc Y
 13462 71D7 F0 03 4C 96 70		jne l_24F8
 13463 71DC			l_2506
 13464
 13465 				; ------------------------------------------------------------
 13466
 13467 = AC5A			PATT	= DATAORIGIN+$103D
 13468 = 9C1D			PATT.WIDTH	= DATAORIGIN+$0000
 13469 = 9C1F			PATT.HEIGHT	= DATAORIGIN+$0002
 13470 = 9C21			PATT.OFS	= DATAORIGIN+$0004
 13471 = AC5E			YB	= DATAORIGIN+$1041
 13472 = AC60			K	= DATAORIGIN+$1043
 13473 = AC62			X	= DATAORIGIN+$1045
 13474 = AC63			Y	= DATAORIGIN+$1046
 13475 = AC64			CL	= DATAORIGIN+$1047
 13476 = AC65			SHADOW	= DATAORIGIN+$1048
 13477
 13478 = AC5A			@VarData	= PATT
 13479 = 000A			@VarDataSize	= 10
 13480
 13481 71DC			@exit
 13482 					.ifdef @new
 13483 					lda <@VarData
 13484 					sta :ztmp
 13485 					lda >@VarData
 13486 					ldy #@VarDataSize-1
 13487 					jmp @FreeMem
 13488 					els
 13489 71DC 60				rts						; ret
 13490 					eif
 13491 				.endl
 13492
 13493 71DD			.local	WRITE_ROUND_LEVEL				; PROCEDURE
 13494
 13495 				; ------------------------------------------------------------
 13496
 13497 = AC66			X	= DATAORIGIN+$1049
 13498 = AC68			Y	= DATAORIGIN+$104B
 13499
 13500 = AC66			@VarData	= X
 13501 = 0004			@VarDataSize	= 4
 13502
 13503 71DD			@exit
 13504 					.ifdef @new
 13505 					lda <@VarData
 13506 					sta :ztmp
 13507 					lda >@VarData
 13508 					ldy #@VarDataSize-1
 13509 					jmp @FreeMem
 13510 					els
 13511 71DD 60				rts						; ret
 13512 					eif
 13513 				.endl
 13514
 13515 71DE			.local	REMOVE_ROUND_LEVEL				; PROCEDURE
 13516
 13517 				; optimize OK (vservice.pas), line = 2248
 13518
 13519 71DE A9 81			lda #$81
 13520 71E0 8D 6A AC			sta Y
 13521
 13522 71E3			l_25B2
 13523 				; --- ForToDoCondition
 13524 71E3 AD 6A AC			lda Y
 13525 71E6 C9 A1			cmp #$A1
 13526 71E8 90 03 4C 8D 72		jcs l_25C0
 13527
 13528 				; optimize OK (vservice.pas), line = 2251
 13529
 13530 71ED A9 00			lda #$00
 13531 71EF 85 B1			sta :STACKORIGIN+STACKWIDTH+11
 13532 71F1 AD 6A AC			lda Y
 13533 71F4 0A				asl @
 13534 71F5 26 B1			rol :STACKORIGIN+STACKWIDTH+11
 13535 71F7 18 6D 29 9B			add ROW
 13536 71FB 85 84			sta :bp2
 13537 71FD AD 2A 9B			lda ROW+1
 13538 7200 65 B1			adc :STACKORIGIN+STACKWIDTH+11
 13539 7202 85 85			sta :bp2+1
 13540 7204 A0 00			ldy #$00
 13541 7206 A9 48			lda #$48
 13542 7208 18 71 84			add (:bp2),y
 13543 720B 8D F4 AA			sta BLITROW.DST
 13544 720E C8				iny
 13545 720F A9 00			lda #$00
 13546 7211 71 84			adc (:bp2),y
 13547 7213 8D F5 AA			sta BLITROW.DST+1
 13548 7216 A9 00			lda #$00
 13549 7218 69 00			adc #$00
 13550 721A 8D F6 AA			sta BLITROW.DST+2
 13551 721D A9 00			lda #$00
 13552 721F 69 00			adc #$00
 13553 7221 8D F7 AA			sta BLITROW.DST+3
 13554 7224 AD EA 9C			lda PLAYSCREEN.OFS
 13555 7227 18 69 48			add #$48
 13556 722A 85 A1			sta :STACKORIGIN+11
 13557 722C AD EB 9C			lda PLAYSCREEN.OFS+1
 13558 722F 69 00			adc #$00
 13559 7231 85 B1			sta :STACKORIGIN+STACKWIDTH+11
 13560 7233 AD EC 9C			lda PLAYSCREEN.OFS+2
 13561 7236 69 00			adc #$00
 13562 7238 85 C1			sta :STACKORIGIN+STACKWIDTH*2+11
 13563 723A AD ED 9C			lda PLAYSCREEN.OFS+3
 13564 723D 69 00			adc #$00
 13565 723F 85 D1			sta :STACKORIGIN+STACKWIDTH*3+11
 13566 7241 A9 00			lda #$00
 13567 7243 85 B2			sta :STACKORIGIN+STACKWIDTH+12
 13568 7245 AD 6A AC			lda Y
 13569 7248 0A				asl @
 13570 7249 26 B2			rol :STACKORIGIN+STACKWIDTH+12
 13571 724B 18 6D 29 9B			add ROW
 13572 724F 85 84			sta :bp2
 13573 7251 AD 2A 9B			lda ROW+1
 13574 7254 65 B2			adc :STACKORIGIN+STACKWIDTH+12
 13575 7256 85 85			sta :bp2+1
 13576 7258 A0 00			ldy #$00
 13577 725A A5 A1			lda :STACKORIGIN+11
 13578 725C 18 71 84			add (:bp2),y
 13579 725F 8D F0 AA			sta BLITROW.SRC
 13580 7262 C8				iny
 13581 7263 A5 B1			lda :STACKORIGIN+STACKWIDTH+11
 13582 7265 71 84			adc (:bp2),y
 13583 7267 8D F1 AA			sta BLITROW.SRC+1
 13584 726A A5 C1			lda :STACKORIGIN+STACKWIDTH*2+11
 13585 726C 69 00			adc #$00
 13586 726E 8D F2 AA			sta BLITROW.SRC+2
 13587 7271 A5 D1			lda :STACKORIGIN+STACKWIDTH*3+11
 13588 7273 69 00			adc #$00
 13589 7275 8D F3 AA			sta BLITROW.SRC+3
 13590 7278 A9 58			lda #$58
 13591 727A 8D F8 AA			sta BLITROW.SIZE
 13592 727D A9 00			lda #$00
 13593 727F 8D F9 AA			sta BLITROW.SIZE+1
 13594 7282 20 60 25			jsr BLITROW
 13595
 13596 				; --- ForToDoEpilog
 13597 7285 EE 6A AC			inc Y
 13598 7288 F0 03 4C E3 71		jne l_25B2
 13599 728D			l_25C0
 13600
 13601 				; ------------------------------------------------------------
 13602
 13603 = AC6A			Y	= DATAORIGIN+$104D
 13604
 13605 = AC6A			@VarData	= Y
 13606 = 0001			@VarDataSize	= 1
 13607
 13608 728D			@exit
 13609 					.ifdef @new
 13610 					lda <@VarData
 13611 					sta :ztmp
 13612 					lda >@VarData
 13613 					ldy #@VarDataSize-1
 13614 					jmp @FreeMem
 13615 					els
 13616 728D 60				rts						; ret
 13617 					eif
 13618 				.endl
 13619
 13620 728E			.local	GAME_OVER					; PROCEDURE
 13621
 13622 				; ------------------------------------------------------------
 13623
 13624 = AC6B			X	= DATAORIGIN+$104E
 13625 = AC6D			Y	= DATAORIGIN+$1050
 13626 = AC6F			adr.SC	= [DATAORIGIN+$1052] .array [21]
 13627 728E			.var SC	= adr.SC .word
 13628
 13629 = AC6B			@VarData	= X
 13630 = 0019			@VarDataSize	= 25
 13631
 13632 728E			@exit
 13633 					.ifdef @new
 13634 					lda <@VarData
 13635 					sta :ztmp
 13636 					lda >@VarData
 13637 					ldy #@VarDataSize-1
 13638 					jmp @FreeMem
 13639 					els
 13640 728E 60				rts						; ret
 13641 					eif
 13642 = 728F 6F AC		SC
 13642 				.endl
 13643
 13644 7291			.local	DESTROY_VAUS					; PROCEDURE
 13645
 13646 				; optimize OK (vservice.pas), line = 2295
 13647
 13648 7291 AD F6 9C 8D EE 9C + 	:8 mva adr.NORMAL+# adr.PLAYVAUS+#
 13649
 13650 				; optimize FAIL ('MODIFY_VAUS', vservice.pas), line = 2296
 13651
 13652 72C1 20 D0 3B			jsr MODIFY_VAUS
 13653
 13654 				; optimize OK (vservice.pas), line = 2298
 13655
 13656 72C4 AD 5E 9D			lda VAUS.X
 13657 72C7 8D BC AB			sta MOVE_VAUS.X
 13658 72CA A9 00			lda #$00
 13659 72CC 8D BD AB			sta MOVE_VAUS.X+1
 13660 72CF AD 5F 9D			lda VAUS.Y
 13661 72D2 8D BE AB			sta MOVE_VAUS.Y
 13662 72D5 A9 00			lda #$00
 13663 72D7 8D BF AB			sta MOVE_VAUS.Y+1
 13664 72DA 20 42 3F			jsr MOVE_VAUS
 13665
 13666 				; optimize OK (vservice.pas), line = 2300
 13667
 13668 72DD AD 5E 9D			lda VAUS.X
 13669 72E0 38 E9 04			sub #$04
 13670 72E3 8D 86 AC			sta A
 13671 72E6 A9 00			lda #$00
 13672 72E8 E9 00			sbc #$00
 13673 72EA 8D 87 AC			sta A+1
 13674
 13675 				; optimize OK (vservice.pas), line = 2301
 13676
 13677 72ED AD 5F 9D			lda VAUS.Y
 13678 72F0 38 E9 05			sub #$05
 13679 72F3 8D 88 AC			sta B
 13680 72F6 A9 00			lda #$00
 13681 72F8 E9 00			sbc #$00
 13682 72FA 8D 89 AC			sta B+1
 13683
 13684 				; optimize OK (vservice.pas), line = 2304
 13685
 13686 72FD A9 00			lda #$00
 13687 72FF 8D 8A AC			sta W
 13688
 13689 7302			l_2610
 13690 				; --- ForToDoCondition
 13691 7302 AD 8A AC			lda W
 13692 7305 C9 07			cmp #$07
 13693 7307 90 03 4C 70 75		jcs l_261E
 13694
 13695 				; optimize OK (vservice.pas), line = 2306
 13696
 13697 730C A9 00			lda #$00
 13698 730E 8D 8C AC			sta Y
 13699
 13700 7311			l_2627
 13701 				; --- ForToDoCondition
 13702 7311 AD 8C AC			lda Y
 13703 7314 C9 10			cmp #$10
 13704 7316 90 03 4C 5A 75		jcs l_2635
 13705
 13706 				; optimize OK (vservice.pas), line = 2308
 13707
 13708 731B AD 0E 9D			lda EXPLOSION.WIDTH
 13709 731E 85 8E			sta :ecx
 13710 7320 AD 0F 9D			lda EXPLOSION.WIDTH+1
 13711 7323 85 8F			sta :ecx+1
 13712 7325 AD 8C AC			lda Y
 13713 7328 85 86			sta :eax
 13714 732A A9 00			lda #$00
 13715 732C 85 87			sta :eax+1
 13716 					.ifdef fmulinit
 13717 					fmulu_16
 13718 					els
 13719 732E 20 3E 13			imulCX_AL
 13720 					eif
 13721 7331 A5 86			lda :eax
 13722 7333 85 9F			sta :STACKORIGIN+9
 13723 7335 A5 87			lda :eax+1
 13724 7337 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 13725 7339 AD 0E 9D			lda EXPLOSION.WIDTH
 13726 733C 85 A1			sta :STACKORIGIN+11
 13727 733E AD 0F 9D			lda EXPLOSION.WIDTH+1
 13728 7341 06 A1			asl :STACKORIGIN+11
 13729 7343 2A				rol @
 13730 7344 06 A1			asl :STACKORIGIN+11
 13731 7346 2A				rol @
 13732 7347 06 A1			asl :STACKORIGIN+11
 13733 7349 2A				rol @
 13734 734A 06 A1			asl :STACKORIGIN+11
 13735 734C 2A				rol @
 13736 734D 85 8F			sta :ecx+1
 13737 734F A5 A1			lda :STACKORIGIN+11
 13738 7351 85 8E			sta :ecx
 13739 7353 AD 8A AC			lda W
 13740 7356 85 86			sta :eax
 13741 7358 A9 00			lda #$00
 13742 735A 85 87			sta :eax+1
 13743 					.ifdef fmulinit
 13744 					fmulu_16
 13745 					els
 13746 735C 20 FA 12			imulCX
 13747 					eif
 13748 735F A5 86			lda :eax
 13749 7361 18 65 9F			add :STACKORIGIN+9
 13750 7364 8D 84 AC			sta Z
 13751 7367 A5 87			lda :eax+1
 13752 7369 65 AF			adc :STACKORIGIN+STACKWIDTH+9
 13753 736B 8D 85 AC			sta Z+1
 13754
 13755 				; optimize OK (vservice.pas), line = 2309
 13756
 13757 736E A9 00			lda #$00
 13758 7370 8D 8B AC			sta X
 13759 7373 AC 0E 9D			ldy EXPLOSION.WIDTH
 13760 7376 88				dey
 13761 7377 8C 7B 73			sty @FORTMP_265A_0
 13762
 13763 737A			l_265D
 13764 				; --- ForToDoCondition
 13765 737A A9 00			lda @FORTMP_265A_0::#$00
 13766 737C CD 8B AC			cmp X
 13767 737F B0 03 4C 52 75		jcc l_266B
 13768
 13769 				; optimize FAIL (1, vservice.pas), line = 2313
 13770
 13771 7384 E8				inx
 13772 7385 A0 01			ldy #1
 13773 7387 AD 8A AC			lda W
 13774 738A C9 06			cmp #$06
 13775 738C F0 01			beq @+
 13776 738E 88				dey
 13777 				@
 13778 738F 94 96			sty :STACKORIGIN,x
 13779 7391 AD 12 9D			lda EXPLOSION.OFS
 13780 7394 18 6D 8B AC			add X
 13781 7398 85 9F			sta :STACKORIGIN+9
 13782 739A AD 13 9D			lda EXPLOSION.OFS+1
 13783 739D 69 00			adc #$00
 13784 739F 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 13785 73A1 AD 14 9D			lda EXPLOSION.OFS+2
 13786 73A4 69 00			adc #$00
 13787 73A6 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
 13788 73A8 AD 15 9D			lda EXPLOSION.OFS+3
 13789 73AB 69 00			adc #$00
 13790 73AD 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
 13791 73AF A5 9F			lda :STACKORIGIN+9
 13792 73B1 18 6D 84 AC			add Z
 13793 73B5 8D 0B AB			sta GETBYTE.SRC
 13794 73B8 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 13795 73BA 6D 85 AC			adc Z+1
 13796 73BD 8D 0C AB			sta GETBYTE.SRC+1
 13797 73C0 A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
 13798 73C2 69 00			adc #$00
 13799 73C4 8D 0D AB			sta GETBYTE.SRC+2
 13800 73C7 A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
 13801 73C9 69 00			adc #$00
 13802 73CB 8D 0E AB			sta GETBYTE.SRC+3
 13803 73CE 20 C2 25			jsr GETBYTE
 13804 73D1 CA				dex
 13805 73D2 A0 01			ldy #1
 13806 73D4 AD 0F AB			lda GETBYTE.RESULT
 13807 73D7 F0 01			beq @+
 13808 73D9 88				dey
 13809 				@
 13810 73DA 98				tya
 13811 73DB 15 97			ora :STACKORIGIN+1,x
 13812 73DD D0 03 4C AC 74		jeq l_2693
 13813
 13814 				; optimize OK (vservice.pas), line = 2315
 13815
 13816 73E2 AD 8B AC			lda X
 13817 73E5 18 6D 86 AC			add A
 13818 73E9 85 9F			sta :STACKORIGIN+9
 13819 73EB A9 00			lda #$00
 13820 73ED 6D 87 AC			adc A+1
 13821 73F0 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 13822 73F2 A9 00			lda #$00
 13823 73F4 69 00			adc #$00
 13824 73F6 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
 13825 73F8 A9 00			lda #$00
 13826 73FA 69 00			adc #$00
 13827 73FC 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
 13828 73FE AD 8C AC			lda Y
 13829 7401 18 6D 88 AC			add B
 13830 7405 85 A0			sta :STACKORIGIN+10
 13831 7407 A9 00			lda #$00
 13832 7409 6D 89 AC			adc B+1
 13833 740C 06 A0			asl :STACKORIGIN+10
 13834 740E 2A				rol @
 13835 740F 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 13836 7411 AD 29 9B			lda ROW
 13837 7414 18 65 A0			add :STACKORIGIN+10
 13838 7417 85 84			sta :bp2
 13839 7419 AD 2A 9B			lda ROW+1
 13840 741C 65 B0			adc :STACKORIGIN+STACKWIDTH+10
 13841 741E 85 85			sta :bp2+1
 13842 7420 A0 00			ldy #$00
 13843 7422 A5 9F			lda :STACKORIGIN+9
 13844 7424 18 71 84			add (:bp2),y
 13845 7427 8D 02 AB			sta BLITBYTE.DST
 13846 742A C8				iny
 13847 742B A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 13848 742D 71 84			adc (:bp2),y
 13849 742F 8D 03 AB			sta BLITBYTE.DST+1
 13850 7432 A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
 13851 7434 69 00			adc #$00
 13852 7436 8D 04 AB			sta BLITBYTE.DST+2
 13853 7439 A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
 13854 743B 69 00			adc #$00
 13855 743D 8D 05 AB			sta BLITBYTE.DST+3
 13856 7440 AD EA 9C			lda PLAYSCREEN.OFS
 13857 7443 18 6D 8B AC			add X
 13858 7447 85 A0			sta :STACKORIGIN+10
 13859 7449 AD EB 9C			lda PLAYSCREEN.OFS+1
 13860 744C 69 00			adc #$00
 13861 744E 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 13862 7450 AD EC 9C			lda PLAYSCREEN.OFS+2
 13863 7453 69 00			adc #$00
 13864 7455 85 C0			sta :STACKORIGIN+STACKWIDTH*2+10
 13865 7457 AD ED 9C			lda PLAYSCREEN.OFS+3
 13866 745A 69 00			adc #$00
 13867 745C 85 D0			sta :STACKORIGIN+STACKWIDTH*3+10
 13868 745E A5 A0			lda :STACKORIGIN+10
 13869 7460 18 6D 86 AC			add A
 13870 7464 85 A0			sta :STACKORIGIN+10
 13871 7466 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
 13872 7468 6D 87 AC			adc A+1
 13873 746B 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 13874 746D A5 C0			lda :STACKORIGIN+STACKWIDTH*2+10
 13875 746F 69 00			adc #$00
 13876 7471 85 C0			sta :STACKORIGIN+STACKWIDTH*2+10
 13877 7473 A5 D0			lda :STACKORIGIN+STACKWIDTH*3+10
 13878 7475 69 00			adc #$00
 13879 7477 85 D0			sta :STACKORIGIN+STACKWIDTH*3+10
 13880 7479 AD 8C AC			lda Y
 13881 747C 18 6D 88 AC			add B
 13882 7480 85 A1			sta :STACKORIGIN+11
 13883 7482 A9 00			lda #$00
 13884 7484 6D 89 AC			adc B+1
 13885 7487 06 A1			asl :STACKORIGIN+11
 13886 7489 2A				rol @
 13887 748A 85 B1			sta :STACKORIGIN+STACKWIDTH+11
 13888 748C AD 29 9B			lda ROW
 13889 748F 18 65 A1			add :STACKORIGIN+11
 13890 7492 85 84			sta :bp2
 13891 7494 AD 2A 9B			lda ROW+1
 13892 7497 65 B1			adc :STACKORIGIN+STACKWIDTH+11
 13893 7499 85 85			sta :bp2+1
 13894 749B 88				dey
 13895 749C A5 A0			lda :STACKORIGIN+10
 13896 749E 18 71 84			add (:bp2),y
 13897 74A1 8D FE AA			sta BLITBYTE.SRC
 13898 74A4 C8				iny
 13899 74A5 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
 13900 74A7 71 84			adc (:bp2),y
 13901 74A9 4C 36 75			jmp l_26D0
 13902 74AC			l_2693
 13903
 13904 				; optimize OK (vservice.pas), line = 2318
 13905
 13906 74AC AD 8B AC			lda X
 13907 74AF 18 6D 86 AC			add A
 13908 74B3 85 9F			sta :STACKORIGIN+9
 13909 74B5 A9 00			lda #$00
 13910 74B7 6D 87 AC			adc A+1
 13911 74BA 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 13912 74BC A9 00			lda #$00
 13913 74BE 69 00			adc #$00
 13914 74C0 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
 13915 74C2 A9 00			lda #$00
 13916 74C4 69 00			adc #$00
 13917 74C6 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
 13918 74C8 AD 8C AC			lda Y
 13919 74CB 18 6D 88 AC			add B
 13920 74CF 85 A0			sta :STACKORIGIN+10
 13921 74D1 A9 00			lda #$00
 13922 74D3 6D 89 AC			adc B+1
 13923 74D6 06 A0			asl :STACKORIGIN+10
 13924 74D8 2A				rol @
 13925 74D9 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 13926 74DB AD 29 9B			lda ROW
 13927 74DE 18 65 A0			add :STACKORIGIN+10
 13928 74E1 85 84			sta :bp2
 13929 74E3 AD 2A 9B			lda ROW+1
 13930 74E6 65 B0			adc :STACKORIGIN+STACKWIDTH+10
 13931 74E8 85 85			sta :bp2+1
 13932 74EA A0 00			ldy #$00
 13933 74EC A5 9F			lda :STACKORIGIN+9
 13934 74EE 18 71 84			add (:bp2),y
 13935 74F1 8D 02 AB			sta BLITBYTE.DST
 13936 74F4 C8				iny
 13937 74F5 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 13938 74F7 71 84			adc (:bp2),y
 13939 74F9 8D 03 AB			sta BLITBYTE.DST+1
 13940 74FC A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
 13941 74FE 69 00			adc #$00
 13942 7500 8D 04 AB			sta BLITBYTE.DST+2
 13943 7503 A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
 13944 7505 69 00			adc #$00
 13945 7507 8D 05 AB			sta BLITBYTE.DST+3
 13946 750A AD 12 9D			lda EXPLOSION.OFS
 13947 750D 18 6D 8B AC			add X
 13948 7511 85 A0			sta :STACKORIGIN+10
 13949 7513 AD 13 9D			lda EXPLOSION.OFS+1
 13950 7516 69 00			adc #$00
 13951 7518 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 13952 751A AD 14 9D			lda EXPLOSION.OFS+2
 13953 751D 69 00			adc #$00
 13954 751F 85 C0			sta :STACKORIGIN+STACKWIDTH*2+10
 13955 7521 AD 15 9D			lda EXPLOSION.OFS+3
 13956 7524 69 00			adc #$00
 13957 7526 85 D0			sta :STACKORIGIN+STACKWIDTH*3+10
 13958 7528 A5 A0			lda :STACKORIGIN+10
 13959 752A 18 6D 84 AC			add Z
 13960 752E 8D FE AA			sta BLITBYTE.SRC
 13961 7531 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
 13962 7533 6D 85 AC			adc Z+1
 13963 7536			l_26D0
 13964 7536 8D FF AA			sta BLITBYTE.SRC+1
 13965 7539 A5 C0			lda :STACKORIGIN+STACKWIDTH*2+10
 13966 753B 69 00			adc #$00
 13967 753D 8D 00 AB			sta BLITBYTE.SRC+2
 13968 7540 A5 D0			lda :STACKORIGIN+STACKWIDTH*3+10
 13969 7542 69 00			adc #$00
 13970 7544 8D 01 AB			sta BLITBYTE.SRC+3
 13971 7547 20 AB 25			jsr BLITBYTE
 13972
 13973 				; --- ForToDoEpilog
 13974 754A EE 8B AC			inc X
 13975 754D F0 03 4C 7A 73		jne l_265D
 13976 7552			l_266B
 13977
 13978 				; --- ForToDoEpilog
 13979 7552 EE 8C AC			inc Y
 13980 7555 F0 03 4C 11 73		jne l_2627
 13981 755A			l_2635
 13982
 13983 				; optimize OK (vservice.pas), line = 2322
 13984
 13985 755A AD 8A AC			lda W
 13986 755D 8D CA 9C			sta DEATH_SOUND.A
 13987 7560 A9 00			lda #$00
 13988 7562 8D CB 9C			sta DEATH_SOUND.A+1
 13989 7565 20 99 24			jsr DEATH_SOUND
 13990
 13991 				; --- ForToDoEpilog
 13992 7568 EE 8A AC			inc W
 13993 756B F0 03 4C 02 73		jne l_2610
 13994 7570			l_261E
 13995
 13996 				; optimize OK (vservice.pas), line = 2326
 13997
 13998 7570 A9 07			lda #$07
 13999 7572 8D CA 9C			sta DEATH_SOUND.A
 14000 7575 A9 00			lda #$00
 14001 7577 8D CB 9C			sta DEATH_SOUND.A+1
 14002 757A 20 99 24			jsr DEATH_SOUND
 14003
 14004 				; optimize OK (vservice.pas), line = 2327
 14005
 14006 757D A9 96			lda #$96
 14007 757F 8D 10 AB			sta MYDELAY.A
 14008 7582 A9 00			lda #$00
 14009 7584 8D 11 AB			sta MYDELAY.A+1
 14010 7587 20 CD 25			jsr MYDELAY
 14011
 14012 				; optimize FAIL ('DISABLE_LETTER', vservice.pas), line = 2328
 14013
 14014 758A 20 DB 2A			jsr DISABLE_LETTER
 14015
 14016 				; ------------------------------------------------------------
 14017
 14018 = AC84			Z	= DATAORIGIN+$1067
 14019 = AC86			A	= DATAORIGIN+$1069
 14020 = AC88			B	= DATAORIGIN+$106B
 14021 = AC8A			W	= DATAORIGIN+$106D
 14022 = AC8B			X	= DATAORIGIN+$106E
 14023 = AC8C			Y	= DATAORIGIN+$106F
 14024
 14025 = AC84			@VarData	= Z
 14026 = 0009			@VarDataSize	= 9
 14027
 14028 758D			@exit
 14029 					.ifdef @new
 14030 					lda <@VarData
 14031 					sta :ztmp
 14032 					lda >@VarData
 14033 					ldy #@VarDataSize-1
 14034 					jmp @FreeMem
 14035 					els
 14036 758D 60				rts						; ret
 14037 					eif
 14038 				.endl
 14039
 14040 758E			.local	CREATE_VAUS					; PROCEDURE
 14041
 14042 				; optimize FAIL ('NOSOUND', vservice.pas), line = 2339
 14043
 14044 758E 20 CC 25			jsr NOSOUND
 14045
 14046 				; optimize OK (vservice.pas), line = 2340
 14047
 14048 7591 A9 5B			lda #$5B
 14049 7593 8D 93 AC			sta A
 14050 7596 A9 00			lda #$00
 14051 7598 8D 94 AC			sta A+1
 14052
 14053 				; optimize OK (vservice.pas), line = 2341
 14054
 14055 759B A9 B3			lda #$B3
 14056 759D 8D 95 AC			sta B
 14057 75A0 A9 00			lda #$00
 14058 75A2 8D 96 AC			sta B+1
 14059
 14060 				; optimize OK (vservice.pas), line = 2343
 14061
 14062 75A5 A9 0B			lda #$0B
 14063 75A7 8D 90 AC			sta W
 14064
 14065 75AA			l_2724
 14066 				; --- ForToDoCondition
 14067 75AA A9 00			lda #$00
 14068 75AC 8D 8F AC			sta Y
 14069
 14070 75AF			l_273B
 14071 				; --- ForToDoCondition
 14072 75AF AD 8F AC			lda Y
 14073 75B2 C9 10			cmp #$10
 14074 75B4 90 03 4C E5 77		jcs l_2749
 14075
 14076 				; optimize OK (vservice.pas), line = 2347
 14077
 14078 75B9 AD 16 9D			lda NEWVAUS.WIDTH
 14079 75BC 85 8E			sta :ecx
 14080 75BE AD 17 9D			lda NEWVAUS.WIDTH+1
 14081 75C1 85 8F			sta :ecx+1
 14082 75C3 AD 8F AC			lda Y
 14083 75C6 85 86			sta :eax
 14084 75C8 A9 00			lda #$00
 14085 75CA 85 87			sta :eax+1
 14086 					.ifdef fmulinit
 14087 					fmulu_16
 14088 					els
 14089 75CC 20 3E 13			imulCX_AL
 14090 					eif
 14091 75CF A5 86			lda :eax
 14092 75D1 85 9F			sta :STACKORIGIN+9
 14093 75D3 A5 87			lda :eax+1
 14094 75D5 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 14095 75D7 A9 10			lda #$10
 14096 75D9 85 8E			sta :ecx
 14097 75DB A9 00			lda #$00
 14098 75DD 85 8F			sta :ecx+1
 14099 75DF AD 16 9D			lda NEWVAUS.WIDTH
 14100 75E2 85 86			sta :eax
 14101 75E4 AD 17 9D			lda NEWVAUS.WIDTH+1
 14102 75E7 85 87			sta :eax+1
 14103 					.ifdef fmulinit
 14104 					fmulu_16
 14105 					els
 14106 75E9 20 FA 12			imulCX
 14107 					eif
 14108 75EC A5 86			lda :eax
 14109 75EE 85 8E			sta :ecx
 14110 75F0 A5 87			lda :eax+1
 14111 75F2 85 8F			sta :ecx+1
 14112 75F4 AD 90 AC			lda W
 14113 75F7 85 86			sta :eax
 14114 75F9 A9 00			lda #$00
 14115 75FB 85 87			sta :eax+1
 14116 					.ifdef fmulinit
 14117 					fmulu_16
 14118 					els
 14119 75FD 20 3E 13			imulCX_AL
 14120 					eif
 14121 7600 A5 86			lda :eax
 14122 7602 18 65 9F			add :STACKORIGIN+9
 14123 7605 8D 91 AC			sta Z
 14124 7608 A5 87			lda :eax+1
 14125 760A 65 AF			adc :STACKORIGIN+STACKWIDTH+9
 14126 760C 8D 92 AC			sta Z+1
 14127
 14128 				; optimize OK (vservice.pas), line = 2348
 14129
 14130 760F A9 00			lda #$00
 14131 7611 8D 8E AC			sta X
 14132 7614 AC 16 9D			ldy NEWVAUS.WIDTH
 14133 7617 88				dey
 14134 7618 8C 1C 76			sty @FORTMP_276E_0
 14135
 14136 761B			l_2771
 14137 				; --- ForToDoCondition
 14138 761B A9 00			lda @FORTMP_276E_0::#$00
 14139 761D CD 8E AC			cmp X
 14140 7620 B0 03 4C DD 77		jcc l_277F
 14141
 14142 				; optimize OK (vservice.pas), line = 2350
 14143
 14144 7625 AD 1A 9D			lda NEWVAUS.OFS
 14145 7628 18 6D 8E AC			add X
 14146 762C 85 9F			sta :STACKORIGIN+9
 14147 762E AD 1B 9D			lda NEWVAUS.OFS+1
 14148 7631 69 00			adc #$00
 14149 7633 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 14150 7635 AD 1C 9D			lda NEWVAUS.OFS+2
 14151 7638 69 00			adc #$00
 14152 763A 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
 14153 763C AD 1D 9D			lda NEWVAUS.OFS+3
 14154 763F 69 00			adc #$00
 14155 7641 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
 14156 7643 A5 9F			lda :STACKORIGIN+9
 14157 7645 18 6D 91 AC			add Z
 14158 7649 8D 0B AB			sta GETBYTE.SRC
 14159 764C A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 14160 764E 6D 92 AC			adc Z+1
 14161 7651 8D 0C AB			sta GETBYTE.SRC+1
 14162 7654 A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
 14163 7656 69 00			adc #$00
 14164 7658 8D 0D AB			sta GETBYTE.SRC+2
 14165 765B A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
 14166 765D 69 00			adc #$00
 14167 765F 8D 0E AB			sta GETBYTE.SRC+3
 14168 7662 20 C2 25			jsr GETBYTE
 14169 7665 AD 0F AB			lda GETBYTE.RESULT
 14170 7668 F0 03 4C 37 77		jne l_279B
 14171
 14172 				; optimize OK (vservice.pas), line = 2352
 14173
 14174 766D AD 8E AC			lda X
 14175 7670 18 6D 93 AC			add A
 14176 7674 85 9F			sta :STACKORIGIN+9
 14177 7676 A9 00			lda #$00
 14178 7678 6D 94 AC			adc A+1
 14179 767B 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 14180 767D A9 00			lda #$00
 14181 767F 69 00			adc #$00
 14182 7681 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
 14183 7683 A9 00			lda #$00
 14184 7685 69 00			adc #$00
 14185 7687 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
 14186 7689 AD 8F AC			lda Y
 14187 768C 18 6D 95 AC			add B
 14188 7690 85 A0			sta :STACKORIGIN+10
 14189 7692 A9 00			lda #$00
 14190 7694 6D 96 AC			adc B+1
 14191 7697 06 A0			asl :STACKORIGIN+10
 14192 7699 2A				rol @
 14193 769A 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 14194 769C AD 29 9B			lda ROW
 14195 769F 18 65 A0			add :STACKORIGIN+10
 14196 76A2 85 84			sta :bp2
 14197 76A4 AD 2A 9B			lda ROW+1
 14198 76A7 65 B0			adc :STACKORIGIN+STACKWIDTH+10
 14199 76A9 85 85			sta :bp2+1
 14200 76AB A0 00			ldy #$00
 14201 76AD A5 9F			lda :STACKORIGIN+9
 14202 76AF 18 71 84			add (:bp2),y
 14203 76B2 8D 02 AB			sta BLITBYTE.DST
 14204 76B5 C8				iny
 14205 76B6 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 14206 76B8 71 84			adc (:bp2),y
 14207 76BA 8D 03 AB			sta BLITBYTE.DST+1
 14208 76BD A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
 14209 76BF 69 00			adc #$00
 14210 76C1 8D 04 AB			sta BLITBYTE.DST+2
 14211 76C4 A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
 14212 76C6 69 00			adc #$00
 14213 76C8 8D 05 AB			sta BLITBYTE.DST+3
 14214 76CB AD EA 9C			lda PLAYSCREEN.OFS
 14215 76CE 18 6D 8E AC			add X
 14216 76D2 85 A0			sta :STACKORIGIN+10
 14217 76D4 AD EB 9C			lda PLAYSCREEN.OFS+1
 14218 76D7 69 00			adc #$00
 14219 76D9 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 14220 76DB AD EC 9C			lda PLAYSCREEN.OFS+2
 14221 76DE 69 00			adc #$00
 14222 76E0 85 C0			sta :STACKORIGIN+STACKWIDTH*2+10
 14223 76E2 AD ED 9C			lda PLAYSCREEN.OFS+3
 14224 76E5 69 00			adc #$00
 14225 76E7 85 D0			sta :STACKORIGIN+STACKWIDTH*3+10
 14226 76E9 A5 A0			lda :STACKORIGIN+10
 14227 76EB 18 6D 93 AC			add A
 14228 76EF 85 A0			sta :STACKORIGIN+10
 14229 76F1 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
 14230 76F3 6D 94 AC			adc A+1
 14231 76F6 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 14232 76F8 A5 C0			lda :STACKORIGIN+STACKWIDTH*2+10
 14233 76FA 69 00			adc #$00
 14234 76FC 85 C0			sta :STACKORIGIN+STACKWIDTH*2+10
 14235 76FE A5 D0			lda :STACKORIGIN+STACKWIDTH*3+10
 14236 7700 69 00			adc #$00
 14237 7702 85 D0			sta :STACKORIGIN+STACKWIDTH*3+10
 14238 7704 AD 8F AC			lda Y
 14239 7707 18 6D 95 AC			add B
 14240 770B 85 A1			sta :STACKORIGIN+11
 14241 770D A9 00			lda #$00
 14242 770F 6D 96 AC			adc B+1
 14243 7712 06 A1			asl :STACKORIGIN+11
 14244 7714 2A				rol @
 14245 7715 85 B1			sta :STACKORIGIN+STACKWIDTH+11
 14246 7717 AD 29 9B			lda ROW
 14247 771A 18 65 A1			add :STACKORIGIN+11
 14248 771D 85 84			sta :bp2
 14249 771F AD 2A 9B			lda ROW+1
 14250 7722 65 B1			adc :STACKORIGIN+STACKWIDTH+11
 14251 7724 85 85			sta :bp2+1
 14252 7726 88				dey
 14253 7727 A5 A0			lda :STACKORIGIN+10
 14254 7729 18 71 84			add (:bp2),y
 14255 772C 8D FE AA			sta BLITBYTE.SRC
 14256 772F C8				iny
 14257 7730 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
 14258 7732 71 84			adc (:bp2),y
 14259 7734 4C C1 77			jmp l_27D8
 14260 7737			l_279B
 14261
 14262 				; optimize OK (vservice.pas), line = 2355
 14263
 14264 7737 AD 8E AC			lda X
 14265 773A 18 6D 93 AC			add A
 14266 773E 85 9F			sta :STACKORIGIN+9
 14267 7740 A9 00			lda #$00
 14268 7742 6D 94 AC			adc A+1
 14269 7745 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 14270 7747 A9 00			lda #$00
 14271 7749 69 00			adc #$00
 14272 774B 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
 14273 774D A9 00			lda #$00
 14274 774F 69 00			adc #$00
 14275 7751 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
 14276 7753 AD 8F AC			lda Y
 14277 7756 18 6D 95 AC			add B
 14278 775A 85 A0			sta :STACKORIGIN+10
 14279 775C A9 00			lda #$00
 14280 775E 6D 96 AC			adc B+1
 14281 7761 06 A0			asl :STACKORIGIN+10
 14282 7763 2A				rol @
 14283 7764 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 14284 7766 AD 29 9B			lda ROW
 14285 7769 18 65 A0			add :STACKORIGIN+10
 14286 776C 85 84			sta :bp2
 14287 776E AD 2A 9B			lda ROW+1
 14288 7771 65 B0			adc :STACKORIGIN+STACKWIDTH+10
 14289 7773 85 85			sta :bp2+1
 14290 7775 A0 00			ldy #$00
 14291 7777 A5 9F			lda :STACKORIGIN+9
 14292 7779 18 71 84			add (:bp2),y
 14293 777C 8D 02 AB			sta BLITBYTE.DST
 14294 777F C8				iny
 14295 7780 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 14296 7782 71 84			adc (:bp2),y
 14297 7784 8D 03 AB			sta BLITBYTE.DST+1
 14298 7787 A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
 14299 7789 69 00			adc #$00
 14300 778B 8D 04 AB			sta BLITBYTE.DST+2
 14301 778E A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
 14302 7790 69 00			adc #$00
 14303 7792 8D 05 AB			sta BLITBYTE.DST+3
 14304 7795 AD 1A 9D			lda NEWVAUS.OFS
 14305 7798 18 6D 8E AC			add X
 14306 779C 85 A0			sta :STACKORIGIN+10
 14307 779E AD 1B 9D			lda NEWVAUS.OFS+1
 14308 77A1 69 00			adc #$00
 14309 77A3 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 14310 77A5 AD 1C 9D			lda NEWVAUS.OFS+2
 14311 77A8 69 00			adc #$00
 14312 77AA 85 C0			sta :STACKORIGIN+STACKWIDTH*2+10
 14313 77AC AD 1D 9D			lda NEWVAUS.OFS+3
 14314 77AF 69 00			adc #$00
 14315 77B1 85 D0			sta :STACKORIGIN+STACKWIDTH*3+10
 14316 77B3 A5 A0			lda :STACKORIGIN+10
 14317 77B5 18 6D 91 AC			add Z
 14318 77B9 8D FE AA			sta BLITBYTE.SRC
 14319 77BC A5 B0			lda :STACKORIGIN+STACKWIDTH+10
 14320 77BE 6D 92 AC			adc Z+1
 14321 77C1			l_27D8
 14322 77C1 8D FF AA			sta BLITBYTE.SRC+1
 14323 77C4 A5 C0			lda :STACKORIGIN+STACKWIDTH*2+10
 14324 77C6 69 00			adc #$00
 14325 77C8 8D 00 AB			sta BLITBYTE.SRC+2
 14326 77CB A5 D0			lda :STACKORIGIN+STACKWIDTH*3+10
 14327 77CD 69 00			adc #$00
 14328 77CF 8D 01 AB			sta BLITBYTE.SRC+3
 14329 77D2 20 AB 25			jsr BLITBYTE
 14330
 14331 				; --- ForToDoEpilog
 14332 77D5 EE 8E AC			inc X
 14333 77D8 F0 03 4C 1B 76		jne l_2771
 14334 77DD			l_277F
 14335
 14336 				; --- ForToDoEpilog
 14337 77DD EE 8F AC			inc Y
 14338 77E0 F0 03 4C AF 75		jne l_273B
 14339 77E5			l_2749
 14340
 14341 				; optimize OK (vservice.pas), line = 2359
 14342
 14343 77E5 A9 01			lda #$01
 14344 77E7 8D 10 AB			sta MYDELAY.A
 14345 77EA A9 00			lda #$00
 14346 77EC 8D 11 AB			sta MYDELAY.A+1
 14347 77EF 20 CD 25			jsr MYDELAY
 14348
 14349 				; --- ForToDoEpilog
 14350 77F2 CE 90 AC			dec W
 14351 77F5 30 03 4C AA 75		jpl l_2724
 14352 77FA			l_2732
 14353
 14354 				; ------------------------------------------------------------
 14355
 14356 = AC8E			X	= DATAORIGIN+$1071
 14357 = AC8F			Y	= DATAORIGIN+$1072
 14358 = AC90			W	= DATAORIGIN+$1073
 14359 = AC91			Z	= DATAORIGIN+$1074
 14360 = AC93			A	= DATAORIGIN+$1076
 14361 = AC95			B	= DATAORIGIN+$1078
 14362
 14363 = AC8E			@VarData	= X
 14364 = 0009			@VarDataSize	= 9
 14365
 14366 77FA			@exit
 14367 					.ifdef @new
 14368 					lda <@VarData
 14369 					sta :ztmp
 14370 					lda >@VarData
 14371 					ldy #@VarDataSize-1
 14372 					jmp @FreeMem
 14373 					els
 14374 77FA 60				rts						; ret
 14375 					eif
 14376 				.endl
 14377
 14378 77FB			.local	PUT_DIGIT					; PROCEDURE
 14379
 14380 				; optimize OK (vservice.pas), line = 2369
 14381
 14382 77FB A9 DE			lda #$DE
 14383 77FD 8D A0 AC			sta A
 14384
 14385 				; optimize OK (vservice.pas), line = 2393
 14386
 14387 7800 AC 9C AC			ldy NUM
 14388 7803 B9 84 10			lda adr.DIGITS,y
 14389 7806 29 01			and #$01
 14390 7808 C9 01			cmp #$01
 14391 780A D0 05			jne l_282F
 14392 780C A9 DF			lda #$DF
 14393 780E 8D A0 AC			sta A
 14394 7811			l_282F
 14395
 14396 				; optimize OK (vservice.pas), line = 2394
 14397
 14398 7811 A9 01			lda #$01
 14399 7813 8D 9E AC			sta X
 14400
 14401 7816			l_283F
 14402 				; --- ForToDoCondition
 14403 7816 AD 9E AC			lda X
 14404 7819 C9 05			cmp #$05
 14405 781B B0 38			jcs l_284D
 14406
 14407 				; optimize OK (vservice.pas), line = 2395
 14408
 14409 781D AD 98 AC			lda PX
 14410 7820 6D 9E AC			adc X
 14411 7823 85 9F			sta :STACKORIGIN+9
 14412 7825 AD 99 AC			lda PX+1
 14413 7828 69 00			adc #$00
 14414 782A AD 9B AC			lda PY+1
 14415 782D 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 14416 782F AD 9A AC			lda PY
 14417 7832 0A				asl @
 14418 7833 26 B0			rol :STACKORIGIN+STACKWIDTH+10
 14419 7835 18 6D 29 9B			add ROW
 14420 7839 85 84			sta :bp2
 14421 783B AD 2A 9B			lda ROW+1
 14422 783E 65 B0			adc :STACKORIGIN+STACKWIDTH+10
 14423 7840 85 85			sta :bp2+1
 14424 7842 A0 00			ldy #$00
 14425 7844 A5 9F			lda :STACKORIGIN+9
 14426 7846 18 71 84			add (:bp2),y
 14427 7849 A8				tay
 14428 784A AD A0 AC			lda A
 14429 784D 99 DB A9			sta adr.SCREEN,y
 14430
 14431 				; --- ForToDoEpilog
 14432 7850 EE 9E AC			inc X
 14433 7853 D0 C1			jne l_283F
 14434 7855			l_284D
 14435
 14436 				; optimize OK (vservice.pas), line = 2399
 14437
 14438 7855 A9 DE			lda #$DE
 14439 7857 8D A0 AC			sta A
 14440
 14441 				; optimize OK (vservice.pas), line = 2400
 14442
 14443 785A AC 9C AC			ldy NUM
 14444 785D B9 84 10			lda adr.DIGITS,y
 14445 7860 29 02			and #$02
 14446 7862 C9 02			cmp #$02
 14447 7864 D0 05			jne l_2883
 14448 7866 A9 DF			lda #$DF
 14449 7868 8D A0 AC			sta A
 14450 786B			l_2883
 14451
 14452 				; optimize OK (vservice.pas), line = 2401
 14453
 14454 786B A9 01			lda #$01
 14455 786D 8D 9E AC			sta X
 14456
 14457 7870			l_2893
 14458 				; --- ForToDoCondition
 14459 7870 AD 9E AC			lda X
 14460 7873 C9 05			cmp #$05
 14461 7875 B0 38			jcs l_28A1
 14462
 14463 				; optimize OK (vservice.pas), line = 2402
 14464
 14465 7877 AD 98 AC			lda PX
 14466 787A 6D 9E AC			adc X
 14467 787D 85 9F			sta :STACKORIGIN+9
 14468 787F AD 99 AC			lda PX+1
 14469 7882 69 00			adc #$00
 14470 7884 AD 9B AC			lda PY+1
 14471 7887 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 14472 7889 AD 9A AC			lda PY
 14473 788C 0A				asl @
 14474 788D 26 B0			rol :STACKORIGIN+STACKWIDTH+10
 14475 788F 18 6D 29 9B			add ROW
 14476 7893 85 84			sta :bp2
 14477 7895 AD 2A 9B			lda ROW+1
 14478 7898 65 B0			adc :STACKORIGIN+STACKWIDTH+10
 14479 789A 85 85			sta :bp2+1
 14480 789C A0 0A			ldy #$0A
 14481 789E A5 9F			lda :STACKORIGIN+9
 14482 78A0 18 71 84			add (:bp2),y
 14483 78A3 A8				tay
 14484 78A4 AD A0 AC			lda A
 14485 78A7 99 DB A9			sta adr.SCREEN,y
 14486
 14487 				; --- ForToDoEpilog
 14488 78AA EE 9E AC			inc X
 14489 78AD D0 C1			jne l_2893
 14490 78AF			l_28A1
 14491
 14492 				; optimize OK (vservice.pas), line = 2406
 14493
 14494 78AF A9 DE			lda #$DE
 14495 78B1 8D A0 AC			sta A
 14496
 14497 				; optimize OK (vservice.pas), line = 2407
 14498
 14499 78B4 AC 9C AC			ldy NUM
 14500 78B7 B9 84 10			lda adr.DIGITS,y
 14501 78BA 29 04			and #$04
 14502 78BC C9 04			cmp #$04
 14503 78BE D0 05			jne l_28DB
 14504 78C0 A9 DF			lda #$DF
 14505 78C2 8D A0 AC			sta A
 14506 78C5			l_28DB
 14507
 14508 				; optimize OK (vservice.pas), line = 2408
 14509
 14510 78C5 A9 01			lda #$01
 14511 78C7 8D 9E AC			sta X
 14512
 14513 78CA			l_28EB
 14514 				; --- ForToDoCondition
 14515 78CA AD 9E AC			lda X
 14516 78CD C9 05			cmp #$05
 14517 78CF B0 38			jcs l_28F9
 14518
 14519 				; optimize OK (vservice.pas), line = 2409
 14520
 14521 78D1 AD 98 AC			lda PX
 14522 78D4 6D 9E AC			adc X
 14523 78D7 85 9F			sta :STACKORIGIN+9
 14524 78D9 AD 99 AC			lda PX+1
 14525 78DC 69 00			adc #$00
 14526 78DE AD 9B AC			lda PY+1
 14527 78E1 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 14528 78E3 AD 9A AC			lda PY
 14529 78E6 0A				asl @
 14530 78E7 26 B0			rol :STACKORIGIN+STACKWIDTH+10
 14531 78E9 18 6D 29 9B			add ROW
 14532 78ED 85 84			sta :bp2
 14533 78EF AD 2A 9B			lda ROW+1
 14534 78F2 65 B0			adc :STACKORIGIN+STACKWIDTH+10
 14535 78F4 85 85			sta :bp2+1
 14536 78F6 A0 14			ldy #$14
 14537 78F8 A5 9F			lda :STACKORIGIN+9
 14538 78FA 18 71 84			add (:bp2),y
 14539 78FD A8				tay
 14540 78FE AD A0 AC			lda A
 14541 7901 99 DB A9			sta adr.SCREEN,y
 14542
 14543 				; --- ForToDoEpilog
 14544 7904 EE 9E AC			inc X
 14545 7907 D0 C1			jne l_28EB
 14546 7909			l_28F9
 14547
 14548 				; optimize OK (vservice.pas), line = 2412
 14549
 14550 7909 A9 DE			lda #$DE
 14551 790B 8D A0 AC			sta A
 14552
 14553 				; optimize OK (vservice.pas), line = 2413
 14554
 14555 790E AC 9C AC			ldy NUM
 14556 7911 B9 84 10			lda adr.DIGITS,y
 14557 7914 29 08			and #$08
 14558 7916 C9 08			cmp #$08
 14559 7918 D0 05			jne l_2933
 14560 791A A9 DF			lda #$DF
 14561 791C 8D A0 AC			sta A
 14562 791F			l_2933
 14563
 14564 				; optimize OK (vservice.pas), line = 2414
 14565
 14566 791F A9 01			lda #$01
 14567 7921 8D 9F AC			sta Y
 14568
 14569 7924			l_2943
 14570 				; --- ForToDoCondition
 14571 7924 AD 9F AC			lda Y
 14572 7927 C9 05			cmp #$05
 14573 7929 B0 35			jcs l_2951
 14574
 14575 				; optimize OK (vservice.pas), line = 2415
 14576
 14577 792B AD 9A AC			lda PY
 14578 792E 6D 9F AC			adc Y
 14579 7931 85 A0			sta :STACKORIGIN+10
 14580 7933 AD 9B AC			lda PY+1
 14581 7936 69 00			adc #$00
 14582 7938 06 A0			asl :STACKORIGIN+10
 14583 793A 2A				rol @
 14584 793B 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 14585 793D AD 29 9B			lda ROW
 14586 7940 18 65 A0			add :STACKORIGIN+10
 14587 7943 85 84			sta :bp2
 14588 7945 AD 2A 9B			lda ROW+1
 14589 7948 65 B0			adc :STACKORIGIN+STACKWIDTH+10
 14590 794A 85 85			sta :bp2+1
 14591 794C A0 00			ldy #$00
 14592 794E AD 98 AC			lda PX
 14593 7951 18 71 84			add (:bp2),y
 14594 7954 A8				tay
 14595 7955 AD A0 AC			lda A
 14596 7958 99 DB A9			sta adr.SCREEN,y
 14597
 14598 				; --- ForToDoEpilog
 14599 795B EE 9F AC			inc Y
 14600 795E D0 C4			jne l_2943
 14601 7960			l_2951
 14602
 14603 				; optimize OK (vservice.pas), line = 2418
 14604
 14605 7960 A9 DE			lda #$DE
 14606 7962 8D A0 AC			sta A
 14607
 14608 				; optimize OK (vservice.pas), line = 2419
 14609
 14610 7965 AC 9C AC			ldy NUM
 14611 7968 B9 84 10			lda adr.DIGITS,y
 14612 796B 29 10			and #$10
 14613 796D C9 10			cmp #$10
 14614 796F D0 05			jne l_2987
 14615 7971 A9 DF			lda #$DF
 14616 7973 8D A0 AC			sta A
 14617 7976			l_2987
 14618
 14619 				; optimize OK (vservice.pas), line = 2420
 14620
 14621 7976 A9 01			lda #$01
 14622 7978 8D 9F AC			sta Y
 14623
 14624 797B			l_2997
 14625 				; --- ForToDoCondition
 14626 797B AD 9F AC			lda Y
 14627 797E C9 05			cmp #$05
 14628 7980 B0 42			jcs l_29A5
 14629
 14630 				; optimize OK (vservice.pas), line = 2421
 14631
 14632 7982 AD 9A AC			lda PY
 14633 7985 6D 9F AC			adc Y
 14634 7988 85 A0			sta :STACKORIGIN+10
 14635 798A AD 9B AC			lda PY+1
 14636 798D 69 00			adc #$00
 14637 798F 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 14638 7991 A5 A0			lda :STACKORIGIN+10
 14639 7993 18 69 05			add #$05
 14640 7996 85 A0			sta :STACKORIGIN+10
 14641 7998 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
 14642 799A 69 00			adc #$00
 14643 799C 06 A0			asl :STACKORIGIN+10
 14644 799E 2A				rol @
 14645 799F 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 14646 79A1 AD 29 9B			lda ROW
 14647 79A4 18 65 A0			add :STACKORIGIN+10
 14648 79A7 85 84			sta :bp2
 14649 79A9 AD 2A 9B			lda ROW+1
 14650 79AC 65 B0			adc :STACKORIGIN+STACKWIDTH+10
 14651 79AE 85 85			sta :bp2+1
 14652 79B0 A0 00			ldy #$00
 14653 79B2 AD 98 AC			lda PX
 14654 79B5 18 71 84			add (:bp2),y
 14655 79B8 A8				tay
 14656 79B9 AD A0 AC			lda A
 14657 79BC 99 DB A9			sta adr.SCREEN,y
 14658
 14659 				; --- ForToDoEpilog
 14660 79BF EE 9F AC			inc Y
 14661 79C2 D0 B7			jne l_2997
 14662 79C4			l_29A5
 14663
 14664 				; optimize OK (vservice.pas), line = 2424
 14665
 14666 79C4 A9 DE			lda #$DE
 14667 79C6 8D A0 AC			sta A
 14668
 14669 				; optimize OK (vservice.pas), line = 2425
 14670
 14671 79C9 AC 9C AC			ldy NUM
 14672 79CC B9 84 10			lda adr.DIGITS,y
 14673 79CF 29 20			and #$20
 14674 79D1 C9 20			cmp #$20
 14675 79D3 D0 05			jne l_29DF
 14676 79D5 A9 DF			lda #$DF
 14677 79D7 8D A0 AC			sta A
 14678 79DA			l_29DF
 14679
 14680 				; optimize OK (vservice.pas), line = 2426
 14681
 14682 79DA A9 01			lda #$01
 14683 79DC 8D 9F AC			sta Y
 14684
 14685 79DF			l_29EF
 14686 				; --- ForToDoCondition
 14687 79DF AD 9F AC			lda Y
 14688 79E2 C9 05			cmp #$05
 14689 79E4 B0 3C			jcs l_29FD
 14690
 14691 				; optimize OK (vservice.pas), line = 2427
 14692
 14693 79E6 AD 98 AC			lda PX
 14694 79E9 69 05			adc #$05
 14695 79EB 85 9F			sta :STACKORIGIN+9
 14696 79ED AD 9A AC			lda PY
 14697 79F0 18 6D 9F AC			add Y
 14698 79F4 85 A0			sta :STACKORIGIN+10
 14699 79F6 AD 9B AC			lda PY+1
 14700 79F9 69 00			adc #$00
 14701 79FB 06 A0			asl :STACKORIGIN+10
 14702 79FD 2A				rol @
 14703 79FE 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 14704 7A00 AD 29 9B			lda ROW
 14705 7A03 18 65 A0			add :STACKORIGIN+10
 14706 7A06 85 84			sta :bp2
 14707 7A08 AD 2A 9B			lda ROW+1
 14708 7A0B 65 B0			adc :STACKORIGIN+STACKWIDTH+10
 14709 7A0D 85 85			sta :bp2+1
 14710 7A0F A0 00			ldy #$00
 14711 7A11 A5 9F			lda :STACKORIGIN+9
 14712 7A13 18 71 84			add (:bp2),y
 14713 7A16 A8				tay
 14714 7A17 AD A0 AC			lda A
 14715 7A1A 99 DB A9			sta adr.SCREEN,y
 14716
 14717 				; --- ForToDoEpilog
 14718 7A1D EE 9F AC			inc Y
 14719 7A20 D0 BD			jne l_29EF
 14720 7A22			l_29FD
 14721
 14722 				; optimize OK (vservice.pas), line = 2430
 14723
 14724 7A22 A9 DE			lda #$DE
 14725 7A24 8D A0 AC			sta A
 14726
 14727 				; optimize OK (vservice.pas), line = 2431
 14728
 14729 7A27 AC 9C AC			ldy NUM
 14730 7A2A B9 84 10			lda adr.DIGITS,y
 14731 7A2D 29 40			and #$40
 14732 7A2F C9 40			cmp #$40
 14733 7A31 D0 05			jne l_2A37
 14734 7A33 A9 DF			lda #$DF
 14735 7A35 8D A0 AC			sta A
 14736 7A38			l_2A37
 14737
 14738 				; optimize OK (vservice.pas), line = 2432
 14739
 14740 7A38 A9 01			lda #$01
 14741 7A3A 8D 9F AC			sta Y
 14742
 14743 7A3D			l_2A47
 14744 				; --- ForToDoCondition
 14745 7A3D AD 9F AC			lda Y
 14746 7A40 C9 05			cmp #$05
 14747 7A42 B0 49			jcs l_2A55
 14748
 14749 				; optimize OK (vservice.pas), line = 2433
 14750
 14751 7A44 AD 98 AC			lda PX
 14752 7A47 69 05			adc #$05
 14753 7A49 85 9F			sta :STACKORIGIN+9
 14754 7A4B AD 9A AC			lda PY
 14755 7A4E 18 6D 9F AC			add Y
 14756 7A52 85 A0			sta :STACKORIGIN+10
 14757 7A54 AD 9B AC			lda PY+1
 14758 7A57 69 00			adc #$00
 14759 7A59 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 14760 7A5B A5 A0			lda :STACKORIGIN+10
 14761 7A5D 18 69 05			add #$05
 14762 7A60 85 A0			sta :STACKORIGIN+10
 14763 7A62 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
 14764 7A64 69 00			adc #$00
 14765 7A66 06 A0			asl :STACKORIGIN+10
 14766 7A68 2A				rol @
 14767 7A69 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 14768 7A6B AD 29 9B			lda ROW
 14769 7A6E 18 65 A0			add :STACKORIGIN+10
 14770 7A71 85 84			sta :bp2
 14771 7A73 AD 2A 9B			lda ROW+1
 14772 7A76 65 B0			adc :STACKORIGIN+STACKWIDTH+10
 14773 7A78 85 85			sta :bp2+1
 14774 7A7A A0 00			ldy #$00
 14775 7A7C A5 9F			lda :STACKORIGIN+9
 14776 7A7E 18 71 84			add (:bp2),y
 14777 7A81 A8				tay
 14778 7A82 AD A0 AC			lda A
 14779 7A85 99 DB A9			sta adr.SCREEN,y
 14780
 14781 				; --- ForToDoEpilog
 14782 7A88 EE 9F AC			inc Y
 14783 7A8B D0 B0			jne l_2A47
 14784 7A8D			l_2A55
 14785
 14786 				; ------------------------------------------------------------
 14787
 14788 = AC98			PX	= DATAORIGIN+$107B
 14789 = AC9A			PY	= DATAORIGIN+$107D
 14790 = AC9C			NUM	= DATAORIGIN+$107F
 14791 = AC9E			X	= DATAORIGIN+$1081
 14792 = AC9F			Y	= DATAORIGIN+$1082
 14793 = ACA0			A	= DATAORIGIN+$1083
 14794
 14795 = AC98			@VarData	= PX
 14796 = 0009			@VarDataSize	= 9
 14797
 14798 7A8D			@exit
 14799 					.ifdef @new
 14800 					lda <@VarData
 14801 					sta :ztmp
 14802 					lda >@VarData
 14803 					ldy #@VarDataSize-1
 14804 					jmp @FreeMem
 14805 					els
 14806 7A8D 60				rts						; ret
 14807 					eif
 14808 				.endl
 14809
 14810 7A8E			.local	WRITE_SCORE					; PROCEDURE
 14811
 14812 				; optimize OK (vservice.pas), line = 2444
 14813
 14814 7A8E A9 00			lda #$00
 14815 7A90 8D AD AC			sta F
 14816
 14817 				; optimize OK (vservice.pas), line = 2449
 14818
 14819 7A93 A9 A0			lda #$A0
 14820 7A95 85 8E			sta @INTEGER.DIV.B
 14821 7A97 A9 86			lda #$86
 14822 7A99 85 8F			sta @INTEGER.DIV.B+1
 14823 7A9B A9 01			lda #$01
 14824 7A9D 85 90			sta @INTEGER.DIV.B+2
 14825 7A9F A9 00			lda #$00
 14826 7AA1 85 91			sta @INTEGER.DIV.B+3
 14827 7AA3 AD A5 AC			lda SC
 14828 7AA6 85 86			sta @INTEGER.DIV.A
 14829 7AA8 AD A6 AC			lda SC+1
 14830 7AAB 85 87			sta @INTEGER.DIV.A+1
 14831 7AAD AD A7 AC			lda SC+2
 14832 7AB0 85 88			sta @INTEGER.DIV.A+2
 14833 7AB2 AD A8 AC			lda SC+3
 14834 7AB5 85 89			sta @INTEGER.DIV.A+3
 14835 7AB7 20 62 12			jsr @INTEGER.DIV
 14836 7ABA A9 0A			lda #$0A
 14837 7ABC 85 8E			sta @INTEGER.MOD.B
 14838 7ABE A9 00			lda #$00
 14839 7AC0 85 8F			sta @INTEGER.MOD.B+1
 14840 7AC2 85 90			sta @INTEGER.MOD.B+2
 14841 7AC4 85 91			sta @INTEGER.MOD.B+3
 14842 7AC6 20 7F 12			jsr @INTEGER.MOD
 14843 7AC9 A5 8A			lda @INTEGER.MOD.RESULT
 14844 7ACB 8D A9 AC			sta N1
 14845 7ACE A5 8B			lda @INTEGER.MOD.RESULT+1
 14846 7AD0 8D AA AC			sta N1+1
 14847 7AD3 A5 8C			lda @INTEGER.MOD.RESULT+2
 14848 7AD5 8D AB AC			sta N1+2
 14849 7AD8 A5 8D			lda @INTEGER.MOD.RESULT+3
 14850 7ADA 8D AC AC			sta N1+3
 14851
 14852 				; optimize OK (vservice.pas), line = 2450
 14853
 14854 7ADD 30 10			jmi l_2A9B
 14855 7ADF 0D AB AC			ora N1+2
 14856 7AE2 0D AA AC			ora N1+1
 14857 7AE5 0D A9 AC			ora N1
 14858 7AE8 F0 05			jeq l_2A9B
 14859 7AEA A9 01			lda #$01
 14860 7AEC 8D AD AC			sta F
 14861 7AEF			l_2A9B
 14862
 14863 				; optimize OK (vservice.pas), line = 2451
 14864
 14865 7AEF AD AD AC			lda F
 14866 7AF2 F0 24			jeq l_2AAE
 14867 7AF4 AD A1 AC			lda PX
 14868 7AF7 8D 98 AC			sta PUT_DIGIT.PX
 14869 7AFA AD A2 AC			lda PX+1
 14870 7AFD 8D 99 AC			sta PUT_DIGIT.PX+1
 14871 7B00 AD A3 AC			lda PY
 14872 7B03 8D 9A AC			sta PUT_DIGIT.PY
 14873 7B06 AD A4 AC			lda PY+1
 14874 7B09 8D 9B AC			sta PUT_DIGIT.PY+1
 14875 7B0C AD A9 AC			lda N1
 14876 7B0F 8D 9C AC			sta PUT_DIGIT.NUM
 14877 7B12 AD AA AC			lda N1+1
 14878 7B15 4C 37 7B			jmp l_2ABE
 14879 7B18			l_2AAE
 14880
 14881 				; optimize OK (vservice.pas), line = 2452
 14882
 14883 7B18 AD A1 AC			lda PX
 14884 7B1B 8D 98 AC			sta PUT_DIGIT.PX
 14885 7B1E AD A2 AC			lda PX+1
 14886 7B21 8D 99 AC			sta PUT_DIGIT.PX+1
 14887 7B24 AD A3 AC			lda PY
 14888 7B27 8D 9A AC			sta PUT_DIGIT.PY
 14889 7B2A AD A4 AC			lda PY+1
 14890 7B2D 8D 9B AC			sta PUT_DIGIT.PY+1
 14891 7B30 A9 0A			lda #$0A
 14892 7B32 8D 9C AC			sta PUT_DIGIT.NUM
 14893 7B35 A9 00			lda #$00
 14894 7B37			l_2ABE
 14895 7B37 8D 9D AC			sta PUT_DIGIT.NUM+1
 14896 7B3A 20 FB 77			jsr PUT_DIGIT
 14897
 14898 				; optimize OK (vservice.pas), line = 2455
 14899
 14900 7B3D A9 10			lda #$10
 14901 7B3F 85 8E			sta @INTEGER.DIV.B
 14902 7B41 A9 27			lda #$27
 14903 7B43 85 8F			sta @INTEGER.DIV.B+1
 14904 7B45 A9 00			lda #$00
 14905 7B47 85 90			sta @INTEGER.DIV.B+2
 14906 7B49 85 91			sta @INTEGER.DIV.B+3
 14907 7B4B AD A5 AC			lda SC
 14908 7B4E 85 86			sta @INTEGER.DIV.A
 14909 7B50 AD A6 AC			lda SC+1
 14910 7B53 85 87			sta @INTEGER.DIV.A+1
 14911 7B55 AD A7 AC			lda SC+2
 14912 7B58 85 88			sta @INTEGER.DIV.A+2
 14913 7B5A AD A8 AC			lda SC+3
 14914 7B5D 85 89			sta @INTEGER.DIV.A+3
 14915 7B5F 20 62 12			jsr @INTEGER.DIV
 14916 7B62 A9 0A			lda #$0A
 14917 7B64 85 8E			sta @INTEGER.MOD.B
 14918 7B66 A9 00			lda #$00
 14919 7B68 85 8F			sta @INTEGER.MOD.B+1
 14920 7B6A 85 90			sta @INTEGER.MOD.B+2
 14921 7B6C 85 91			sta @INTEGER.MOD.B+3
 14922 7B6E 20 7F 12			jsr @INTEGER.MOD
 14923 7B71 A5 8A			lda @INTEGER.MOD.RESULT
 14924 7B73 8D A9 AC			sta N1
 14925 7B76 A5 8B			lda @INTEGER.MOD.RESULT+1
 14926 7B78 8D AA AC			sta N1+1
 14927 7B7B A5 8C			lda @INTEGER.MOD.RESULT+2
 14928 7B7D 8D AB AC			sta N1+2
 14929 7B80 A5 8D			lda @INTEGER.MOD.RESULT+3
 14930 7B82 8D AC AC			sta N1+3
 14931
 14932 				; optimize OK (vservice.pas), line = 2456
 14933
 14934 7B85 30 10			jmi l_2AE0
 14935 7B87 0D AB AC			ora N1+2
 14936 7B8A 0D AA AC			ora N1+1
 14937 7B8D 0D A9 AC			ora N1
 14938 7B90 F0 05			jeq l_2AE0
 14939 7B92 A9 01			lda #$01
 14940 7B94 8D AD AC			sta F
 14941 7B97			l_2AE0
 14942
 14943 				; optimize OK (vservice.pas), line = 2457
 14944
 14945 7B97 AD AD AC			lda F
 14946 7B9A F0 29			jeq l_2AF3
 14947 7B9C AD A1 AC			lda PX
 14948 7B9F 18 69 07			add #$07
 14949 7BA2 8D 98 AC			sta PUT_DIGIT.PX
 14950 7BA5 AD A2 AC			lda PX+1
 14951 7BA8 69 00			adc #$00
 14952 7BAA 8D 99 AC			sta PUT_DIGIT.PX+1
 14953 7BAD AD A3 AC			lda PY
 14954 7BB0 8D 9A AC			sta PUT_DIGIT.PY
 14955 7BB3 AD A4 AC			lda PY+1
 14956 7BB6 8D 9B AC			sta PUT_DIGIT.PY+1
 14957 7BB9 AD A9 AC			lda N1
 14958 7BBC 8D 9C AC			sta PUT_DIGIT.NUM
 14959 7BBF AD AA AC			lda N1+1
 14960 7BC2 4C E9 7B			jmp l_2B07
 14961 7BC5			l_2AF3
 14962
 14963 				; optimize OK (vservice.pas), line = 2458
 14964
 14965 7BC5 AD A1 AC			lda PX
 14966 7BC8 18 69 07			add #$07
 14967 7BCB 8D 98 AC			sta PUT_DIGIT.PX
 14968 7BCE AD A2 AC			lda PX+1
 14969 7BD1 69 00			adc #$00
 14970 7BD3 8D 99 AC			sta PUT_DIGIT.PX+1
 14971 7BD6 AD A3 AC			lda PY
 14972 7BD9 8D 9A AC			sta PUT_DIGIT.PY
 14973 7BDC AD A4 AC			lda PY+1
 14974 7BDF 8D 9B AC			sta PUT_DIGIT.PY+1
 14975 7BE2 A9 0A			lda #$0A
 14976 7BE4 8D 9C AC			sta PUT_DIGIT.NUM
 14977 7BE7 A9 00			lda #$00
 14978 7BE9			l_2B07
 14979 7BE9 8D 9D AC			sta PUT_DIGIT.NUM+1
 14980 7BEC 20 FB 77			jsr PUT_DIGIT
 14981
 14982 				; optimize OK (vservice.pas), line = 2461
 14983
 14984 7BEF A9 E8			lda #$E8
 14985 7BF1 85 8E			sta @INTEGER.DIV.B
 14986 7BF3 A9 03			lda #$03
 14987 7BF5 85 8F			sta @INTEGER.DIV.B+1
 14988 7BF7 A9 00			lda #$00
 14989 7BF9 85 90			sta @INTEGER.DIV.B+2
 14990 7BFB 85 91			sta @INTEGER.DIV.B+3
 14991 7BFD AD A5 AC			lda SC
 14992 7C00 85 86			sta @INTEGER.DIV.A
 14993 7C02 AD A6 AC			lda SC+1
 14994 7C05 85 87			sta @INTEGER.DIV.A+1
 14995 7C07 AD A7 AC			lda SC+2
 14996 7C0A 85 88			sta @INTEGER.DIV.A+2
 14997 7C0C AD A8 AC			lda SC+3
 14998 7C0F 85 89			sta @INTEGER.DIV.A+3
 14999 7C11 20 62 12			jsr @INTEGER.DIV
 15000 7C14 A9 0A			lda #$0A
 15001 7C16 85 8E			sta @INTEGER.MOD.B
 15002 7C18 A9 00			lda #$00
 15003 7C1A 85 8F			sta @INTEGER.MOD.B+1
 15004 7C1C 85 90			sta @INTEGER.MOD.B+2
 15005 7C1E 85 91			sta @INTEGER.MOD.B+3
 15006 7C20 20 7F 12			jsr @INTEGER.MOD
 15007 7C23 A5 8A			lda @INTEGER.MOD.RESULT
 15008 7C25 8D A9 AC			sta N1
 15009 7C28 A5 8B			lda @INTEGER.MOD.RESULT+1
 15010 7C2A 8D AA AC			sta N1+1
 15011 7C2D A5 8C			lda @INTEGER.MOD.RESULT+2
 15012 7C2F 8D AB AC			sta N1+2
 15013 7C32 A5 8D			lda @INTEGER.MOD.RESULT+3
 15014 7C34 8D AC AC			sta N1+3
 15015
 15016 				; optimize OK (vservice.pas), line = 2462
 15017
 15018 7C37 30 10			jmi l_2B2D
 15019 7C39 0D AB AC			ora N1+2
 15020 7C3C 0D AA AC			ora N1+1
 15021 7C3F 0D A9 AC			ora N1
 15022 7C42 F0 05			jeq l_2B2D
 15023 7C44 A9 01			lda #$01
 15024 7C46 8D AD AC			sta F
 15025 7C49			l_2B2D
 15026
 15027 				; optimize OK (vservice.pas), line = 2463
 15028
 15029 7C49 AD AD AC			lda F
 15030 7C4C F0 29			jeq l_2B40
 15031 7C4E AD A1 AC			lda PX
 15032 7C51 18 69 0E			add #$0E
 15033 7C54 8D 98 AC			sta PUT_DIGIT.PX
 15034 7C57 AD A2 AC			lda PX+1
 15035 7C5A 69 00			adc #$00
 15036 7C5C 8D 99 AC			sta PUT_DIGIT.PX+1
 15037 7C5F AD A3 AC			lda PY
 15038 7C62 8D 9A AC			sta PUT_DIGIT.PY
 15039 7C65 AD A4 AC			lda PY+1
 15040 7C68 8D 9B AC			sta PUT_DIGIT.PY+1
 15041 7C6B AD A9 AC			lda N1
 15042 7C6E 8D 9C AC			sta PUT_DIGIT.NUM
 15043 7C71 AD AA AC			lda N1+1
 15044 7C74 4C 9B 7C			jmp l_2B54
 15045 7C77			l_2B40
 15046
 15047 				; optimize OK (vservice.pas), line = 2464
 15048
 15049 7C77 AD A1 AC			lda PX
 15050 7C7A 18 69 0E			add #$0E
 15051 7C7D 8D 98 AC			sta PUT_DIGIT.PX
 15052 7C80 AD A2 AC			lda PX+1
 15053 7C83 69 00			adc #$00
 15054 7C85 8D 99 AC			sta PUT_DIGIT.PX+1
 15055 7C88 AD A3 AC			lda PY
 15056 7C8B 8D 9A AC			sta PUT_DIGIT.PY
 15057 7C8E AD A4 AC			lda PY+1
 15058 7C91 8D 9B AC			sta PUT_DIGIT.PY+1
 15059 7C94 A9 0A			lda #$0A
 15060 7C96 8D 9C AC			sta PUT_DIGIT.NUM
 15061 7C99 A9 00			lda #$00
 15062 7C9B			l_2B54
 15063 7C9B 8D 9D AC			sta PUT_DIGIT.NUM+1
 15064 7C9E 20 FB 77			jsr PUT_DIGIT
 15065
 15066 				; optimize OK (vservice.pas), line = 2467
 15067
 15068 7CA1 A9 64			lda #$64
 15069 7CA3 85 8E			sta @INTEGER.DIV.B
 15070 7CA5 A9 00			lda #$00
 15071 7CA7 85 8F			sta @INTEGER.DIV.B+1
 15072 7CA9 85 90			sta @INTEGER.DIV.B+2
 15073 7CAB 85 91			sta @INTEGER.DIV.B+3
 15074 7CAD AD A5 AC			lda SC
 15075 7CB0 85 86			sta @INTEGER.DIV.A
 15076 7CB2 AD A6 AC			lda SC+1
 15077 7CB5 85 87			sta @INTEGER.DIV.A+1
 15078 7CB7 AD A7 AC			lda SC+2
 15079 7CBA 85 88			sta @INTEGER.DIV.A+2
 15080 7CBC AD A8 AC			lda SC+3
 15081 7CBF 85 89			sta @INTEGER.DIV.A+3
 15082 7CC1 20 62 12			jsr @INTEGER.DIV
 15083 7CC4 A9 0A			lda #$0A
 15084 7CC6 85 8E			sta @INTEGER.MOD.B
 15085 7CC8 A9 00			lda #$00
 15086 7CCA 85 8F			sta @INTEGER.MOD.B+1
 15087 7CCC 85 90			sta @INTEGER.MOD.B+2
 15088 7CCE 85 91			sta @INTEGER.MOD.B+3
 15089 7CD0 20 7F 12			jsr @INTEGER.MOD
 15090 7CD3 A5 8A			lda @INTEGER.MOD.RESULT
 15091 7CD5 8D A9 AC			sta N1
 15092 7CD8 A5 8B			lda @INTEGER.MOD.RESULT+1
 15093 7CDA 8D AA AC			sta N1+1
 15094 7CDD A5 8C			lda @INTEGER.MOD.RESULT+2
 15095 7CDF 8D AB AC			sta N1+2
 15096 7CE2 A5 8D			lda @INTEGER.MOD.RESULT+3
 15097 7CE4 8D AC AC			sta N1+3
 15098
 15099 				; optimize OK (vservice.pas), line = 2468
 15100
 15101 7CE7 30 10			jmi l_2B7A
 15102 7CE9 0D AB AC			ora N1+2
 15103 7CEC 0D AA AC			ora N1+1
 15104 7CEF 0D A9 AC			ora N1
 15105 7CF2 F0 05			jeq l_2B7A
 15106 7CF4 A9 01			lda #$01
 15107 7CF6 8D AD AC			sta F
 15108 7CF9			l_2B7A
 15109
 15110 				; optimize OK (vservice.pas), line = 2469
 15111
 15112 7CF9 AD AD AC			lda F
 15113 7CFC F0 29			jeq l_2B8D
 15114 7CFE AD A1 AC			lda PX
 15115 7D01 18 69 15			add #$15
 15116 7D04 8D 98 AC			sta PUT_DIGIT.PX
 15117 7D07 AD A2 AC			lda PX+1
 15118 7D0A 69 00			adc #$00
 15119 7D0C 8D 99 AC			sta PUT_DIGIT.PX+1
 15120 7D0F AD A3 AC			lda PY
 15121 7D12 8D 9A AC			sta PUT_DIGIT.PY
 15122 7D15 AD A4 AC			lda PY+1
 15123 7D18 8D 9B AC			sta PUT_DIGIT.PY+1
 15124 7D1B AD A9 AC			lda N1
 15125 7D1E 8D 9C AC			sta PUT_DIGIT.NUM
 15126 7D21 AD AA AC			lda N1+1
 15127 7D24 4C 4B 7D			jmp l_2BA1
 15128 7D27			l_2B8D
 15129
 15130 				; optimize OK (vservice.pas), line = 2470
 15131
 15132 7D27 AD A1 AC			lda PX
 15133 7D2A 18 69 15			add #$15
 15134 7D2D 8D 98 AC			sta PUT_DIGIT.PX
 15135 7D30 AD A2 AC			lda PX+1
 15136 7D33 69 00			adc #$00
 15137 7D35 8D 99 AC			sta PUT_DIGIT.PX+1
 15138 7D38 AD A3 AC			lda PY
 15139 7D3B 8D 9A AC			sta PUT_DIGIT.PY
 15140 7D3E AD A4 AC			lda PY+1
 15141 7D41 8D 9B AC			sta PUT_DIGIT.PY+1
 15142 7D44 A9 0A			lda #$0A
 15143 7D46 8D 9C AC			sta PUT_DIGIT.NUM
 15144 7D49 A9 00			lda #$00
 15145 7D4B			l_2BA1
 15146 7D4B 8D 9D AC			sta PUT_DIGIT.NUM+1
 15147 7D4E 20 FB 77			jsr PUT_DIGIT
 15148
 15149 				; optimize OK (vservice.pas), line = 2473
 15150
 15151 7D51 A9 0A			lda #$0A
 15152 7D53 85 8E			sta @INTEGER.DIV.B
 15153 7D55 A9 00			lda #$00
 15154 7D57 85 8F			sta @INTEGER.DIV.B+1
 15155 7D59 85 90			sta @INTEGER.DIV.B+2
 15156 7D5B 85 91			sta @INTEGER.DIV.B+3
 15157 7D5D AD A5 AC			lda SC
 15158 7D60 85 86			sta @INTEGER.DIV.A
 15159 7D62 AD A6 AC			lda SC+1
 15160 7D65 85 87			sta @INTEGER.DIV.A+1
 15161 7D67 AD A7 AC			lda SC+2
 15162 7D6A 85 88			sta @INTEGER.DIV.A+2
 15163 7D6C AD A8 AC			lda SC+3
 15164 7D6F 85 89			sta @INTEGER.DIV.A+3
 15165 7D71 20 62 12			jsr @INTEGER.DIV
 15166 7D74 A9 0A			lda #$0A
 15167 7D76 85 8E			sta @INTEGER.MOD.B
 15168 7D78 A9 00			lda #$00
 15169 7D7A 85 8F			sta @INTEGER.MOD.B+1
 15170 7D7C 85 90			sta @INTEGER.MOD.B+2
 15171 7D7E 85 91			sta @INTEGER.MOD.B+3
 15172 7D80 20 7F 12			jsr @INTEGER.MOD
 15173 7D83 A5 8A			lda @INTEGER.MOD.RESULT
 15174 7D85 8D A9 AC			sta N1
 15175 7D88 A5 8B			lda @INTEGER.MOD.RESULT+1
 15176 7D8A 8D AA AC			sta N1+1
 15177 7D8D A5 8C			lda @INTEGER.MOD.RESULT+2
 15178 7D8F 8D AB AC			sta N1+2
 15179 7D92 A5 8D			lda @INTEGER.MOD.RESULT+3
 15180 7D94 8D AC AC			sta N1+3
 15181
 15182 				; optimize OK (vservice.pas), line = 2474
 15183
 15184 7D97 AD A1 AC			lda PX
 15185 7D9A 18 69 1C			add #$1C
 15186 7D9D 8D 98 AC			sta PUT_DIGIT.PX
 15187 7DA0 AD A2 AC			lda PX+1
 15188 7DA3 69 00			adc #$00
 15189 7DA5 8D 99 AC			sta PUT_DIGIT.PX+1
 15190 7DA8 AD A3 AC			lda PY
 15191 7DAB 8D 9A AC			sta PUT_DIGIT.PY
 15192 7DAE AD A4 AC			lda PY+1
 15193 7DB1 8D 9B AC			sta PUT_DIGIT.PY+1
 15194 7DB4 AD A9 AC			lda N1
 15195 7DB7 8D 9C AC			sta PUT_DIGIT.NUM
 15196 7DBA AD AA AC			lda N1+1
 15197 7DBD 8D 9D AC			sta PUT_DIGIT.NUM+1
 15198 7DC0 20 FB 77			jsr PUT_DIGIT
 15199
 15200 				; optimize OK (vservice.pas), line = 2478
 15201
 15202 7DC3 AD A1 AC			lda PX
 15203 7DC6 18 69 23			add #$23
 15204 7DC9 8D 98 AC			sta PUT_DIGIT.PX
 15205 7DCC AD A2 AC			lda PX+1
 15206 7DCF 69 00			adc #$00
 15207 7DD1 8D 99 AC			sta PUT_DIGIT.PX+1
 15208 7DD4 AD A3 AC			lda PY
 15209 7DD7 8D 9A AC			sta PUT_DIGIT.PY
 15210 7DDA AD A4 AC			lda PY+1
 15211 7DDD 8D 9B AC			sta PUT_DIGIT.PY+1
 15212 7DE0 A9 00			lda #$00
 15213 7DE2 8D 9C AC			sta PUT_DIGIT.NUM
 15214 7DE5 8D 9D AC			sta PUT_DIGIT.NUM+1
 15215 7DE8 20 FB 77			jsr PUT_DIGIT
 15216
 15217 				; ------------------------------------------------------------
 15218
 15219 = ACA1			PX	= DATAORIGIN+$1084
 15220 = ACA3			PY	= DATAORIGIN+$1086
 15221 = ACA5			SC	= DATAORIGIN+$1088
 15222 = ACA9			N1	= DATAORIGIN+$108C
 15223 = ACAD			F	= DATAORIGIN+$1090
 15224
 15225 = ACA1			@VarData	= PX
 15226 = 000D			@VarDataSize	= 13
 15227
 15228 7DEB			@exit
 15229 					.ifdef @new
 15230 					lda <@VarData
 15231 					sta :ztmp
 15232 					lda >@VarData
 15233 					ldy #@VarDataSize-1
 15234 					jmp @FreeMem
 15235 					els
 15236 7DEB 60				rts						; ret
 15237 					eif
 15238 				.endl
 15239
 15240 7DEC			.local	PLOT_LIVES					; PROCEDURE
 15241
 15242 				; optimize FAIL (0, vservice.pas), line = 2524
 15243
 15244 7DEC AD AE AC			lda LIVES
 15245 7DEF D0 03			bne @+
 15246 7DF1 CE AF AC			dec LIVES+1
 15247 				@
 15248 7DF4 CE AE AC			dec LIVES
 15249
 15250 				; optimize OK (vservice.pas), line = 2527
 15251
 15252 7DF7 A9 00			lda #$00
 15253 7DF9 8D B2 AC			sta CN
 15254
 15255 7DFC			l_2BE0
 15256 				; --- ForToDoCondition
 15257 7DFC AD B2 AC			lda CN
 15258 7DFF C9 08			cmp #$08
 15259 7E01 90 03 4C F3 80		jcs l_2BEE
 15260
 15261 				; optimize OK (vservice.pas), line = 2528
 15262
 15263 7E06 A9 00			lda #$00
 15264 7E08 8D B1 AC			sta Y
 15265 7E0B AC 38 9D			ldy MINIVAUS.HEIGHT
 15266 7E0E 88				dey
 15267 7E0F 8C 13 7E			sty @FORTMP_2BF9_0
 15268
 15269 7E12			l_2BFC
 15270 				; --- ForToDoCondition
 15271 7E12 A9 00			lda @FORTMP_2BF9_0::#$00
 15272 7E14 CD B1 AC			cmp Y
 15273 7E17 B0 03 4C EB 80		jcc l_2C0A
 15274
 15275 				; optimize OK (vservice.pas), line = 2529
 15276
 15277 7E1C A9 00			lda #$00
 15278 7E1E 8D B0 AC			sta X
 15279 7E21 AC 36 9D			ldy MINIVAUS.WIDTH
 15280 7E24 88				dey
 15281 7E25 8C 29 7E			sty @FORTMP_2C15_0
 15282
 15283 7E28			l_2C18
 15284 				; --- ForToDoCondition
 15285 7E28 A9 00			lda @FORTMP_2C15_0::#$00
 15286 7E2A CD B0 AC			cmp X
 15287 7E2D B0 03 4C E3 80		jcc l_2C26
 15288
 15289 				; optimize OK (vservice.pas), line = 2531
 15290
 15291 7E32 AD B0 AC			lda X
 15292 7E35 18 69 0B			add #$0B
 15293 7E38 85 9F			sta :STACKORIGIN+9
 15294 7E3A A9 00			lda #$00
 15295 7E3C 69 00			adc #$00
 15296 7E3E 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 15297 7E40 AD 36 9D			lda MINIVAUS.WIDTH
 15298 7E43 85 8E			sta :ecx
 15299 7E45 AD 37 9D			lda MINIVAUS.WIDTH+1
 15300 7E48 85 8F			sta :ecx+1
 15301 7E4A AD B2 AC			lda CN
 15302 7E4D 85 86			sta :eax
 15303 7E4F A9 00			lda #$00
 15304 7E51 85 87			sta :eax+1
 15305 					.ifdef fmulinit
 15306 					fmulu_16
 15307 					els
 15308 7E53 20 3E 13			imulCX_AL
 15309 					eif
 15310 7E56 A5 86			lda :eax
 15311 7E58 18 65 9F			add :STACKORIGIN+9
 15312 7E5B 8D B7 AC			sta XL
 15313 7E5E A5 87			lda :eax+1
 15314 7E60 65 AF			adc :STACKORIGIN+STACKWIDTH+9
 15315 7E62 8D B8 AC			sta XL+1
 15316
 15317 				; optimize OK (vservice.pas), line = 2532
 15318
 15319 7E65 AD B1 AC			lda Y
 15320 7E68 18 69 C0			add #$C0
 15321 7E6B 8D B9 AC			sta YL
 15322 7E6E A9 00			lda #$00
 15323 7E70 69 00			adc #$00
 15324 7E72 8D BA AC			sta YL+1
 15325
 15326 				; optimize OK (vservice.pas), line = 2534
 15327
 15328 7E75 AD 2B 9B			lda MODX
 15329 7E78 18 6D B7 AC			add XL
 15330 7E7C A8				tay
 15331 7E7D AD 2C 9B			lda MODX+1
 15332 7E80 6D B8 AC			adc XL+1
 15333 7E83 85 83			sta :bp+1
 15334 7E85 B1 82			lda (:bp),y
 15335 7E87 8D B3 AC			sta XP
 15336 7E8A A9 00			lda #$00
 15337 7E8C 8D B4 AC			sta XP+1
 15338
 15339 				; optimize OK (vservice.pas), line = 2535
 15340
 15341 7E8F AC B9 AC			ldy YL
 15342 7E92 B9 13 A9			lda adr.MODY,y
 15343 7E95 85 86			sta :eax
 15344 7E97 A9 00			lda #$00
 15345 7E99 85 87			sta :eax+1
 15346 7E9B AD 6B 9D			lda PATTERN.WIDTH
 15347 7E9E 85 8E			sta :ecx
 15348 7EA0 AD 6C 9D			lda PATTERN.WIDTH+1
 15349 7EA3 85 8F			sta :ecx+1
 15350 					.ifdef fmulinit
 15351 					fmulu_16
 15352 					els
 15353 7EA5 20 3E 13			imulCX_AL
 15354 					eif
 15355 7EA8 A5 86			lda :eax
 15356 7EAA 8D B5 AC			sta YP
 15357 7EAD A5 87			lda :eax+1
 15358 7EAF 8D B6 AC			sta YP+1
 15359
 15360 				; optimize FAIL (1, vservice.pas), line = 2539
 15361
 15362 7EB2 E8				inx
 15363 7EB3 A0 01			ldy #1
 15364 7EB5 AD B2 AC			lda CN
 15365 7EB8 CD AE AC			cmp LIVES
 15366 7EBB A9 00			lda #$00
 15367 7EBD ED AF AC			sbc LIVES+1
 15368 7EC0 50 02			svc
 15369 7EC2 49 80			eor #$80
 15370 7EC4 30 01			bmi @+
 15371 7EC6 88				dey
 15372 				@
 15373 7EC7 94 96			sty :STACKORIGIN,x
 15374 7EC9 AD 3A 9D			lda MINIVAUS.OFS
 15375 7ECC 18 6D B0 AC			add X
 15376 7ED0 85 9F			sta :STACKORIGIN+9
 15377 7ED2 AD 3B 9D			lda MINIVAUS.OFS+1
 15378 7ED5 69 00			adc #$00
 15379 7ED7 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 15380 7ED9 AD 3C 9D			lda MINIVAUS.OFS+2
 15381 7EDC 69 00			adc #$00
 15382 7EDE 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
 15383 7EE0 AD 3D 9D			lda MINIVAUS.OFS+3
 15384 7EE3 69 00			adc #$00
 15385 7EE5 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
 15386 7EE7 AD 36 9D			lda MINIVAUS.WIDTH
 15387 7EEA 85 8E			sta :ecx
 15388 7EEC AD 37 9D			lda MINIVAUS.WIDTH+1
 15389 7EEF 85 8F			sta :ecx+1
 15390 7EF1 AD B1 AC			lda Y
 15391 7EF4 85 86			sta :eax
 15392 7EF6 A9 00			lda #$00
 15393 7EF8 85 87			sta :eax+1
 15394 					.ifdef fmulinit
 15395 					fmulu_16
 15396 					els
 15397 7EFA 20 3E 13			imulCX_AL
 15398 					eif
 15399 7EFD A5 9F			lda :STACKORIGIN+9
 15400 7EFF 18 65 86			add :eax
 15401 7F02 8D 0B AB			sta GETBYTE.SRC
 15402 7F05 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 15403 7F07 65 87			adc :eax+1
 15404 7F09 8D 0C AB			sta GETBYTE.SRC+1
 15405 7F0C A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
 15406 7F0E 65 88			adc :eax+2
 15407 7F10 8D 0D AB			sta GETBYTE.SRC+2
 15408 7F13 A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
 15409 7F15 65 89			adc :eax+3
 15410 7F17 8D 0E AB			sta GETBYTE.SRC+3
 15411 7F1A 20 C2 25			jsr GETBYTE
 15412 7F1D CA				dex
 15413 7F1E A0 01			ldy #1
 15414 7F20 AD 0F AB			lda GETBYTE.RESULT
 15415 7F23 D0 01			bne @+
 15416 7F25 88				dey
 15417 				@
 15418 7F26 98				tya
 15419 7F27 35 97			and :STACKORIGIN+1,x
 15420 7F29 F0 5D			jeq l_2C89
 15421
 15422 				; optimize OK (vservice.pas), line = 2542
 15423
 15424 7F2B AD 3A 9D			lda MINIVAUS.OFS
 15425 7F2E 18 6D B0 AC			add X
 15426 7F32 85 9F			sta :STACKORIGIN+9
 15427 7F34 AD 3B 9D			lda MINIVAUS.OFS+1
 15428 7F37 69 00			adc #$00
 15429 7F39 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 15430 7F3B AD 3C 9D			lda MINIVAUS.OFS+2
 15431 7F3E 69 00			adc #$00
 15432 7F40 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
 15433 7F42 AD 3D 9D			lda MINIVAUS.OFS+3
 15434 7F45 69 00			adc #$00
 15435 7F47 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
 15436 7F49 AD 36 9D			lda MINIVAUS.WIDTH
 15437 7F4C 85 8E			sta :ecx
 15438 7F4E AD 37 9D			lda MINIVAUS.WIDTH+1
 15439 7F51 85 8F			sta :ecx+1
 15440 7F53 AD B1 AC			lda Y
 15441 7F56 85 86			sta :eax
 15442 7F58 A9 00			lda #$00
 15443 7F5A 85 87			sta :eax+1
 15444 					.ifdef fmulinit
 15445 					fmulu_16
 15446 					els
 15447 7F5C 20 3E 13			imulCX_AL
 15448 					eif
 15449 7F5F A5 9F			lda :STACKORIGIN+9
 15450 7F61 18 65 86			add :eax
 15451 7F64 8D 0B AB			sta GETBYTE.SRC
 15452 7F67 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 15453 7F69 65 87			adc :eax+1
 15454 7F6B 8D 0C AB			sta GETBYTE.SRC+1
 15455 7F6E A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
 15456 7F70 65 88			adc :eax+2
 15457 7F72 8D 0D AB			sta GETBYTE.SRC+2
 15458 7F75 A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
 15459 7F77 65 89			adc :eax+3
 15460 7F79 8D 0E AB			sta GETBYTE.SRC+3
 15461 7F7C 20 C2 25			jsr GETBYTE
 15462 7F7F AD 0F AB			lda GETBYTE.RESULT
 15463 7F82 8D BC AC			sta CL
 15464 				; optimize OK (vservice.pas), line = 2545
 15465 				; optimize OK (vservice.pas), line = 2548
 15466 7F85 4C 38 80			jmp l_2CCB
 15467 7F88			l_2C89
 15468
 15469 				; optimize OK (vservice.pas), line = 2557
 15470
 15471 7F88 AD EA 9C			lda PLAYSCREEN.OFS
 15472 7F8B 18 6D B7 AC			add XL
 15473 7F8F 85 9F			sta :STACKORIGIN+9
 15474 7F91 AD EB 9C			lda PLAYSCREEN.OFS+1
 15475 7F94 6D B8 AC			adc XL+1
 15476 7F97 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 15477 7F99 AD EC 9C			lda PLAYSCREEN.OFS+2
 15478 7F9C 69 00			adc #$00
 15479 7F9E 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
 15480 7FA0 AD ED 9C			lda PLAYSCREEN.OFS+3
 15481 7FA3 69 00			adc #$00
 15482 7FA5 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
 15483 7FA7 AD BA AC			lda YL+1
 15484 7FAA 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 15485 7FAC AD B9 AC			lda YL
 15486 7FAF 0A				asl @
 15487 7FB0 26 B0			rol :STACKORIGIN+STACKWIDTH+10
 15488 7FB2 18 6D 29 9B			add ROW
 15489 7FB6 85 84			sta :bp2
 15490 7FB8 AD 2A 9B			lda ROW+1
 15491 7FBB 65 B0			adc :STACKORIGIN+STACKWIDTH+10
 15492 7FBD 85 85			sta :bp2+1
 15493 7FBF A0 00			ldy #$00
 15494 7FC1 A5 9F			lda :STACKORIGIN+9
 15495 7FC3 18 71 84			add (:bp2),y
 15496 7FC6 8D 0B AB			sta GETBYTE.SRC
 15497 7FC9 C8				iny
 15498 7FCA A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 15499 7FCC 71 84			adc (:bp2),y
 15500 7FCE 8D 0C AB			sta GETBYTE.SRC+1
 15501 7FD1 A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
 15502 7FD3 69 00			adc #$00
 15503 7FD5 8D 0D AB			sta GETBYTE.SRC+2
 15504 7FD8 A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
 15505 7FDA 69 00			adc #$00
 15506 7FDC 8D 0E AB			sta GETBYTE.SRC+3
 15507 7FDF 20 C2 25			jsr GETBYTE
 15508 7FE2 AD 0F AB			lda GETBYTE.RESULT
 15509 7FE5 29 80			and #$80
 15510 7FE7 8D BB AC			sta SHADOW
 15511
 15512 				; optimize OK (vservice.pas), line = 2560
 15513
 15514 7FEA AD 6F 9D			lda PATTERN.OFS
 15515 7FED 18 6D B3 AC			add XP
 15516 7FF1 85 9F			sta :STACKORIGIN+9
 15517 7FF3 AD 70 9D			lda PATTERN.OFS+1
 15518 7FF6 6D B4 AC			adc XP+1
 15519 7FF9 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 15520 7FFB AD 71 9D			lda PATTERN.OFS+2
 15521 7FFE 69 00			adc #$00
 15522 8000 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
 15523 8002 AD 72 9D			lda PATTERN.OFS+3
 15524 8005 69 00			adc #$00
 15525 8007 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
 15526 8009 A5 9F			lda :STACKORIGIN+9
 15527 800B 18 6D B5 AC			add YP
 15528 800F 8D 0B AB			sta GETBYTE.SRC
 15529 8012 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 15530 8014 6D B6 AC			adc YP+1
 15531 8017 8D 0C AB			sta GETBYTE.SRC+1
 15532 801A A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
 15533 801C 69 00			adc #$00
 15534 801E 8D 0D AB			sta GETBYTE.SRC+2
 15535 8021 A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
 15536 8023 69 00			adc #$00
 15537 8025 8D 0E AB			sta GETBYTE.SRC+3
 15538 8028 20 C2 25			jsr GETBYTE
 15539 802B E8				inx
 15540 802C AD 0F AB			lda GETBYTE.RESULT
 15541 802F 29 7F			and #$7F
 15542 8031 0D BB AC			ora SHADOW
 15543 8034 8D BC AC			sta CL
 15544 8037 CA				dex
 15545 8038			l_2CCB
 15546
 15547 				; optimize OK (vservice.pas), line = 2563
 15548
 15549 8038 AD BA AC			lda YL+1
 15550 803B 85 B1			sta :STACKORIGIN+STACKWIDTH+11
 15551 803D AD B9 AC			lda YL
 15552 8040 0A				asl @
 15553 8041 26 B1			rol :STACKORIGIN+STACKWIDTH+11
 15554 8043 18 6D 29 9B			add ROW
 15555 8047 85 84			sta :bp2
 15556 8049 AD 2A 9B			lda ROW+1
 15557 804C 65 B1			adc :STACKORIGIN+STACKWIDTH+11
 15558 804E 85 85			sta :bp2+1
 15559 8050 A0 00			ldy #$00
 15560 8052 AD B7 AC			lda XL
 15561 8055 18 71 84			add (:bp2),y
 15562 8058 8D 06 AB			sta PUTBYTE.DST
 15563 805B C8				iny
 15564 805C AD B8 AC			lda XL+1
 15565 805F 71 84			adc (:bp2),y
 15566 8061 8D 07 AB			sta PUTBYTE.DST+1
 15567 8064 A9 00			lda #$00
 15568 8066 69 00			adc #$00
 15569 8068 8D 08 AB			sta PUTBYTE.DST+2
 15570 806B A9 00			lda #$00
 15571 806D 69 00			adc #$00
 15572 806F 8D 09 AB			sta PUTBYTE.DST+3
 15573 8072 AD BC AC			lda CL
 15574 8075 8D 0A AB			sta PUTBYTE.V
 15575 8078 20 B8 25			jsr PUTBYTE
 15576
 15577 				; optimize OK (vservice.pas), line = 2566
 15578
 15579 807B AD EA 9C			lda PLAYSCREEN.OFS
 15580 807E 18 6D B7 AC			add XL
 15581 8082 85 A0			sta :STACKORIGIN+10
 15582 8084 AD EB 9C			lda PLAYSCREEN.OFS+1
 15583 8087 6D B8 AC			adc XL+1
 15584 808A 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 15585 808C AD EC 9C			lda PLAYSCREEN.OFS+2
 15586 808F 69 00			adc #$00
 15587 8091 85 C0			sta :STACKORIGIN+STACKWIDTH*2+10
 15588 8093 AD ED 9C			lda PLAYSCREEN.OFS+3
 15589 8096 69 00			adc #$00
 15590 8098 85 D0			sta :STACKORIGIN+STACKWIDTH*3+10
 15591 809A AD BA AC			lda YL+1
 15592 809D 85 B1			sta :STACKORIGIN+STACKWIDTH+11
 15593 809F AD B9 AC			lda YL
 15594 80A2 0A				asl @
 15595 80A3 26 B1			rol :STACKORIGIN+STACKWIDTH+11
 15596 80A5 18 6D 29 9B			add ROW
 15597 80A9 85 84			sta :bp2
 15598 80AB AD 2A 9B			lda ROW+1
 15599 80AE 65 B1			adc :STACKORIGIN+STACKWIDTH+11
 15600 80B0 85 85			sta :bp2+1
 15601 80B2 A0 00			ldy #$00
 15602 80B4 A5 A0			lda :STACKORIGIN+10
 15603 80B6 18 71 84			add (:bp2),y
 15604 80B9 8D 06 AB			sta PUTBYTE.DST
 15605 80BC C8				iny
 15606 80BD A5 B0			lda :STACKORIGIN+STACKWIDTH+10
 15607 80BF 71 84			adc (:bp2),y
 15608 80C1 8D 07 AB			sta PUTBYTE.DST+1
 15609 80C4 A5 C0			lda :STACKORIGIN+STACKWIDTH*2+10
 15610 80C6 69 00			adc #$00
 15611 80C8 8D 08 AB			sta PUTBYTE.DST+2
 15612 80CB A5 D0			lda :STACKORIGIN+STACKWIDTH*3+10
 15613 80CD 69 00			adc #$00
 15614 80CF 8D 09 AB			sta PUTBYTE.DST+3
 15615 80D2 AD BC AC			lda CL
 15616 80D5 8D 0A AB			sta PUTBYTE.V
 15617 80D8 20 B8 25			jsr PUTBYTE
 15618
 15619 				; --- ForToDoEpilog
 15620 80DB EE B0 AC			inc X
 15621 80DE F0 03 4C 28 7E		jne l_2C18
 15622 80E3			l_2C26
 15623
 15624 				; --- ForToDoEpilog
 15625 80E3 EE B1 AC			inc Y
 15626 80E6 F0 03 4C 12 7E		jne l_2BFC
 15627 80EB			l_2C0A
 15628
 15629 				; --- ForToDoEpilog
 15630 80EB EE B2 AC			inc CN
 15631 80EE F0 03 4C FC 7D		jne l_2BE0
 15632 80F3			l_2BEE
 15633
 15634 				; ------------------------------------------------------------
 15635
 15636 = ACAE			LIVES	= DATAORIGIN+$1091
 15637 = 000B			XLIVES	= $0B
 15638 = 00C0			YLIVES	= $C0
 15639 = ACB0			X	= DATAORIGIN+$1093
 15640 = ACB1			Y	= DATAORIGIN+$1094
 15641 = ACB2			CN	= DATAORIGIN+$1095
 15642 = ACB3			XP	= DATAORIGIN+$1096
 15643 = ACB5			YP	= DATAORIGIN+$1098
 15644 = ACB7			XL	= DATAORIGIN+$109A
 15645 = ACB9			YL	= DATAORIGIN+$109C
 15646 = ACBB			SHADOW	= DATAORIGIN+$109E
 15647 = ACBC			CL	= DATAORIGIN+$109F
 15648
 15649 = ACAE			@VarData	= LIVES
 15650 = 000F			@VarDataSize	= 15
 15651
 15652 80F3			@exit
 15653 					.ifdef @new
 15654 					lda <@VarData
 15655 					sta :ztmp
 15656 					lda >@VarData
 15657 					ldy #@VarDataSize-1
 15658 					jmp @FreeMem
 15659 					els
 15660 80F3 60				rts						; ret
 15661 					eif
 15662 				.endl
 15663
 15664 80F4			.local	PLACE_FIRE					; PROCEDURE
 15665
 15666 				; optimize OK (vservice.pas), line = 2575
 15667
 15668 80F4 A9 00			lda #$00
 15669 80F6 8D C1 AC			sta Y
 15670 80F9 AC 50 9D			ldy SHOOTS.HEIGHT
 15671 80FC 88				dey
 15672 80FD 8C 01 81			sty @FORTMP_2D39_0
 15673
 15674 8100			l_2D3C
 15675 				; --- ForToDoCondition
 15676 8100 A9 00			lda @FORTMP_2D39_0::#$00
 15677 8102 CD C1 AC			cmp Y
 15678 8105 B0 03 4C A6 81		jcc l_2D4A
 15679
 15680 				; optimize OK (vservice.pas), line = 2577
 15681
 15682 810A AD C1 AC			lda Y
 15683 810D 85 86			sta :eax
 15684 810F A9 00			lda #$00
 15685 8111 85 87			sta :eax+1
 15686 8113 AD 4E 9D			lda SHOOTS.WIDTH
 15687 8116 85 8E			sta :ecx
 15688 8118 AD 4F 9D			lda SHOOTS.WIDTH+1
 15689 811B 85 8F			sta :ecx+1
 15690 					.ifdef fmulinit
 15691 					fmulu_16
 15692 					els
 15693 811D 20 3E 13			imulCX_AL
 15694 					eif
 15695 8120 A5 86			lda :eax
 15696 8122 8D BF AC			sta FW
 15697 8125 A5 87			lda :eax+1
 15698 8127 8D C0 AC			sta FW+1
 15699
 15700 				; optimize OK (vservice.pas), line = 2579
 15701
 15702 812A AD C1 AC			lda Y
 15703 812D 18 6D D5 9D			add FIRE.Y
 15704 8131 85 A1			sta :STACKORIGIN+11
 15705 8133 A9 00			lda #$00
 15706 8135 69 00			adc #$00
 15707 8137 06 A1			asl :STACKORIGIN+11
 15708 8139 2A				rol @
 15709 813A 85 B1			sta :STACKORIGIN+STACKWIDTH+11
 15710 813C AD 29 9B			lda ROW
 15711 813F 18 65 A1			add :STACKORIGIN+11
 15712 8142 85 84			sta :bp2
 15713 8144 AD 2A 9B			lda ROW+1
 15714 8147 65 B1			adc :STACKORIGIN+STACKWIDTH+11
 15715 8149 85 85			sta :bp2+1
 15716 814B A0 00			ldy #$00
 15717 814D AD D4 9D			lda FIRE.X
 15718 8150 18 71 84			add (:bp2),y
 15719 8153 8D DF AA			sta BLITZERO.DST
 15720 8156 C8				iny
 15721 8157 A9 00			lda #$00
 15722 8159 71 84			adc (:bp2),y
 15723 815B 8D E0 AA			sta BLITZERO.DST+1
 15724 815E A9 00			lda #$00
 15725 8160 69 00			adc #$00
 15726 8162 8D E1 AA			sta BLITZERO.DST+2
 15727 8165 A9 00			lda #$00
 15728 8167 69 00			adc #$00
 15729 8169 8D E2 AA			sta BLITZERO.DST+3
 15730 816C AD 52 9D			lda SHOOTS.OFS
 15731 816F 18 6D BF AC			add FW
 15732 8173 8D DB AA			sta BLITZERO.SRC
 15733 8176 AD 53 9D			lda SHOOTS.OFS+1
 15734 8179 6D C0 AC			adc FW+1
 15735 817C 8D DC AA			sta BLITZERO.SRC+1
 15736 817F AD 54 9D			lda SHOOTS.OFS+2
 15737 8182 69 00			adc #$00
 15738 8184 8D DD AA			sta BLITZERO.SRC+2
 15739 8187 AD 55 9D			lda SHOOTS.OFS+3
 15740 818A 69 00			adc #$00
 15741 818C 8D DE AA			sta BLITZERO.SRC+3
 15742 818F AD 4E 9D			lda SHOOTS.WIDTH
 15743 8192 8D E3 AA			sta BLITZERO.SIZE
 15744 8195 AD 4F 9D			lda SHOOTS.WIDTH+1
 15745 8198 8D E4 AA			sta BLITZERO.SIZE+1
 15746 819B 20 E3 24			jsr BLITZERO
 15747
 15748 				; --- ForToDoEpilog
 15749 819E EE C1 AC			inc Y
 15750 81A1 F0 03 4C 00 81		jne l_2D3C
 15751 81A6			l_2D4A
 15752
 15753 				; ------------------------------------------------------------
 15754
 15755 = ACBF			FW	= DATAORIGIN+$10A2
 15756 = ACC1			Y	= DATAORIGIN+$10A4
 15757
 15758 = ACBF			@VarData	= FW
 15759 = 0003			@VarDataSize	= 3
 15760
 15761 81A6			@exit
 15762 					.ifdef @new
 15763 					lda <@VarData
 15764 					sta :ztmp
 15765 					lda >@VarData
 15766 					ldy #@VarDataSize-1
 15767 					jmp @FreeMem
 15768 					els
 15769 81A6 60				rts						; ret
 15770 					eif
 15771 				.endl
 15772
 15773 81A7			.local	REMOVE_FIRE					; PROCEDURE
 15774
 15775 				; optimize OK (vservice.pas), line = 2587
 15776
 15777 81A7 A9 00			lda #$00
 15778 81A9 8D C3 AC			sta Y
 15779 81AC AC 50 9D			ldy SHOOTS.HEIGHT
 15780 81AF 88				dey
 15781 81B0 8C B4 81			sty @FORTMP_2D87_0
 15782
 15783 81B3			l_2D8A
 15784 				; --- ForToDoCondition
 15785 81B3 A9 00			lda @FORTMP_2D87_0::#$00
 15786 81B5 CD C3 AC			cmp Y
 15787 81B8 B0 03 4C 74 82		jcc l_2D98
 15788
 15789 				; optimize OK (vservice.pas), line = 2591
 15790
 15791 81BD AD C3 AC			lda Y
 15792 81C0 18 6D D5 9D			add FIRE.Y
 15793 81C4 85 A1			sta :STACKORIGIN+11
 15794 81C6 A9 00			lda #$00
 15795 81C8 69 00			adc #$00
 15796 81CA 06 A1			asl :STACKORIGIN+11
 15797 81CC 2A				rol @
 15798 81CD 85 B1			sta :STACKORIGIN+STACKWIDTH+11
 15799 81CF AD 29 9B			lda ROW
 15800 81D2 18 65 A1			add :STACKORIGIN+11
 15801 81D5 85 84			sta :bp2
 15802 81D7 AD 2A 9B			lda ROW+1
 15803 81DA 65 B1			adc :STACKORIGIN+STACKWIDTH+11
 15804 81DC 85 85			sta :bp2+1
 15805 81DE A0 00			ldy #$00
 15806 81E0 AD D4 9D			lda FIRE.X
 15807 81E3 18 71 84			add (:bp2),y
 15808 81E6 8D F4 AA			sta BLITROW.DST
 15809 81E9 C8				iny
 15810 81EA A9 00			lda #$00
 15811 81EC 71 84			adc (:bp2),y
 15812 81EE 8D F5 AA			sta BLITROW.DST+1
 15813 81F1 A9 00			lda #$00
 15814 81F3 69 00			adc #$00
 15815 81F5 8D F6 AA			sta BLITROW.DST+2
 15816 81F8 A9 00			lda #$00
 15817 81FA 69 00			adc #$00
 15818 81FC 8D F7 AA			sta BLITROW.DST+3
 15819 81FF AD EA 9C			lda PLAYSCREEN.OFS
 15820 8202 18 6D D4 9D			add FIRE.X
 15821 8206 85 A1			sta :STACKORIGIN+11
 15822 8208 AD EB 9C			lda PLAYSCREEN.OFS+1
 15823 820B 69 00			adc #$00
 15824 820D 85 B1			sta :STACKORIGIN+STACKWIDTH+11
 15825 820F AD EC 9C			lda PLAYSCREEN.OFS+2
 15826 8212 69 00			adc #$00
 15827 8214 85 C1			sta :STACKORIGIN+STACKWIDTH*2+11
 15828 8216 AD ED 9C			lda PLAYSCREEN.OFS+3
 15829 8219 69 00			adc #$00
 15830 821B 85 D1			sta :STACKORIGIN+STACKWIDTH*3+11
 15831 821D AD C3 AC			lda Y
 15832 8220 18 6D D5 9D			add FIRE.Y
 15833 8224 85 A2			sta :STACKORIGIN+12
 15834 8226 A9 00			lda #$00
 15835 8228 69 00			adc #$00
 15836 822A 06 A2			asl :STACKORIGIN+12
 15837 822C 2A				rol @
 15838 822D 85 B2			sta :STACKORIGIN+STACKWIDTH+12
 15839 822F AD 29 9B			lda ROW
 15840 8232 18 65 A2			add :STACKORIGIN+12
 15841 8235 85 84			sta :bp2
 15842 8237 AD 2A 9B			lda ROW+1
 15843 823A 65 B2			adc :STACKORIGIN+STACKWIDTH+12
 15844 823C 85 85			sta :bp2+1
 15845 823E 88				dey
 15846 823F A5 A1			lda :STACKORIGIN+11
 15847 8241 18 71 84			add (:bp2),y
 15848 8244 8D F0 AA			sta BLITROW.SRC
 15849 8247 C8				iny
 15850 8248 A5 B1			lda :STACKORIGIN+STACKWIDTH+11
 15851 824A 71 84			adc (:bp2),y
 15852 824C 8D F1 AA			sta BLITROW.SRC+1
 15853 824F A5 C1			lda :STACKORIGIN+STACKWIDTH*2+11
 15854 8251 69 00			adc #$00
 15855 8253 8D F2 AA			sta BLITROW.SRC+2
 15856 8256 A5 D1			lda :STACKORIGIN+STACKWIDTH*3+11
 15857 8258 69 00			adc #$00
 15858 825A 8D F3 AA			sta BLITROW.SRC+3
 15859 825D AD 4E 9D			lda SHOOTS.WIDTH
 15860 8260 8D F8 AA			sta BLITROW.SIZE
 15861 8263 AD 4F 9D			lda SHOOTS.WIDTH+1
 15862 8266 8D F9 AA			sta BLITROW.SIZE+1
 15863 8269 20 60 25			jsr BLITROW
 15864
 15865 				; --- ForToDoEpilog
 15866 826C EE C3 AC			inc Y
 15867 826F F0 03 4C B3 81		jne l_2D8A
 15868 8274			l_2D98
 15869
 15870 				; ------------------------------------------------------------
 15871
 15872 = ACC3			Y	= DATAORIGIN+$10A6
 15873
 15874 = ACC3			@VarData	= Y
 15875 = 0001			@VarDataSize	= 1
 15876
 15877 8274			@exit
 15878 					.ifdef @new
 15879 					lda <@VarData
 15880 					sta :ztmp
 15881 					lda >@VarData
 15882 					ldy #@VarDataSize-1
 15883 					jmp @FreeMem
 15884 					els
 15885 8274 60				rts						; ret
 15886 					eif
 15887 				.endl
 15888
 15889 8275			.local	CHECK_FIRE					; PROCEDURE
 15890
 15891 				; optimize OK (vservice.pas), line = 2598
 15892
 15893 8275 AD D7 9D			lda FIRE.AVL
 15894 8278 D0 03 4C 9F 84		jeq l_2DDA
 15895
 15896 				; optimize FAIL ('MOUSECLICK', vservice.pas), line = 2600
 15897
 15898 827D 20 9C 24			jsr MOUSECLICK
 15899 8280 E8				inx
 15900 8281 E8				inx
 15901 8282 A0 01			ldy #1
 15902 8284 AD D1 9C			lda MOUSECLICK.RESULT+1
 15903 8287 C9 00			cmp #$00
 15904 8289 D0 05			bne @+
 15905 828B AD D0 9C			lda MOUSECLICK.RESULT
 15906 828E C9 01			cmp #$01
 15907 				@
 15908 8290 F0 01			beq @+
 15909 8292 88				dey
 15910 				@
 15911 8293 98				tya
 15912 8294 2D D7 9D			and FIRE.AVL
 15913 8297 95 95			sta :STACKORIGIN-1,x
 15914 8299 CA				dex
 15915 829A CA				dex
 15916 829B A0 01			ldy #1
 15917 829D AD D6 9D			lda FIRE.SHOT
 15918 82A0 F0 01			beq @+
 15919 82A2 88				dey
 15920 				@
 15921 82A3 98				tya
 15922 82A4 35 97			and :STACKORIGIN+1,x
 15923 82A6 F0 48			jeq l_2DFA
 15924
 15925 				; optimize OK (vservice.pas), line = 2602
 15926
 15927 82A8 AD 66 9D			lda VAUS.WIDTH
 15928 82AB 38 ED 4E 9D			sub SHOOTS.WIDTH
 15929 82AF 85 A0			sta :STACKORIGIN+10
 15930 82B1 A9 00			lda #$00
 15931 82B3 ED 4F 9D			sbc SHOOTS.WIDTH+1
 15932 82B6 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 15933 82B8 46 B0			lsr :STACKORIGIN+STACKWIDTH+10
 15934 82BA 66 A0			ror :STACKORIGIN+10
 15935 82BC AD 5E 9D			lda VAUS.X
 15936 82BF 18 65 A0			add :STACKORIGIN+10
 15937 82C2 8D D4 9D			sta FIRE.X
 15938
 15939 				; optimize OK (vservice.pas), line = 2603
 15940
 15941 82C5 AD 5F 9D			lda VAUS.Y
 15942 82C8 38 ED 50 9D			sub SHOOTS.HEIGHT
 15943 82CC 8D D5 9D			sta FIRE.Y
 15944
 15945 				; optimize OK (vservice.pas), line = 2604
 15946
 15947 82CF A9 01			lda #$01
 15948 82D1 8D D6 9D			sta FIRE.SHOT
 15949
 15950 				; optimize OK (vservice.pas), line = 2605
 15951
 15952 82D4 A9 00			lda #$00
 15953 82D6 8D D8 9D			sta FIRE.NW
 15954
 15955 				; optimize OK (vservice.pas), line = 2606
 15956
 15957 82D9 A9 BC			lda #$BC
 15958 82DB 8D CC 9C			sta BALL_BLOCK_SOUND.A
 15959 82DE A9 02			lda #$02
 15960 82E0 8D CD 9C			sta BALL_BLOCK_SOUND.A+1
 15961 82E3 A9 05			lda #$05
 15962 82E5 8D CE 9C			sta BALL_BLOCK_SOUND.B
 15963 82E8 A9 00			lda #$00
 15964 82EA 8D CF 9C			sta BALL_BLOCK_SOUND.B+1
 15965 82ED 20 9A 24			jsr BALL_BLOCK_SOUND
 15966 82F0			l_2DFA
 15967
 15968 				; optimize OK (vservice.pas), line = 2609
 15969
 15970 82F0 AD D6 9D			lda FIRE.SHOT
 15971 82F3 D0 03 4C 9F 84		jeq l_2E34
 15972
 15973 				; optimize OK (vservice.pas), line = 2611
 15974
 15975 82F8 AD D8 9D			lda FIRE.NW
 15976 82FB F0 03			jeq l_2E41
 15977 82FD 20 A7 81			jsr REMOVE_FIRE
 15978 8300			l_2E41
 15979
 15980 				; optimize OK (vservice.pas), line = 2612
 15981
 15982 8300 A9 01			lda #$01
 15983 8302 8D D8 9D			sta FIRE.NW
 15984
 15985 				; optimize OK (vservice.pas), line = 2614
 15986
 15987 8305 AD D5 9D			lda FIRE.Y
 15988 8308 38 E9 04			sub #$04
 15989 830B 8D D5 9D			sta FIRE.Y
 15990
 15991 				; optimize OK (vservice.pas), line = 2615
 15992
 15993 830E C9 16			cmp #$16
 15994 8310 B0 08			jcs l_2E5C
 15995 8312 A9 00			lda #$00
 15996 8314 8D D6 9D			sta FIRE.SHOT
 15997 8317 4C 9F 84			jmp l_2E6A
 15998 831A			l_2E5C
 15999
 16000 				; optimize FAIL ('PLACE_FIRE', vservice.pas), line = 2618
 16001
 16002 831A 20 F4 80			jsr PLACE_FIRE
 16003
 16004 				; optimize OK (vservice.pas), line = 2620
 16005
 16006 831D AD D5 9D			lda FIRE.Y
 16007 8320 38 E9 16			sub #$16
 16008 8323 D0 03 4C 9F 84		jeq l_2E91
 16009 8328 10 03			bpl @+
 16010 832A 4C 9F 84			jmp l_2E91
 16011 				@
 16012 832D AD D5 9D			lda FIRE.Y
 16013 8330 38 E9 16			sub #$16
 16014 8333 85 A0			sta :STACKORIGIN+10
 16015 8335 A9 00			lda #$00
 16016 8337 E9 00			sbc #$00
 16017 8339 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 16018 833B A5 A0			lda :STACKORIGIN+10
 16019 833D C9 78			cmp #$78
 16020 833F A5 B0			lda :STACKORIGIN+STACKWIDTH+10
 16021 8341 E9 00			sbc #$00
 16022 8343 50 02			svc
 16023 8345 49 80			eor #$80
 16024 8347 30 03 4C 9F 84		jpl l_2E91
 16025 				@
 16026
 16027 				; optimize OK (vservice.pas), line = 2622
 16028
 16029 834C AD D4 9D			lda FIRE.X
 16030 834F 38 E9 09			sub #$09
 16031 8352 85 9F			sta :STACKORIGIN+9
 16032 8354 A9 00			lda #$00
 16033 8356 E9 00			sbc #$00
 16034 8358 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 16035 835A A0 00			ldy #$00
 16036 835C A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 16037 835E 10 01			spl
 16038 8360 88				dey
 16039 8361 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 16040 8363 84 BF			sty :STACKORIGIN+STACKWIDTH*2+9
 16041 8365 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
 16042 8367 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 16043 8369 66 9F			ror :STACKORIGIN+9
 16044 836B 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
 16045 836D 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 16046 836F 66 9F			ror :STACKORIGIN+9
 16047 8371 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
 16048 8373 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 16049 8375 66 9F			ror :STACKORIGIN+9
 16050 8377 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
 16051 8379 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 16052 837B 66 9F			ror :STACKORIGIN+9
 16053 837D A5 9F			lda :STACKORIGIN+9
 16054 837F 8D C5 AC			sta X1
 16055 8382 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 16056 8384 8D C6 AC			sta X1+1
 16057
 16058 				; optimize OK (vservice.pas), line = 2623
 16059
 16060 8387 AD D5 9D			lda FIRE.Y
 16061 838A 38 E9 16			sub #$16
 16062 838D 85 9F			sta :STACKORIGIN+9
 16063 838F A9 00			lda #$00
 16064 8391 E9 00			sbc #$00
 16065 8393 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 16066 8395 A0 00			ldy #$00
 16067 8397 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 16068 8399 10 01			spl
 16069 839B 88				dey
 16070 839C 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 16071 839E 84 BF			sty :STACKORIGIN+STACKWIDTH*2+9
 16072 83A0 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
 16073 83A2 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 16074 83A4 66 9F			ror :STACKORIGIN+9
 16075 83A6 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
 16076 83A8 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 16077 83AA 66 9F			ror :STACKORIGIN+9
 16078 83AC 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
 16079 83AE 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 16080 83B0 66 9F			ror :STACKORIGIN+9
 16081 83B2 A5 9F			lda :STACKORIGIN+9
 16082 83B4 8D C9 AC			sta Y1
 16083 83B7 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 16084 83B9 8D CA AC			sta Y1+1
 16085
 16086 				; optimize OK (vservice.pas), line = 2625
 16087
 16088 83BC AD D4 9D			lda FIRE.X
 16089 83BF 18 6D 4E 9D			add SHOOTS.WIDTH
 16090 83C3 85 9F			sta :STACKORIGIN+9
 16091 83C5 A9 00			lda #$00
 16092 83C7 6D 4F 9D			adc SHOOTS.WIDTH+1
 16093 83CA 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 16094 83CC A9 00			lda #$00
 16095 83CE 69 00			adc #$00
 16096 83D0 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
 16097 83D2 A9 00			lda #$00
 16098 83D4 69 00			adc #$00
 16099 83D6 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
 16100 83D8 A5 9F			lda :STACKORIGIN+9
 16101 83DA 38 E9 09			sub #$09
 16102 83DD 85 9F			sta :STACKORIGIN+9
 16103 83DF A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 16104 83E1 E9 00			sbc #$00
 16105 83E3 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 16106 83E5 A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
 16107 83E7 E9 00			sbc #$00
 16108 83E9 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
 16109 83EB A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
 16110 83ED E9 00			sbc #$00
 16111 83EF 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
 16112 83F1 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
 16113 83F3 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 16114 83F5 66 9F			ror :STACKORIGIN+9
 16115 83F7 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
 16116 83F9 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 16117 83FB 66 9F			ror :STACKORIGIN+9
 16118 83FD 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
 16119 83FF 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 16120 8401 66 9F			ror :STACKORIGIN+9
 16121 8403 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
 16122 8405 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 16123 8407 66 9F			ror :STACKORIGIN+9
 16124 8409 A5 9F			lda :STACKORIGIN+9
 16125 840B 8D C7 AC			sta X2
 16126 840E A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 16127 8410 8D C8 AC			sta X2+1
 16128
 16129 				; optimize OK (vservice.pas), line = 2626
 16130
 16131 8413 AD C9 AC			lda Y1
 16132 8416 8D CB AC			sta Y2
 16133 8419 AD CA AC			lda Y1+1
 16134 841C 8D CC AC			sta Y2+1
 16135
 16136 				; optimize OK (vservice.pas), line = 2628
 16137
 16138 841F A9 10			lda #$10
 16139 8421 85 8E			sta :ecx
 16140 8423 A9 00			lda #$00
 16141 8425 85 8F			sta :ecx+1
 16142 8427 AD C9 AC			lda Y1
 16143 842A 85 86			sta :eax
 16144 842C AD CA AC			lda Y1+1
 16145 842F 85 87			sta :eax+1
 16146 					.ifdef fmulinit
 16147 					fmulu_16
 16148 					els
 16149 8431 20 FA 12			imulCX
 16150 					eif
 16151 8434 A5 86			lda :eax
 16152 8436 18 6D C5 AC			add X1
 16153 843A A8				tay
 16154 843B B9 DD A3			lda adr.WALL,y
 16155 843E D0 21			jne l_2EFAx
 16156 8440 A9 10			lda #$10
 16157 8442 85 8E			sta :ecx
 16158 8444 A9 00			lda #$00
 16159 8446 85 8F			sta :ecx+1
 16160 8448 AD CB AC			lda Y2
 16161 844B 85 86			sta :eax
 16162 844D AD CC AC			lda Y2+1
 16163 8450 85 87			sta :eax+1
 16164 					.ifdef fmulinit
 16165 					fmulu_16
 16166 					els
 16167 8452 20 FA 12			imulCX
 16168 					eif
 16169 8455 A5 86			lda :eax
 16170 8457 18 6D C7 AC			add X2
 16171 845B A8				tay
 16172 845C B9 DD A3			lda adr.WALL,y
 16173 845F F0 3E			jeq l_2EFA
 16174 8461			l_2EFAx
 16175
 16176 				; optimize FAIL ('REMOVE_FIRE', vservice.pas), line = 2630
 16177
 16178 8461 20 A7 81			jsr REMOVE_FIRE
 16179
 16180 				; optimize OK (vservice.pas), line = 2631
 16181
 16182 8464 A9 00			lda #$00
 16183 8466 8D D6 9D			sta FIRE.SHOT
 16184
 16185 				; optimize OK (vservice.pas), line = 2633
 16186
 16187 8469 AD C5 AC			lda X1
 16188 846C 8D 14 AC			sta SHOOT_BLOCK_WITH_FIRE.XB
 16189 846F AD C6 AC			lda X1+1
 16190 8472 8D 15 AC			sta SHOOT_BLOCK_WITH_FIRE.XB+1
 16191 8475 AD C9 AC			lda Y1
 16192 8478 8D 16 AC			sta SHOOT_BLOCK_WITH_FIRE.YB
 16193 847B AD CA AC			lda Y1+1
 16194 847E 8D 17 AC			sta SHOOT_BLOCK_WITH_FIRE.YB+1
 16195 8481 20 A6 58			jsr SHOOT_BLOCK_WITH_FIRE
 16196
 16197 				; optimize OK (vservice.pas), line = 2634
 16198
 16199 8484 AD C7 AC			lda X2
 16200 8487 8D 14 AC			sta SHOOT_BLOCK_WITH_FIRE.XB
 16201 848A AD C8 AC			lda X2+1
 16202 848D 8D 15 AC			sta SHOOT_BLOCK_WITH_FIRE.XB+1
 16203 8490 AD CB AC			lda Y2
 16204 8493 8D 16 AC			sta SHOOT_BLOCK_WITH_FIRE.YB
 16205 8496 AD CC AC			lda Y2+1
 16206 8499 8D 17 AC			sta SHOOT_BLOCK_WITH_FIRE.YB+1
 16207 849C 20 A6 58			jsr SHOOT_BLOCK_WITH_FIRE
 16208 849F			l_2E6A
 16209 849F			l_2EFA
 16210 849F			l_2E91
 16211 849F			l_2E34
 16212 849F			l_2DDA
 16213
 16214 				; ------------------------------------------------------------
 16215
 16216 = ACC5			X1	= DATAORIGIN+$10A8
 16217 = ACC7			X2	= DATAORIGIN+$10AA
 16218 = ACC9			Y1	= DATAORIGIN+$10AC
 16219 = ACCB			Y2	= DATAORIGIN+$10AE
 16220
 16221 = ACC5			@VarData	= X1
 16222 = 0008			@VarDataSize	= 8
 16223
 16224 849F			@exit
 16225 					.ifdef @new
 16226 					lda <@VarData
 16227 					sta :ztmp
 16228 					lda >@VarData
 16229 					ldy #@VarDataSize-1
 16230 					jmp @FreeMem
 16231 					els
 16232 849F 60				rts						; ret
 16233 					eif
 16234 				.endl
 16235
 16236 84A0			.local	REMOVE_FLUX					; PROCEDURE
 16237
 16238 				; optimize OK (vservice.pas), line = 2646
 16239
 16240 84A0 A9 00			lda #$00
 16241 84A2 8D CD AC			sta Y
 16242
 16243 84A5			l_2F1F
 16244 				; --- ForToDoCondition
 16245 84A5 AD CD AC			lda Y
 16246 84A8 C9 14			cmp #$14
 16247 84AA 90 03 4C 5D 85		jcs l_2F2D
 16248
 16249 				; optimize OK (vservice.pas), line = 2648
 16250
 16251 84AF 69 B0			adc #$B0
 16252 84B1 85 A1			sta :STACKORIGIN+11
 16253 84B3 A9 00			lda #$00
 16254 84B5 69 00			adc #$00
 16255 84B7 06 A1			asl :STACKORIGIN+11
 16256 84B9 2A				rol @
 16257 84BA 85 B1			sta :STACKORIGIN+STACKWIDTH+11
 16258 84BC AD 29 9B			lda ROW
 16259 84BF 18 65 A1			add :STACKORIGIN+11
 16260 84C2 85 84			sta :bp2
 16261 84C4 AD 2A 9B			lda ROW+1
 16262 84C7 65 B1			adc :STACKORIGIN+STACKWIDTH+11
 16263 84C9 85 85			sta :bp2+1
 16264 84CB A0 00			ldy #$00
 16265 84CD A9 D9			lda #$D9
 16266 84CF 18 71 84			add (:bp2),y
 16267 84D2 8D F4 AA			sta BLITROW.DST
 16268 84D5 C8				iny
 16269 84D6 A9 00			lda #$00
 16270 84D8 71 84			adc (:bp2),y
 16271 84DA 8D F5 AA			sta BLITROW.DST+1
 16272 84DD A9 00			lda #$00
 16273 84DF 69 00			adc #$00
 16274 84E1 8D F6 AA			sta BLITROW.DST+2
 16275 84E4 A9 00			lda #$00
 16276 84E6 69 00			adc #$00
 16277 84E8 8D F7 AA			sta BLITROW.DST+3
 16278 84EB AD EA 9C			lda PLAYSCREEN.OFS
 16279 84EE 18 69 D9			add #$D9
 16280 84F1 85 A1			sta :STACKORIGIN+11
 16281 84F3 AD EB 9C			lda PLAYSCREEN.OFS+1
 16282 84F6 69 00			adc #$00
 16283 84F8 85 B1			sta :STACKORIGIN+STACKWIDTH+11
 16284 84FA AD EC 9C			lda PLAYSCREEN.OFS+2
 16285 84FD 69 00			adc #$00
 16286 84FF 85 C1			sta :STACKORIGIN+STACKWIDTH*2+11
 16287 8501 AD ED 9C			lda PLAYSCREEN.OFS+3
 16288 8504 69 00			adc #$00
 16289 8506 85 D1			sta :STACKORIGIN+STACKWIDTH*3+11
 16290 8508 AD CD AC			lda Y
 16291 850B 18 69 B0			add #$B0
 16292 850E 85 A2			sta :STACKORIGIN+12
 16293 8510 A9 00			lda #$00
 16294 8512 69 00			adc #$00
 16295 8514 06 A2			asl :STACKORIGIN+12
 16296 8516 2A				rol @
 16297 8517 85 B2			sta :STACKORIGIN+STACKWIDTH+12
 16298 8519 AD 29 9B			lda ROW
 16299 851C 18 65 A2			add :STACKORIGIN+12
 16300 851F 85 84			sta :bp2
 16301 8521 AD 2A 9B			lda ROW+1
 16302 8524 65 B2			adc :STACKORIGIN+STACKWIDTH+12
 16303 8526 85 85			sta :bp2+1
 16304 8528 A0 00			ldy #$00
 16305 852A A5 A1			lda :STACKORIGIN+11
 16306 852C 18 71 84			add (:bp2),y
 16307 852F 8D F0 AA			sta BLITROW.SRC
 16308 8532 C8				iny
 16309 8533 A5 B1			lda :STACKORIGIN+STACKWIDTH+11
 16310 8535 71 84			adc (:bp2),y
 16311 8537 8D F1 AA			sta BLITROW.SRC+1
 16312 853A A5 C1			lda :STACKORIGIN+STACKWIDTH*2+11
 16313 853C 69 00			adc #$00
 16314 853E 8D F2 AA			sta BLITROW.SRC+2
 16315 8541 A5 D1			lda :STACKORIGIN+STACKWIDTH*3+11
 16316 8543 69 00			adc #$00
 16317 8545 8D F3 AA			sta BLITROW.SRC+3
 16318 8548 A9 08			lda #$08
 16319 854A 8D F8 AA			sta BLITROW.SIZE
 16320 854D A9 00			lda #$00
 16321 854F 8D F9 AA			sta BLITROW.SIZE+1
 16322 8552 20 60 25			jsr BLITROW
 16323
 16324 				; --- ForToDoEpilog
 16325 8555 EE CD AC			inc Y
 16326 8558 F0 03 4C A5 84		jne l_2F1F
 16327 855D			l_2F2D
 16328
 16329 				; ------------------------------------------------------------
 16330
 16331 = ACCD			Y	= DATAORIGIN+$10B0
 16332
 16333 = ACCD			@VarData	= Y
 16334 = 0001			@VarDataSize	= 1
 16335
 16336 855D			@exit
 16337 					.ifdef @new
 16338 					lda <@VarData
 16339 					sta :ztmp
 16340 					lda >@VarData
 16341 					ldy #@VarDataSize-1
 16342 					jmp @FreeMem
 16343 					els
 16344 855D 60				rts						; ret
 16345 					eif
 16346 				.endl
 16347
 16348 855E			.local	CHECK_FLUX					; PROCEDURE
 16349
 16350 				; optimize OK (vservice.pas), line = 2656
 16351
 16352 855E AD DB 9D			lda SCRFLUXCNT
 16353 8561 8D CF AC			sta FX
 16354
 16355 				; optimize OK (vservice.pas), line = 2657
 16356
 16357 8564 AD DA 9D			lda SCRFLUX
 16358 8567 D0 03 4C 1E 86		jeq l_2F6C
 16359
 16360 				; optimize OK (vservice.pas), line = 2659
 16361
 16362 856C A9 00			lda #$00
 16363 856E 8D CE AC			sta Y
 16364
 16365 8571			l_2F76
 16366 				; --- ForToDoCondition
 16367 8571 AD CE AC			lda Y
 16368 8574 C9 14			cmp #$14
 16369 8576 90 03 4C 0F 86		jcs l_2F84
 16370
 16371 				; optimize OK (vservice.pas), line = 2661
 16372
 16373 857B 69 B0			adc #$B0
 16374 857D 85 A1			sta :STACKORIGIN+11
 16375 857F A9 00			lda #$00
 16376 8581 69 00			adc #$00
 16377 8583 06 A1			asl :STACKORIGIN+11
 16378 8585 2A				rol @
 16379 8586 85 B1			sta :STACKORIGIN+STACKWIDTH+11
 16380 8588 AD 29 9B			lda ROW
 16381 858B 18 65 A1			add :STACKORIGIN+11
 16382 858E 85 84			sta :bp2
 16383 8590 AD 2A 9B			lda ROW+1
 16384 8593 65 B1			adc :STACKORIGIN+STACKWIDTH+11
 16385 8595 85 85			sta :bp2+1
 16386 8597 A0 00			ldy #$00
 16387 8599 A9 D9			lda #$D9
 16388 859B 18 71 84			add (:bp2),y
 16389 859E 8D F4 AA			sta BLITROW.DST
 16390 85A1 C8				iny
 16391 85A2 A9 00			lda #$00
 16392 85A4 71 84			adc (:bp2),y
 16393 85A6 8D F5 AA			sta BLITROW.DST+1
 16394 85A9 A9 00			lda #$00
 16395 85AB 69 00			adc #$00
 16396 85AD 8D F6 AA			sta BLITROW.DST+2
 16397 85B0 A9 00			lda #$00
 16398 85B2 69 00			adc #$00
 16399 85B4 8D F7 AA			sta BLITROW.DST+3
 16400 85B7 AD CE AC			lda Y
 16401 85BA 18 6D CF AC			add FX
 16402 85BE 85 A2			sta :STACKORIGIN+12
 16403 85C0 A9 00			lda #$00
 16404 85C2 69 00			adc #$00
 16405 85C4 85 B2			sta :STACKORIGIN+STACKWIDTH+12
 16406 85C6 A9 00			lda #$00
 16407 85C8 06 A2			asl :STACKORIGIN+12
 16408 85CA 26 B2			rol :STACKORIGIN+STACKWIDTH+12
 16409 85CC 2A				rol @
 16410 85CD 06 A2			asl :STACKORIGIN+12
 16411 85CF 26 B2			rol :STACKORIGIN+STACKWIDTH+12
 16412 85D1 2A				rol @
 16413 85D2 06 A2			asl :STACKORIGIN+12
 16414 85D4 26 B2			rol :STACKORIGIN+STACKWIDTH+12
 16415 85D6 2A				rol @
 16416 85D7 85 C2			sta :STACKORIGIN+STACKWIDTH*2+12
 16417 85D9 AD 5A 9D			lda FLUX.OFS
 16418 85DC 18 65 A2			add :STACKORIGIN+12
 16419 85DF 8D F0 AA			sta BLITROW.SRC
 16420 85E2 AD 5B 9D			lda FLUX.OFS+1
 16421 85E5 65 B2			adc :STACKORIGIN+STACKWIDTH+12
 16422 85E7 8D F1 AA			sta BLITROW.SRC+1
 16423 85EA AD 5C 9D			lda FLUX.OFS+2
 16424 85ED 65 C2			adc :STACKORIGIN+STACKWIDTH*2+12
 16425 85EF 8D F2 AA			sta BLITROW.SRC+2
 16426 85F2 AD 5D 9D			lda FLUX.OFS+3
 16427 85F5 69 00			adc #$00
 16428 85F7 8D F3 AA			sta BLITROW.SRC+3
 16429 85FA A9 08			lda #$08
 16430 85FC 8D F8 AA			sta BLITROW.SIZE
 16431 85FF A9 00			lda #$00
 16432 8601 8D F9 AA			sta BLITROW.SIZE+1
 16433 8604 20 60 25			jsr BLITROW
 16434
 16435 				; --- ForToDoEpilog
 16436 8607 EE CE AC			inc Y
 16437 860A F0 03 4C 71 85		jne l_2F76
 16438 860F			l_2F84
 16439
 16440 				; optimize FAIL (0, vservice.pas), line = 2663
 16441
 16442 860F EE DB 9D			inc SCRFLUXCNT
 16443
 16444 				; optimize OK (vservice.pas), line = 2664
 16445
 16446 8612 AD DB 9D			lda SCRFLUXCNT
 16447 8615 C9 15			cmp #$15
 16448 8617 90 05			jcc l_2FC3
 16449 8619 A9 00			lda #$00
 16450 861B 8D DB 9D			sta SCRFLUXCNT
 16451 861E			l_2FC3
 16452 861E			l_2F6C
 16453
 16454 				; ------------------------------------------------------------
 16455
 16456 = ACCE			Y	= DATAORIGIN+$10B1
 16457 = ACCF			FX	= DATAORIGIN+$10B2
 16458
 16459 = ACCE			@VarData	= Y
 16460 = 0002			@VarDataSize	= 2
 16461
 16462 861E			@exit
 16463 					.ifdef @new
 16464 					lda <@VarData
 16465 					sta :ztmp
 16466 					lda >@VarData
 16467 					ldy #@VarDataSize-1
 16468 					jmp @FreeMem
 16469 					els
 16470 861E 60				rts						; ret
 16471 					eif
 16472 				.endl
 16473
 16474 861F			.local	VAUS_OUT					; PROCEDURE
 16475
 16476 				; optimize FAIL ('NOSOUND', vservice.pas), line = 2672
 16477
 16478 861F 20 CC 25			jsr NOSOUND
 16479
 16480 				; optimize OK (vservice.pas), line = 2674
 16481
 16482 8622 AD BA 9D			lda CUR_PLAYER
 16483 8625 0A				asl @
 16484 8626 0A				asl @
 16485 8627 A8				tay
 16486 8628 B9 9F 9D			lda adr.SCORE.PLAYER,y
 16487 862B 18 69 10			add #$10
 16488 862E 99 9F 9D			sta adr.SCORE.PLAYER,y
 16489 8631 B9 A0 9D			lda adr.SCORE.PLAYER+1,y
 16490 8634 69 27			adc #$27
 16491 8636 99 A0 9D			sta adr.SCORE.PLAYER+1,y
 16492 8639 B9 A1 9D			lda adr.SCORE.PLAYER+2,y
 16493 863C 69 00			adc #$00
 16494 863E 99 A1 9D			sta adr.SCORE.PLAYER+2,y
 16495 8641 B9 A2 9D			lda adr.SCORE.PLAYER+3,y
 16496 8644 69 00			adc #$00
 16497 8646 99 A2 9D			sta adr.SCORE.PLAYER+3,y
 16498
 16499 				; optimize OK (vservice.pas), line = 2675
 16500
 16501 8649 A9 00			lda #$00
 16502 864B 8D 9D 9D			sta REMAIN_BLK
 16503
 16504 				; optimize OK (vservice.pas), line = 2677
 16505
 16506 864E AD 5E 9D			lda VAUS.X
 16507 8651 8D D4 AC			sta Z
 16508 8654 A9 00			lda #$00
 16509 8656 8D D5 AC			sta Z+1
 16510
 16511 				; optimize FAIL ('WAIT_VBL', vservice.pas), line = 2679
 16512
 16513 8659 20 3B 2E			jsr WAIT_VBL
 16514
 16515 				; optimize FAIL ('REMOVE_VAUS', vservice.pas), line = 2680
 16516
 16517 865C 20 9A 3C			jsr REMOVE_VAUS
 16518
 16519 				; optimize FAIL ('PLACE_VAUS', vservice.pas), line = 2681
 16520
 16521 865F 20 85 3D			jsr PLACE_VAUS
 16522
 16523 				; optimize OK (vservice.pas), line = 2683
 16524
 16525 8662 AD D4 AC			lda Z
 16526 8665 8D D0 AC			sta X
 16527 8668 AD D5 AC			lda Z+1
 16528 866B 8D D1 AC			sta X+1
 16529 866E AD D4 AC			lda Z
 16530 8671 18 69 2C			add #$2C
 16531 8674 8D 87 86			sta @FORTMP_2FEE_0
 16532 8677 AD D5 AC			lda Z+1
 16533 867A 69 00			adc #$00
 16534 867C 8D 80 86			sta @FORTMP_2FEE_1
 16535
 16536 867F			l_2FF1
 16537 				; --- ForToDoCondition
 16538 867F A9 00			lda @FORTMP_2FEE_1::#$00
 16539 8681 CD D1 AC			cmp X+1
 16540 8684 D0 05			bne @+
 16541 8686 A9 00			lda @FORTMP_2FEE_0::#$00
 16542 8688 CD D0 AC			cmp X
 16543 				@
 16544 868B B0 03 4C 7C 87		jcc l_2FFD
 16545
 16546 				; optimize FAIL ('WAIT_VBL', vservice.pas), line = 2685
 16547
 16548 8690 20 3B 2E			jsr WAIT_VBL
 16549
 16550 				; optimize OK (vservice.pas), line = 2687
 16551
 16552 8693 AD 5E 9D			lda VAUS.X
 16553 8696 8D 60 9D			sta VAUS.OLDX
 16554 8699 A9 00			lda #$00
 16555 869B 8D 61 9D			sta VAUS.OLDX+1
 16556
 16557 				; optimize OK (vservice.pas), line = 2688
 16558
 16559 869E AD D0 AC			lda X
 16560 86A1 8D 5E 9D			sta VAUS.X
 16561
 16562 				; optimize FAIL ('REMOVE_VAUS', vservice.pas), line = 2689
 16563
 16564 86A4 20 9A 3C			jsr REMOVE_VAUS
 16565
 16566 				; optimize FAIL ('CHECK_FLUX', vservice.pas), line = 2690
 16567
 16568 86A7 20 5E 85			jsr CHECK_FLUX
 16569
 16570 				; optimize FAIL ('PLACE_VAUS', vservice.pas), line = 2691
 16571
 16572 86AA 20 85 3D			jsr PLACE_VAUS
 16573
 16574 				; optimize OK (vservice.pas), line = 2693
 16575
 16576 86AD AD 5F 9D			lda VAUS.Y
 16577 86B0 8D D2 AC			sta Y
 16578 86B3 A9 00			lda #$00
 16579 86B5 8D D3 AC			sta Y+1
 16580 86B8 AD 5F 9D			lda VAUS.Y
 16581 86BB 18 6D 67 9D			add VAUS.HEIGHT
 16582 86BF 8D D1 86			sta @FORTMP_301C_0
 16583 86C2 A9 00			lda #$00
 16584 86C4 69 00			adc #$00
 16585 86C6 8D CA 86			sta @FORTMP_301C_1
 16586
 16587 86C9			l_301F
 16588 				; --- ForToDoCondition
 16589 86C9 A9 00			lda @FORTMP_301C_1::#$00
 16590 86CB CD D3 AC			cmp Y+1
 16591 86CE D0 05			bne @+
 16592 86D0 A9 00			lda @FORTMP_301C_0::#$00
 16593 86D2 CD D2 AC			cmp Y
 16594 				@
 16595 86D5 B0 03 4C 6C 87		jcc l_302B
 16596
 16597 				; optimize OK (vservice.pas), line = 2695
 16598
 16599 86DA AD D3 AC			lda Y+1
 16600 86DD 85 B1			sta :STACKORIGIN+STACKWIDTH+11
 16601 86DF AD D2 AC			lda Y
 16602 86E2 0A				asl @
 16603 86E3 26 B1			rol :STACKORIGIN+STACKWIDTH+11
 16604 86E5 18 6D 29 9B			add ROW
 16605 86E9 85 84			sta :bp2
 16606 86EB AD 2A 9B			lda ROW+1
 16607 86EE 65 B1			adc :STACKORIGIN+STACKWIDTH+11
 16608 86F0 85 85			sta :bp2+1
 16609 86F2 A0 00			ldy #$00
 16610 86F4 A9 E1			lda #$E1
 16611 86F6 18 71 84			add (:bp2),y
 16612 86F9 8D F4 AA			sta BLITROW.DST
 16613 86FC C8				iny
 16614 86FD A9 00			lda #$00
 16615 86FF 71 84			adc (:bp2),y
 16616 8701 8D F5 AA			sta BLITROW.DST+1
 16617 8704 A9 00			lda #$00
 16618 8706 69 00			adc #$00
 16619 8708 8D F6 AA			sta BLITROW.DST+2
 16620 870B A9 00			lda #$00
 16621 870D 69 00			adc #$00
 16622 870F 8D F7 AA			sta BLITROW.DST+3
 16623 8712 AD EA 9C			lda PLAYSCREEN.OFS
 16624 8715 18 69 E1			add #$E1
 16625 8718 85 A1			sta :STACKORIGIN+11
 16626 871A AD EB 9C			lda PLAYSCREEN.OFS+1
 16627 871D 69 00			adc #$00
 16628 871F 85 B1			sta :STACKORIGIN+STACKWIDTH+11
 16629 8721 AD EC 9C			lda PLAYSCREEN.OFS+2
 16630 8724 69 00			adc #$00
 16631 8726 85 C1			sta :STACKORIGIN+STACKWIDTH*2+11
 16632 8728 AD ED 9C			lda PLAYSCREEN.OFS+3
 16633 872B 69 00			adc #$00
 16634 872D 85 D1			sta :STACKORIGIN+STACKWIDTH*3+11
 16635 872F A0 00			ldy #$00
 16636 8731 A5 A1			lda :STACKORIGIN+11
 16637 8733 18 71 84			add (:bp2),y
 16638 8736 8D F0 AA			sta BLITROW.SRC
 16639 8739 C8				iny
 16640 873A A5 B1			lda :STACKORIGIN+STACKWIDTH+11
 16641 873C 71 84			adc (:bp2),y
 16642 873E 8D F1 AA			sta BLITROW.SRC+1
 16643 8741 A5 C1			lda :STACKORIGIN+STACKWIDTH*2+11
 16644 8743 69 00			adc #$00
 16645 8745 8D F2 AA			sta BLITROW.SRC+2
 16646 8748 A5 D1			lda :STACKORIGIN+STACKWIDTH*3+11
 16647 874A 69 00			adc #$00
 16648 874C 8D F3 AA			sta BLITROW.SRC+3
 16649 874F A9 28			lda #$28
 16650 8751 8D F8 AA			sta BLITROW.SIZE
 16651 8754 A9 00			lda #$00
 16652 8756 8D F9 AA			sta BLITROW.SIZE+1
 16653 8759 20 60 25			jsr BLITROW
 16654
 16655 				; --- ForToDoEpilog
 16656 875C EE D2 AC			inc Y
 16657 875F F0 03 4C C9 86		jne l_301F
 16658 8764 EE D3 AC			inc Y+1
 16659 8767 F0 03 4C C9 86		jne l_301F
 16660 876C			l_302B
 16661
 16662 				; --- ForToDoEpilog
 16663 876C EE D0 AC			inc X
 16664 876F F0 03 4C 7F 86		jne l_2FF1
 16665 8774 EE D1 AC			inc X+1
 16666 8777 F0 03 4C 7F 86		jne l_2FF1
 16667 877C			l_2FFD
 16668
 16669 				; ------------------------------------------------------------
 16670
 16671 = ACD0			X	= DATAORIGIN+$10B3
 16672 = ACD2			Y	= DATAORIGIN+$10B5
 16673 = ACD4			Z	= DATAORIGIN+$10B7
 16674
 16675 = ACD0			@VarData	= X
 16676 = 0006			@VarDataSize	= 6
 16677
 16678 877C			@exit
 16679 					.ifdef @new
 16680 					lda <@VarData
 16681 					sta :ztmp
 16682 					lda >@VarData
 16683 					ldy #@VarDataSize-1
 16684 					jmp @FreeMem
 16685 					els
 16686 877C 60				rts						; ret
 16687 					eif
 16688 				.endl
 16689
 16690 877D			.local	CHECK_BONUS_TYPE				; PROCEDURE
 16691
 16692 				; optimize OK (vservice.pas), line = 2705
 16693
 16694 877D AD 6A 9D			lda VAUS.LETTER
 16695 8780 10 03 4C 33 88		jmi l_3065
 16696 8785 D0 03 4C 33 88		jeq l_3065
 16697
 16698 				; optimize OK (vservice.pas), line = 2707
 16699
 16700 878A A0 00			ldy #$00
 16701 878C AD 6A 9D			lda VAUS.LETTER
 16702 878F 10 01			spl
 16703 8791 88				dey
 16704 8792 38 E9 01			sub #$01
 16705 8795 8D D2 9D			sta LETT.LAST
 16706 8798 98				tya
 16707 8799 E9 00			sbc #$00
 16708 879B 8D D3 9D			sta LETT.LAST+1
 16709
 16710 				; optimize OK (vservice.pas), line = 2708
 16711
 16712 879E AC DE AC 84 84 AC + 	mwy B2 :bp2
 16713 87A8 A0 17			ldy #B2.INPLAY-DATAORIGIN
 16714 87AA B1 84			lda (:bp2),y
 16715 87AC F0 0F			jeq l_307C
 16716 87AE AD DE AC			lda B2
 16717 87B1 8D 60 AB			sta REMOVE_BALL.BALL
 16718 87B4 AD DF AC			lda B2+1
 16719 87B7 8D 61 AB			sta REMOVE_BALL.BALL+1
 16720 87BA 20 77 2D			jsr REMOVE_BALL
 16721 87BD			l_307C
 16722
 16723 				; optimize OK (vservice.pas), line = 2709
 16724
 16725 87BD AC E2 AC 84 84 AC + 	mwy B3 :bp2
 16726 87C7 A0 17			ldy #B3.INPLAY-DATAORIGIN
 16727 87C9 B1 84			lda (:bp2),y
 16728 87CB F0 0F			jeq l_308E
 16729 87CD AD E2 AC			lda B3
 16730 87D0 8D 60 AB			sta REMOVE_BALL.BALL
 16731 87D3 AD E3 AC			lda B3+1
 16732 87D6 8D 61 AB			sta REMOVE_BALL.BALL+1
 16733 87D9 20 77 2D			jsr REMOVE_BALL
 16734 87DC			l_308E
 16735
 16736 				; optimize OK (vservice.pas), line = 2710
 16737
 16738 87DC AC DE AC 84 84 AC + 	mwy B2 :bp2
 16739 87E6 A0 17			ldy #B2.INPLAY-DATAORIGIN
 16740 87E8 A9 00			lda #$00
 16741 87EA 91 84			sta (:bp2),y
 16742
 16743 				; optimize OK (vservice.pas), line = 2711
 16744
 16745 87EC AC E2 AC 84 84 AC + 	mwy B3 :bp2
 16746 87F6 A0 17			ldy #B3.INPLAY-DATAORIGIN
 16747 87F8 91 84			sta (:bp2),y
 16748
 16749 				; optimize OK (vservice.pas), line = 2712
 16750
 16751 87FA 8D DA 9D			sta SCRFLUX
 16752
 16753 				; optimize FAIL ('REMOVE_FLUX', vservice.pas), line = 2713
 16754
 16755 87FD 20 A0 84			jsr REMOVE_FLUX
 16756
 16757 				; optimize OK (vservice.pas), line = 2715
 16758
 16759 8800 AD 6A 9D			lda VAUS.LETTER
 16760 8803 C9 06			cmp #$06
 16761 8805 F0 2C			jeq l_30B3
 16762
 16763 				; optimize OK (vservice.pas), line = 2717
 16764
 16765 8807 AC DA AC 84 84 AC + 	mwy B1 :bp2
 16766 8811 A0 18			ldy #B1.LAUNCH-DATAORIGIN
 16767 8813 A9 00			lda #$00
 16768 8815 91 84			sta (:bp2),y
 16769
 16770 				; optimize OK (vservice.pas), line = 2718
 16771
 16772 8817 AC DE AC 84 84 AC + 	mwy B2 :bp2
 16773 8821 A0 18			ldy #B2.LAUNCH-DATAORIGIN
 16774 8823 91 84			sta (:bp2),y
 16775
 16776 				; optimize OK (vservice.pas), line = 2719
 16777
 16778 8825 AC E2 AC 84 84 AC + 	mwy B3 :bp2
 16779 882F A0 18			ldy #B3.LAUNCH-DATAORIGIN
 16780 8831 91 84			sta (:bp2),y
 16781 8833			l_30B3
 16782 8833			l_3065
 16783
 16784 				; optimize OK (vservice.pas), line = 2723
 16785
 16786 8833 AD 6A 9D			lda VAUS.LETTER
 16787 8836 8D E8 AC			sta @CASETMP_0009
 16788 8839 C9 01			cmp #$01
 16789 883B D0 4D			jne l_30CF
 16790 				@
 16791
 16792 				; optimize OK (vservice.pas), line = 2726
 16793
 16794 883D AD D6 9D			lda FIRE.SHOT
 16795 8840 F0 03			jeq l_30DB
 16796 8842 20 A7 81			jsr REMOVE_FIRE
 16797 8845			l_30DB
 16798
 16799 				; optimize OK (vservice.pas), line = 2727
 16800
 16801 8845 AD 06 9D 8D EE 9C + 	:8 mva adr.LASERS+# adr.PLAYVAUS+#
 16802
 16803 				; optimize FAIL ('MODIFY_VAUS', vservice.pas), line = 2728
 16804
 16805 8875 20 D0 3B			jsr MODIFY_VAUS
 16806
 16807 				; optimize OK (vservice.pas), line = 2729
 16808
 16809 8878 A9 00			lda #$00
 16810 887A 8D 6A 9D			sta VAUS.LETTER
 16811
 16812 				; optimize OK (vservice.pas), line = 2730
 16813
 16814 887D A9 01			lda #$01
 16815 887F 8D D7 9D			sta FIRE.AVL
 16816
 16817 				; optimize OK (vservice.pas), line = 2731
 16818
 16819 8882 A9 00			lda #$00
 16820 8884 8D D6 9D			sta FIRE.SHOT
 16821 8887 4C B8 8A			jmp a_0009
 16822 888A			l_30CF
 16823 888A C9 02			cmp #$02
 16824 888C D0 46			jne l_30F5
 16825
 16826 				; optimize OK (vservice.pas), line = 2735
 16827
 16828 888E AD D6 9D			lda FIRE.SHOT
 16829 8891 F0 03			jeq l_3101
 16830 8893 20 A7 81			jsr REMOVE_FIRE
 16831 8896			l_3101
 16832
 16833 				; optimize OK (vservice.pas), line = 2736
 16834
 16835 8896 AD FE 9C 8D EE 9C + 	:8 mva adr.ENLARGED+# adr.PLAYVAUS+#
 16836
 16837 				; optimize FAIL ('MODIFY_VAUS', vservice.pas), line = 2737
 16838
 16839 88C6 20 D0 3B			jsr MODIFY_VAUS
 16840
 16841 				; optimize OK (vservice.pas), line = 2738
 16842
 16843 88C9 A9 00			lda #$00
 16844 88CB 8D 6A 9D			sta VAUS.LETTER
 16845
 16846 				; optimize OK (vservice.pas), line = 2739
 16847
 16848 88CE 8D D7 9D			sta FIRE.AVL
 16849 88D1 4C B8 8A			jmp a_0009
 16850 88D4			l_30F5
 16851 88D4 C9 03			cmp #$03
 16852 88D6 D0 4B			jne l_3117
 16853
 16854 				; optimize OK (vservice.pas), line = 2743
 16855
 16856 88D8 AD D6 9D			lda FIRE.SHOT
 16857 88DB F0 03			jeq l_3123
 16858 88DD 20 A7 81			jsr REMOVE_FIRE
 16859 88E0			l_3123
 16860
 16861 				; optimize OK (vservice.pas), line = 2744
 16862
 16863 88E0 AD F6 9C 8D EE 9C + 	:8 mva adr.NORMAL+# adr.PLAYVAUS+#
 16864
 16865 				; optimize FAIL ('MODIFY_VAUS', vservice.pas), line = 2745
 16866
 16867 8910 20 D0 3B			jsr MODIFY_VAUS
 16868
 16869 				; optimize OK (vservice.pas), line = 2746
 16870
 16871 8913 A9 00			lda #$00
 16872 8915 8D 6A 9D			sta VAUS.LETTER
 16873
 16874 				; optimize OK (vservice.pas), line = 2747
 16875
 16876 8918 8D D7 9D			sta FIRE.AVL
 16877
 16878 				; optimize OK (vservice.pas), line = 2748
 16879
 16880 891B A9 01			lda #$01
 16881 891D 8D DA 9D			sta SCRFLUX
 16882 8920 4C B8 8A			jmp a_0009
 16883 8923			l_3117
 16884 8923 C9 04			cmp #$04
 16885 8925 D0 3E			jne l_313D
 16886
 16887 				; optimize OK (vservice.pas), line = 2752
 16888
 16889 8927 AD D6 9D			lda FIRE.SHOT
 16890 892A F0 03			jeq l_3149
 16891 892C 20 A7 81			jsr REMOVE_FIRE
 16892 892F			l_3149
 16893
 16894 				; optimize OK (vservice.pas), line = 2753
 16895
 16896 892F AD F6 9C 8D EE 9C + 	:8 mva adr.NORMAL+# adr.PLAYVAUS+#
 16897
 16898 				; optimize FAIL ('MODIFY_VAUS', vservice.pas), line = 2754
 16899
 16900 895F 20 D0 3B			jsr MODIFY_VAUS
 16901 				; optimize OK (vservice.pas), line = 2755
 16902 8962 4C FC 89			jmp s_3186
 16903 8965			l_313D
 16904 8965 C9 05			cmp #$05
 16905 8967 F0 03 4C FF 89		jne l_315B
 16906
 16907 				; optimize OK (vservice.pas), line = 2759
 16908
 16909 896C AD D6 9D			lda FIRE.SHOT
 16910 896F F0 03			jeq l_3167
 16911 8971 20 A7 81			jsr REMOVE_FIRE
 16912 8974			l_3167
 16913
 16914 				; optimize OK (vservice.pas), line = 2760
 16915
 16916 8974 AD F6 9C 8D EE 9C + 	:8 mva adr.NORMAL+# adr.PLAYVAUS+#
 16917
 16918 				; optimize FAIL ('MODIFY_VAUS', vservice.pas), line = 2761
 16919
 16920 89A4 20 D0 3B			jsr MODIFY_VAUS
 16921
 16922 				; optimize OK (vservice.pas), line = 2762
 16923
 16924 89A7 A9 00			lda #$00
 16925 89A9 8D 6A 9D			sta VAUS.LETTER
 16926
 16927 				; optimize OK (vservice.pas), line = 2763
 16928
 16929 89AC AC DA AC 84 84 AC + 	mwy B1 :bp2
 16930 89B6 A0 0C			ldy #B1.SPEED-DATAORIGIN
 16931 89B8 B1 84			lda (:bp2),y
 16932 89BA 38 E9 F4			sub #$F4
 16933 89BD 8D 12 AB			sta MAX.A
 16934 89C0 C8				iny
 16935 89C1 B1 84			lda (:bp2),y
 16936 89C3 E9 01			sbc #$01
 16937 89C5 8D 13 AB			sta MAX.A+1
 16938 89C8 A9 F4			lda #$F4
 16939 89CA 8D 14 AB			sta MAX.B
 16940 89CD A9 01			lda #$01
 16941 89CF 8D 15 AB			sta MAX.B+1
 16942 89D2 20 CE 25			jsr MAX
 16943 89D5 AD 16 AB			lda MAX.RESULT
 16944 89D8 8D E6 AC			sta X
 16945 89DB AD 17 AB			lda MAX.RESULT+1
 16946 89DE 8D E7 AC			sta X+1
 16947
 16948 				; optimize OK (vservice.pas), line = 2764
 16949
 16950 89E1 AD DA AC			lda B1
 16951 89E4 8D 6B AB			sta SET_BALL_SPEED.BALL
 16952 89E7 AD DB AC			lda B1+1
 16953 89EA 8D 6C AB			sta SET_BALL_SPEED.BALL+1
 16954 89ED AD E6 AC			lda X
 16955 89F0 8D 6F AB			sta SET_BALL_SPEED.SPEED
 16956 89F3 AD E7 AC			lda X+1
 16957 89F6 8D 70 AB			sta SET_BALL_SPEED.SPEED+1
 16958 89F9 20 21 2F			jsr SET_BALL_SPEED
 16959 89FC			s_3186
 16960 				; optimize OK (vservice.pas), line = 2765
 16961 89FC 4C 3E 8A			jmp s_31A4
 16962 89FF			l_315B
 16963 89FF C9 06			cmp #$06
 16964 8A01 D0 3E			jne l_318D
 16965
 16966 				; optimize OK (vservice.pas), line = 2769
 16967
 16968 8A03 AD D6 9D			lda FIRE.SHOT
 16969 8A06 F0 03			jeq l_3199
 16970 8A08 20 A7 81			jsr REMOVE_FIRE
 16971 8A0B			l_3199
 16972
 16973 				; optimize OK (vservice.pas), line = 2770
 16974
 16975 8A0B AD F6 9C 8D EE 9C + 	:8 mva adr.NORMAL+# adr.PLAYVAUS+#
 16976
 16977 				; optimize FAIL ('MODIFY_VAUS', vservice.pas), line = 2771
 16978
 16979 8A3B 20 D0 3B			jsr MODIFY_VAUS
 16980 8A3E			s_31A4
 16981 				; optimize OK (vservice.pas), line = 2772
 16982 8A3E 4C B3 8A			jmp s_31D4
 16983 8A41			l_318D
 16984 8A41 C9 07			cmp #$07
 16985 8A43 D0 73			jne l_31AB
 16986
 16987 				; optimize OK (vservice.pas), line = 2776
 16988
 16989 8A45 AD D6 9D			lda FIRE.SHOT
 16990 8A48 F0 03			jeq l_31B7
 16991 8A4A 20 A7 81			jsr REMOVE_FIRE
 16992 8A4D			l_31B7
 16993
 16994 				; optimize OK (vservice.pas), line = 2777
 16995
 16996 8A4D AD F6 9C 8D EE 9C + 	:8 mva adr.NORMAL+# adr.PLAYVAUS+#
 16997
 16998 				; optimize FAIL ('MODIFY_VAUS', vservice.pas), line = 2778
 16999
 17000 8A7D 20 D0 3B			jsr MODIFY_VAUS
 17001
 17002 				; optimize OK (vservice.pas), line = 2779
 17003
 17004 8A80 A9 00			lda #$00
 17005 8A82 8D 6A 9D			sta VAUS.LETTER
 17006
 17007 				; optimize OK (vservice.pas), line = 2780
 17008
 17009 8A85 AC BA 9D			ldy CUR_PLAYER
 17010 8A88 B9 AE 9D			lda adr.SCORE.LIVES,y
 17011 8A8B 18 69 01			add #$01
 17012 8A8E 99 AE 9D			sta adr.SCORE.LIVES,y
 17013
 17014 				; optimize OK (vservice.pas), line = 2781
 17015
 17016 8A91 8D AE AC			sta PLOT_LIVES.LIVES
 17017 8A94 A9 00			lda #$00
 17018 8A96 8D AF AC			sta PLOT_LIVES.LIVES+1
 17019 8A99 20 EC 7D			jsr PLOT_LIVES
 17020
 17021 				; optimize OK (vservice.pas), line = 2782
 17022
 17023 8A9C A9 D0			lda #$D0
 17024 8A9E 8D CC 9C			sta BALL_BLOCK_SOUND.A
 17025 8AA1 A9 07			lda #$07
 17026 8AA3 8D CD 9C			sta BALL_BLOCK_SOUND.A+1
 17027 8AA6 A9 0A			lda #$0A
 17028 8AA8 8D CE 9C			sta BALL_BLOCK_SOUND.B
 17029 8AAB A9 00			lda #$00
 17030 8AAD 8D CF 9C			sta BALL_BLOCK_SOUND.B+1
 17031 8AB0 20 9A 24			jsr BALL_BLOCK_SOUND
 17032 8AB3			s_31D4
 17033
 17034 				; optimize OK (vservice.pas), line = 2783
 17035
 17036 8AB3 A9 00			lda #$00
 17037 8AB5 8D D7 9D			sta FIRE.AVL
 17038 8AB8			l_31AB
 17039 8AB8			a_0009
 17040
 17041 				; ------------------------------------------------------------
 17042
 17043 = ACDA			B1	= DATAORIGIN+$10BD
 17044 = 9C1D			B1.X	= DATAORIGIN+$0000
 17045 = 9C1F			B1.Y	= DATAORIGIN+$0002
 17046 = 9C21			B1.FINEX	= DATAORIGIN+$0004
 17047 = 9C23			B1.FINEY	= DATAORIGIN+$0006
 17048 = 9C25			B1.OLDX	= DATAORIGIN+$0008
 17049 = 9C27			B1.OLDY	= DATAORIGIN+$000A
 17050 = 9C29			B1.SPEED	= DATAORIGIN+$000C
 17051 = 9C2B			B1.FINESPEED	= DATAORIGIN+$000E
 17052 = 9C2D			B1.SPEEDX	= DATAORIGIN+$0010
 17053 = 9C2F			B1.SPEEDY	= DATAORIGIN+$0012
 17054 = 9C31			B1.SBD	= DATAORIGIN+$0014
 17055 = 9C33			B1.BRWHIT	= DATAORIGIN+$0016
 17056 = 9C34			B1.INPLAY	= DATAORIGIN+$0017
 17057 = 9C35			B1.LAUNCH	= DATAORIGIN+$0018
 17058 = 9C36			B1.ONVAUS	= DATAORIGIN+$0019
 17059 = 9C37			B1.STM	= DATAORIGIN+$001A
 17060 = ACDE			B2	= DATAORIGIN+$10C1
 17061 = 9C1D			B2.X	= DATAORIGIN+$0000
 17062 = 9C1F			B2.Y	= DATAORIGIN+$0002
 17063 = 9C21			B2.FINEX	= DATAORIGIN+$0004
 17064 = 9C23			B2.FINEY	= DATAORIGIN+$0006
 17065 = 9C25			B2.OLDX	= DATAORIGIN+$0008
 17066 = 9C27			B2.OLDY	= DATAORIGIN+$000A
 17067 = 9C29			B2.SPEED	= DATAORIGIN+$000C
 17068 = 9C2B			B2.FINESPEED	= DATAORIGIN+$000E
 17069 = 9C2D			B2.SPEEDX	= DATAORIGIN+$0010
 17070 = 9C2F			B2.SPEEDY	= DATAORIGIN+$0012
 17071 = 9C31			B2.SBD	= DATAORIGIN+$0014
 17072 = 9C33			B2.BRWHIT	= DATAORIGIN+$0016
 17073 = 9C34			B2.INPLAY	= DATAORIGIN+$0017
 17074 = 9C35			B2.LAUNCH	= DATAORIGIN+$0018
 17075 = 9C36			B2.ONVAUS	= DATAORIGIN+$0019
 17076 = 9C37			B2.STM	= DATAORIGIN+$001A
 17077 = ACE2			B3	= DATAORIGIN+$10C5
 17078 = 9C1D			B3.X	= DATAORIGIN+$0000
 17079 = 9C1F			B3.Y	= DATAORIGIN+$0002
 17080 = 9C21			B3.FINEX	= DATAORIGIN+$0004
 17081 = 9C23			B3.FINEY	= DATAORIGIN+$0006
 17082 = 9C25			B3.OLDX	= DATAORIGIN+$0008
 17083 = 9C27			B3.OLDY	= DATAORIGIN+$000A
 17084 = 9C29			B3.SPEED	= DATAORIGIN+$000C
 17085 = 9C2B			B3.FINESPEED	= DATAORIGIN+$000E
 17086 = 9C2D			B3.SPEEDX	= DATAORIGIN+$0010
 17087 = 9C2F			B3.SPEEDY	= DATAORIGIN+$0012
 17088 = 9C31			B3.SBD	= DATAORIGIN+$0014
 17089 = 9C33			B3.BRWHIT	= DATAORIGIN+$0016
 17090 = 9C34			B3.INPLAY	= DATAORIGIN+$0017
 17091 = 9C35			B3.LAUNCH	= DATAORIGIN+$0018
 17092 = 9C36			B3.ONVAUS	= DATAORIGIN+$0019
 17093 = 9C37			B3.STM	= DATAORIGIN+$001A
 17094 = ACE6			X	= DATAORIGIN+$10C9
 17095 = ACE8			@CASETMP_0009	= DATAORIGIN+$10CB
 17096
 17097 = ACDA			@VarData	= B1
 17098 = 0009			@VarDataSize	= 9
 17099
 17100 8AB8			@exit
 17101 					.ifdef @new
 17102 					lda <@VarData
 17103 					sta :ztmp
 17104 					lda >@VarData
 17105 					ldy #@VarDataSize-1
 17106 					jmp @FreeMem
 17107 					els
 17108 8AB8 60				rts						; ret
 17109 					eif
 17110 				.endl
 17111
 17112 8AB9			.local	DEVIATE_BALL					; PROCEDURE
 17113
 17114 				; --- RepeatUntilProlog
 17115 8AB9			l_31E2
 17116
 17117 				; optimize OK (vservice.pas), line = 2796
 17118
 17119 8AB9 AD E9 AC			lda BALL
 17120 8ABC 8D 83 AB			sta GET_BALL_DIRECTION.BALL
 17121 8ABF AD EA AC			lda BALL+1
 17122 8AC2 8D 84 AB			sta GET_BALL_DIRECTION.BALL+1
 17123 8AC5 20 BC 32			jsr GET_BALL_DIRECTION
 17124 8AC8 E8				inx
 17125 8AC9 AD 87 AB 95 96		mva GET_BALL_DIRECTION.RESULT :STACKORIGIN,x
 17126 8ACE AD 88 AB 95 A6		mva GET_BALL_DIRECTION.RESULT+1 :STACKORIGIN+STACKWIDTH,x
 17127 8AD3 A9 1E			lda #$1E
 17128 8AD5 20 E8 23			jsr SYSTEM.RANDOM.@010180000
 17129 8AD8 E8				inx
 17130 8AD9 AD 62 9C 95 96		mva SYSTEM.RANDOM.@010180000.RESULT :STACKORIGIN,x
 17131 8ADE A9 00 95 A6			mva #$00 :STACKORIGIN+STACKWIDTH,x
 17132 8AE2 20 A3 10			jsr addAX_CX
 17133 8AE5 B5 95			lda :STACKORIGIN-1,x
 17134 8AE7 38 E9 0F			sub #$0F
 17135 8AEA 8D ED AC			sta TEMP
 17136 8AED B5 A5			lda :STACKORIGIN-1+STACKWIDTH,x
 17137 8AEF E9 00			sbc #$00
 17138 8AF1 8D EE AC			sta TEMP+1
 17139 8AF4 CA				dex
 17140 8AF5 CA				dex
 17141
 17142 				; optimize OK (vservice.pas), line = 2797
 17143
 17144 8AF6 A9 5A			lda #$5A
 17145 8AF8 85 8E			sta @SMALLINT.MOD.B
 17146 8AFA A9 00			lda #$00
 17147 8AFC 85 8F			sta @SMALLINT.MOD.B+1
 17148 8AFE AD ED AC			lda TEMP
 17149 8B01 85 86			sta @SMALLINT.MOD.A
 17150 8B03 AD EE AC			lda TEMP+1
 17151 8B06 85 87			sta @SMALLINT.MOD.A+1
 17152 8B08 20 3F 12			jsr @SMALLINT.MOD
 17153 8B0B A5 92			lda @SMALLINT.MOD.RESULT
 17154 8B0D C9 1F			cmp #$1F
 17155 8B0F A5 93			lda @SMALLINT.MOD.RESULT+1
 17156 8B11 E9 00			sbc #$00
 17157 8B13 50 02			svc
 17158 8B15 49 80			eor #$80
 17159 8B17 30 A0			jmi l_31E2
 17160 8B19 A9 5A			lda #$5A
 17161 8B1B 85 8E			sta @SMALLINT.MOD.B
 17162 8B1D A9 00			lda #$00
 17163 8B1F 85 8F			sta @SMALLINT.MOD.B+1
 17164 8B21 AD ED AC			lda TEMP
 17165 8B24 85 86			sta @SMALLINT.MOD.A
 17166 8B26 AD EE AC			lda TEMP+1
 17167 8B29 85 87			sta @SMALLINT.MOD.A+1
 17168 8B2B 20 3F 12			jsr @SMALLINT.MOD
 17169 8B2E A5 92			lda @SMALLINT.MOD.RESULT
 17170 8B30 C9 3C			cmp #$3C
 17171 8B32 A5 93			lda @SMALLINT.MOD.RESULT+1
 17172 8B34 E9 00			sbc #$00
 17173 8B36 50 02			svc
 17174 8B38 49 80			eor #$80
 17175 8B3A 30 03 4C B9 8A		jpl l_31E2
 17176
 17177 				; optimize OK (vservice.pas), line = 2799
 17178
 17179 8B3F AD E9 AC			lda BALL
 17180 8B42 8D 79 AB			sta SET_BALL_DIRECTION.BALL
 17181 8B45 AD EA AC			lda BALL+1
 17182 8B48 8D 7A AB			sta SET_BALL_DIRECTION.BALL+1
 17183 8B4B AD ED AC			lda TEMP
 17184 8B4E 8D 7D AB			sta SET_BALL_DIRECTION.ANGLE
 17185 8B51 AD EE AC			lda TEMP+1
 17186 8B54 8D 7E AB			sta SET_BALL_DIRECTION.ANGLE+1
 17187 8B57 20 31 31			jsr SET_BALL_DIRECTION
 17188
 17189 				; optimize OK (vservice.pas), line = 2800
 17190
 17191 8B5A AC E9 AC 84 84 AC + 	mwy BALL :bp2
 17192 8B64 A0 0C			ldy #BALL.SPEED-DATAORIGIN
 17193 8B66 B1 84			lda (:bp2),y
 17194 8B68 8D 6F AB			sta SET_BALL_SPEED.SPEED
 17195 8B6B C8				iny
 17196 8B6C B1 84			lda (:bp2),y
 17197 8B6E 8D 70 AB			sta SET_BALL_SPEED.SPEED+1
 17198 8B71 AD E9 AC			lda BALL
 17199 8B74 8D 6B AB			sta SET_BALL_SPEED.BALL
 17200 8B77 AD EA AC			lda BALL+1
 17201 8B7A 8D 6C AB			sta SET_BALL_SPEED.BALL+1
 17202 8B7D 20 21 2F			jsr SET_BALL_SPEED
 17203
 17204 				; optimize OK (vservice.pas), line = 2801
 17205
 17206 8B80 AC E9 AC 84 84 AC + 	mwy BALL :bp2
 17207 8B8A A0 14			ldy #BALL.SBD-DATAORIGIN
 17208 8B8C A9 00			lda #$00
 17209 8B8E 91 84			sta (:bp2),y
 17210 8B90 C8				iny
 17211 8B91 91 84			sta (:bp2),y
 17212
 17213 				; ------------------------------------------------------------
 17214
 17215 = ACE9			BALL	= DATAORIGIN+$10CC
 17216 = 9C1D			BALL.X	= DATAORIGIN+$0000
 17217 = 9C1F			BALL.Y	= DATAORIGIN+$0002
 17218 = 9C21			BALL.FINEX	= DATAORIGIN+$0004
 17219 = 9C23			BALL.FINEY	= DATAORIGIN+$0006
 17220 = 9C25			BALL.OLDX	= DATAORIGIN+$0008
 17221 = 9C27			BALL.OLDY	= DATAORIGIN+$000A
 17222 = 9C29			BALL.SPEED	= DATAORIGIN+$000C
 17223 = 9C2B			BALL.FINESPEED	= DATAORIGIN+$000E
 17224 = 9C2D			BALL.SPEEDX	= DATAORIGIN+$0010
 17225 = 9C2F			BALL.SPEEDY	= DATAORIGIN+$0012
 17226 = 9C31			BALL.SBD	= DATAORIGIN+$0014
 17227 = 9C33			BALL.BRWHIT	= DATAORIGIN+$0016
 17228 = 9C34			BALL.INPLAY	= DATAORIGIN+$0017
 17229 = 9C35			BALL.LAUNCH	= DATAORIGIN+$0018
 17230 = 9C36			BALL.ONVAUS	= DATAORIGIN+$0019
 17231 = 9C37			BALL.STM	= DATAORIGIN+$001A
 17232 = ACED			TEMP	= DATAORIGIN+$10D0
 17233
 17234 = ACE9			@VarData	= BALL
 17235 = 0004			@VarDataSize	= 4
 17236
 17237 8B93			@exit
 17238 					.ifdef @new
 17239 					lda <@VarData
 17240 					sta :ztmp
 17241 					lda >@VarData
 17242 					ldy #@VarDataSize-1
 17243 					jmp @FreeMem
 17244 					els
 17245 8B93 60				rts						; ret
 17246 					eif
 17247 				.endl
 17248
 17249 8B94			.local	BOUNCEBALL					; FUNCTION
 17250
 17251 8B94 4C 09 8D			jmp l_3222
 17252
 17253 8B97			.local	CHECK_BALL					; PROCEDURE
 17254
 17255 				; optimize OK (vservice.pas), line = 2831
 17256
 17257 8B97 AC 4E AD 84 84 AC + 	mwy BALL :bp2
 17258 8BA1 A0 17			ldy #BALL.INPLAY-DATAORIGIN
 17259 8BA3 B1 84			lda (:bp2),y
 17260 8BA5 F0 65			jeq l_3231
 17261
 17262 				; optimize OK (vservice.pas), line = 2834
 17263
 17264 8BA7 A0 02			ldy #BALL.Y-DATAORIGIN
 17265 8BA9 B1 84			lda (:bp2),y
 17266 8BAB C8				iny
 17267 8BAC C9 16			cmp #$16
 17268 8BAE B1 84			lda (:bp2),y
 17269 8BB0 E9 00			sbc #$00
 17270 8BB2 50 02			svc
 17271 8BB4 49 80			eor #$80
 17272 8BB6 30 20			jmi l_324E
 17273 8BB8 A0 02			ldy #BALL.Y-DATAORIGIN
 17274 8BBA B1 84			lda (:bp2),y
 17275 8BBC C8				iny
 17276 8BBD C9 8E			cmp #$8E
 17277 8BBF B1 84			lda (:bp2),y
 17278 8BC1 E9 00			sbc #$00
 17279 8BC3 50 02			svc
 17280 8BC5 49 80			eor #$80
 17281 8BC7 10 0F			jpl l_324E
 17282
 17283 				; optimize OK (vservice.pas), line = 2835
 17284
 17285 8BC9 AD 4E AD			lda BALL
 17286 8BCC 8D 18 AC			sta BALL_HIT_BLOCK.BALL
 17287 8BCF AD 4F AD			lda BALL+1
 17288 8BD2 8D 19 AC			sta BALL_HIT_BLOCK.BALL+1
 17289 8BD5 20 53 5B			jsr BALL_HIT_BLOCK
 17290 8BD8			l_324E
 17291
 17292 				; optimize OK (vservice.pas), line = 2837
 17293
 17294 8BD8 AD 4E AD			lda BALL
 17295 8BDB 8D 67 AB			sta SET_BALL.BALL
 17296 8BDE AD 4F AD			lda BALL+1
 17297 8BE1 8D 68 AB			sta SET_BALL.BALL+1
 17298 8BE4 20 3C 2E			jsr SET_BALL
 17299
 17300 				; optimize FAIL ('BALL_SPEED', vservice.pas), line = 2838
 17301
 17302 8BE7 E8				inx
 17303 8BE8 AD 4E AD 95 96		mva BALL :STACKORIGIN,x
 17304 8BED AD 4F AD 95 A6		mva BALL+1 :STACKORIGIN+STACKWIDTH,x
 17305 8BF2 20 C9 34			jsr BALL_SPEED
 17306 8BF5 AC 4E AD 84 84 AC + 	mwy BALL :bp2
 17307 8BFF A0 0C			ldy #BALL.SPEED-DATAORIGIN
 17308 8C01 AD AA AB			lda BALL_SPEED.RESULT
 17309 8C04 91 84			sta (:bp2),y
 17310 8C06 C8				iny
 17311 8C07 AD AB AB			lda BALL_SPEED.RESULT+1
 17312 8C0A 91 84			sta (:bp2),y
 17313 8C0C			l_3231
 17314
 17315 				; ------------------------------------------------------------
 17316
 17317 = AD4E			BALL	= DATAORIGIN+$1131
 17318 = 9C1D			BALL.X	= DATAORIGIN+$0000
 17319 = 9C1F			BALL.Y	= DATAORIGIN+$0002
 17320 = 9C21			BALL.FINEX	= DATAORIGIN+$0004
 17321 = 9C23			BALL.FINEY	= DATAORIGIN+$0006
 17322 = 9C25			BALL.OLDX	= DATAORIGIN+$0008
 17323 = 9C27			BALL.OLDY	= DATAORIGIN+$000A
 17324 = 9C29			BALL.SPEED	= DATAORIGIN+$000C
 17325 = 9C2B			BALL.FINESPEED	= DATAORIGIN+$000E
 17326 = 9C2D			BALL.SPEEDX	= DATAORIGIN+$0010
 17327 = 9C2F			BALL.SPEEDY	= DATAORIGIN+$0012
 17328 = 9C31			BALL.SBD	= DATAORIGIN+$0014
 17329 = 9C33			BALL.BRWHIT	= DATAORIGIN+$0016
 17330 = 9C34			BALL.INPLAY	= DATAORIGIN+$0017
 17331 = 9C35			BALL.LAUNCH	= DATAORIGIN+$0018
 17332 = 9C36			BALL.ONVAUS	= DATAORIGIN+$0019
 17333 = 9C37			BALL.STM	= DATAORIGIN+$001A
 17334
 17335 = AD4E			@VarData	= BALL
 17336 = 0002			@VarDataSize	= 2
 17337
 17338 8C0C			@exit
 17339 					.ifdef @new
 17340 					lda <@VarData
 17341 					sta :ztmp
 17342 					lda >@VarData
 17343 					ldy #@VarDataSize-1
 17344 					jmp @FreeMem
 17345 					els
 17346 8C0C 60				rts						; ret
 17347 					eif
 17348 				.endl
 17349
 17350 8C0D			.local	TEST_BALL					; PROCEDURE
 17351
 17352 				; optimize OK (vservice.pas), line = 2846
 17353
 17354 8C0D AC 52 AD 84 84 AC + 	mwy BALL :bp2
 17355 8C17 A0 17			ldy #BALL.INPLAY-DATAORIGIN
 17356 8C19 B1 84			lda (:bp2),y
 17357 8C1B D0 03 4C 08 8D		jeq l_326F
 17358
 17359 				; optimize OK (vservice.pas), line = 2848
 17360
 17361 8C20 A0 0E			ldy #BALL.FINESPEED-DATAORIGIN
 17362 8C22 B1 84			lda (:bp2),y
 17363 8C24 18 69 01			add #$01
 17364 8C27 91 84			sta (:bp2),y
 17365 8C29 C8				iny
 17366 8C2A B1 84			lda (:bp2),y
 17367 8C2C 69 00			adc #$00
 17368 8C2E 91 84			sta (:bp2),y
 17369
 17370 				; optimize OK (vservice.pas), line = 2850
 17371
 17372 8C30 A0 0E			ldy #BALL.FINESPEED-DATAORIGIN
 17373 8C32 B1 84			lda (:bp2),y
 17374 8C34 85 9F			sta :STACKORIGIN+9
 17375 8C36 C8				iny
 17376 8C37 B1 84			lda (:bp2),y
 17377 8C39 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 17378 8C3B AD C0 9D			lda LV
 17379 8C3E 0A				asl @
 17380 8C3F A8				tay
 17381 8C40 B9 8F 10			lda adr.LEVEL,y
 17382 8C43 85 A0			sta :STACKORIGIN+10
 17383 8C45 B9 90 10			lda adr.LEVEL+1,y
 17384 8C48 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 17385 8C4A A0 00			ldy #$00
 17386 8C4C A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 17387 8C4E 10 01			spl
 17388 8C50 88				dey
 17389 8C51 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 17390 8C53 84 BF			sty :STACKORIGIN+STACKWIDTH*2+9
 17391 8C55 84 CF			sty :STACKORIGIN+STACKWIDTH*3+9
 17392 8C57				.LOCAL
 17393 8C57 A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
 17394 8C59 38 E9 00			sub #$00
 17395 8C5C D0 1C			bne L4
 17396 8C5E A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
 17397 8C60 C9 00			cmp #$00
 17398 8C62 D0 0A			bne L1
 17399 8C64 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 17400 8C66 C5 B0			cmp :STACKORIGIN+STACKWIDTH+10
 17401 8C68 D0 04			bne L1
 17402 8C6A A5 9F			lda :STACKORIGIN+9
 17403 8C6C C5 A0			cmp :STACKORIGIN+10
 17404 8C6E F0 10		L1	beq L5
 17405 8C70 B0 04			bcs L3
 17406 8C72 A9 FF			lda #$FF
 17407 8C74 D0 0A			bne L5
 17408 8C76 A9 01		L3	lda #$01
 17409 8C78 D0 06			bne L5
 17410 8C7A 50 04		L4	bvc L5
 17411 8C7C 49 FF			eor #$FF
 17412 8C7E 09 01			ora #$01
 17413 8C80			L5
 17414 					.ENDL
 17415 8C80 30 48			jmi l_3285
 17416 8C82 F0 46			jeq l_3285
 17417
 17418 				; optimize OK (vservice.pas), line = 2852
 17419
 17420 8C84 A0 0E			ldy #BALL.FINESPEED-DATAORIGIN
 17421 8C86 A9 00			lda #$00
 17422 8C88 91 84			sta (:bp2),y
 17423 8C8A C8				iny
 17424 8C8B 91 84			sta (:bp2),y
 17425
 17426 				; optimize OK (vservice.pas), line = 2855
 17427
 17428 8C8D A0 0C			ldy #BALL.SPEED-DATAORIGIN
 17429 8C8F B1 84			lda (:bp2),y
 17430 8C91 C8				iny
 17431 8C92 C9 D0			cmp #$D0
 17432 8C94 B1 84			lda (:bp2),y
 17433 8C96 E9 07			sbc #$07
 17434 8C98 50 02			svc
 17435 8C9A 49 80			eor #$80
 17436 8C9C 10 2C			jpl l_329B
 17437
 17438 				; optimize OK (vservice.pas), line = 2857
 17439
 17440 8C9E A0 0C			ldy #BALL.SPEED-DATAORIGIN
 17441 8CA0 B1 84			lda (:bp2),y
 17442 8CA2 18 69 0A			add #$0A
 17443 8CA5 91 84			sta (:bp2),y
 17444 8CA7 C8				iny
 17445 8CA8 B1 84			lda (:bp2),y
 17446 8CAA 69 00			adc #$00
 17447 8CAC 91 84			sta (:bp2),y
 17448
 17449 				; optimize OK (vservice.pas), line = 2858
 17450
 17451 8CAE A0 0C			ldy #BALL.SPEED-DATAORIGIN
 17452 8CB0 B1 84			lda (:bp2),y
 17453 8CB2 8D 6F AB			sta SET_BALL_SPEED.SPEED
 17454 8CB5 C8				iny
 17455 8CB6 B1 84			lda (:bp2),y
 17456 8CB8 8D 70 AB			sta SET_BALL_SPEED.SPEED+1
 17457 8CBB AD 52 AD			lda BALL
 17458 8CBE 8D 6B AB			sta SET_BALL_SPEED.BALL
 17459 8CC1 AD 53 AD			lda BALL+1
 17460 8CC4 8D 6C AB			sta SET_BALL_SPEED.BALL+1
 17461 8CC7 20 21 2F			jsr SET_BALL_SPEED
 17462 8CCA			l_329B
 17463 8CCA			l_3285
 17464
 17465 				; optimize OK (vservice.pas), line = 2862
 17466
 17467 8CCA AC 52 AD 84 84 AC + 	mwy BALL :bp2
 17468 8CD4 A0 14			ldy #BALL.SBD-DATAORIGIN
 17469 8CD6 B1 84			lda (:bp2),y
 17470 8CD8 18 69 01			add #$01
 17471 8CDB 91 84			sta (:bp2),y
 17472 8CDD C8				iny
 17473 8CDE B1 84			lda (:bp2),y
 17474 8CE0 69 00			adc #$00
 17475 8CE2 91 84			sta (:bp2),y
 17476
 17477 				; optimize OK (vservice.pas), line = 2866
 17478
 17479 8CE4 A0 15			ldy #BALL.SBD-DATAORIGIN+$01
 17480 8CE6 B1 84			lda (:bp2),y
 17481 8CE8 C9 02			cmp #$02
 17482 8CEA D0 05			bne @+
 17483 8CEC 88				dey
 17484 8CED B1 84			lda (:bp2),y
 17485 8CEF C9 58			cmp #$58
 17486 				@
 17487 8CF1 90 15			jcc l_32C3
 17488 				@
 17489 8CF3 A0 00			ldy #$00
 17490 8CF5 B1 84			lda (:bp2),y
 17491 8CF7 10 0F			jpl l_32C3
 17492 				@
 17493
 17494 				; optimize OK (vservice.pas), line = 2867
 17495
 17496 8CF9 AD 52 AD			lda BALL
 17497 8CFC 8D E9 AC			sta DEVIATE_BALL.BALL
 17498 8CFF AD 53 AD			lda BALL+1
 17499 8D02 8D EA AC			sta DEVIATE_BALL.BALL+1
 17500 8D05 20 B9 8A			jsr DEVIATE_BALL
 17501 8D08			l_32C3
 17502 8D08			l_326F
 17503
 17504 				; ------------------------------------------------------------
 17505
 17506 = AD52			BALL	= DATAORIGIN+$1135
 17507 = 9C1D			BALL.X	= DATAORIGIN+$0000
 17508 = 9C1F			BALL.Y	= DATAORIGIN+$0002
 17509 = 9C21			BALL.FINEX	= DATAORIGIN+$0004
 17510 = 9C23			BALL.FINEY	= DATAORIGIN+$0006
 17511 = 9C25			BALL.OLDX	= DATAORIGIN+$0008
 17512 = 9C27			BALL.OLDY	= DATAORIGIN+$000A
 17513 = 9C29			BALL.SPEED	= DATAORIGIN+$000C
 17514 = 9C2B			BALL.FINESPEED	= DATAORIGIN+$000E
 17515 = 9C2D			BALL.SPEEDX	= DATAORIGIN+$0010
 17516 = 9C2F			BALL.SPEEDY	= DATAORIGIN+$0012
 17517 = 9C31			BALL.SBD	= DATAORIGIN+$0014
 17518 = 9C33			BALL.BRWHIT	= DATAORIGIN+$0016
 17519 = 9C34			BALL.INPLAY	= DATAORIGIN+$0017
 17520 = 9C35			BALL.LAUNCH	= DATAORIGIN+$0018
 17521 = 9C36			BALL.ONVAUS	= DATAORIGIN+$0019
 17522 = 9C37			BALL.STM	= DATAORIGIN+$001A
 17523
 17524 = AD52			@VarData	= BALL
 17525 = 0002			@VarDataSize	= 2
 17526
 17527 8D08			@exit
 17528 					.ifdef @new
 17529 					lda <@VarData
 17530 					sta :ztmp
 17531 					lda >@VarData
 17532 					ldy #@VarDataSize-1
 17533 					jmp @FreeMem
 17534 					els
 17535 8D08 60				rts						; ret
 17536 					eif
 17537 				.endl
 17538 8D09			l_3222
 17539
 17540 				; optimize OK (vservice.pas), line = 2875
 17541
 17542 8D09 A9 00			lda #$00
 17543 8D0B 8D DB 9D			sta SCRFLUXCNT
 17544
 17545 				; optimize OK (vservice.pas), line = 2876
 17546
 17547 8D0E 8D DA 9D			sta SCRFLUX
 17548
 17549 				; optimize OK (vservice.pas), line = 2878
 17550
 17551 8D11 A9 01			lda #$01
 17552 8D13 8D D9 9D			sta BALLS_IN_PLAY
 17553
 17554 				; optimize OK (vservice.pas), line = 2880
 17555
 17556 8D16 A9 00			lda #$00
 17557 8D18 8D D7 9D			sta FIRE.AVL
 17558
 17559 				; optimize OK (vservice.pas), line = 2881
 17560
 17561 8D1B AD F6 9C 8D EE 9C + 	:8 mva adr.NORMAL+# adr.PLAYVAUS+#
 17562
 17563 				; optimize OK (vservice.pas), line = 2883
 17564
 17565 8D4B A9 FF			lda #$FF
 17566 8D4D 8D D2 9D			sta LETT.LAST
 17567 8D50 8D D3 9D			sta LETT.LAST+1
 17568
 17569 				; optimize OK (vservice.pas), line = 2884
 17570
 17571 8D53 A9 00			lda #$00
 17572 8D55 8D C9 9D			sta LETT.ACTIVE
 17573
 17574 				; optimize OK (vservice.pas), line = 2887
 17575
 17576 8D58 AD 03 9B			lda PATTERN
 17577 8D5B 8D 5A AC			sta FILL_PICTURE_WITH_PATTERN.PATT
 17578 8D5E AD 04 9B			lda PATTERN+1
 17579 8D61 8D 5B AC			sta FILL_PICTURE_WITH_PATTERN.PATT+1
 17580 8D64 20 FD 6F			jsr FILL_PICTURE_WITH_PATTERN
 17581
 17582 				; optimize FAIL ('SHOWBTMPICTURE', vservice.pas), line = 2890
 17583
 17584 8D67 E8				inx
 17585 8D68 AD E3 9A 95 96		mva PLAYSCREEN :STACKORIGIN,x
 17586 8D6D AD E4 9A 95 A6		mva PLAYSCREEN+1 :STACKORIGIN+STACKWIDTH,x
 17587 8D72 20 49 2C			jsr SHOWBTMPICTURE
 17588
 17589 				; optimize OK (vservice.pas), line = 2894
 17590
 17591 8D75 AC BA 9D			ldy CUR_PLAYER
 17592 8D78 B9 AE 9D			lda adr.SCORE.LIVES,y
 17593 8D7B 8D AE AC			sta PLOT_LIVES.LIVES
 17594 8D7E A9 00			lda #$00
 17595 8D80 8D AF AC			sta PLOT_LIVES.LIVES+1
 17596 8D83 20 EC 7D			jsr PLOT_LIVES
 17597
 17598 				; optimize OK (vservice.pas), line = 2897
 17599
 17600 8D86 AD E3 9A			lda PLAYSCREEN
 17601 8D89 8D 55 AB			sta SETPALETTE.BTM
 17602 8D8C AD E4 9A			lda PLAYSCREEN+1
 17603 8D8F 8D 56 AB			sta SETPALETTE.BTM+1
 17604 8D92 20 A9 2C			jsr SETPALETTE
 17605
 17606 				; optimize OK (vservice.pas), line = 2900
 17607
 17608 8D95 AD A3 9D			lda adr.SCORE.PLAYER+$04
 17609 8D98 8D A5 AC			sta WRITE_SCORE.SC
 17610 8D9B AD A4 9D			lda adr.SCORE.PLAYER+1+$04
 17611 8D9E 8D A6 AC			sta WRITE_SCORE.SC+1
 17612 8DA1 AD A5 9D			lda adr.SCORE.PLAYER+2+$04
 17613 8DA4 8D A7 AC			sta WRITE_SCORE.SC+2
 17614 8DA7 AD A6 9D			lda adr.SCORE.PLAYER+3+$04
 17615 8DAA 8D A8 AC			sta WRITE_SCORE.SC+3
 17616 8DAD A9 FD			lda #$FD
 17617 8DAF 8D A1 AC			sta WRITE_SCORE.PX
 17618 8DB2 A9 00			lda #$00
 17619 8DB4 8D A2 AC			sta WRITE_SCORE.PX+1
 17620 8DB7 A9 3C			lda #$3C
 17621 8DB9 8D A3 AC			sta WRITE_SCORE.PY
 17622 8DBC A9 00			lda #$00
 17623 8DBE 8D A4 AC			sta WRITE_SCORE.PY+1
 17624 8DC1 20 8E 7A			jsr WRITE_SCORE
 17625
 17626 				; optimize OK (vservice.pas), line = 2901
 17627
 17628 8DC4 AD A7 9D			lda adr.SCORE.PLAYER+$08
 17629 8DC7 8D A5 AC			sta WRITE_SCORE.SC
 17630 8DCA AD A8 9D			lda adr.SCORE.PLAYER+1+$08
 17631 8DCD 8D A6 AC			sta WRITE_SCORE.SC+1
 17632 8DD0 AD A9 9D			lda adr.SCORE.PLAYER+2+$08
 17633 8DD3 8D A7 AC			sta WRITE_SCORE.SC+2
 17634 8DD6 AD AA 9D			lda adr.SCORE.PLAYER+3+$08
 17635 8DD9 8D A8 AC			sta WRITE_SCORE.SC+3
 17636 8DDC A9 FD			lda #$FD
 17637 8DDE 8D A1 AC			sta WRITE_SCORE.PX
 17638 8DE1 A9 00			lda #$00
 17639 8DE3 8D A2 AC			sta WRITE_SCORE.PX+1
 17640 8DE6 A9 5D			lda #$5D
 17641 8DE8 8D A3 AC			sta WRITE_SCORE.PY
 17642 8DEB A9 00			lda #$00
 17643 8DED 8D A4 AC			sta WRITE_SCORE.PY+1
 17644 8DF0 20 8E 7A			jsr WRITE_SCORE
 17645
 17646 				; optimize OK (vservice.pas), line = 2902
 17647
 17648 8DF3 A9 FD			lda #$FD
 17649 8DF5 8D A1 AC			sta WRITE_SCORE.PX
 17650 8DF8 A9 00			lda #$00
 17651 8DFA 8D A2 AC			sta WRITE_SCORE.PX+1
 17652 8DFD A9 80			lda #$80
 17653 8DFF 8D A3 AC			sta WRITE_SCORE.PY
 17654 8E02 A9 00			lda #$00
 17655 8E04 8D A4 AC			sta WRITE_SCORE.PY+1
 17656 8E07 AD B1 9D			lda SCORE.HISCORE
 17657 8E0A 8D A5 AC			sta WRITE_SCORE.SC
 17658 8E0D AD B2 9D			lda SCORE.HISCORE+1
 17659 8E10 8D A6 AC			sta WRITE_SCORE.SC+1
 17660 8E13 AD B3 9D			lda SCORE.HISCORE+2
 17661 8E16 8D A7 AC			sta WRITE_SCORE.SC+2
 17662 8E19 AD B4 9D			lda SCORE.HISCORE+3
 17663 8E1C 8D A8 AC			sta WRITE_SCORE.SC+3
 17664 8E1F 20 8E 7A			jsr WRITE_SCORE
 17665
 17666 				; optimize FAIL ('PUT_WALL', vservice.pas), line = 2905
 17667
 17668 8E22 20 39 4B			jsr PUT_WALL
 17669
 17670 				; optimize FAIL ('MOUSERESET', vservice.pas), line = 2909
 17671
 17672 8E25 20 9B 24			jsr MOUSERESET
 17673
 17674 				; optimize OK (vservice.pas), line = 2912
 17675
 17676 8E28 A9 01			lda #$01
 17677 8E2A 8D 14 AD			sta BALL0.INPLAY
 17678
 17679 				; optimize OK (vservice.pas), line = 2913
 17680
 17681 8E2D 8D 15 AD			sta BALL0.LAUNCH
 17682
 17683 				; optimize OK (vservice.pas), line = 2916
 17684
 17685 8E30 A9 6F			lda #$6F
 17686 8E32 8D FD AC			sta BALL0.X
 17687 8E35 A9 00			lda #$00
 17688 8E37 8D FE AC			sta BALL0.X+1
 17689
 17690 				; optimize OK (vservice.pas), line = 2917
 17691
 17692 8E3A A9 B5			lda #$B5
 17693 8E3C 8D FF AC			sta BALL0.Y
 17694 8E3F A9 00			lda #$00
 17695 8E41 8D 00 AD			sta BALL0.Y+1
 17696
 17697 				; optimize OK (vservice.pas), line = 2920
 17698
 17699 8E44 A9 FF			lda #$FF
 17700 8E46 8D 05 AD			sta BALL0.OLDX
 17701 8E49 8D 06 AD			sta BALL0.OLDX+1
 17702
 17703 				; optimize OK (vservice.pas), line = 2921
 17704
 17705 8E4C 8D 07 AD			sta BALL0.OLDY
 17706 8E4F 8D 08 AD			sta BALL0.OLDY+1
 17707
 17708 				; optimize OK (vservice.pas), line = 2924
 17709
 17710 8E52 A9 00			lda #$00
 17711 8E54 8D 11 AD			sta BALL0.SBD
 17712 8E57 8D 12 AD			sta BALL0.SBD+1
 17713
 17714 				; optimize OK (vservice.pas), line = 2928
 17715
 17716 8E5A A9 10			lda #$10
 17717 8E5C 8D 16 AD			sta BALL0.ONVAUS
 17718
 17719 				; optimize OK (vservice.pas), line = 2933
 17720
 17721 8E5F A9 00			lda #$00
 17722 8E61 8D 17 AD			sta BALL0.STM
 17723
 17724 				; optimize OK (vservice.pas), line = 2937
 17725
 17726 8E64 A9 E8			lda #$E8
 17727 8E66 8D 63 9C			sta SYSTEM.RANDOM.@010184000.RANGE
 17728 8E69 A9 03			lda #$03
 17729 8E6B 8D 64 9C			sta SYSTEM.RANDOM.@010184000.RANGE+1
 17730 8E6E 20 FF 23			jsr SYSTEM.RANDOM.@010184000
 17731 8E71 AD 65 9C			lda SYSTEM.RANDOM.@010184000.RESULT
 17732 8E74 8D CA 9D			sta LETT.INCOMING
 17733 8E77 AD 66 9C			lda SYSTEM.RANDOM.@010184000.RESULT+1
 17734 8E7A 8D CB 9D			sta LETT.INCOMING+1
 17735
 17736 				; optimize FAIL ('CREATE_VAUS', vservice.pas), line = 2940
 17737
 17738 8E7D 20 8E 75			jsr CREATE_VAUS
 17739
 17740 				; optimize FAIL ('WRITE_ROUND_LEVEL', vservice.pas), line = 2943
 17741
 17742 8E80 20 DD 71			jsr WRITE_ROUND_LEVEL
 17743
 17744 				; optimize FAIL ('SET_VAUS', vservice.pas), line = 2945
 17745
 17746 8E83 20 E8 3B			jsr SET_VAUS
 17747
 17748 				; optimize FAIL ('START_VAUS', vservice.pas), line = 2946
 17749
 17750 8E86 20 25 3C			jsr START_VAUS
 17751
 17752 				; optimize OK (vservice.pas), line = 2947
 17753
 17754 8E89 AD 5E 9D			lda VAUS.X
 17755 8E8C 8D BC AB			sta MOVE_VAUS.X
 17756 8E8F A9 00			lda #$00
 17757 8E91 8D BD AB			sta MOVE_VAUS.X+1
 17758 8E94 A9 B8			lda #$B8
 17759 8E96 8D BE AB			sta MOVE_VAUS.Y
 17760 8E99 A9 00			lda #$00
 17761 8E9B 8D BF AB			sta MOVE_VAUS.Y+1
 17762 8E9E 20 42 3F			jsr MOVE_VAUS
 17763
 17764 				; optimize FAIL ('START_LEVEL', vservice.pas), line = 2948
 17765
 17766 8EA1 20 98 24			jsr START_LEVEL
 17767
 17768 				; optimize FAIL ('START_VAUS', vservice.pas), line = 2949
 17769
 17770 8EA4 20 25 3C			jsr START_VAUS
 17771
 17772 				; optimize FAIL ('REMOVE_ROUND_LEVEL', vservice.pas), line = 2950
 17773
 17774 8EA7 20 DE 71			jsr REMOVE_ROUND_LEVEL
 17775
 17776 				; optimize OK (vservice.pas), line = 2951
 17777
 17778 8EAA AD BA 93			lda BALL0
 17779 8EAD 8D 67 AB			sta SET_BALL.BALL
 17780 8EB0 AD BB 93			lda BALL0+1
 17781 8EB3 8D 68 AB			sta SET_BALL.BALL+1
 17782 8EB6 20 3C 2E			jsr SET_BALL
 17783
 17784 				; optimize OK (vservice.pas), line = 2958
 17785
 17786 8EB9 A9 0F			lda #$0F
 17787 8EBB 20 E8 23			jsr SYSTEM.RANDOM.@010180000
 17788 8EBE E8				inx
 17789 8EBF E8				inx
 17790 8EC0 AD 62 9C			lda SYSTEM.RANDOM.@010180000.RESULT
 17791 8EC3 18 69 3C			add #$3C
 17792 8EC6 95 95			sta :STACKORIGIN-1,x
 17793 8EC8 A9 00			lda #$00
 17794 8ECA 69 00			adc #$00
 17795 8ECC 95 A5			sta :STACKORIGIN-1+STACKWIDTH,x
 17796 8ECE AD BA 93			lda BALL0
 17797 8ED1 8D 79 AB			sta SET_BALL_DIRECTION.BALL
 17798 8ED4 AD BB 93			lda BALL0+1
 17799 8ED7 8D 7A AB			sta SET_BALL_DIRECTION.BALL+1
 17800 8EDA CA				dex
 17801 8EDB B5 96			lda :STACKORIGIN,x
 17802 8EDD 8D 7D AB			sta SET_BALL_DIRECTION.ANGLE
 17803 8EE0 B5 A6			lda :STACKORIGIN+STACKWIDTH,x
 17804 8EE2 8D 7E AB			sta SET_BALL_DIRECTION.ANGLE+1
 17805 8EE5 CA				dex
 17806 8EE6 20 31 31			jsr SET_BALL_DIRECTION
 17807
 17808 				; optimize OK (vservice.pas), line = 2960
 17809
 17810 8EE9 AD BA 93			lda BALL0
 17811 8EEC 8D 6B AB			sta SET_BALL_SPEED.BALL
 17812 8EEF AD BB 93			lda BALL0+1
 17813 8EF2 8D 6C AB			sta SET_BALL_SPEED.BALL+1
 17814 8EF5 A9 F4			lda #$F4
 17815 8EF7 8D 6F AB			sta SET_BALL_SPEED.SPEED
 17816 8EFA A9 01			lda #$01
 17817 8EFC 8D 70 AB			sta SET_BALL_SPEED.SPEED+1
 17818 8EFF 20 21 2F			jsr SET_BALL_SPEED
 17819
 17820 				; optimize OK (vservice.pas), line = 2963
 17821
 17822 8F02 A9 00			lda #$00
 17823 8F04 8D 0B AD			sta BALL0.FINESPEED
 17824 8F07 8D 0C AD			sta BALL0.FINESPEED+1
 17825
 17826 				; optimize OK (vservice.pas), line = 2965
 17827
 17828 8F0A 8D 2F AD			sta BALL1.INPLAY
 17829
 17830 				; optimize OK (vservice.pas), line = 2966
 17831
 17832 8F0D 8D 4A AD			sta BALL2.INPLAY
 17833
 17834 				; --- WhileProlog
 17835 8F10 4C 98 93			jmp l_3359
 17836 8F13			l_335A
 17837
 17838 				; optimize FAIL ('WAIT_VBL', vservice.pas), line = 2970
 17839
 17840 8F13 20 3B 2E			jsr WAIT_VBL
 17841
 17842 				; optimize OK (vservice.pas), line = 2974
 17843
 17844 8F16 AD FD AC			lda BALL0.X
 17845 8F19 8D C5 9C			sta MOUS.X
 17846 8F1C AD FE AC			lda BALL0.X+1
 17847 8F1F 8D C6 9C			sta MOUS.X+1
 17848
 17849 				; optimize OK (vservice.pas), line = 2976
 17850
 17851 8F22 A9 F0			lda <X
 17852 8F24 8D D2 9C			sta MOUSECOORDS.X
 17853 8F27 A9 AC			lda >X
 17854 8F29 8D D3 9C			sta MOUSECOORDS.X+1
 17855 8F2C A9 F2			lda <Y
 17856 8F2E 8D D4 9C			sta MOUSECOORDS.Y
 17857 8F31 A9 AC			lda >Y
 17858 8F33 8D D5 9C			sta MOUSECOORDS.Y+1
 17859 8F36 20 B4 24			jsr MOUSECOORDS
 17860
 17861 				; optimize OK (vservice.pas), line = 2981
 17862
 17863 8F39 AD C2 9D			lda TRAINER
 17864 8F3C D0 19			jne l_3375
 17865 8F3E AD F0 AC			lda X
 17866 8F41 8D BC AB			sta MOVE_VAUS.X
 17867 8F44 AD F1 AC			lda X+1
 17868 8F47 8D BD AB			sta MOVE_VAUS.X+1
 17869 8F4A A9 B8			lda #$B8
 17870 8F4C 8D BE AB			sta MOVE_VAUS.Y
 17871 8F4F A9 00			lda #$00
 17872 8F51 8D BF AB			sta MOVE_VAUS.Y+1
 17873 8F54 4C C0 8F			jmp l_3383
 17874 8F57			l_3375
 17875
 17876 				; optimize OK (vservice.pas), line = 2987
 17877
 17878 8F57 AD C2 9D			lda TRAINER
 17879 8F5A C9 01			cmp #$01
 17880 8F5C D0 65			jne l_3395
 17881
 17882 				; optimize FAIL (1, vservice.pas), line = 2988
 17883
 17884 8F5E E8				inx
 17885 8F5F A9 B8 95 96			mva #$B8 :STACKORIGIN,x
 17886 8F63 A9 00 95 A6			mva #$00 :STACKORIGIN+STACKWIDTH,x
 17887 8F67 E8				inx
 17888 8F68 A9 0A 95 96			mva #$0A :STACKORIGIN,x
 17889 8F6C A9 00 95 A6			mva #$00 :STACKORIGIN+STACKWIDTH,x
 17890 8F70 AD FD AC			lda BALL0.X
 17891 8F73 38 ED 16 AD			sub BALL0.ONVAUS
 17892 8F77 8D 12 AB			sta MAX.A
 17893 8F7A AD FE AC			lda BALL0.X+1
 17894 8F7D E9 00			sbc #$00
 17895 8F7F 8D 13 AB			sta MAX.A+1
 17896 8F82 B5 96			lda :STACKORIGIN,x
 17897 8F84 8D 14 AB			sta MAX.B
 17898 8F87 B5 A6			lda :STACKORIGIN+STACKWIDTH,x
 17899 8F89 8D 15 AB			sta MAX.B+1
 17900 8F8C CA				dex
 17901 8F8D 20 CE 25			jsr MAX
 17902 8F90 A9 B8			lda #$B8
 17903 8F92 8D 18 AB			sta MIN.A
 17904 8F95 A9 00			lda #$00
 17905 8F97 8D 19 AB			sta MIN.A+1
 17906 8F9A AD 16 AB			lda MAX.RESULT
 17907 8F9D 8D 1A AB			sta MIN.B
 17908 8FA0 AD 17 AB			lda MAX.RESULT+1
 17909 8FA3 8D 1B AB			sta MIN.B+1
 17910 8FA6 20 F9 25			jsr MIN
 17911 8FA9 AD 1C AB			lda MIN.RESULT
 17912 8FAC 8D BC AB			sta MOVE_VAUS.X
 17913 8FAF AD 1D AB			lda MIN.RESULT+1
 17914 8FB2 8D BD AB			sta MOVE_VAUS.X+1
 17915 8FB5 B5 96			lda :STACKORIGIN,x
 17916 8FB7 8D BE AB			sta MOVE_VAUS.Y
 17917 8FBA B5 A6			lda :STACKORIGIN+STACKWIDTH,x
 17918 8FBC 8D BF AB			sta MOVE_VAUS.Y+1
 17919 8FBF CA				dex
 17920 8FC0			l_3383
 17921 8FC0 20 42 3F			jsr MOVE_VAUS
 17922 8FC3			l_3395
 17923
 17924 				; optimize OK (vservice.pas), line = 2993
 17925
 17926 8FC3 AD 15 AD			lda BALL0.LAUNCH
 17927 8FC6 C9 01			cmp #$01
 17928 8FC8 D0 35			jne l_33B8
 17929
 17930 				; optimize FAIL (0, vservice.pas), line = 2995
 17931
 17932 8FCA EE 17 AD			inc BALL0.STM
 17933
 17934 				; optimize OK (vservice.pas), line = 3000
 17935
 17936 8FCD AD 17 AD			lda BALL0.STM
 17937 8FD0 C9 FA			cmp #$FA
 17938 8FD2 D0 05			jne l_33CF
 17939 8FD4 A9 00			lda #$00
 17940 8FD6 8D 15 AD			sta BALL0.LAUNCH
 17941 8FD9			l_33CF
 17942
 17943 				; optimize OK (vservice.pas), line = 3003
 17944
 17945 8FD9 AD BA 93			lda BALL0
 17946 8FDC 8D 8B AB			sta START_BALL.BALL
 17947 8FDF AD BB 93			lda BALL0+1
 17948 8FE2 8D 8C AB			sta START_BALL.BALL+1
 17949 8FE5 20 77 34			jsr START_BALL
 17950
 17951 				; optimize FAIL ('MOUSECLICK', vservice.pas), line = 3006
 17952
 17953 8FE8 20 9C 24			jsr MOUSECLICK
 17954 8FEB AD D1 9C			lda MOUSECLICK.RESULT+1
 17955 8FEE D0 05			bne @+
 17956 8FF0 AD D0 9C			lda MOUSECLICK.RESULT
 17957 8FF3 C9 01			cmp #$01
 17958 				@
 17959 8FF5 D0 05			jne l_33E9
 17960 8FF7 A9 00			lda #$00
 17961 8FF9 8D 15 AD			sta BALL0.LAUNCH
 17962 8FFC			l_33E9
 17963 8FFC 4C 13 90			jmp l_33F9
 17964 8FFF			l_33B8
 17965
 17966 				; optimize OK (vservice.pas), line = 3014
 17967
 17968 8FFF AD 14 AD			lda BALL0.INPLAY
 17969 9002 F0 0F			jeq l_3405
 17970 9004 AD BA 93			lda BALL0
 17971 9007 8D AC AB			sta MOVE_BALL.BALL
 17972 900A AD BB 93			lda BALL0+1
 17973 900D 8D AD AB			sta MOVE_BALL.BALL+1
 17974 9010 20 B4 35			jsr MOVE_BALL
 17975 9013			l_3405
 17976 9013			l_33F9
 17977
 17978 				; optimize OK (vservice.pas), line = 3015
 17979
 17980 9013 AD 2F AD			lda BALL1.INPLAY
 17981 9016 F0 0F			jeq l_3417
 17982 9018 AD BC 93			lda BALL1
 17983 901B 8D AC AB			sta MOVE_BALL.BALL
 17984 901E AD BD 93			lda BALL1+1
 17985 9021 8D AD AB			sta MOVE_BALL.BALL+1
 17986 9024 20 B4 35			jsr MOVE_BALL
 17987 9027			l_3417
 17988
 17989 				; optimize OK (vservice.pas), line = 3016
 17990
 17991 9027 AD 4A AD			lda BALL2.INPLAY
 17992 902A F0 0F			jeq l_3429
 17993 902C AD BE 93			lda BALL2
 17994 902F 8D AC AB			sta MOVE_BALL.BALL
 17995 9032 AD BF 93			lda BALL2+1
 17996 9035 8D AD AB			sta MOVE_BALL.BALL+1
 17997 9038 20 B4 35			jsr MOVE_BALL
 17998 903B			l_3429
 17999
 18000 				; optimize OK (vservice.pas), line = 3022
 18001
 18002 903B AD BA 93			lda BALL0
 18003 903E 8D 4E AD			sta CHECK_BALL.BALL
 18004 9041 AD BB 93			lda BALL0+1
 18005 9044 8D 4F AD			sta CHECK_BALL.BALL+1
 18006 9047 20 97 8B			jsr CHECK_BALL
 18007
 18008 				; optimize OK (vservice.pas), line = 3023
 18009
 18010 904A AD BC 93			lda BALL1
 18011 904D 8D 4E AD			sta CHECK_BALL.BALL
 18012 9050 AD BD 93			lda BALL1+1
 18013 9053 8D 4F AD			sta CHECK_BALL.BALL+1
 18014 9056 20 97 8B			jsr CHECK_BALL
 18015
 18016 				; optimize OK (vservice.pas), line = 3024
 18017
 18018 9059 AD BE 93			lda BALL2
 18019 905C 8D 4E AD			sta CHECK_BALL.BALL
 18020 905F AD BF 93			lda BALL2+1
 18021 9062 8D 4F AD			sta CHECK_BALL.BALL+1
 18022 9065 20 97 8B			jsr CHECK_BALL
 18023
 18024 				; optimize FAIL ('CHECKSHINE', vservice.pas), line = 3039
 18025
 18026 9068 20 93 28			jsr CHECKSHINE
 18027
 18028 				; optimize FAIL ('CHECK_LETTER', vservice.pas), line = 3040
 18029
 18030 906B 20 12 2B			jsr CHECK_LETTER
 18031
 18032 				; optimize OK (vservice.pas), line = 3041
 18033
 18034 906E AD BA 93			lda BALL0
 18035 9071 8D DA AC			sta CHECK_BONUS_TYPE.B1
 18036 9074 AD BB 93			lda BALL0+1
 18037 9077 8D DB AC			sta CHECK_BONUS_TYPE.B1+1
 18038 907A AD BC 93			lda BALL1
 18039 907D 8D DE AC			sta CHECK_BONUS_TYPE.B2
 18040 9080 AD BD 93			lda BALL1+1
 18041 9083 8D DF AC			sta CHECK_BONUS_TYPE.B2+1
 18042 9086 AD BE 93			lda BALL2
 18043 9089 8D E2 AC			sta CHECK_BONUS_TYPE.B3
 18044 908C AD BF 93			lda BALL2+1
 18045 908F 8D E3 AC			sta CHECK_BONUS_TYPE.B3+1
 18046 9092 20 7D 87			jsr CHECK_BONUS_TYPE
 18047
 18048 				; optimize FAIL ('CHECK_FIRE', vservice.pas), line = 3042
 18049
 18050 9095 20 75 82			jsr CHECK_FIRE
 18051
 18052 				; optimize FAIL ('CHECK_FLUX', vservice.pas), line = 3043
 18053
 18054 9098 20 5E 85			jsr CHECK_FLUX
 18055
 18056 				; optimize OK (vservice.pas), line = 3045
 18057
 18058 909B AD 5E 9D			lda VAUS.X
 18059 909E 18 6D 66 9D			add VAUS.WIDTH
 18060 90A2 85 9F			sta :STACKORIGIN+9
 18061 90A4 A9 00			lda #$00
 18062 90A6 69 00			adc #$00
 18063 90A8 A0 01			ldy #1
 18064 90AA C9 00			cmp #$00
 18065 90AC D0 04			bne @+
 18066 90AE A5 9F			lda :STACKORIGIN+9
 18067 90B0 C9 D7			cmp #$D7
 18068 				@
 18069 90B2 F0 01			beq @+
 18070 90B4 88				dey
 18071 				@
 18072 90B5 98				tya
 18073 90B6 2D DA 9D			and SCRFLUX
 18074 90B9 F0 03			jeq l_3461
 18075 90BB 20 1F 86			jsr VAUS_OUT
 18076 90BE			l_3461
 18077
 18078 				; optimize OK (vservice.pas), line = 3047
 18079
 18080 90BE AD 6A 9D			lda VAUS.LETTER
 18081 90C1 C9 04			cmp #$04
 18082 90C3 F0 03 4C 08 92		jne l_3477
 18083
 18084 				; optimize OK (vservice.pas), line = 3049
 18085
 18086 90C8 A9 03			lda #$03
 18087 90CA 8D D9 9D			sta BALLS_IN_PLAY
 18088
 18089 				; optimize OK (vservice.pas), line = 3051
 18090
 18091 90CD AC BC 93 84 84 AC + 	mwy BALL1 :bp2
 18092 90D7 A0 1A			ldy #$1A
 18093 90D9 B9 FD AC 91 84 88 + 	mva:rpl adr.BALL0,y (:bp2),y-
 18094
 18095 				; optimize OK (vservice.pas), line = 3052
 18096
 18097 90E1 AC BE 93 84 84 AC + 	mwy BALL2 :bp2
 18098 90EB A0 1A			ldy #$1A
 18099 90ED B9 FD AC 91 84 88 + 	mva:rpl adr.BALL0,y (:bp2),y-
 18100
 18101 				; optimize OK (vservice.pas), line = 3054
 18102
 18103 90F5 AD BA 93			lda BALL0
 18104 90F8 8D 83 AB			sta GET_BALL_DIRECTION.BALL
 18105 90FB AD BB 93			lda BALL0+1
 18106 90FE 8D 84 AB			sta GET_BALL_DIRECTION.BALL+1
 18107 9101 20 BC 32			jsr GET_BALL_DIRECTION
 18108 9104 E8				inx
 18109 9105 E8				inx
 18110 9106 A9 5A			lda #$5A
 18111 9108 85 8E			sta @SMALLINT.DIV.B
 18112 910A A9 00			lda #$00
 18113 910C 85 8F			sta @SMALLINT.DIV.B+1
 18114 910E AD 87 AB			lda GET_BALL_DIRECTION.RESULT
 18115 9111 85 86			sta @SMALLINT.DIV.A
 18116 9113 AD 88 AB			lda GET_BALL_DIRECTION.RESULT+1
 18117 9116 85 87			sta @SMALLINT.DIV.A+1
 18118 9118 20 22 12			jsr @SMALLINT.DIV
 18119 911B CA				dex
 18120 911C A5 86			lda :eax
 18121 911E 8D F6 AC			sta T1
 18122 9121 A5 87			lda :eax+1
 18123 9123 8D F7 AC			sta T1+1
 18124 9126 CA				dex
 18125
 18126 				; optimize OK (vservice.pas), line = 3056
 18127
 18128 9127 AD 09 AD			lda BALL0.SPEED
 18129 912A 8D F8 AC			sta T2
 18130 912D AD 0A AD			lda BALL0.SPEED+1
 18131 9130 8D F9 AC			sta T2+1
 18132
 18133 				; optimize OK (vservice.pas), line = 3063
 18134
 18135 9133 A9 5A			lda #$5A
 18136 9135 85 8E			sta :ecx
 18137 9137 A9 00			lda #$00
 18138 9139 85 8F			sta :ecx+1
 18139 913B AD F6 AC			lda T1
 18140 913E 85 86			sta :eax
 18141 9140 AD F7 AC			lda T1+1
 18142 9143 85 87			sta :eax+1
 18143 					.ifdef fmulinit
 18144 					fmulu_16
 18145 					els
 18146 9145 20 FA 12			imulCX
 18147 					eif
 18148 9148 A5 86			lda :eax
 18149 914A 8D FA AC			sta HLP
 18150 914D A5 87			lda :eax+1
 18151 914F 8D FB AC			sta HLP+1
 18152
 18153 				; optimize OK (vservice.pas), line = 3065
 18154
 18155 9152 AD FA AC			lda HLP
 18156 9155 18 69 1E			add #$1E
 18157 9158 8D 7D AB			sta SET_BALL_DIRECTION.ANGLE
 18158 915B AD FB AC			lda HLP+1
 18159 915E 69 00			adc #$00
 18160 9160 8D 7E AB			sta SET_BALL_DIRECTION.ANGLE+1
 18161 9163 AD BA 93			lda BALL0
 18162 9166 8D 79 AB			sta SET_BALL_DIRECTION.BALL
 18163 9169 AD BB 93			lda BALL0+1
 18164 916C 8D 7A AB			sta SET_BALL_DIRECTION.BALL+1
 18165 916F 20 31 31			jsr SET_BALL_DIRECTION
 18166
 18167 				; optimize OK (vservice.pas), line = 3066
 18168
 18169 9172 AD FA AC			lda HLP
 18170 9175 18 69 2D			add #$2D
 18171 9178 8D 7D AB			sta SET_BALL_DIRECTION.ANGLE
 18172 917B AD FB AC			lda HLP+1
 18173 917E 69 00			adc #$00
 18174 9180 8D 7E AB			sta SET_BALL_DIRECTION.ANGLE+1
 18175 9183 AD BC 93			lda BALL1
 18176 9186 8D 79 AB			sta SET_BALL_DIRECTION.BALL
 18177 9189 AD BD 93			lda BALL1+1
 18178 918C 8D 7A AB			sta SET_BALL_DIRECTION.BALL+1
 18179 918F 20 31 31			jsr SET_BALL_DIRECTION
 18180
 18181 				; optimize OK (vservice.pas), line = 3067
 18182
 18183 9192 AD FA AC			lda HLP
 18184 9195 18 69 3C			add #$3C
 18185 9198 8D 7D AB			sta SET_BALL_DIRECTION.ANGLE
 18186 919B AD FB AC			lda HLP+1
 18187 919E 69 00			adc #$00
 18188 91A0 8D 7E AB			sta SET_BALL_DIRECTION.ANGLE+1
 18189 91A3 AD BE 93			lda BALL2
 18190 91A6 8D 79 AB			sta SET_BALL_DIRECTION.BALL
 18191 91A9 AD BF 93			lda BALL2+1
 18192 91AC 8D 7A AB			sta SET_BALL_DIRECTION.BALL+1
 18193 91AF 20 31 31			jsr SET_BALL_DIRECTION
 18194
 18195 				; optimize OK (vservice.pas), line = 3071
 18196
 18197 91B2 AD BA 93			lda BALL0
 18198 91B5 8D 6B AB			sta SET_BALL_SPEED.BALL
 18199 91B8 AD BB 93			lda BALL0+1
 18200 91BB 8D 6C AB			sta SET_BALL_SPEED.BALL+1
 18201 91BE AD F8 AC			lda T2
 18202 91C1 8D 6F AB			sta SET_BALL_SPEED.SPEED
 18203 91C4 AD F9 AC			lda T2+1
 18204 91C7 8D 70 AB			sta SET_BALL_SPEED.SPEED+1
 18205 91CA 20 21 2F			jsr SET_BALL_SPEED
 18206
 18207 				; optimize OK (vservice.pas), line = 3072
 18208
 18209 91CD AD BC 93			lda BALL1
 18210 91D0 8D 6B AB			sta SET_BALL_SPEED.BALL
 18211 91D3 AD BD 93			lda BALL1+1
 18212 91D6 8D 6C AB			sta SET_BALL_SPEED.BALL+1
 18213 91D9 AD F8 AC			lda T2
 18214 91DC 8D 6F AB			sta SET_BALL_SPEED.SPEED
 18215 91DF AD F9 AC			lda T2+1
 18216 91E2 8D 70 AB			sta SET_BALL_SPEED.SPEED+1
 18217 91E5 20 21 2F			jsr SET_BALL_SPEED
 18218
 18219 				; optimize OK (vservice.pas), line = 3073
 18220
 18221 91E8 AD BE 93			lda BALL2
 18222 91EB 8D 6B AB			sta SET_BALL_SPEED.BALL
 18223 91EE AD BF 93			lda BALL2+1
 18224 91F1 8D 6C AB			sta SET_BALL_SPEED.BALL+1
 18225 91F4 AD F8 AC			lda T2
 18226 91F7 8D 6F AB			sta SET_BALL_SPEED.SPEED
 18227 91FA AD F9 AC			lda T2+1
 18228 91FD 8D 70 AB			sta SET_BALL_SPEED.SPEED+1
 18229 9200 20 21 2F			jsr SET_BALL_SPEED
 18230
 18231 				; optimize OK (vservice.pas), line = 3075
 18232
 18233 9203 A9 00			lda #$00
 18234 9205 8D 6A 9D			sta VAUS.LETTER
 18235 9208			l_3477
 18236
 18237 				; optimize OK (vservice.pas), line = 3079
 18238
 18239 9208 AD D9 9D			lda BALLS_IN_PLAY
 18240 920B C9 02			cmp #$02
 18241 920D 90 08			jcc l_34DA
 18242 920F A9 00			lda #$00
 18243 9211 8D CA 9D			sta LETT.INCOMING
 18244 9214 8D CB 9D			sta LETT.INCOMING+1
 18245 9217			l_34DA
 18246
 18247 				; optimize OK (vservice.pas), line = 3082
 18248
 18249 9217 AD BA 9D			lda CUR_PLAYER
 18250 921A 0A				asl @
 18251 921B 0A				asl @
 18252 921C A8				tay
 18253 921D B9 9F 9D			lda adr.SCORE.PLAYER,y
 18254 9220 8D A5 AC			sta WRITE_SCORE.SC
 18255 9223 B9 A0 9D			lda adr.SCORE.PLAYER+1,y
 18256 9226 8D A6 AC			sta WRITE_SCORE.SC+1
 18257 9229 B9 A1 9D			lda adr.SCORE.PLAYER+2,y
 18258 922C 8D A7 AC			sta WRITE_SCORE.SC+2
 18259 922F B9 A2 9D			lda adr.SCORE.PLAYER+3,y
 18260 9232 8D A8 AC			sta WRITE_SCORE.SC+3
 18261 9235 AC BA 9D			ldy CUR_PLAYER
 18262 9238 B9 80 10			lda adr.POS_DIGIT,y
 18263 923B 8D A3 AC			sta WRITE_SCORE.PY
 18264 923E A9 FD			lda #$FD
 18265 9240 8D A1 AC			sta WRITE_SCORE.PX
 18266 9243 A9 00			lda #$00
 18267 9245 8D A2 AC			sta WRITE_SCORE.PX+1
 18268 9248 8D A4 AC			sta WRITE_SCORE.PY+1
 18269 924B 20 8E 7A			jsr WRITE_SCORE
 18270
 18271 				; optimize OK (vservice.pas), line = 3085
 18272
 18273 924E AD BA 9D			lda CUR_PLAYER
 18274 9251 0A				asl @
 18275 9252 0A				asl @
 18276 9253 A8				tay
 18277 9254				.LOCAL
 18278 9254 B9 A2 9D			lda adr.SCORE.PLAYER+3,y
 18279 9257 38 ED B4 9D			sub SCORE.HISCORE+3
 18280 925B D0 22			bne L4
 18281 925D B9 A1 9D			lda adr.SCORE.PLAYER+2,y
 18282 9260 CD B3 9D			cmp SCORE.HISCORE+2
 18283 9263 D0 0E			bne L1
 18284 9265 B9 A0 9D			lda adr.SCORE.PLAYER+1,y
 18285 9268 CD B2 9D			cmp SCORE.HISCORE+1
 18286 926B D0 06			bne L1
 18287 926D B9 9F 9D			lda adr.SCORE.PLAYER,y
 18288 9270 CD B1 9D			cmp SCORE.HISCORE
 18289 9273 F0 10		L1	beq L5
 18290 9275 B0 04			bcs L3
 18291 9277 A9 FF			lda #$FF
 18292 9279 D0 0A			bne L5
 18293 927B A9 01		L3	lda #$01
 18294 927D D0 06			bne L5
 18295 927F 50 04		L4	bvc L5
 18296 9281 49 FF			eor #$FF
 18297 9283 09 01			ora #$01
 18298 9285			L5
 18299 					.ENDL
 18300 9285 30 49			jmi l_3500
 18301 9287 F0 47			jeq l_3500
 18302
 18303 				; optimize OK (vservice.pas), line = 3088
 18304
 18305 9289 B9 9F 9D			lda adr.SCORE.PLAYER,y
 18306 928C 8D B1 9D			sta SCORE.HISCORE
 18307 928F B9 A0 9D			lda adr.SCORE.PLAYER+1,y
 18308 9292 8D B2 9D			sta SCORE.HISCORE+1
 18309 9295 B9 A1 9D			lda adr.SCORE.PLAYER+2,y
 18310 9298 8D B3 9D			sta SCORE.HISCORE+2
 18311 929B B9 A2 9D			lda adr.SCORE.PLAYER+3,y
 18312 929E 8D B4 9D			sta SCORE.HISCORE+3
 18313
 18314 				; optimize OK (vservice.pas), line = 3090
 18315
 18316 92A1 A9 FD			lda #$FD
 18317 92A3 8D A1 AC			sta WRITE_SCORE.PX
 18318 92A6 A9 00			lda #$00
 18319 92A8 8D A2 AC			sta WRITE_SCORE.PX+1
 18320 92AB A9 80			lda #$80
 18321 92AD 8D A3 AC			sta WRITE_SCORE.PY
 18322 92B0 A9 00			lda #$00
 18323 92B2 8D A4 AC			sta WRITE_SCORE.PY+1
 18324 92B5 AD B1 9D			lda SCORE.HISCORE
 18325 92B8 8D A5 AC			sta WRITE_SCORE.SC
 18326 92BB AD B2 9D			lda SCORE.HISCORE+1
 18327 92BE 8D A6 AC			sta WRITE_SCORE.SC+1
 18328 92C1 AD B3 9D			lda SCORE.HISCORE+2
 18329 92C4 8D A7 AC			sta WRITE_SCORE.SC+2
 18330 92C7 AD B4 9D			lda SCORE.HISCORE+3
 18331 92CA 8D A8 AC			sta WRITE_SCORE.SC+3
 18332 92CD 20 8E 7A			jsr WRITE_SCORE
 18333 92D0			l_3500
 18334
 18335 				; optimize OK (vservice.pas), line = 3097
 18336
 18337 92D0 AD BA 93			lda BALL0
 18338 92D3 8D 52 AD			sta TEST_BALL.BALL
 18339 92D6 AD BB 93			lda BALL0+1
 18340 92D9 8D 53 AD			sta TEST_BALL.BALL+1
 18341 92DC 20 0D 8C			jsr TEST_BALL
 18342
 18343 				; optimize OK (vservice.pas), line = 3098
 18344
 18345 92DF AD BC 93			lda BALL1
 18346 92E2 8D 52 AD			sta TEST_BALL.BALL
 18347 92E5 AD BD 93			lda BALL1+1
 18348 92E8 8D 53 AD			sta TEST_BALL.BALL+1
 18349 92EB 20 0D 8C			jsr TEST_BALL
 18350
 18351 				; optimize OK (vservice.pas), line = 3099
 18352
 18353 92EE AD BE 93			lda BALL2
 18354 92F1 8D 52 AD			sta TEST_BALL.BALL
 18355 92F4 AD BF 93			lda BALL2+1
 18356 92F7 8D 53 AD			sta TEST_BALL.BALL+1
 18357 92FA 20 0D 8C			jsr TEST_BALL
 18358
 18359 				; optimize OK (vservice.pas), line = 3140
 18360
 18361 92FD AD 14 AD			lda BALL0.INPLAY
 18362 9300 D0 2B			jne l_3526
 18363
 18364 				; optimize OK (vservice.pas), line = 3142
 18365
 18366 9302 AC BA 93 84 84 AC + 	mwy BALL0 :bp2
 18367 930C A0 1A			ldy #$1A
 18368 930E B9 18 AD 91 84 88 + 	mva:rpl adr.BALL1,y (:bp2),y-
 18369
 18370 				; optimize OK (vservice.pas), line = 3143
 18371
 18372 9316 AC BC 93 84 84 AC + 	mwy BALL1 :bp2
 18373 9320 A0 1A			ldy #$1A
 18374 9322 B9 33 AD 91 84 88 + 	mva:rpl adr.BALL2,y (:bp2),y-
 18375
 18376 				; optimize OK (vservice.pas), line = 3144
 18377
 18378 932A 8D 4A AD			sta BALL2.INPLAY
 18379 932D			l_3526
 18380
 18381 				; optimize OK (vservice.pas), line = 3147
 18382
 18383 932D A9 00			lda #$00
 18384 932F 8D D9 9D			sta BALLS_IN_PLAY
 18385
 18386 				; optimize OK (vservice.pas), line = 3149
 18387
 18388 9332 AD 14 AD			lda BALL0.INPLAY
 18389 9335 F0 03			jeq l_3541
 18390 9337 EE D9 9D			inc BALLS_IN_PLAY
 18391 933A			l_3541
 18392
 18393 				; optimize OK (vservice.pas), line = 3150
 18394
 18395 933A AD 2F AD			lda BALL1.INPLAY
 18396 933D F0 03			jeq l_3554
 18397 933F EE D9 9D			inc BALLS_IN_PLAY
 18398 9342			l_3554
 18399
 18400 				; optimize OK (vservice.pas), line = 3151
 18401
 18402 9342 AD 4A AD			lda BALL2.INPLAY
 18403 9345 F0 03			jeq l_3567
 18404 9347 EE D9 9D			inc BALLS_IN_PLAY
 18405 934A			l_3567
 18406
 18407 				; optimize OK (vservice.pas), line = 3154
 18408
 18409 934A AD 14 AD			lda BALL0.INPLAY
 18410 934D D0 49			jne l_357D
 18411
 18412 				; optimize OK (vservice.pas), line = 3156
 18413
 18414 934F A9 01			lda #$01
 18415 9351 8D 15 AD			sta BALL0.LAUNCH
 18416
 18417 				; optimize OK (vservice.pas), line = 3157
 18418
 18419 9354 AD BA 93			lda BALL0
 18420 9357 8D 60 AB			sta REMOVE_BALL.BALL
 18421 935A AD BB 93			lda BALL0+1
 18422 935D 8D 61 AB			sta REMOVE_BALL.BALL+1
 18423 9360 20 77 2D			jsr REMOVE_BALL
 18424
 18425 				; optimize FAIL ('DESTROY_VAUS', vservice.pas), line = 3158
 18426
 18427 9363 20 91 72			jsr DESTROY_VAUS
 18428
 18429 				; optimize OK (vservice.pas), line = 3159
 18430
 18431 9366 AC BA 9D			ldy CUR_PLAYER
 18432 9369 B9 AE 9D			lda adr.SCORE.LIVES,y
 18433 936C 38 E9 01			sub #$01
 18434 936F 99 AE 9D			sta adr.SCORE.LIVES,y
 18435
 18436 				; optimize OK (vservice.pas), line = 3160
 18437
 18438 9372 AD 23 9B			lda WALL_P
 18439 9375 85 8E			sta @move.dst
 18440 9377 AD BA 9D			lda CUR_PLAYER
 18441 937A 18 6D 24 9B			add WALL_P+1
 18442 937E 85 8F			sta @move.dst+1
 18443 9380 AD 25 9B			lda WALL
 18444 9383 85 8A			sta @move.src
 18445 9385 AD 26 9B			lda WALL+1
 18446 9388 85 8B			sta @move.src+1
 18447 938A A9 00			lda <256
 18448 938C 85 86			sta @move.cnt
 18449 938E A9 01			lda >256
 18450 9390 85 87			sta @move.cnt+1
 18451 9392 20 A5 11			jsr @move
 18452
 18453 				; optimize FAIL ('NOSOUND', vservice.pas), line = 3168
 18454
 18455 9395 20 CC 25			jsr NOSOUND
 18456 9398			l_357D
 18457 9398			l_3359
 18458
 18459 				; optimize OK (vservice.pas), line = 2968
 18460
 18461 9398 AD 9D 9D			lda REMAIN_BLK
 18462 939B F0 0D			jeq l_335Aw
 18463 939D AD 14 AD			lda BALL0.INPLAY
 18464 93A0 F0 08			jeq l_335Aw
 18465 93A2 AD B9 9D			lda SCORE.ABORTPLAY
 18466 93A5 D0 03 4C 13 8F		jeq l_335A
 18467 93AA			l_335Aw
 18468
 18469 				; optimize OK (vservice.pas), line = 3224
 18470
 18471 93AA A9 00			lda #$00
 18472 93AC 8D EF AC			sta RESULT
 18473
 18474 				; optimize OK (vservice.pas), line = 3225
 18475
 18476 93AF AD 9D 9D			lda REMAIN_BLK
 18477 93B2 D0 05			jne l_35C7
 18478 93B4 A9 01			lda #$01
 18479 93B6 8D EF AC			sta RESULT
 18480 93B9			l_35C7
 18481 93B9			@exit
 18482
 18483 				; ------------------------------------------------------------
 18484
 18485 = ACEF			RESULT	= DATAORIGIN+$10D2
 18486 = ACF0			X	= DATAORIGIN+$10D3
 18487 = ACF2			Y	= DATAORIGIN+$10D5
 18488 = ACF4			KEY	= DATAORIGIN+$10D7
 18489 = ACF6			T1	= DATAORIGIN+$10D9
 18490 = ACF8			T2	= DATAORIGIN+$10DB
 18491 = ACFA			HLP	= DATAORIGIN+$10DD
 18492 = ACFC			CN	= DATAORIGIN+$10DF
 18493 = ACFD			adr.BALL0	= DATAORIGIN+$10E0	; [27] RECORD
 18494 93B9			.var BALL0	= adr.BALL0 .word
 18495 = ACFD			BALL0.X	= DATAORIGIN+$10E0
 18496 = ACFF			BALL0.Y	= DATAORIGIN+$10E2
 18497 = AD01			BALL0.FINEX	= DATAORIGIN+$10E4
 18498 = AD03			BALL0.FINEY	= DATAORIGIN+$10E6
 18499 = AD05			BALL0.OLDX	= DATAORIGIN+$10E8
 18500 = AD07			BALL0.OLDY	= DATAORIGIN+$10EA
 18501 = AD09			BALL0.SPEED	= DATAORIGIN+$10EC
 18502 = AD0B			BALL0.FINESPEED	= DATAORIGIN+$10EE
 18503 = AD0D			BALL0.SPEEDX	= DATAORIGIN+$10F0
 18504 = AD0F			BALL0.SPEEDY	= DATAORIGIN+$10F2
 18505 = AD11			BALL0.SBD	= DATAORIGIN+$10F4
 18506 = AD13			BALL0.BRWHIT	= DATAORIGIN+$10F6
 18507 = AD14			BALL0.INPLAY	= DATAORIGIN+$10F7
 18508 = AD15			BALL0.LAUNCH	= DATAORIGIN+$10F8
 18509 = AD16			BALL0.ONVAUS	= DATAORIGIN+$10F9
 18510 = AD17			BALL0.STM	= DATAORIGIN+$10FA
 18511 = AD18			adr.BALL1	= DATAORIGIN+$10FB	; [27] RECORD
 18512 93B9			.var BALL1	= adr.BALL1 .word
 18513 = AD18			BALL1.X	= DATAORIGIN+$10FB
 18514 = AD1A			BALL1.Y	= DATAORIGIN+$10FD
 18515 = AD1C			BALL1.FINEX	= DATAORIGIN+$10FF
 18516 = AD1E			BALL1.FINEY	= DATAORIGIN+$1101
 18517 = AD20			BALL1.OLDX	= DATAORIGIN+$1103
 18518 = AD22			BALL1.OLDY	= DATAORIGIN+$1105
 18519 = AD24			BALL1.SPEED	= DATAORIGIN+$1107
 18520 = AD26			BALL1.FINESPEED	= DATAORIGIN+$1109
 18521 = AD28			BALL1.SPEEDX	= DATAORIGIN+$110B
 18522 = AD2A			BALL1.SPEEDY	= DATAORIGIN+$110D
 18523 = AD2C			BALL1.SBD	= DATAORIGIN+$110F
 18524 = AD2E			BALL1.BRWHIT	= DATAORIGIN+$1111
 18525 = AD2F			BALL1.INPLAY	= DATAORIGIN+$1112
 18526 = AD30			BALL1.LAUNCH	= DATAORIGIN+$1113
 18527 = AD31			BALL1.ONVAUS	= DATAORIGIN+$1114
 18528 = AD32			BALL1.STM	= DATAORIGIN+$1115
 18529 = AD33			adr.BALL2	= DATAORIGIN+$1116	; [27] RECORD
 18530 93B9			.var BALL2	= adr.BALL2 .word
 18531 = AD33			BALL2.X	= DATAORIGIN+$1116
 18532 = AD35			BALL2.Y	= DATAORIGIN+$1118
 18533 = AD37			BALL2.FINEX	= DATAORIGIN+$111A
 18534 = AD39			BALL2.FINEY	= DATAORIGIN+$111C
 18535 = AD3B			BALL2.OLDX	= DATAORIGIN+$111E
 18536 = AD3D			BALL2.OLDY	= DATAORIGIN+$1120
 18537 = AD3F			BALL2.SPEED	= DATAORIGIN+$1122
 18538 = AD41			BALL2.FINESPEED	= DATAORIGIN+$1124
 18539 = AD43			BALL2.SPEEDX	= DATAORIGIN+$1126
 18540 = AD45			BALL2.SPEEDY	= DATAORIGIN+$1128
 18541 = AD47			BALL2.SBD	= DATAORIGIN+$112A
 18542 = AD49			BALL2.BRWHIT	= DATAORIGIN+$112C
 18543 = AD4A			BALL2.INPLAY	= DATAORIGIN+$112D
 18544 = AD4B			BALL2.LAUNCH	= DATAORIGIN+$112E
 18545 = AD4C			BALL2.ONVAUS	= DATAORIGIN+$112F
 18546 = AD4D			BALL2.STM	= DATAORIGIN+$1130
 18547
 18548 = ACF0			@VarData	= X
 18549 = 005E			@VarDataSize	= 94
 18550
 18551 93B9 60				rts						; ret
 18552 = 93BA FD AC		BALL0
 18552 = 93BC 18 AD		BALL1
 18552 = 93BE 33 AD		BALL2
 18552 				.endl
 18553
 18554 93C0			.local	CHOOSE_START_WALL				; FUNCTION
 18555
 18556 				; optimize OK (vservice.pas), line = 3248
 18557
 18558 93C0 A9 01			lda #$01
 18559 93C2 8D 5C AD			sta ST
 18560 93C5 A9 00			lda #$00
 18561 93C7 8D 5D AD			sta ST+1
 18562
 18563 				; optimize OK (vservice.pas), line = 3306
 18564
 18565 93CA AD 5C AD			lda ST
 18566 93CD 8D 56 AD			sta RESULT
 18567 93D0 AD 5D AD			lda ST+1
 18568 93D3 8D 57 AD			sta RESULT+1
 18569 93D6			@exit
 18570
 18571 				; ------------------------------------------------------------
 18572
 18573 = AD56			RESULT	= DATAORIGIN+$1139
 18574 = 0046			PX	= $46
 18575 = 0064			PY	= $64
 18576 = 0022			DX	= $22
 18577 = 0023			DY	= $23
 18578 = 0013			DDX	= $13
 18579 = 000E			DDY	= $0E
 18580 = AD58			X	= DATAORIGIN+$113B
 18581 = AD5A			Y	= DATAORIGIN+$113D
 18582 = AD5C			ST	= DATAORIGIN+$113F
 18583 = AD5E			OLDX	= DATAORIGIN+$1141
 18584 = AD60			OLDY	= DATAORIGIN+$1143
 18585 = AD62			NEWX	= DATAORIGIN+$1145
 18586 = AD64			NEWY	= DATAORIGIN+$1147
 18587 = AD66			adr.SC	= [DATAORIGIN+$1149] .array [21]
 18588 93D6			.var SC	= adr.SC .word
 18589
 18590 = AD58			@VarData	= X
 18591 = 0023			@VarDataSize	= 35
 18592
 18593 93D6 60				rts						; ret
 18594 = 93D7 66 AD		SC
 18594 				.endl
 18595
 18596 93D9			.local	SET_START_PARAMETERS				; PROCEDURE
 18597
 18598 				; optimize OK (vservice.pas), line = 3315
 18599
 18600 93D9 A9 01			lda #$01
 18601 93DB 8D 7B AD			sta X
 18602
 18603 93DE			l_35E8
 18604 				; --- ForToDoCondition
 18605 93DE AD 7B AD			lda X
 18606 93E1 C9 03			cmp #$03
 18607 93E3 90 03 4C 69 94		jcs l_35F6
 18608
 18609 				; optimize OK (vservice.pas), line = 3317
 18610
 18611 93E8 0A				asl @
 18612 93E9 0A				asl @
 18613 93EA A8				tay
 18614 93EB A9 00			lda #$00
 18615 93ED 99 9F 9D			sta adr.SCORE.PLAYER,y
 18616 93F0 99 A0 9D			sta adr.SCORE.PLAYER+1,y
 18617 93F3 99 A1 9D			sta adr.SCORE.PLAYER+2,y
 18618 93F6 99 A2 9D			sta adr.SCORE.PLAYER+3,y
 18619
 18620 				; optimize OK (vservice.pas), line = 3318
 18621
 18622 93F9 AC 7B AD			ldy X
 18623 93FC A9 05			lda #$05
 18624 93FE 99 AE 9D			sta adr.SCORE.LIVES,y
 18625
 18626 				; optimize OK (vservice.pas), line = 3319
 18627
 18628 9401 A9 01			lda #$01
 18629 9403 99 AB 9D			sta adr.SCORE.WALL_N,y
 18630
 18631 				; optimize FAIL (1, vservice.pas), line = 3320
 18632
 18633 9406 E8				inx
 18634 9407 AD 7B AD 95 96		mva X :STACKORIGIN,x
 18635 940C A9 00 95 A6			mva #$00 :STACKORIGIN+STACKWIDTH,x
 18636 9410 E8				inx
 18637 9411 A9 00 95 96			mva #$00 :STACKORIGIN,x
 18638 9415 A9 01 95 A6			mva #$01 :STACKORIGIN+STACKWIDTH,x
 18639 9419 20 E7 12			jsr imulWORD
 18640 941C A5 86			lda :eax
 18641 941E 95 95			sta :STACKORIGIN-1,x
 18642 9420 A5 87			lda :eax+1
 18643 9422 95 A5			sta :STACKORIGIN-1+STACKWIDTH,x
 18644 9424 A5 88			lda :eax+2
 18645 9426 95 B5			sta :STACKORIGIN-1+STACKWIDTH*2,x
 18646 9428 A5 89			lda :eax+3
 18647 942A 95 C5			sta :STACKORIGIN-1+STACKWIDTH*3,x
 18648 942C A9 00 95 96			mva #$00 :STACKORIGIN,x
 18649 9430 95 A6			sta :STACKORIGIN+STACKWIDTH,x
 18650 9432 E8				inx
 18651 9433 AD 21 9B			lda ALL_WALLS
 18652 9436 18 75 95			add :STACKORIGIN-1,x
 18653 9439 85 8A			sta @move.src
 18654 943B AD 22 9B			lda ALL_WALLS+1
 18655 943E 75 A5			adc :STACKORIGIN-1+STACKWIDTH,x
 18656 9440 85 8B			sta @move.src+1
 18657 9442 AD 23 9B			lda WALL_P
 18658 9445 85 8E			sta @move.dst
 18659 9447 AD 24 9B			lda WALL_P+1
 18660 944A 85 8F			sta @move.dst+1
 18661 944C CA				dex
 18662 944D CA				dex
 18663 944E A9 00			lda <768
 18664 9450 85 86			sta @move.cnt
 18665 9452 A9 03			lda >768
 18666 9454 85 87			sta @move.cnt+1
 18667 9456 20 A5 11			jsr @move
 18668
 18669 				; optimize OK (vservice.pas), line = 3322
 18670
 18671 9459 AC 7B AD			ldy X
 18672 945C A9 00			lda #$00
 18673 945E 99 B6 9D			sta adr.SCORE.ROUNDSEL,y
 18674
 18675 				; --- ForToDoEpilog
 18676 9461 EE 7B AD			inc X
 18677 9464 F0 03 4C DE 93		jne l_35E8
 18678 9469			l_35F6
 18679
 18680 				; optimize OK (vservice.pas), line = 3325
 18681
 18682 9469 A9 01			lda #$01
 18683 946B 8D BA 9D			sta CUR_PLAYER
 18684
 18685 				; ------------------------------------------------------------
 18686
 18687 = AD7B			X	= DATAORIGIN+$115E
 18688
 18689 = AD7B			@VarData	= X
 18690 = 0001			@VarDataSize	= 1
 18691
 18692 946E			@exit
 18693 					.ifdef @new
 18694 					lda <@VarData
 18695 					sta :ztmp
 18696 					lda >@VarData
 18697 					ldy #@VarDataSize-1
 18698 					jmp @FreeMem
 18699 					els
 18700 946E 60				rts						; ret
 18701 					eif
 18702 				.endl
 18703
 18704 946F			.local	START_GAME					; PROCEDURE
 18705
 18706 				; optimize FAIL ('SET_START_PARAMETERS', vservice.pas), line = 3442
 18707
 18708 946F 20 D9 93			jsr SET_START_PARAMETERS
 18709
 18710 				; optimize OK (vservice.pas), line = 3443
 18711
 18712 9472 AD 7D AD			lda PLAYERS+1
 18713 9475 D0 05			bne @+
 18714 9477 AD 7C AD			lda PLAYERS
 18715 947A C9 01			cmp #$01
 18716 				@
 18717 947C D0 05			jne l_363B
 18718 947E A9 00			lda #$00
 18719 9480 8D B0 9D			sta adr.SCORE.LIVES+$02
 18720 9483			l_363B
 18721
 18722 				; optimize OK (vservice.pas), line = 3446
 18723
 18724 9483 A9 00			lda #$00
 18725 9485 8D C2 9D			sta TRAINER
 18726
 18727 				; optimize OK (vservice.pas), line = 3447
 18728
 18729 9488 AD 23 9B			lda WALL_P
 18730 948B 85 8A			sta @move.src
 18731 948D AD BA 9D			lda CUR_PLAYER
 18732 9490 18 6D 24 9B			add WALL_P+1
 18733 9494 85 8B			sta @move.src+1
 18734 9496 AD 25 9B			lda WALL
 18735 9499 85 8E			sta @move.dst
 18736 949B AD 26 9B			lda WALL+1
 18737 949E 85 8F			sta @move.dst+1
 18738 94A0 A9 00			lda <256
 18739 94A2 85 86			sta @move.cnt
 18740 94A4 A9 01			lda >256
 18741 94A6 85 87			sta @move.cnt+1
 18742 94A8 20 A5 11			jsr @move
 18743
 18744 				; optimize FAIL ('SET_WALL', vservice.pas), line = 3449
 18745
 18746 94AB 20 8E 4B			jsr SET_WALL
 18747
 18748 				; optimize OK (vservice.pas), line = 3451
 18749
 18750 94AE AD 03 9B			lda PATTERN
 18751 94B1 8D 5A AC			sta FILL_PICTURE_WITH_PATTERN.PATT
 18752 94B4 AD 04 9B			lda PATTERN+1
 18753 94B7 8D 5B AC			sta FILL_PICTURE_WITH_PATTERN.PATT+1
 18754 94BA 20 FD 6F			jsr FILL_PICTURE_WITH_PATTERN
 18755
 18756 				; optimize FAIL ('SHOWBTMPICTURE', vservice.pas), line = 3452
 18757
 18758 94BD E8				inx
 18759 94BE AD E3 9A 95 96		mva PLAYSCREEN :STACKORIGIN,x
 18760 94C3 AD E4 9A 95 A6		mva PLAYSCREEN+1 :STACKORIGIN+STACKWIDTH,x
 18761 94C8 20 49 2C			jsr SHOWBTMPICTURE
 18762
 18763 				; optimize OK (vservice.pas), line = 3455
 18764
 18765 94CB AD E3 9A			lda PLAYSCREEN
 18766 94CE 8D 55 AB			sta SETPALETTE.BTM
 18767 94D1 AD E4 9A			lda PLAYSCREEN+1
 18768 94D4 8D 56 AB			sta SETPALETTE.BTM+1
 18769 94D7 20 A9 2C			jsr SETPALETTE
 18770
 18771 				; optimize OK (vservice.pas), line = 3458
 18772
 18773 94DA AD A3 9D			lda adr.SCORE.PLAYER+$04
 18774 94DD 8D A5 AC			sta WRITE_SCORE.SC
 18775 94E0 AD A4 9D			lda adr.SCORE.PLAYER+1+$04
 18776 94E3 8D A6 AC			sta WRITE_SCORE.SC+1
 18777 94E6 AD A5 9D			lda adr.SCORE.PLAYER+2+$04
 18778 94E9 8D A7 AC			sta WRITE_SCORE.SC+2
 18779 94EC AD A6 9D			lda adr.SCORE.PLAYER+3+$04
 18780 94EF 8D A8 AC			sta WRITE_SCORE.SC+3
 18781 94F2 A9 FD			lda #$FD
 18782 94F4 8D A1 AC			sta WRITE_SCORE.PX
 18783 94F7 A9 00			lda #$00
 18784 94F9 8D A2 AC			sta WRITE_SCORE.PX+1
 18785 94FC A9 3C			lda #$3C
 18786 94FE 8D A3 AC			sta WRITE_SCORE.PY
 18787 9501 A9 00			lda #$00
 18788 9503 8D A4 AC			sta WRITE_SCORE.PY+1
 18789 9506 20 8E 7A			jsr WRITE_SCORE
 18790
 18791 				; optimize OK (vservice.pas), line = 3459
 18792
 18793 9509 AD A7 9D			lda adr.SCORE.PLAYER+$08
 18794 950C 8D A5 AC			sta WRITE_SCORE.SC
 18795 950F AD A8 9D			lda adr.SCORE.PLAYER+1+$08
 18796 9512 8D A6 AC			sta WRITE_SCORE.SC+1
 18797 9515 AD A9 9D			lda adr.SCORE.PLAYER+2+$08
 18798 9518 8D A7 AC			sta WRITE_SCORE.SC+2
 18799 951B AD AA 9D			lda adr.SCORE.PLAYER+3+$08
 18800 951E 8D A8 AC			sta WRITE_SCORE.SC+3
 18801 9521 A9 FD			lda #$FD
 18802 9523 8D A1 AC			sta WRITE_SCORE.PX
 18803 9526 A9 00			lda #$00
 18804 9528 8D A2 AC			sta WRITE_SCORE.PX+1
 18805 952B A9 5D			lda #$5D
 18806 952D 8D A3 AC			sta WRITE_SCORE.PY
 18807 9530 A9 00			lda #$00
 18808 9532 8D A4 AC			sta WRITE_SCORE.PY+1
 18809 9535 20 8E 7A			jsr WRITE_SCORE
 18810
 18811 				; optimize OK (vservice.pas), line = 3460
 18812
 18813 9538 A9 FD			lda #$FD
 18814 953A 8D A1 AC			sta WRITE_SCORE.PX
 18815 953D A9 00			lda #$00
 18816 953F 8D A2 AC			sta WRITE_SCORE.PX+1
 18817 9542 A9 80			lda #$80
 18818 9544 8D A3 AC			sta WRITE_SCORE.PY
 18819 9547 A9 00			lda #$00
 18820 9549 8D A4 AC			sta WRITE_SCORE.PY+1
 18821 954C AD B1 9D			lda SCORE.HISCORE
 18822 954F 8D A5 AC			sta WRITE_SCORE.SC
 18823 9552 AD B2 9D			lda SCORE.HISCORE+1
 18824 9555 8D A6 AC			sta WRITE_SCORE.SC+1
 18825 9558 AD B3 9D			lda SCORE.HISCORE+2
 18826 955B 8D A7 AC			sta WRITE_SCORE.SC+2
 18827 955E AD B4 9D			lda SCORE.HISCORE+3
 18828 9561 8D A8 AC			sta WRITE_SCORE.SC+3
 18829 9564 20 8E 7A			jsr WRITE_SCORE
 18830
 18831 				; optimize FAIL ('PUT_WALL', vservice.pas), line = 3463
 18832
 18833 9567 20 39 4B			jsr PUT_WALL
 18834
 18835 				; --- RepeatUntilProlog
 18836 956A			l_366A
 18837
 18838 				; --- RepeatUntilProlog
 18839 956A			l_366B
 18840
 18841 				; optimize OK (vservice.pas), line = 3470
 18842
 18843 956A AC BA 9D			ldy CUR_PLAYER
 18844 956D B9 B6 9D			lda adr.SCORE.ROUNDSEL,y
 18845 9570 F0 03 4C 1B 96		jne l_367D
 18846
 18847 				; optimize FAIL (1, vservice.pas), line = 3472
 18848
 18849 9575 E8				inx
 18850 9576 AD BA 9D 95 96		mva CUR_PLAYER :STACKORIGIN,x
 18851 957B A9 00 95 A6			mva #$00 :STACKORIGIN+STACKWIDTH,x
 18852 957F 20 C0 93			jsr CHOOSE_START_WALL
 18853 9582 E8				inx
 18854 9583 AD 56 AD 95 96		mva CHOOSE_START_WALL.RESULT :STACKORIGIN,x
 18855 9588 AD 57 AD 95 A6		mva CHOOSE_START_WALL.RESULT+1 :STACKORIGIN+STACKWIDTH,x
 18856 958D B4 95			ldy :STACKORIGIN-1,x
 18857 958F B5 96			lda :STACKORIGIN,x
 18858 9591 99 AB 9D			sta adr.SCORE.WALL_N,y
 18859 9594 CA				dex
 18860
 18861 				; optimize FAIL (1, vservice.pas), line = 3475
 18862
 18863 9595 AD BA 9D 95 96		mva CUR_PLAYER :STACKORIGIN,x
 18864 959A A9 00 95 A6			mva #$00 :STACKORIGIN+STACKWIDTH,x
 18865 959E E8				inx
 18866 959F A9 00 95 96			mva #$00 :STACKORIGIN,x
 18867 95A3 A9 01 95 A6			mva #$01 :STACKORIGIN+STACKWIDTH,x
 18868 95A7 20 E7 12			jsr imulWORD
 18869 95AA A5 86			lda :eax
 18870 95AC 95 95			sta :STACKORIGIN-1,x
 18871 95AE A5 87			lda :eax+1
 18872 95B0 95 A5			sta :STACKORIGIN-1+STACKWIDTH,x
 18873 95B2 A5 88			lda :eax+2
 18874 95B4 95 B5			sta :STACKORIGIN-1+STACKWIDTH*2,x
 18875 95B6 A5 89			lda :eax+3
 18876 95B8 95 C5			sta :STACKORIGIN-1+STACKWIDTH*3,x
 18877 95BA AC BA 9D			ldy CUR_PLAYER
 18878 95BD B9 AB 9D			lda adr.SCORE.WALL_N,y
 18879 95C0 95 96			sta :STACKORIGIN,x
 18880 95C2 A9 00 95 A6			mva #$00 :STACKORIGIN+STACKWIDTH,x
 18881 95C6 E8				inx
 18882 95C7 A9 01 95 96			mva #$01 :STACKORIGIN,x
 18883 95CB A9 00 95 A6			mva #$00 :STACKORIGIN+STACKWIDTH,x
 18884 95CF 20 BA 10			jsr subAX_CX
 18885 95D2 A9 00 95 96			mva #$00 :STACKORIGIN,x
 18886 95D6 A9 01 95 A6			mva #$01 :STACKORIGIN+STACKWIDTH,x
 18887 95DA 20 E7 12			jsr imulWORD
 18888 95DD A5 86			lda :eax
 18889 95DF 95 95			sta :STACKORIGIN-1,x
 18890 95E1 A5 87			lda :eax+1
 18891 95E3 95 A5			sta :STACKORIGIN-1+STACKWIDTH,x
 18892 95E5 A5 88			lda :eax+2
 18893 95E7 95 B5			sta :STACKORIGIN-1+STACKWIDTH*2,x
 18894 95E9 A5 89			lda :eax+3
 18895 95EB 95 C5			sta :STACKORIGIN-1+STACKWIDTH*3,x
 18896 95ED AD 21 9B			lda ALL_WALLS
 18897 95F0 18 75 95			add :STACKORIGIN-1,x
 18898 95F3 85 8A			sta @move.src
 18899 95F5 AD 22 9B			lda ALL_WALLS+1
 18900 95F8 75 A5			adc :STACKORIGIN-1+STACKWIDTH,x
 18901 95FA 85 8B			sta @move.src+1
 18902 95FC AD 23 9B			lda WALL_P
 18903 95FF 85 8E			sta @move.dst
 18904 9601 AD 24 9B			lda WALL_P+1
 18905 9604 85 8F			sta @move.dst+1
 18906 9606 CA				dex
 18907 9607 CA				dex
 18908 9608 A9 00			lda <768
 18909 960A 85 86			sta @move.cnt
 18910 960C A9 03			lda >768
 18911 960E 85 87			sta @move.cnt+1
 18912 9610 20 A5 11			jsr @move
 18913
 18914 				; optimize OK (vservice.pas), line = 3479
 18915
 18916 9613 AC BA 9D			ldy CUR_PLAYER
 18917 9616 A9 01			lda #$01
 18918 9618 99 B6 9D			sta adr.SCORE.ROUNDSEL,y
 18919 961B			l_367D
 18920
 18921 				; optimize OK (vservice.pas), line = 3483
 18922
 18923 961B AD 23 9B			lda WALL_P
 18924 961E 85 8A			sta @move.src
 18925 9620 AD BA 9D			lda CUR_PLAYER
 18926 9623 18 6D 24 9B			add WALL_P+1
 18927 9627 85 8B			sta @move.src+1
 18928 9629 AD 25 9B			lda WALL
 18929 962C 85 8E			sta @move.dst
 18930 962E AD 26 9B			lda WALL+1
 18931 9631 85 8F			sta @move.dst+1
 18932 9633 A9 00			lda <256
 18933 9635 85 86			sta @move.cnt
 18934 9637 A9 01			lda >256
 18935 9639 85 87			sta @move.cnt+1
 18936 963B 20 A5 11			jsr @move
 18937
 18938 				; optimize FAIL ('SET_WALL', vservice.pas), line = 3484
 18939
 18940 963E 20 8E 4B			jsr SET_WALL
 18941
 18942 				; optimize FAIL ('BOUNCEBALL', vservice.pas), line = 3489
 18943
 18944 9641 20 94 8B			jsr BOUNCEBALL
 18945 9644 AD EF AC			lda BOUNCEBALL.RESULT
 18946 9647 8D 7E AD			sta NWALL
 18947
 18948 				; optimize OK (vservice.pas), line = 3493
 18949
 18950 964A D0 03 4C EA 96		jeq l_36BF
 18951
 18952 				; optimize OK (vservice.pas), line = 3496
 18953
 18954 964F AC BA 9D			ldy CUR_PLAYER
 18955 9652 B9 AB 9D			lda adr.SCORE.WALL_N,y
 18956 9655 18 69 01			add #$01
 18957 9658 99 AB 9D			sta adr.SCORE.WALL_N,y
 18958
 18959 				; optimize OK (vservice.pas), line = 3499
 18960
 18961 965B AD 9E 9D			lda TOTALWALL
 18962 965E D9 AB 9D			cmp adr.SCORE.WALL_N,y
 18963 9661 B0 05			jcs l_36DB
 18964
 18965 				; optimize OK (vservice.pas), line = 3500
 18966
 18967 9663 A9 01			lda #$01
 18968 9665 99 AB 9D			sta adr.SCORE.WALL_N,y
 18969 9668			l_36DB
 18970
 18971 				; optimize FAIL (1, vservice.pas), line = 3503
 18972
 18973 9668 E8				inx
 18974 9669 AD BA 9D 95 96		mva CUR_PLAYER :STACKORIGIN,x
 18975 966E A9 00 95 A6			mva #$00 :STACKORIGIN+STACKWIDTH,x
 18976 9672 E8				inx
 18977 9673 A9 00 95 96			mva #$00 :STACKORIGIN,x
 18978 9677 A9 01 95 A6			mva #$01 :STACKORIGIN+STACKWIDTH,x
 18979 967B 20 E7 12			jsr imulWORD
 18980 967E A5 86			lda :eax
 18981 9680 95 95			sta :STACKORIGIN-1,x
 18982 9682 A5 87			lda :eax+1
 18983 9684 95 A5			sta :STACKORIGIN-1+STACKWIDTH,x
 18984 9686 A5 88			lda :eax+2
 18985 9688 95 B5			sta :STACKORIGIN-1+STACKWIDTH*2,x
 18986 968A A5 89			lda :eax+3
 18987 968C 95 C5			sta :STACKORIGIN-1+STACKWIDTH*3,x
 18988 968E AC BA 9D			ldy CUR_PLAYER
 18989 9691 B9 AB 9D			lda adr.SCORE.WALL_N,y
 18990 9694 95 96			sta :STACKORIGIN,x
 18991 9696 A9 00 95 A6			mva #$00 :STACKORIGIN+STACKWIDTH,x
 18992 969A E8				inx
 18993 969B A9 01 95 96			mva #$01 :STACKORIGIN,x
 18994 969F A9 00 95 A6			mva #$00 :STACKORIGIN+STACKWIDTH,x
 18995 96A3 20 BA 10			jsr subAX_CX
 18996 96A6 A9 00 95 96			mva #$00 :STACKORIGIN,x
 18997 96AA A9 01 95 A6			mva #$01 :STACKORIGIN+STACKWIDTH,x
 18998 96AE 20 E7 12			jsr imulWORD
 18999 96B1 A5 86			lda :eax
 19000 96B3 95 95			sta :STACKORIGIN-1,x
 19001 96B5 A5 87			lda :eax+1
 19002 96B7 95 A5			sta :STACKORIGIN-1+STACKWIDTH,x
 19003 96B9 A5 88			lda :eax+2
 19004 96BB 95 B5			sta :STACKORIGIN-1+STACKWIDTH*2,x
 19005 96BD A5 89			lda :eax+3
 19006 96BF 95 C5			sta :STACKORIGIN-1+STACKWIDTH*3,x
 19007 96C1 AD 21 9B			lda ALL_WALLS
 19008 96C4 18 75 95			add :STACKORIGIN-1,x
 19009 96C7 85 8A			sta @move.src
 19010 96C9 AD 22 9B			lda ALL_WALLS+1
 19011 96CC 75 A5			adc :STACKORIGIN-1+STACKWIDTH,x
 19012 96CE 85 8B			sta @move.src+1
 19013 96D0 AD 23 9B			lda WALL_P
 19014 96D3 85 8E			sta @move.dst
 19015 96D5 AD 24 9B			lda WALL_P+1
 19016 96D8 85 8F			sta @move.dst+1
 19017 96DA CA				dex
 19018 96DB CA				dex
 19019 96DC A9 00			lda <768
 19020 96DE 85 86			sta @move.cnt
 19021 96E0 A9 03			lda >768
 19022 96E2 85 87			sta @move.cnt+1
 19023 96E4 20 A5 11			jsr @move
 19024 96E7 4C F5 96			jmp l_3705
 19025 96EA			l_36BF
 19026
 19027 				; optimize OK (vservice.pas), line = 3509
 19028
 19029 96EA AC BA 9D			ldy CUR_PLAYER
 19030 96ED B9 AE 9D			lda adr.SCORE.LIVES,y
 19031 96F0 D0 03			jne l_371A
 19032 96F2 20 8E 72			jsr GAME_OVER
 19033 96F5			l_3705
 19034 96F5			l_371A
 19035
 19036 				; optimize OK (vservice.pas), line = 3514
 19037
 19038 96F5 AD 7E AD			lda NWALL
 19039 96F8 F0 03 4C 6A 95		jne l_366B
 19040
 19041 				; optimize FAIL (0, vservice.pas), line = 3517
 19042
 19043 96FD EE BA 9D			inc CUR_PLAYER
 19044
 19045 				; optimize OK (vservice.pas), line = 3518
 19046
 19047 9700 AD 7C AD			lda PLAYERS
 19048 9703 CD BA 9D			cmp CUR_PLAYER
 19049 9706 AD 7D AD			lda PLAYERS+1
 19050 9709 E9 00			sbc #$00
 19051 970B 50 02			svc
 19052 970D 49 80			eor #$80
 19053 970F 10 05			jpl l_3742
 19054 9711 A9 01			lda #$01
 19055 9713 8D BA 9D			sta CUR_PLAYER
 19056 9716			l_3742
 19057
 19058 				; optimize OK (vservice.pas), line = 3524
 19059
 19060 9716 AC BA 9D			ldy CUR_PLAYER
 19061 9719 B9 AE 9D			lda adr.SCORE.LIVES,y
 19062 971C D0 09			jne l_375E
 19063 971E A9 03			lda #$03
 19064 9720 38 ED BA 9D			sub CUR_PLAYER
 19065 9724 8D BA 9D			sta CUR_PLAYER
 19066 9727			l_375E
 19067
 19068 				; optimize OK (vservice.pas), line = 3529
 19069
 19070 9727 A0 01			ldy #1
 19071 9729 AD AF 9D			lda adr.SCORE.LIVES+$01
 19072 972C F0 01			beq @+
 19073 972E 88				dey
 19074 				@
 19075 972F 84 9F			sty :STACKORIGIN+9
 19076 9731 A0 01			ldy #1
 19077 9733 AD B0 9D			lda adr.SCORE.LIVES+$02
 19078 9736 F0 01			beq @+
 19079 9738 88				dey
 19080 				@
 19081 9739 98				tya
 19082 973A 25 9F			and :STACKORIGIN+9
 19083 973C 0D B9 9D			ora SCORE.ABORTPLAY
 19084 973F D0 03 4C 6A 95		jeq l_366A
 19085
 19086 				; ------------------------------------------------------------
 19087
 19088 = AD7C			PLAYERS	= DATAORIGIN+$115F
 19089 = AD7E			NWALL	= DATAORIGIN+$1161
 19090
 19091 = AD7C			@VarData	= PLAYERS
 19092 = 0003			@VarDataSize	= 3
 19093
 19094 9744			@exit
 19095 					.ifdef @new
 19096 					lda <@VarData
 19097 					sta :ztmp
 19098 					lda >@VarData
 19099 					ldy #@VarDataSize-1
 19100 					jmp @FreeMem
 19101 					els
 19102 9744 60				rts						; ret
 19103 					eif
 19104 				.endl
 19105
 19106 9745			.local	INIT_GAME					; PROCEDURE
 19107
 19108 				; optimize FAIL ('INITSVGA', arkanoid_vbxe.pas), line = 132
 19109
 19110 9745 20 9E 26			jsr INITSVGA
 19111
 19112 				; optimize FAIL ('INITROWARRAY', arkanoid_vbxe.pas), line = 133
 19113
 19114 9748 20 2B 26			jsr INITROWARRAY
 19115
 19116 				; optimize OK (btm.inc), line = 1
 19117
 19118 974B A9 00			lda #$00
 19119 974D 8D EA 9C			sta PLAYSCREEN.OFS
 19120 9750 A9 4A			lda #$4A
 19121 9752 8D EB 9C			sta PLAYSCREEN.OFS+1
 19122 9755 A9 01			lda #$01
 19123 9757 8D EC 9C			sta PLAYSCREEN.OFS+2
 19124 975A A9 00			lda #$00
 19125 975C 8D ED 9C			sta PLAYSCREEN.OFS+3
 19126
 19127 				; optimize OK (btm.inc), line = 2
 19128
 19129 975F A9 40			lda #$40
 19130 9761 8D E6 9C			sta PLAYSCREEN.WIDTH
 19131 9764 A9 01			lda #$01
 19132 9766 8D E7 9C			sta PLAYSCREEN.WIDTH+1
 19133
 19134 				; optimize OK (btm.inc), line = 3
 19135
 19136 9769 A9 C8			lda #$C8
 19137 976B 8D E8 9C			sta PLAYSCREEN.HEIGHT
 19138 976E A9 00			lda #$00
 19139 9770 8D E9 9C			sta PLAYSCREEN.HEIGHT+1
 19140
 19141 				; optimize OK (btm.inc), line = 5
 19142
 19143 9773 8D 22 9D			sta PRESENTS.OFS
 19144 9776 A9 44			lda #$44
 19145 9778 8D 23 9D			sta PRESENTS.OFS+1
 19146 977B A9 02			lda #$02
 19147 977D 8D 24 9D			sta PRESENTS.OFS+2
 19148 9780 A9 00			lda #$00
 19149 9782 8D 25 9D			sta PRESENTS.OFS+3
 19150
 19151 				; optimize OK (btm.inc), line = 6
 19152
 19153 9785 A9 40			lda #$40
 19154 9787 8D 1E 9D			sta PRESENTS.WIDTH
 19155 978A A9 01			lda #$01
 19156 978C 8D 1F 9D			sta PRESENTS.WIDTH+1
 19157
 19158 				; optimize OK (btm.inc), line = 7
 19159
 19160 978F A9 C8			lda #$C8
 19161 9791 8D 20 9D			sta PRESENTS.HEIGHT
 19162 9794 A9 00			lda #$00
 19163 9796 8D 21 9D			sta PRESENTS.HEIGHT+1
 19164
 19165 				; optimize OK (btm.inc), line = 9
 19166
 19167 9799 8D 12 9D			sta EXPLOSION.OFS
 19168 979C A9 3E			lda #$3E
 19169 979E 8D 13 9D			sta EXPLOSION.OFS+1
 19170 97A1 A9 03			lda #$03
 19171 97A3 8D 14 9D			sta EXPLOSION.OFS+2
 19172 97A6 A9 00			lda #$00
 19173 97A8 8D 15 9D			sta EXPLOSION.OFS+3
 19174
 19175 				; optimize OK (btm.inc), line = 10
 19176
 19177 97AB A9 2A			lda #$2A
 19178 97AD 8D 0E 9D			sta EXPLOSION.WIDTH
 19179 97B0 A9 00			lda #$00
 19180 97B2 8D 0F 9D			sta EXPLOSION.WIDTH+1
 19181
 19182 				; optimize OK (btm.inc), line = 11
 19183
 19184 97B5 A9 72			lda #$72
 19185 97B7 8D 10 9D			sta EXPLOSION.HEIGHT
 19186 97BA A9 00			lda #$00
 19187 97BC 8D 11 9D			sta EXPLOSION.HEIGHT+1
 19188
 19189 				; optimize OK (btm.inc), line = 13
 19190
 19191 97BF A9 B4			lda #$B4
 19192 97C1 8D 1A 9D			sta NEWVAUS.OFS
 19193 97C4 A9 50			lda #$50
 19194 97C6 8D 1B 9D			sta NEWVAUS.OFS+1
 19195 97C9 A9 03			lda #$03
 19196 97CB 8D 1C 9D			sta NEWVAUS.OFS+2
 19197 97CE A9 00			lda #$00
 19198 97D0 8D 1D 9D			sta NEWVAUS.OFS+3
 19199
 19200 				; optimize OK (btm.inc), line = 14
 19201
 19202 97D3 A9 29			lda #$29
 19203 97D5 8D 16 9D			sta NEWVAUS.WIDTH
 19204 97D8 A9 00			lda #$00
 19205 97DA 8D 17 9D			sta NEWVAUS.WIDTH+1
 19206
 19207 				; optimize OK (btm.inc), line = 15
 19208
 19209 97DD A9 C1			lda #$C1
 19210 97DF 8D 18 9D			sta NEWVAUS.HEIGHT
 19211 97E2 A9 00			lda #$00
 19212 97E4 8D 19 9D			sta NEWVAUS.HEIGHT+1
 19213
 19214 				; optimize OK (btm.inc), line = 17
 19215
 19216 97E7 A9 9D			lda #$9D
 19217 97E9 8D 2A 9D			sta SOUNDFX.OFS
 19218 97EC A9 6F			lda #$6F
 19219 97EE 8D 2B 9D			sta SOUNDFX.OFS+1
 19220 97F1 A9 03			lda #$03
 19221 97F3 8D 2C 9D			sta SOUNDFX.OFS+2
 19222 97F6 A9 00			lda #$00
 19223 97F8 8D 2D 9D			sta SOUNDFX.OFS+3
 19224
 19225 				; optimize OK (btm.inc), line = 18
 19226
 19227 97FB A9 15			lda #$15
 19228 97FD 8D 26 9D			sta SOUNDFX.WIDTH
 19229 9800 A9 00			lda #$00
 19230 9802 8D 27 9D			sta SOUNDFX.WIDTH+1
 19231
 19232 				; optimize OK (btm.inc), line = 19
 19233
 19234 9805 A9 26			lda #$26
 19235 9807 8D 28 9D			sta SOUNDFX.HEIGHT
 19236 980A A9 00			lda #$00
 19237 980C 8D 29 9D			sta SOUNDFX.HEIGHT+1
 19238
 19239 				; optimize OK (btm.inc), line = 21
 19240
 19241 980F A9 BB			lda #$BB
 19242 9811 8D 32 9D			sta SHINEWALL.OFS
 19243 9814 A9 72			lda #$72
 19244 9816 8D 33 9D			sta SHINEWALL.OFS+1
 19245 9819 A9 03			lda #$03
 19246 981B 8D 34 9D			sta SHINEWALL.OFS+2
 19247 981E A9 00			lda #$00
 19248 9820 8D 35 9D			sta SHINEWALL.OFS+3
 19249
 19250 				; optimize OK (btm.inc), line = 22
 19251
 19252 9823 A9 10			lda #$10
 19253 9825 8D 2E 9D			sta SHINEWALL.WIDTH
 19254 9828 A9 00			lda #$00
 19255 982A 8D 2F 9D			sta SHINEWALL.WIDTH+1
 19256
 19257 				; optimize OK (btm.inc), line = 23
 19258
 19259 982D A9 50			lda #$50
 19260 982F 8D 30 9D			sta SHINEWALL.HEIGHT
 19261 9832 A9 00			lda #$00
 19262 9834 8D 31 9D			sta SHINEWALL.HEIGHT+1
 19263
 19264 				; optimize OK (btm.inc), line = 25
 19265
 19266 9837 A9 BB			lda #$BB
 19267 9839 8D 3A 9D			sta MINIVAUS.OFS
 19268 983C A9 77			lda #$77
 19269 983E 8D 3B 9D			sta MINIVAUS.OFS+1
 19270 9841 A9 03			lda #$03
 19271 9843 8D 3C 9D			sta MINIVAUS.OFS+2
 19272 9846 A9 00			lda #$00
 19273 9848 8D 3D 9D			sta MINIVAUS.OFS+3
 19274
 19275 				; optimize OK (btm.inc), line = 26
 19276
 19277 984B A9 14			lda #$14
 19278 984D 8D 36 9D			sta MINIVAUS.WIDTH
 19279 9850 A9 00			lda #$00
 19280 9852 8D 37 9D			sta MINIVAUS.WIDTH+1
 19281
 19282 				; optimize OK (btm.inc), line = 27
 19283
 19284 9855 A9 05			lda #$05
 19285 9857 8D 38 9D			sta MINIVAUS.HEIGHT
 19286 985A A9 00			lda #$00
 19287 985C 8D 39 9D			sta MINIVAUS.HEIGHT+1
 19288
 19289 				; optimize OK (btm.inc), line = 29
 19290
 19291 985F A9 1F			lda #$1F
 19292 9861 8D 42 9D			sta LEVELSEL.OFS
 19293 9864 A9 78			lda #$78
 19294 9866 8D 43 9D			sta LEVELSEL.OFS+1
 19295 9869 A9 03			lda #$03
 19296 986B 8D 44 9D			sta LEVELSEL.OFS+2
 19297 986E A9 00			lda #$00
 19298 9870 8D 45 9D			sta LEVELSEL.OFS+3
 19299
 19300 				; optimize OK (btm.inc), line = 30
 19301
 19302 9873 A9 15			lda #$15
 19303 9875 8D 3E 9D			sta LEVELSEL.WIDTH
 19304 9878 A9 00			lda #$00
 19305 987A 8D 3F 9D			sta LEVELSEL.WIDTH+1
 19306
 19307 				; optimize OK (btm.inc), line = 31
 19308
 19309 987D A9 5F			lda #$5F
 19310 987F 8D 40 9D			sta LEVELSEL.HEIGHT
 19311 9882 A9 00			lda #$00
 19312 9884 8D 41 9D			sta LEVELSEL.HEIGHT+1
 19313
 19314 				; optimize OK (btm.inc), line = 33
 19315
 19316 9887 A9 EA			lda #$EA
 19317 9889 8D 4A 9D			sta LETTERS.OFS
 19318 988C A9 7F			lda #$7F
 19319 988E 8D 4B 9D			sta LETTERS.OFS+1
 19320 9891 A9 03			lda #$03
 19321 9893 8D 4C 9D			sta LETTERS.OFS+2
 19322 9896 A9 00			lda #$00
 19323 9898 8D 4D 9D			sta LETTERS.OFS+3
 19324
 19325 				; optimize OK (btm.inc), line = 34
 19326
 19327 989B A9 80			lda #$80
 19328 989D 8D 46 9D			sta LETTERS.WIDTH
 19329 98A0 A9 00			lda #$00
 19330 98A2 8D 47 9D			sta LETTERS.WIDTH+1
 19331
 19332 				; optimize OK (btm.inc), line = 35
 19333
 19334 98A5 A9 38			lda #$38
 19335 98A7 8D 48 9D			sta LETTERS.HEIGHT
 19336 98AA A9 00			lda #$00
 19337 98AC 8D 49 9D			sta LETTERS.HEIGHT+1
 19338
 19339 				; optimize OK (btm.inc), line = 37
 19340
 19341 98AF A9 EA			lda #$EA
 19342 98B1 8D FA 9C			sta NORMAL.OFS
 19343 98B4 A9 9B			lda #$9B
 19344 98B6 8D FB 9C			sta NORMAL.OFS+1
 19345 98B9 A9 03			lda #$03
 19346 98BB 8D FC 9C			sta NORMAL.OFS+2
 19347 98BE A9 00			lda #$00
 19348 98C0 8D FD 9C			sta NORMAL.OFS+3
 19349
 19350 				; optimize OK (btm.inc), line = 38
 19351
 19352 98C3 A9 20			lda #$20
 19353 98C5 8D F6 9C			sta NORMAL.WIDTH
 19354 98C8 A9 00			lda #$00
 19355 98CA 8D F7 9C			sta NORMAL.WIDTH+1
 19356
 19357 				; optimize OK (btm.inc), line = 39
 19358
 19359 98CD A9 07			lda #$07
 19360 98CF 8D F8 9C			sta NORMAL.HEIGHT
 19361 98D2 A9 00			lda #$00
 19362 98D4 8D F9 9C			sta NORMAL.HEIGHT+1
 19363
 19364 				; optimize OK (btm.inc), line = 41
 19365
 19366 98D7 A9 CA			lda #$CA
 19367 98D9 8D 0A 9D			sta LASERS.OFS
 19368 98DC A9 9C			lda #$9C
 19369 98DE 8D 0B 9D			sta LASERS.OFS+1
 19370 98E1 A9 03			lda #$03
 19371 98E3 8D 0C 9D			sta LASERS.OFS+2
 19372 98E6 A9 00			lda #$00
 19373 98E8 8D 0D 9D			sta LASERS.OFS+3
 19374
 19375 				; optimize OK (btm.inc), line = 42
 19376
 19377 98EB A9 20			lda #$20
 19378 98ED 8D 06 9D			sta LASERS.WIDTH
 19379 98F0 A9 00			lda #$00
 19380 98F2 8D 07 9D			sta LASERS.WIDTH+1
 19381
 19382 				; optimize OK (btm.inc), line = 43
 19383
 19384 98F5 A9 07			lda #$07
 19385 98F7 8D 08 9D			sta LASERS.HEIGHT
 19386 98FA A9 00			lda #$00
 19387 98FC 8D 09 9D			sta LASERS.HEIGHT+1
 19388
 19389 				; optimize OK (btm.inc), line = 45
 19390
 19391 98FF A9 AA			lda #$AA
 19392 9901 8D 02 9D			sta ENLARGED.OFS
 19393 9904 A9 9D			lda #$9D
 19394 9906 8D 03 9D			sta ENLARGED.OFS+1
 19395 9909 A9 03			lda #$03
 19396 990B 8D 04 9D			sta ENLARGED.OFS+2
 19397 990E A9 00			lda #$00
 19398 9910 8D 05 9D			sta ENLARGED.OFS+3
 19399
 19400 				; optimize OK (btm.inc), line = 46
 19401
 19402 9913 A9 40			lda #$40
 19403 9915 8D FE 9C			sta ENLARGED.WIDTH
 19404 9918 A9 00			lda #$00
 19405 991A 8D FF 9C			sta ENLARGED.WIDTH+1
 19406
 19407 				; optimize OK (btm.inc), line = 47
 19408
 19409 991D A9 07			lda #$07
 19410 991F 8D 00 9D			sta ENLARGED.HEIGHT
 19411 9922 A9 00			lda #$00
 19412 9924 8D 01 9D			sta ENLARGED.HEIGHT+1
 19413
 19414 				; optimize OK (btm.inc), line = 49
 19415
 19416 9927 A9 6A			lda #$6A
 19417 9929 8D 52 9D			sta SHOOTS.OFS
 19418 992C A9 9F			lda #$9F
 19419 992E 8D 53 9D			sta SHOOTS.OFS+1
 19420 9931 A9 03			lda #$03
 19421 9933 8D 54 9D			sta SHOOTS.OFS+2
 19422 9936 A9 00			lda #$00
 19423 9938 8D 55 9D			sta SHOOTS.OFS+3
 19424
 19425 				; optimize OK (btm.inc), line = 50
 19426
 19427 993B A9 0D			lda #$0D
 19428 993D 8D 4E 9D			sta SHOOTS.WIDTH
 19429 9940 A9 00			lda #$00
 19430 9942 8D 4F 9D			sta SHOOTS.WIDTH+1
 19431
 19432 				; optimize OK (btm.inc), line = 51
 19433
 19434 9945 A9 08			lda #$08
 19435 9947 8D 50 9D			sta SHOOTS.HEIGHT
 19436 994A A9 00			lda #$00
 19437 994C 8D 51 9D			sta SHOOTS.HEIGHT+1
 19438
 19439 				; optimize OK (btm.inc), line = 53
 19440
 19441 994F A9 D2			lda #$D2
 19442 9951 8D 5A 9D			sta FLUX.OFS
 19443 9954 A9 9F			lda #$9F
 19444 9956 8D 5B 9D			sta FLUX.OFS+1
 19445 9959 A9 03			lda #$03
 19446 995B 8D 5C 9D			sta FLUX.OFS+2
 19447 995E A9 00			lda #$00
 19448 9960 8D 5D 9D			sta FLUX.OFS+3
 19449
 19450 				; optimize OK (btm.inc), line = 54
 19451
 19452 9963 A9 08			lda #$08
 19453 9965 8D 56 9D			sta FLUX.WIDTH
 19454 9968 A9 00			lda #$00
 19455 996A 8D 57 9D			sta FLUX.WIDTH+1
 19456
 19457 				; optimize OK (btm.inc), line = 55
 19458
 19459 996D A9 29			lda #$29
 19460 996F 8D 58 9D			sta FLUX.HEIGHT
 19461 9972 A9 00			lda #$00
 19462 9974 8D 59 9D			sta FLUX.HEIGHT+1
 19463
 19464 				; optimize OK (btm.inc), line = 57
 19465
 19466 9977 A9 1A			lda #$1A
 19467 9979 8D E2 9C			sta BALLDATA.OFS
 19468 997C A9 A1			lda #$A1
 19469 997E 8D E3 9C			sta BALLDATA.OFS+1
 19470 9981 A9 03			lda #$03
 19471 9983 8D E4 9C			sta BALLDATA.OFS+2
 19472 9986 A9 00			lda #$00
 19473 9988 8D E5 9C			sta BALLDATA.OFS+3
 19474
 19475 				; optimize OK (btm.inc), line = 58
 19476
 19477 998B A9 05			lda #$05
 19478 998D 8D DE 9C			sta BALLDATA.WIDTH
 19479 9990 A9 00			lda #$00
 19480 9992 8D DF 9C			sta BALLDATA.WIDTH+1
 19481
 19482 				; optimize OK (btm.inc), line = 59
 19483
 19484 9995 A9 05			lda #$05
 19485 9997 8D E0 9C			sta BALLDATA.HEIGHT
 19486 999A A9 00			lda #$00
 19487 999C 8D E1 9C			sta BALLDATA.HEIGHT+1
 19488
 19489 				; optimize OK (btm.inc), line = 61
 19490
 19491 999F A9 33			lda #$33
 19492 99A1 8D 6F 9D			sta PATTERN.OFS
 19493 99A4 A9 A1			lda #$A1
 19494 99A6 8D 70 9D			sta PATTERN.OFS+1
 19495 99A9 A9 03			lda #$03
 19496 99AB 8D 71 9D			sta PATTERN.OFS+2
 19497 99AE A9 00			lda #$00
 19498 99B0 8D 72 9D			sta PATTERN.OFS+3
 19499
 19500 				; optimize OK (btm.inc), line = 62
 19501
 19502 99B3 A9 1A			lda #$1A
 19503 99B5 8D 6B 9D			sta PATTERN.WIDTH
 19504 99B8 A9 00			lda #$00
 19505 99BA 8D 6C 9D			sta PATTERN.WIDTH+1
 19506
 19507 				; optimize OK (btm.inc), line = 63
 19508
 19509 99BD A9 18			lda #$18
 19510 99BF 8D 6D 9D			sta PATTERN.HEIGHT
 19511 99C2 A9 00			lda #$00
 19512 99C4 8D 6E 9D			sta PATTERN.HEIGHT+1
 19513
 19514 				; optimize OK (btm.inc), line = 65
 19515
 19516 99C7 A9 A3			lda #$A3
 19517 99C9 8D 77 9D			sta PATTERN0.OFS
 19518 99CC 8D 78 9D			sta PATTERN0.OFS+1
 19519 99CF A9 03			lda #$03
 19520 99D1 8D 79 9D			sta PATTERN0.OFS+2
 19521 99D4 A9 00			lda #$00
 19522 99D6 8D 7A 9D			sta PATTERN0.OFS+3
 19523
 19524 				; optimize OK (btm.inc), line = 66
 19525
 19526 99D9 A9 1A			lda #$1A
 19527 99DB 8D 73 9D			sta PATTERN0.WIDTH
 19528 99DE A9 00			lda #$00
 19529 99E0 8D 74 9D			sta PATTERN0.WIDTH+1
 19530
 19531 				; optimize OK (btm.inc), line = 67
 19532
 19533 99E3 A9 18			lda #$18
 19534 99E5 8D 75 9D			sta PATTERN0.HEIGHT
 19535 99E8 A9 00			lda #$00
 19536 99EA 8D 76 9D			sta PATTERN0.HEIGHT+1
 19537
 19538 				; optimize OK (btm.inc), line = 69
 19539
 19540 99ED A9 13			lda #$13
 19541 99EF 8D 7F 9D			sta PATTERN1.OFS
 19542 99F2 A9 A6			lda #$A6
 19543 99F4 8D 80 9D			sta PATTERN1.OFS+1
 19544 99F7 A9 03			lda #$03
 19545 99F9 8D 81 9D			sta PATTERN1.OFS+2
 19546 99FC A9 00			lda #$00
 19547 99FE 8D 82 9D			sta PATTERN1.OFS+3
 19548
 19549 				; optimize OK (btm.inc), line = 70
 19550
 19551 9A01 A9 0E			lda #$0E
 19552 9A03 8D 7B 9D			sta PATTERN1.WIDTH
 19553 9A06 A9 00			lda #$00
 19554 9A08 8D 7C 9D			sta PATTERN1.WIDTH+1
 19555
 19556 				; optimize OK (btm.inc), line = 71
 19557
 19558 9A0B A9 0E			lda #$0E
 19559 9A0D 8D 7D 9D			sta PATTERN1.HEIGHT
 19560 9A10 A9 00			lda #$00
 19561 9A12 8D 7E 9D			sta PATTERN1.HEIGHT+1
 19562
 19563 				; optimize OK (btm.inc), line = 73
 19564
 19565 9A15 A9 D7			lda #$D7
 19566 9A17 8D 87 9D			sta PATTERN2.OFS
 19567 9A1A A9 A6			lda #$A6
 19568 9A1C 8D 88 9D			sta PATTERN2.OFS+1
 19569 9A1F A9 03			lda #$03
 19570 9A21 8D 89 9D			sta PATTERN2.OFS+2
 19571 9A24 A9 00			lda #$00
 19572 9A26 8D 8A 9D			sta PATTERN2.OFS+3
 19573
 19574 				; optimize OK (btm.inc), line = 74
 19575
 19576 9A29 A9 26			lda #$26
 19577 9A2B 8D 83 9D			sta PATTERN2.WIDTH
 19578 9A2E A9 00			lda #$00
 19579 9A30 8D 84 9D			sta PATTERN2.WIDTH+1
 19580
 19581 				; optimize OK (btm.inc), line = 75
 19582
 19583 9A33 A9 23			lda #$23
 19584 9A35 8D 85 9D			sta PATTERN2.HEIGHT
 19585 9A38 A9 00			lda #$00
 19586 9A3A 8D 86 9D			sta PATTERN2.HEIGHT+1
 19587
 19588 				; optimize OK (btm.inc), line = 77
 19589
 19590 9A3D A9 09			lda #$09
 19591 9A3F 8D 8F 9D			sta PATTERN3.OFS
 19592 9A42 A9 AC			lda #$AC
 19593 9A44 8D 90 9D			sta PATTERN3.OFS+1
 19594 9A47 A9 03			lda #$03
 19595 9A49 8D 91 9D			sta PATTERN3.OFS+2
 19596 9A4C A9 00			lda #$00
 19597 9A4E 8D 92 9D			sta PATTERN3.OFS+3
 19598
 19599 				; optimize OK (btm.inc), line = 78
 19600
 19601 9A51 A9 1C			lda #$1C
 19602 9A53 8D 8B 9D			sta PATTERN3.WIDTH
 19603 9A56 A9 00			lda #$00
 19604 9A58 8D 8C 9D			sta PATTERN3.WIDTH+1
 19605
 19606 				; optimize OK (btm.inc), line = 79
 19607
 19608 9A5B A9 1D			lda #$1D
 19609 9A5D 8D 8D 9D			sta PATTERN3.HEIGHT
 19610 9A60 A9 00			lda #$00
 19611 9A62 8D 8E 9D			sta PATTERN3.HEIGHT+1
 19612
 19613 				; optimize OK (btm.inc), line = 81
 19614
 19615 9A65 A9 35			lda #$35
 19616 9A67 8D 97 9D			sta PATTERN4.OFS
 19617 9A6A A9 AF			lda #$AF
 19618 9A6C 8D 98 9D			sta PATTERN4.OFS+1
 19619 9A6F A9 03			lda #$03
 19620 9A71 8D 99 9D			sta PATTERN4.OFS+2
 19621 9A74 A9 00			lda #$00
 19622 9A76 8D 9A 9D			sta PATTERN4.OFS+3
 19623
 19624 				; optimize OK (btm.inc), line = 82
 19625
 19626 9A79 A9 1E			lda #$1E
 19627 9A7B 8D 93 9D			sta PATTERN4.WIDTH
 19628 9A7E A9 00			lda #$00
 19629 9A80 8D 94 9D			sta PATTERN4.WIDTH+1
 19630
 19631 				; optimize OK (btm.inc), line = 83
 19632
 19633 9A83 A9 1E			lda #$1E
 19634 9A85 8D 95 9D			sta PATTERN4.HEIGHT
 19635 9A88 A9 00			lda #$00
 19636 9A8A 8D 96 9D			sta PATTERN4.HEIGHT+1
 19637
 19638 				; optimize OK (arkanoid_vbxe.pas), line = 140
 19639
 19640 9A8D A9 50			lda #$50
 19641 9A8F 8D B1 9D			sta SCORE.HISCORE
 19642 9A92 A9 C3			lda #$C3
 19643 9A94 8D B2 9D			sta SCORE.HISCORE+1
 19644 9A97 A9 00			lda #$00
 19645 9A99 8D B3 9D			sta SCORE.HISCORE+2
 19646 9A9C 8D B4 9D			sta SCORE.HISCORE+3
 19647
 19648 				; optimize OK (arkanoid_vbxe.pas), line = 143
 19649
 19650 9A9F A9 01			lda #$01
 19651 9AA1 8D DC 9D			sta SOUND_ON
 19652
 19653 				; optimize OK (arkanoid_vbxe.pas), line = 144
 19654
 19655 9AA4 A9 03			lda #$03
 19656 9AA6 8D C0 9D			sta LV
 19657 9AA9 A9 00			lda #$00
 19658 9AAB 8D C1 9D			sta LV+1
 19659
 19660 				; --- RepeatUntilProlog
 19661 9AAE			l_389B
 19662
 19663 				; optimize FAIL ('MOUSERESET', arkanoid_vbxe.pas), line = 148
 19664
 19665 9AAE 20 9B 24			jsr MOUSERESET
 19666
 19667 				; optimize OK (arkanoid_vbxe.pas), line = 152
 19668
 19669 9AB1 A9 01			lda #$01
 19670 9AB3 8D 7C AD			sta START_GAME.PLAYERS
 19671 9AB6 A9 00			lda #$00
 19672 9AB8 8D 7D AD			sta START_GAME.PLAYERS+1
 19673 9ABB 20 6F 94			jsr START_GAME
 19674
 19675 				; optimize OK (arkanoid_vbxe.pas), line = 154
 19676
 19677 9ABE AD B5 9D			lda SCORE.PL_NUMB
 19678 9AC1 C9 01			cmp #$01
 19679 9AC3 B0 E9			jcs l_389B
 19680
 19681 9AC5			@exit
 19682 					.ifdef @new
 19683 					lda <@VarData
 19684 					sta :ztmp
 19685 					lda >@VarData
 19686 					ldy #@VarDataSize-1
 19687 					jmp @FreeMem
 19688 					els
 19689 9AC5 60				rts						; ret
 19690 					eif
 19691 				.endl
 19692 9AC6			l_0010
 19693
 19694 				; optimize FAIL ('INIT_GAME', arkanoid_vbxe.pas), line = 162
 19695
 19696 9AC6 20 45 97			jsr INIT_GAME
 19697
 19698 				; ------------------------------------------------------------
 19699
 19700 = 9CC5			adr.MOUS	= DATAORIGIN+$00A8	; [5] RECORD
 19701 9AC9			.var MOUS	= adr.MOUS .word
 19702 = 9CC5			MOUS.X	= DATAORIGIN+$00A8
 19703 = 9CC7			MOUS.Y	= DATAORIGIN+$00AA
 19704 = 9CC9			MOUS.FIRE	= DATAORIGIN+$00AC
 19705 = 5000			VBXE_OVRADR	= $5000
 19706 = 014A00			VBXE_DATA	= $14A00
 19707 = 0000			VRAM	= $00
 19708 = 0001			ERR1	= $01
 19709 = 0002			ERR2	= $02
 19710 = 0003			ERR3	= $03
 19711 = 0004			ERR4	= $04
 19712 = 000A			SCRMIN	= $0A
 19713 = 00D8			SCRMAX	= $D8
 19714 = 000C			SCRTOP	= $0C
 19715 = 00C8			SCRBOT	= $C8
 19716 = 0022			VAUS_W	= $22
 19717 = 0004			VAUS_H	= $04
 19718 = 00B8			VAUS_LINE	= $B8
 19719 = 00FF			EMP	= $FF
 19720 = 0005			BALLDIM	= $05
 19721 = 0003			BALLSPOT	= $03
 19722 = 001E			BALLDEV	= $1E
 19723 = 000A			SPEEDFLASH	= $0A
 19724 = 104C			adr.FLASH	= CODEORIGIN+$004C
 19725 9AC9			.var FLASH	= adr.FLASH .word
 19726 = 1057			adr.SCORE_WALL	= CODEORIGIN+$0057
 19727 9AC9			.var SCORE_WALL	= adr.SCORE_WALL .word
 19728 = 106D			adr.EMERG_DEV	= CODEORIGIN+$006D
 19729 9AC9			.var EMERG_DEV	= adr.EMERG_DEV .word
 19730 = 1076			adr.COLORBLOCK	= CODEORIGIN+$0076
 19731 9AC9			.var COLORBLOCK	= adr.COLORBLOCK .word
 19732 = 0001			GRAYDOWN	= $01
 19733 = 0001			STARTWALL	= $01
 19734 = 01F4			BALLSPEED	= $01F4
 19735 = 07D0			MAXSPEED	= $07D0
 19736 = 0064			MAXBRWHIT	= $64
 19737 = 0004			PATNUMBER	= $04
 19738 = 1080			adr.POS_DIGIT	= CODEORIGIN+$0080
 19739 9AC9			.var POS_DIGIT	= adr.POS_DIGIT .word
 19740 = 1084			adr.DIGITS	= CODEORIGIN+$0084
 19741 9AC9			.var DIGITS	= adr.DIGITS .word
 19742 = 108F			adr.LEVEL	= CODEORIGIN+$008F
 19743 9AC9			.var LEVEL	= adr.LEVEL .word
 19744 = 0258			SBDIR	= $0258
 19745 = 0003			DEFLEVEL	= $03
 19746 = 012C			LETTER_PROB	= $012C
 19747 = 03E8			LETTER_DROP	= $03E8
 19748 = 0008			LETTER_NUMB	= $08
 19749 = 0008			LETTER_FRM	= $08
 19750 = 0005			LETTER_SBF	= $05
 19751 = 109B			adr.LETTER_DIS	= CODEORIGIN+$009B
 19752 9AC9			.var LETTER_DIS	= adr.LETTER_DIS .word
 19753 = 00B0			FLUXLEVEL	= $B0
 19754 = 9CDE			adr.BALLDATA	= DATAORIGIN+$00C1	; [8] RECORD
 19755 9AC9			.var BALLDATA	= adr.BALLDATA .word
 19756 = 9CDE			BALLDATA.WIDTH	= DATAORIGIN+$00C1
 19757 = 9CE0			BALLDATA.HEIGHT	= DATAORIGIN+$00C3
 19758 = 9CE2			BALLDATA.OFS	= DATAORIGIN+$00C5
 19759 = 9CE6			adr.PLAYSCREEN	= DATAORIGIN+$00C9	; [8] RECORD
 19760 9AC9			.var PLAYSCREEN	= adr.PLAYSCREEN .word
 19761 = 9CE6			PLAYSCREEN.WIDTH	= DATAORIGIN+$00C9
 19762 = 9CE8			PLAYSCREEN.HEIGHT	= DATAORIGIN+$00CB
 19763 = 9CEA			PLAYSCREEN.OFS	= DATAORIGIN+$00CD
 19764 = 9CEE			adr.PLAYVAUS	= DATAORIGIN+$00D1	; [8] RECORD
 19765 9AC9			.var PLAYVAUS	= adr.PLAYVAUS .word
 19766 = 9CEE			PLAYVAUS.WIDTH	= DATAORIGIN+$00D1
 19767 = 9CF0			PLAYVAUS.HEIGHT	= DATAORIGIN+$00D3
 19768 = 9CF2			PLAYVAUS.OFS	= DATAORIGIN+$00D5
 19769 = 9CF6			adr.NORMAL	= DATAORIGIN+$00D9	; [8] RECORD
 19770 9AC9			.var NORMAL	= adr.NORMAL .word
 19771 = 9CF6			NORMAL.WIDTH	= DATAORIGIN+$00D9
 19772 = 9CF8			NORMAL.HEIGHT	= DATAORIGIN+$00DB
 19773 = 9CFA			NORMAL.OFS	= DATAORIGIN+$00DD
 19774 = 9CFE			adr.ENLARGED	= DATAORIGIN+$00E1	; [8] RECORD
 19775 9AC9			.var ENLARGED	= adr.ENLARGED .word
 19776 = 9CFE			ENLARGED.WIDTH	= DATAORIGIN+$00E1
 19777 = 9D00			ENLARGED.HEIGHT	= DATAORIGIN+$00E3
 19778 = 9D02			ENLARGED.OFS	= DATAORIGIN+$00E5
 19779 = 9D06			adr.LASERS	= DATAORIGIN+$00E9	; [8] RECORD
 19780 9AC9			.var LASERS	= adr.LASERS .word
 19781 = 9D06			LASERS.WIDTH	= DATAORIGIN+$00E9
 19782 = 9D08			LASERS.HEIGHT	= DATAORIGIN+$00EB
 19783 = 9D0A			LASERS.OFS	= DATAORIGIN+$00ED
 19784 = 9D0E			adr.EXPLOSION	= DATAORIGIN+$00F1	; [8] RECORD
 19785 9AC9			.var EXPLOSION	= adr.EXPLOSION .word
 19786 = 9D0E			EXPLOSION.WIDTH	= DATAORIGIN+$00F1
 19787 = 9D10			EXPLOSION.HEIGHT	= DATAORIGIN+$00F3
 19788 = 9D12			EXPLOSION.OFS	= DATAORIGIN+$00F5
 19789 = 9D16			adr.NEWVAUS	= DATAORIGIN+$00F9	; [8] RECORD
 19790 9AC9			.var NEWVAUS	= adr.NEWVAUS .word
 19791 = 9D16			NEWVAUS.WIDTH	= DATAORIGIN+$00F9
 19792 = 9D18			NEWVAUS.HEIGHT	= DATAORIGIN+$00FB
 19793 = 9D1A			NEWVAUS.OFS	= DATAORIGIN+$00FD
 19794 = 9D1E			adr.PRESENTS	= DATAORIGIN+$0101	; [8] RECORD
 19795 9AC9			.var PRESENTS	= adr.PRESENTS .word
 19796 = 9D1E			PRESENTS.WIDTH	= DATAORIGIN+$0101
 19797 = 9D20			PRESENTS.HEIGHT	= DATAORIGIN+$0103
 19798 = 9D22			PRESENTS.OFS	= DATAORIGIN+$0105
 19799 = 9D26			adr.SOUNDFX	= DATAORIGIN+$0109	; [8] RECORD
 19800 9AC9			.var SOUNDFX	= adr.SOUNDFX .word
 19801 = 9D26			SOUNDFX.WIDTH	= DATAORIGIN+$0109
 19802 = 9D28			SOUNDFX.HEIGHT	= DATAORIGIN+$010B
 19803 = 9D2A			SOUNDFX.OFS	= DATAORIGIN+$010D
 19804 = 9D2E			adr.SHINEWALL	= DATAORIGIN+$0111	; [8] RECORD
 19805 9AC9			.var SHINEWALL	= adr.SHINEWALL .word
 19806 = 9D2E			SHINEWALL.WIDTH	= DATAORIGIN+$0111
 19807 = 9D30			SHINEWALL.HEIGHT	= DATAORIGIN+$0113
 19808 = 9D32			SHINEWALL.OFS	= DATAORIGIN+$0115
 19809 = 9D36			adr.MINIVAUS	= DATAORIGIN+$0119	; [8] RECORD
 19810 9AC9			.var MINIVAUS	= adr.MINIVAUS .word
 19811 = 9D36			MINIVAUS.WIDTH	= DATAORIGIN+$0119
 19812 = 9D38			MINIVAUS.HEIGHT	= DATAORIGIN+$011B
 19813 = 9D3A			MINIVAUS.OFS	= DATAORIGIN+$011D
 19814 = 9D3E			adr.LEVELSEL	= DATAORIGIN+$0121	; [8] RECORD
 19815 9AC9			.var LEVELSEL	= adr.LEVELSEL .word
 19816 = 9D3E			LEVELSEL.WIDTH	= DATAORIGIN+$0121
 19817 = 9D40			LEVELSEL.HEIGHT	= DATAORIGIN+$0123
 19818 = 9D42			LEVELSEL.OFS	= DATAORIGIN+$0125
 19819 = 9D46			adr.LETTERS	= DATAORIGIN+$0129	; [8] RECORD
 19820 9AC9			.var LETTERS	= adr.LETTERS .word
 19821 = 9D46			LETTERS.WIDTH	= DATAORIGIN+$0129
 19822 = 9D48			LETTERS.HEIGHT	= DATAORIGIN+$012B
 19823 = 9D4A			LETTERS.OFS	= DATAORIGIN+$012D
 19824 = 9D4E			adr.SHOOTS	= DATAORIGIN+$0131	; [8] RECORD
 19825 9AC9			.var SHOOTS	= adr.SHOOTS .word
 19826 = 9D4E			SHOOTS.WIDTH	= DATAORIGIN+$0131
 19827 = 9D50			SHOOTS.HEIGHT	= DATAORIGIN+$0133
 19828 = 9D52			SHOOTS.OFS	= DATAORIGIN+$0135
 19829 = 9D56			adr.FLUX	= DATAORIGIN+$0139	; [8] RECORD
 19830 9AC9			.var FLUX	= adr.FLUX .word
 19831 = 9D56			FLUX.WIDTH	= DATAORIGIN+$0139
 19832 = 9D58			FLUX.HEIGHT	= DATAORIGIN+$013B
 19833 = 9D5A			FLUX.OFS	= DATAORIGIN+$013D
 19834 = 9D5E			adr.VAUS	= DATAORIGIN+$0141	; [13] RECORD
 19835 9AC9			.var VAUS	= adr.VAUS .word
 19836 = 9D5E			VAUS.X	= DATAORIGIN+$0141
 19837 = 9D5F			VAUS.Y	= DATAORIGIN+$0142
 19838 = 9D60			VAUS.OLDX	= DATAORIGIN+$0143
 19839 = 9D62			VAUS.OLDY	= DATAORIGIN+$0145
 19840 = 9D64			VAUS.OLDLEN	= DATAORIGIN+$0147
 19841 = 9D66			VAUS.WIDTH	= DATAORIGIN+$0149
 19842 = 9D67			VAUS.HEIGHT	= DATAORIGIN+$014A
 19843 = 9D68			VAUS.FLASH	= DATAORIGIN+$014B
 19844 = 9D69			VAUS.IFLASH	= DATAORIGIN+$014C
 19845 = 9D6A			VAUS.LETTER	= DATAORIGIN+$014D
 19846 = 9D6B			adr.PATTERN	= DATAORIGIN+$014E	; [8] RECORD
 19847 9AC9			.var PATTERN	= adr.PATTERN .word
 19848 = 9D6B			PATTERN.WIDTH	= DATAORIGIN+$014E
 19849 = 9D6D			PATTERN.HEIGHT	= DATAORIGIN+$0150
 19850 = 9D6F			PATTERN.OFS	= DATAORIGIN+$0152
 19851 = 9D73			adr.PATTERN0	= DATAORIGIN+$0156	; [8] RECORD
 19852 9AC9			.var PATTERN0	= adr.PATTERN0 .word
 19853 = 9D73			PATTERN0.WIDTH	= DATAORIGIN+$0156
 19854 = 9D75			PATTERN0.HEIGHT	= DATAORIGIN+$0158
 19855 = 9D77			PATTERN0.OFS	= DATAORIGIN+$015A
 19856 = 9D7B			adr.PATTERN1	= DATAORIGIN+$015E	; [8] RECORD
 19857 9AC9			.var PATTERN1	= adr.PATTERN1 .word
 19858 = 9D7B			PATTERN1.WIDTH	= DATAORIGIN+$015E
 19859 = 9D7D			PATTERN1.HEIGHT	= DATAORIGIN+$0160
 19860 = 9D7F			PATTERN1.OFS	= DATAORIGIN+$0162
 19861 = 9D83			adr.PATTERN2	= DATAORIGIN+$0166	; [8] RECORD
 19862 9AC9			.var PATTERN2	= adr.PATTERN2 .word
 19863 = 9D83			PATTERN2.WIDTH	= DATAORIGIN+$0166
 19864 = 9D85			PATTERN2.HEIGHT	= DATAORIGIN+$0168
 19865 = 9D87			PATTERN2.OFS	= DATAORIGIN+$016A
 19866 = 9D8B			adr.PATTERN3	= DATAORIGIN+$016E	; [8] RECORD
 19867 9AC9			.var PATTERN3	= adr.PATTERN3 .word
 19868 = 9D8B			PATTERN3.WIDTH	= DATAORIGIN+$016E
 19869 = 9D8D			PATTERN3.HEIGHT	= DATAORIGIN+$0170
 19870 = 9D8F			PATTERN3.OFS	= DATAORIGIN+$0172
 19871 = 9D93			adr.PATTERN4	= DATAORIGIN+$0176	; [8] RECORD
 19872 9AC9			.var PATTERN4	= adr.PATTERN4 .word
 19873 = 9D93			PATTERN4.WIDTH	= DATAORIGIN+$0176
 19874 = 9D95			PATTERN4.HEIGHT	= DATAORIGIN+$0178
 19875 = 9D97			PATTERN4.OFS	= DATAORIGIN+$017A
 19876 = 9D9B			STATUS	= DATAORIGIN+$017E
 19877 = 9D9C			SUCCESS	= DATAORIGIN+$017F
 19878 = 9D9D			REMAIN_BLK	= DATAORIGIN+$0180
 19879 = 9D9E			TOTALWALL	= DATAORIGIN+$0181
 19880 = 9D9F			adr.SCORE	= DATAORIGIN+$0182	; [27] RECORD
 19881 9AC9			.var SCORE	= adr.SCORE .word
 19882 = 9D9F			adr.SCORE.PLAYER	= [DATAORIGIN+$0182] .array [3] .dword
 19883 9AC9			.var SCORE.PLAYER	= adr.SCORE.PLAYER .word
 19884 = 9DAB			adr.SCORE.WALL_N	= [DATAORIGIN+$018E] .array [3]
 19885 9AC9			.var SCORE.WALL_N	= adr.SCORE.WALL_N .word
 19886 = 9DAE			adr.SCORE.LIVES	= [DATAORIGIN+$0191] .array [3]
 19887 9AC9			.var SCORE.LIVES	= adr.SCORE.LIVES .word
 19888 = 9DB1			SCORE.HISCORE	= DATAORIGIN+$0194
 19889 = 9DB5			SCORE.PL_NUMB	= DATAORIGIN+$0198
 19890 = 9DB6			adr.SCORE.ROUNDSEL	= [DATAORIGIN+$0199] .array [3]
 19891 9AC9			.var SCORE.ROUNDSEL	= adr.SCORE.ROUNDSEL .word
 19892 = 9DB9			SCORE.ABORTPLAY	= DATAORIGIN+$019C
 19893 = 9DBA			CUR_PLAYER	= DATAORIGIN+$019D
 19894 = 9DBB			adr.SHINEREC	= DATAORIGIN+$019E	; [5] RECORD
 19895 9AC9			.var SHINEREC	= adr.SHINEREC .word
 19896 = 9DBB			SHINEREC.XB	= DATAORIGIN+$019E
 19897 = 9DBC			SHINEREC.YB	= DATAORIGIN+$019F
 19898 = 9DBD			SHINEREC.FRAME	= DATAORIGIN+$01A0
 19899 = 9DBE			SHINEREC.BLOCK	= DATAORIGIN+$01A1
 19900 = 9DBF			SHINEREC.ACTIVE	= DATAORIGIN+$01A2
 19901 = 9DC0			LV	= DATAORIGIN+$01A3
 19902 = 9DC2			TRAINER	= DATAORIGIN+$01A5
 19903 = 9DC3			adr.LETT	= DATAORIGIN+$01A6	; [17] RECORD
 19904 9AC9			.var LETT	= adr.LETT .word
 19905 = 9DC3			LETT.X	= DATAORIGIN+$01A6
 19906 = 9DC4			LETT.Y	= DATAORIGIN+$01A7
 19907 = 9DC5			LETT.TYP	= DATAORIGIN+$01A8
 19908 = 9DC7			LETT.FRAME	= DATAORIGIN+$01AA
 19909 = 9DC8			LETT.SUBFRAME	= DATAORIGIN+$01AB
 19910 = 9DC9			LETT.ACTIVE	= DATAORIGIN+$01AC
 19911 = 9DCA			LETT.INCOMING	= DATAORIGIN+$01AD
 19912 = 9DCC			LETT.NEXTX	= DATAORIGIN+$01AF
 19913 = 9DCE			LETT.NEXTY	= DATAORIGIN+$01B1
 19914 = 9DD0			LETT.NEXTTYPE	= DATAORIGIN+$01B3
 19915 = 9DD2			LETT.LAST	= DATAORIGIN+$01B5
 19916 = 9DD4			adr.FIRE	= DATAORIGIN+$01B7	; [5] RECORD
 19917 9AC9			.var FIRE	= adr.FIRE .word
 19918 = 9DD4			FIRE.X	= DATAORIGIN+$01B7
 19919 = 9DD5			FIRE.Y	= DATAORIGIN+$01B8
 19920 = 9DD6			FIRE.SHOT	= DATAORIGIN+$01B9
 19921 = 9DD7			FIRE.AVL	= DATAORIGIN+$01BA
 19922 = 9DD8			FIRE.NW	= DATAORIGIN+$01BB
 19923 = 9DD9			BALLS_IN_PLAY	= DATAORIGIN+$01BC
 19924 = 9DDA			SCRFLUX	= DATAORIGIN+$01BD
 19925 = 9DDB			SCRFLUXCNT	= DATAORIGIN+$01BE
 19926 = 9DDC			SOUND_ON	= DATAORIGIN+$01BF
 19927 = 9DDD			adr.DEF_PAL	= [DATAORIGIN+$01C0] .array [768]
 19928 9AC9			.var DEF_PAL	= adr.DEF_PAL .word
 19929 = D800			adr.ALL_WALLS	= $D800
 19930 9AC9			.var ALL_WALLS	= adr.ALL_WALLS .word
 19931 = A0DD			adr.WALL_P	= [DATAORIGIN+$04C0] .array [3] [256]
 19932 9AC9			.var WALL_P	= adr.WALL_P .word
 19933 = A3DD			adr.WALL	= [DATAORIGIN+$07C0] .array [256]
 19934 9AC9			.var WALL	= adr.WALL .word
 19935 = A4DD			adr.TMP	= [DATAORIGIN+$08C0] .array [256]
 19936 9AC9			.var TMP	= adr.TMP .word
 19937 = A5DD			adr.ROW	= [DATAORIGIN+$09C0] .array [251] .word
 19938 9AC9			.var ROW	= adr.ROW .word
 19939 = A7D3			adr.MODX	= [DATAORIGIN+$0BB6] .array [320]
 19940 9AC9			.var MODX	= adr.MODX .word
 19941 = A913			adr.MODY	= [DATAORIGIN+$0CF6] .array [200]
 19942 9AC9			.var MODY	= adr.MODY .word
 19943 = A9DB			adr.SCREEN	= [DATAORIGIN+$0DBE] .array [256]
 19944 9AC9			.var SCREEN	= adr.SCREEN .word
 19945 9AC9			@exit
 19946
 19947 9AC9 A2 00		@halt	ldx #$00
 19948 9ACB 9A				txs
 19949
 19950 					.ifdef MAIN.@DEFINES.ROMOFF
 19951 					inc portb
 19952 					.fi
 19953
 19954 9ACC A0 01			ldy #$01
 19955
 19956 9ACE 60				rts
 19957
 19958 				; ------------------------------------------------------------
 19959
 19960 9ACF			.local	@DEFINES
 19961 9ACF			ATARI
 19962 9ACF			CPU_6502
 19963 				.endl
 19964
 19965 9ACF			.local	@RESOURCE
 19966 				.endl
 19967
 19968 = 9ACF C5 9C		MOUS
 19968 = 9AD1 4C 10		FLASH
 19968 = 9AD3 57 10		SCORE_WALL
 19968 = 9AD5 6D 10		EMERG_DEV
 19968 = 9AD7 76 10		COLORBLOCK
 19968 = 9AD9 80 10		POS_DIGIT
 19968 = 9ADB 84 10		DIGITS
 19968 = 9ADD 8F 10		LEVEL
 19968 = 9ADF 9B 10		LETTER_DIS
 19968 = 9AE1 DE 9C		BALLDATA
 19968 = 9AE3 E6 9C		PLAYSCREEN
 19968 = 9AE5 EE 9C		PLAYVAUS
 19968 = 9AE7 F6 9C		NORMAL
 19968 = 9AE9 FE 9C		ENLARGED
 19968 = 9AEB 06 9D		LASERS
 19968 = 9AED 0E 9D		EXPLOSION
 19968 = 9AEF 16 9D		NEWVAUS
 19968 = 9AF1 1E 9D		PRESENTS
 19968 = 9AF3 26 9D		SOUNDFX
 19968 = 9AF5 2E 9D		SHINEWALL
 19968 = 9AF7 36 9D		MINIVAUS
 19968 = 9AF9 3E 9D		LEVELSEL
 19968 = 9AFB 46 9D		LETTERS
 19968 = 9AFD 4E 9D		SHOOTS
 19968 = 9AFF 56 9D		FLUX
 19968 = 9B01 5E 9D		VAUS
 19968 = 9B03 6B 9D		PATTERN
 19968 = 9B05 73 9D		PATTERN0
 19968 = 9B07 7B 9D		PATTERN1
 19968 = 9B09 83 9D		PATTERN2
 19968 = 9B0B 8B 9D		PATTERN3
 19968 = 9B0D 93 9D		PATTERN4
 19968 = 9B0F 9F 9D		SCORE
 19968 = 9B11 9F 9D		SCORE.PLAYER
 19968 = 9B13 AB 9D		SCORE.WALL_N
 19968 = 9B15 AE 9D		SCORE.LIVES
 19968 = 9B17 B6 9D		SCORE.ROUNDSEL
 19968 = 9B19 BB 9D		SHINEREC
 19968 = 9B1B C3 9D		LETT
 19968 = 9B1D D4 9D		FIRE
 19968 = 9B1F DD 9D		DEF_PAL
 19968 = 9B21 00 D8		ALL_WALLS
 19968 = 9B23 DD A0		WALL_P
 19968 = 9B25 DD A3		WALL
 19968 = 9B27 DD A4		TMP
 19968 = 9B29 DD A5		ROW
 19968 = 9B2B D3 A7		MODX
 19968 = 9B2D 13 A9		MODY
 19968 = 9B2F DB A9		SCREEN
 19968 				.endl							; MAIN
 19969
 19970 				; ------------------------------------------------------------
 19971 				; ------------------------------------------------------------
 19972
 19973 				.macro	UNITINITIALIZATION
 19974 				
 19975 					.ifdef MAIN.SYSTEM.@UnitInit
 19976 					jsr MAIN.SYSTEM.@UnitInit
 19977 					.fi
 19978 				
 19979 					.ifdef MAIN.ATARI.@UnitInit
 19980 					jsr MAIN.ATARI.@UnitInit
 19981 					.fi
 19982 				
 19983 					.ifdef MAIN.CRT.@UnitInit
 19984 					jsr MAIN.CRT.@UnitInit
 19985 					.fi
 19986 				
 19987 					.ifdef MAIN.TYPES.@UnitInit
 19988 					jsr MAIN.TYPES.@UnitInit
 19989 					.fi
 19990 				
 19991 					.ifdef MAIN.GRAPH.@UnitInit
 19992 					jsr MAIN.GRAPH.@UnitInit
 19993 					.fi
 19994 				
 19995 					.ifdef MAIN.VBXE.@UnitInit
 19996 					jsr MAIN.VBXE.@UnitInit
 19997 					.fi
 19998 				.endm
 19999
 20000 				; ------------------------------------------------------------
 20001
 20002 					ift .SIZEOF(MAIN.SYSTEM) > 0
 20003 					.print 'SYSTEM: ',MAIN.SYSTEM,'..',MAIN.SYSTEM+.SIZEOF(MAIN.SYSTEM)-1
 20003 				SYSTEM: $1B6D..$247B
 20004 					eif
 20005
 20006 					ift .SIZEOF(MAIN.ATARI) > 0
 20007 					.print 'ATARI: ',MAIN.ATARI,'..',MAIN.ATARI+.SIZEOF(MAIN.ATARI)-1
 20008 					eif
 20009
 20010 					ift .SIZEOF(MAIN.CRT) > 0
 20011 					.print 'CRT: ',MAIN.CRT,'..',MAIN.CRT+.SIZEOF(MAIN.CRT)-1
 20012 					eif
 20013
 20014 					ift .SIZEOF(MAIN.TYPES) > 0
 20015 					.print 'TYPES: ',MAIN.TYPES,'..',MAIN.TYPES+.SIZEOF(MAIN.TYPES)-1
 20016 					eif
 20017
 20018 					ift .SIZEOF(MAIN.GRAPH) > 0
 20019 					.print 'GRAPH: ',MAIN.GRAPH,'..',MAIN.GRAPH+.SIZEOF(MAIN.GRAPH)-1
 20019 				GRAPH: $247C..$247D
 20020 					eif
 20021
 20022 					ift .SIZEOF(MAIN.VBXE) > 0
 20023 					.print 'VBXE: ',MAIN.VBXE,'..',MAIN.VBXE+.SIZEOF(MAIN.VBXE)-1
 20023 				VBXE: $247E..$2497
 20024 					eif
 20025
 20026 				.nowarn	.print 'CODE: ',CODEORIGIN,'..',MAIN.@RESOURCE-1
 20026 				CODE: $1000..$9ACE
 20027
 20028 					ift .SIZEOF(MAIN.@RESOURCE)>0
 20029 				.nowarn	.print 'RESOURCE: ',MAIN.@RESOURCE,'..',MAIN.@RESOURCE+.SIZEOF(MAIN.@RESOURCE)-1
 20030 					eif
 20031
 20032 9B31			@end
 20033
 20034 				.nowarn	.print 'VARS: ',MAIN.@RESOURCE+.SIZEOF(MAIN.@RESOURCE),'..',@end-1
 20034 				VARS: $9ACF..$9B30
 20035
 20036 				; ------------------------------------------------------------
 20037
 20038 = 9B31				?adr = *
 20039 					ift (?adr < ?old_adr) && (?old_adr - ?adr < $120)
 20040 = 9C1D				?adr = ?old_adr
 20041 					eif
 20042
 20043 					org ?adr
 20044 = 9C1D				?old_adr = *
 20045
 20046 9C1D			DATAORIGIN
 20047 9C1D-9C7E> 2D 0C 00 00 + .by  $2D $0C $00 $00 $00 $28 $00 $18  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 20048 9C35 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 20049 9C4D 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 20050 9C65 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $27 $00 $00
 20051 9C7D 00 17		.by  $00 $17
 20052
 20053 = 0062			VARINITSIZE	= *-DATAORIGIN
 20054 = 1162			VARDATASIZE	= 4450
 20055
 20056 = AD7F			PROGRAMSTACK	= DATAORIGIN+VARDATASIZE
 20057
 20058 					.print 'DATA: ',DATAORIGIN,'..',PROGRAMSTACK
 20058 				DATA: $9C1D..$AD7F
 20059
 20060 					ert DATAORIGIN<@end,'DATA memory overlap'
 20061
 20062 02E0-02E1> 33 1B			run START
 20063
 20064 				; ------------------------------------------------------------
 20065
 20066 				.macro	STATICDATA
 20067 				.by  $0B $47 $61 $6D $65 $20 $50 $61  $75 $73 $65 $64 $00 $00 $00 $00  $00 $00 $AA $00 $00 $AA $00 $00
 20068 				.by  $00 $55 $AA $00 $AA $00 $00 $00  $AA $00 $AA $00 $AA $AA $00 $00  $AA $AA $AA $00 $55 $55 $55 $00
 20069 				.by  $55 $55 $FF $00 $55 $FF $55 $00  $55 $FF $FF $00 $FF $55 $55 $00  $FF $55 $FF $00 $FF $FF $55 $00
 20070 				.by  $FF $FF $FF $00 $FF $D4 $D3 $D2  $D1 $D0 $CF $CE $CD $CC $CB $00  $00 $0A $00 $14 $00 $1E $00 $28
 20071 				.by  $00 $32 $00 $64 $00 $C8 $00 $FA  $00 $F4 $01 $E8 $03 $00 $02 $13  $24 $35 $12 $23 $34 $45 $D4 $D3
 20072 				.by  $D2 $D1 $D0 $CF $CE $CD $CC $CB  $00 $3C $5D $80 $7D $60 $37 $67  $6A $4F $5F $61 $7F $6F $00 $00
 20073 				.by  $00 $E8 $03 $2C $01 $64 $00 $3C  $00 $23 $00 $00 $10 $14 $03 $12  $14 $14 $03
 20074 				.endm
 20075
 20076 					end
