mads 2.1.8
D:\!Delphi\Arkanoid\vbxe\arkanoid_vbxe.a65 -hm -xli:d:\!Delphi\MadPascal\base\ 
Source: arkanoid_vbxe.a65
     1 				; ------------------------------------------------------------
     2 				; Mad Pascal Compiler version 1.7.3 [2025/08/06] for MOS 6502 CPU
     3 				; ------------------------------------------------------------
     4
     5 = 0010			STACKWIDTH	= 16
     6 = 1000			CODEORIGIN	= $1000
     7
     8 = 0001			TRUE		= 1
     9 = 0000			FALSE		= 0
    10 = 009B			EOL		= $9B
    11 = 0400			__BUFFER	= $0400
    12 = 0400			@BUF		= __BUFFER
    13
    14 				; ------------------------------------------------------------
    15
    16 					org $80
    17
    18 				zpage
    19
    20 				.if .def(@vbxe_detect)
    21 = 0080			fxptr	.ds 2						; VBXE pointer
    22 				.fi
    23
    24 				.if .def(@AllocMem)||.def(MAIN.SYSTEM.GETMEM)||.def(MAIN.SYSTEM.FREEMEM)
    25 				psptr	.ds 2						; PROGRAMSTACK Pointer
    26 				.fi
    27
    28 = 0082			bp	.ds 2
    29 = 0084			bp2	.ds 2
    30 = 0083			bp3	= bp+1
    31
    32 = 0086			eax	.ds 4						;8 bytes (aex + edx) -> divREAL
    33 = 008A			edx	.ds 4
    34 = 008E			ecx	.ds 4
    35
    36 				TMP
    37 				ztmp
    38 = 0092			ztmp8	.ds 1
    39 = 0093			ztmp9	.ds 1
    40 = 0094			ztmp10	.ds 1
    41 = 0095			ztmp11	.ds 1
    42
    43 = 0096			STACKORIGIN	.ds STACKWIDTH*4
    44 				zpend
    45
    46 				; ------------------------------------------------------------
    47
    48 = 0086			ax	= eax
    49 = 0086			al	= eax
    50 = 0087			ah	= eax+1
    51
    52 = 008E			cx	= ecx
    53 = 008E			cl	= ecx
    54 = 008F			ch	= ecx+1
    55
    56 = 008A			dx	= edx
    57 = 008A			dl	= edx
    58 = 008B			dh	= edx+1
    59
    60 					org eax
    61
    62 = 0086			FP1MAN0	.ds 1
    63 = 0087			FP1MAN1	.ds 1
    64 = 0088			FP1MAN2	.ds 1
    65 = 0089			FP1MAN3	.ds 1
    66
    67 					org edx
    68
    69 = 008A			FP2MAN0	.ds 1
    70 = 008B			FP2MAN1	.ds 1
    71 = 008C			FP2MAN2	.ds 1
    72 = 008D			FP2MAN3	.ds 1
    73
    74 					org ecx
    75
    76 = 008E			FPMAN0	.ds 1
    77 = 008F			FPMAN1	.ds 1
    78 = 0090			FPMAN2	.ds 1
    79 = 0091			FPMAN3	.ds 1
    80
    81 					org ztmp8
    82
    83 = 0092			FP1SGN	.ds 1
    84 = 0093			FP1EXP	.ds 1
    85
    86 					org ztmp10
    87
    88 = 0094			FP2SGN	.ds 1
    89 = 0095			FP2EXP	.ds 1
    90
    91 					org bp2
    92
    93 = 0084			FPSGN	.ds 1
    94 = 0085			FPEXP	.ds 1
    95
    96 					.ifdef MAIN.@DEFINES.BASICOFF
    97 					org CODEORIGIN
    98 					icl 'atari\basicoff.asm'
    99 					ini CODEORIGIN
   100 					.fi
   101
   102 					.ifdef MAIN.@DEFINES.S_VBXE
   103 					opt h-
   104 					ins 'atari\s_vbxe\sdxld2.obx'
   105 					opt h+
   106 					.fi
   107
   108 				; ------------------------------------------------------------
   109
   110 					org CODEORIGIN
   111
   112 1000				STATICDATA
Macro: STATICDATA [Source: arkanoid_vbxe.a65]
     1 FFFF> 1000-98E1> 0B 47 + .by  $0B $47 $61 $6D $65 $20 $50 $61  $75 $73 $65 $64 $03 $02 $02 $01  $01 $02 $02 $03 $03 $03 $03 $03
     2 1018 03 03 02 03 28 14 + .by  $03 $03 $02 $03 $28 $14 $14 $28  $50 $50 $A0 $A0 $40 $50 $50 $50  $28 $28 $A0 $A0 $18 $18 $0C $18
     3 1030 30 30 60 60 C0 C0 + .by  $30 $30 $60 $60 $C0 $C0 $C0 $C0  $18 $0C $C0 $C0 $00 $00 $00 $00  $00 $00 $AA $00 $00 $AA $00 $00
     4 1048 00 55 AA 00 AA 00 + .by  $00 $55 $AA $00 $AA $00 $00 $00  $AA $00 $AA $00 $AA $AA $00 $00  $AA $AA $AA $00 $55 $55 $55 $00
     5 1060 55 55 FF 00 55 FF + .by  $55 $55 $FF $00 $55 $FF $55 $00  $55 $FF $FF $00 $FF $55 $55 $00  $FF $55 $FF $00 $FF $FF $55 $00
     6 1078 FF FF FF 00 FF D4 + .by  $FF $FF $FF $00 $FF $D4 $D3 $D2  $D1 $D0 $CF $CE $CD $CC $CB $00  $00 $0A $00 $14 $00 $1E $00 $28
     7 1090 00 32 00 64 00 C8 + .by  $00 $32 $00 $64 $00 $C8 $00 $FA  $00 $F4 $01 $E8 $03 $00 $02 $13  $24 $35 $12 $23 $34 $45 $D4 $D3
     8 10A8 D2 D1 D0 CF CE CD + .by  $D2 $D1 $D0 $CF $CE $CD $CC $CB  $00 $3C $5D $80 $7D $60 $37 $67  $6A $4F $5F $61 $7F $6F $00 $00
     9 10C0 00 E8 03 2C 01 64 + .by  $00 $E8 $03 $2C $01 $64 $00 $3C  $00 $23 $00 $00 $10 $14 $03 $12  $14 $14 $03
Source: arkanoid_vbxe.a65
   113
   114 				; ------------------------------------------------------------
   115
   116 10D3			RTLIB
   117 10D3				icl 'rtl6502_a8.asm'
Source: rtl6502_a8.asm
    64 					opt l+
   118
   119 				.print 'ZPAGE: ',zpage,'..',zpend-1
   119 				ZPAGE: $0080..$00D5
   120
   121 				.print 'RTBUF: ',@buf,'..',@buf+255
   121 				RTBUF: $0400..$04FF
   122
   123 				.print 'RTLIB: ',RTLIB,'..',*-1
   123 				RTLIB: $10D3..$1B62
   124
   125 				; ------------------------------------------------------------
   126
   127 1B63			START
   128 1B63 BA				tsx
   129 1B64 8E 7B 98			stx MAIN.@halt+1
   130
   131 					.ifdef MAIN.@DEFINES.ROMOFF
   132 					icl 'atari\romoff.asm'
   133 					.fi
   134
   135 = 0C03			VLEN	= VARDATASIZE-VARINITSIZE
   136 = 9A39			VADR	= DATAORIGIN+VARINITSIZE
   137
   138 					ift (VADR > $BFFF) && .not(.def MAIN.@DEFINES.ROMOFF)
   139 					ert 'Invalid memory address range ',VADR
   140 					eif
   141
   142 					ift (VLEN > 0) && (VLEN <= 256)
   143 					ldx #256-VLEN
   144 					lda #$00
   145 					sta:rne VADR+VLEN-256,x+
   146 					eli VLEN>256
   147 1B67				m@init
Macro: M@INIT [Source: macros.asm]
     2 1B67 A0 39			ldy <VADR
     3 1B69 A2 9A			ldx >VADR
     5 1B6B A9 00			lda #$00
     6 1B6D F0 07			beq skp_
     8 1B6F 99 00 10		clr	sta adr: $1000,y
    10 1B72 C8				iny
    11 1B73 D0 04			bne skp
    12 1B75 E8				inx
    13 1B76 8E 71 1B		skp_	stx adr+1
    15 1B79 E0 A6		skp	cpx >VADR+VLEN
    16 1B7B D0 F2			bne clr
    17 1B7D C0 3C			cpy <VADR+VLEN
    18 1B7F D0 EE			bne clr
   148 					eif
   149
   150 				.ifdef psptr
   151 					mwa #PROGRAMSTACK psptr
   152 				.fi
   153
   154 1B81 A2 00			ldx #$00					; X = 0
   155 1B83 86 82			stx bp						; BP = 0
   156
   157 1B85 8E 08 D2			stx audctl					; reset POKEY
   158 1B88 8E 18 D2			stx audctl+$10
   159 1B8B A9 03			lda #3
   160 1B8D 8D 0F D2			sta skctl
   161 1B90 8D 1F D2			sta skctl+$10
   162
   163 1B93 CA				dex						; X = 255
   164
   165 1B94				UNITINITIALIZATION
Macro: UNITINITIALIZATION [Source: arkanoid_vbxe.a65]
     3 1B94 20 A5 24			jsr MAIN.SYSTEM.@UnitInit
    23 1B97 20 AE 24			jsr MAIN.VBXE.@UnitInit
   166
   167 1B9A			.local	MAIN						; PROCEDURE
   168
   169 1B9A 4C 77 98			jmp l_0010
   170
   171 				; ------------------------------------------------------------
   172
   173 1B9D			.local	SYSTEM						; UNIT
   174
   175 1B9D			.local	ABS						; FUNCTION | ASSEMBLER | OVERLOAD | REGISTER
   176 1B9D			.local	@010184000
   177
   178 				; -------------------  ASM Block 00000008  -------------------
   179
   180 1B9D A5 8B			lda :edx+1
   181 1B9F 10 0D			bpl @+
   182
   183 1BA1 A9 00			lda #$00
   184 1BA3 38 E5 8A			sub :edx
   185 1BA6 85 8A			sta :edx
   186 1BA8 A9 00			lda #$00
   187 1BAA E5 8B			sbc :edx+1
   188 1BAC 85 8B			sta :edx+1
   189 				@
   190 1BAE 85 93			sta Result+1
   191
   192 1BB0 A5 8A 85 92			mva :edx Result
   193
   194 1BB4			@exit
   195
   196 				; ------------------------------------------------------------
   197
   198 = 008A			X	= :EDX
   199 = 0092			RESULT	= :STACKORIGIN-4
   200
   201 1BB4 60				rts						; ret
   202 				.endl
   203 				.endl							; overload
   204
   205 1BB5			.local	ABS						; FUNCTION | ASSEMBLER | OVERLOAD | REGISTER
   206 1BB5			.local	@010185000
   207
   208 				; -------------------  ASM Block 00000009  -------------------
   209
   210 1BB5 A5 8D			lda :edx+3
   211 1BB7 10 03			spl
   212 1BB9 20 51 11			jsr @negEDX
   213
   214 1BBC 85 95			sta Result+3
   215
   216 1BBE A5 8A 85 92			mva :edx Result
   217 1BC2 A5 8B 85 93			mva :edx+1 Result+1
   218 1BC6 A5 8C 85 94			mva :edx+2 Result+2
   219
   220 1BCA			@exit
   221
   222 				; ------------------------------------------------------------
   223
   224 = 008A			X	= :EDX
   225 = 0092			RESULT	= :STACKORIGIN-4
   226
   227 1BCA 60				rts						; ret
   228 				.endl
   229 				.endl							; overload
   230
   231 1BCB			.local	SQRT						; FUNCTION | OVERLOAD
   232 1BCB			.local	@010185000
   233
   234 				; optimize OK (SYSTEM), line = 801
   235
   236 1BCB AD E5 99			lda X+3
   237 1BCE 30 0B			bmi @+
   238 1BD0 0D E4 99			ora X+2
   239 1BD3 0D E3 99			ora X+1
   240 1BD6 0D E2 99			ora X
   241 1BD9 D0 11			jne l_0029
   242 				@
   243 1BDB A9 00			lda #$00
   244 1BDD 8D E6 99			sta RESULT
   245 1BE0 8D E7 99			sta RESULT+1
   246 1BE3 8D E8 99			sta RESULT+2
   247 1BE6 8D E9 99			sta RESULT+3
   248 1BE9 4C 5F 1E			jmp @exit
   249 1BEC			l_0029
   250
   251 				; optimize OK (SYSTEM), line = 803
   252
   253 1BEC A9 EC			lda <C
   254 1BEE 8D EA 99			sta SP
   255 1BF1 A9 99			lda >C
   256 1BF3 8D EB 99			sta SP+1
   257
   258 				; optimize OK (SYSTEM), line = 805
   259
   260 1BF6 AD E2 99			lda X
   261 1BF9 85 8E			sta :FPMAN0
   262 1BFB AD E3 99			lda X+1
   263 1BFE 85 8F			sta :FPMAN1
   264 1C00 AD E4 99			lda X+2
   265 1C03 85 90			sta :FPMAN2
   266 1C05 AD E5 99			lda X+3
   267 1C08 85 91			sta :FPMAN3
   268 1C0A 20 42 19			jsr @I2F
   269 1C0D A5 8E			lda :FPMAN0
   270 1C0F 8D EC 99			sta C
   271 1C12 A5 8F			lda :FPMAN1
   272 1C14 8D ED 99			sta C+1
   273 1C17 A5 90			lda :FPMAN2
   274 1C19 8D EE 99			sta C+2
   275 1C1C A5 91			lda :FPMAN3
   276 1C1E 8D EF 99			sta C+3
   277
   278 				; optimize OK (SYSTEM), line = 807
   279
   280 1C21 C9 3F			cmp #$3F
   281 1C23 D0 13			bne @+
   282 1C25 AD EE 99			lda C+2
   283 1C28 C9 80			cmp #$80
   284 1C2A D0 0C			bne @+
   285 1C2C AD ED 99			lda C+1
   286 1C2F C9 00			cmp #$00
   287 1C31 D0 05			bne @+
   288 1C33 AD EC 99			lda C
   289 1C36 C9 01			cmp #$01
   290 				@
   291 1C38 90 3A			jcc l_0048
   292 1C3A AD EC 99			lda C
   293 1C3D 85 9F			sta :STACKORIGIN+9
   294 1C3F AD ED 99			lda C+1
   295 1C42 85 AF			sta :STACKORIGIN+STACKWIDTH+9
   296 1C44 AD EE 99			lda C+2
   297 1C47 38 E9 80			sub #$80
   298 1C4A 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
   299 1C4C AD EF 99			lda C+3
   300 1C4F E9 3F			sbc #$3F
   301 1C51 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
   302 1C53 46 CF			lsr :STACKORIGIN+STACKWIDTH*3+9
   303 1C55 66 BF			ror :STACKORIGIN+STACKWIDTH*2+9
   304 1C57 66 AF			ror :STACKORIGIN+STACKWIDTH+9
   305 1C59 66 9F			ror :STACKORIGIN+9
   306 1C5B A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
   307 1C5D 18 69 80			add #$80
   308 1C60 8D EE 99			sta C+2
   309 1C63 A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
   310 1C65 69 3F			adc #$3F
   311 1C67 8D EF 99			sta C+3
   312 1C6A A5 9F			lda :STACKORIGIN+9
   313 1C6C 8D EC 99			sta C
   314 1C6F A5 AF			lda :STACKORIGIN+STACKWIDTH+9
   315 1C71 8D ED 99			sta C+1
   316 1C74			l_0048
   317
   318 				; optimize OK (SYSTEM), line = 809
   319
   320 1C74 AC EA 99 84 84 AC + 	mwy SP :bp2
   321 1C7E A0 00			ldy #$00
   322 1C80 B1 84			lda (:bp2),y
   323 1C82 8D E6 99			sta RESULT
   324 1C85 C8				iny
   325 1C86 B1 84			lda (:bp2),y
   326 1C88 8D E7 99			sta RESULT+1
   327 1C8B C8				iny
   328 1C8C B1 84			lda (:bp2),y
   329 1C8E 8D E8 99			sta RESULT+2
   330 1C91 C8				iny
   331 1C92 B1 84			lda (:bp2),y
   332 1C94 8D E9 99			sta RESULT+3
   333
   334 				; optimize OK (SYSTEM), line = 811
   335
   336 1C97 AD E2 99			lda X
   337 1C9A 85 8E			sta :FPMAN0
   338 1C9C AD E3 99			lda X+1
   339 1C9F 85 8F			sta :FPMAN1
   340 1CA1 AD E4 99			lda X+2
   341 1CA4 85 90			sta :FPMAN2
   342 1CA6 AD E5 99			lda X+3
   343 1CA9 85 91			sta :FPMAN3
   344 1CAB 20 42 19			jsr @I2F
   345 1CAE A5 8E			lda :FPMAN0
   346 1CB0 85 86			sta :FP1MAN0
   347 1CB2 A5 8F			lda :FPMAN1
   348 1CB4 85 87			sta :FP1MAN1
   349 1CB6 A5 90			lda :FPMAN2
   350 1CB8 85 88			sta :FP1MAN2
   351 1CBA A5 91			lda :FPMAN3
   352 1CBC 85 89			sta :FP1MAN3
   353 1CBE AD E6 99			lda RESULT
   354 1CC1 85 8A			sta :FP2MAN0
   355 1CC3 AD E7 99			lda RESULT+1
   356 1CC6 85 8B			sta :FP2MAN1
   357 1CC8 AD E8 99			lda RESULT+2
   358 1CCB 85 8C			sta :FP2MAN2
   359 1CCD AD E9 99			lda RESULT+3
   360 1CD0 85 8D			sta :FP2MAN3
   361 1CD2 20 55 18			jsr @FDIV
   362 1CD5 A5 8E			lda :FPMAN0
   363 1CD7 85 8A			sta :FP2MAN0
   364 1CD9 A5 8F			lda :FPMAN1
   365 1CDB 85 8B			sta :FP2MAN1
   366 1CDD A5 90			lda :FPMAN2
   367 1CDF 85 8C			sta :FP2MAN2
   368 1CE1 A5 91			lda :FPMAN3
   369 1CE3 85 8D			sta :FP2MAN3
   370 1CE5 AD E6 99			lda RESULT
   371 1CE8 85 86			sta :FP1MAN0
   372 1CEA AD E7 99			lda RESULT+1
   373 1CED 85 87			sta :FP1MAN1
   374 1CEF AD E8 99			lda RESULT+2
   375 1CF2 85 88			sta :FP1MAN2
   376 1CF4 AD E9 99			lda RESULT+3
   377 1CF7 85 89			sta :FP1MAN3
   378 1CF9 20 48 16			jsr @FADD
   379 1CFC A5 8E			lda :FPMAN0
   380 1CFE 85 86			sta :FP1MAN0
   381 1D00 A5 8F			lda :FPMAN1
   382 1D02 85 87			sta :FP1MAN1
   383 1D04 A5 90			lda :FPMAN2
   384 1D06 85 88			sta :FP1MAN2
   385 1D08 A5 91			lda :FPMAN3
   386 1D0A 85 89			sta :FP1MAN3
   387 1D0C A9 00			lda #$00
   388 1D0E 85 8A			sta :FP2MAN0
   389 1D10 85 8B			sta :FP2MAN1
   390 1D12 85 8C			sta :FP2MAN2
   391 1D14 A9 3F			lda #$3F
   392 1D16 85 8D			sta :FP2MAN3
   393 1D18 20 B4 17			jsr @FMUL
   394 1D1B A5 8E			lda :FPMAN0
   395 1D1D 8D E6 99			sta RESULT
   396 1D20 A5 8F			lda :FPMAN1
   397 1D22 8D E7 99			sta RESULT+1
   398 1D25 A5 90			lda :FPMAN2
   399 1D27 8D E8 99			sta RESULT+2
   400 1D2A A5 91			lda :FPMAN3
   401 1D2C 8D E9 99			sta RESULT+3
   402
   403 				; optimize OK (SYSTEM), line = 812
   404
   405 1D2F AD E2 99			lda X
   406 1D32 85 8E			sta :FPMAN0
   407 1D34 AD E3 99			lda X+1
   408 1D37 85 8F			sta :FPMAN1
   409 1D39 AD E4 99			lda X+2
   410 1D3C 85 90			sta :FPMAN2
   411 1D3E AD E5 99			lda X+3
   412 1D41 85 91			sta :FPMAN3
   413 1D43 20 42 19			jsr @I2F
   414 1D46 A5 8E			lda :FPMAN0
   415 1D48 85 86			sta :FP1MAN0
   416 1D4A A5 8F			lda :FPMAN1
   417 1D4C 85 87			sta :FP1MAN1
   418 1D4E A5 90			lda :FPMAN2
   419 1D50 85 88			sta :FP1MAN2
   420 1D52 A5 91			lda :FPMAN3
   421 1D54 85 89			sta :FP1MAN3
   422 1D56 AD E6 99			lda RESULT
   423 1D59 85 8A			sta :FP2MAN0
   424 1D5B AD E7 99			lda RESULT+1
   425 1D5E 85 8B			sta :FP2MAN1
   426 1D60 AD E8 99			lda RESULT+2
   427 1D63 85 8C			sta :FP2MAN2
   428 1D65 AD E9 99			lda RESULT+3
   429 1D68 85 8D			sta :FP2MAN3
   430 1D6A 20 55 18			jsr @FDIV
   431 1D6D A5 8E			lda :FPMAN0
   432 1D6F 85 8A			sta :FP2MAN0
   433 1D71 A5 8F			lda :FPMAN1
   434 1D73 85 8B			sta :FP2MAN1
   435 1D75 A5 90			lda :FPMAN2
   436 1D77 85 8C			sta :FP2MAN2
   437 1D79 A5 91			lda :FPMAN3
   438 1D7B 85 8D			sta :FP2MAN3
   439 1D7D AD E6 99			lda RESULT
   440 1D80 85 86			sta :FP1MAN0
   441 1D82 AD E7 99			lda RESULT+1
   442 1D85 85 87			sta :FP1MAN1
   443 1D87 AD E8 99			lda RESULT+2
   444 1D8A 85 88			sta :FP1MAN2
   445 1D8C AD E9 99			lda RESULT+3
   446 1D8F 85 89			sta :FP1MAN3
   447 1D91 20 48 16			jsr @FADD
   448 1D94 A5 8E			lda :FPMAN0
   449 1D96 85 86			sta :FP1MAN0
   450 1D98 A5 8F			lda :FPMAN1
   451 1D9A 85 87			sta :FP1MAN1
   452 1D9C A5 90			lda :FPMAN2
   453 1D9E 85 88			sta :FP1MAN2
   454 1DA0 A5 91			lda :FPMAN3
   455 1DA2 85 89			sta :FP1MAN3
   456 1DA4 A9 00			lda #$00
   457 1DA6 85 8A			sta :FP2MAN0
   458 1DA8 85 8B			sta :FP2MAN1
   459 1DAA 85 8C			sta :FP2MAN2
   460 1DAC A9 3F			lda #$3F
   461 1DAE 85 8D			sta :FP2MAN3
   462 1DB0 20 B4 17			jsr @FMUL
   463 1DB3 A5 8E			lda :FPMAN0
   464 1DB5 8D E6 99			sta RESULT
   465 1DB8 A5 8F			lda :FPMAN1
   466 1DBA 8D E7 99			sta RESULT+1
   467 1DBD A5 90			lda :FPMAN2
   468 1DBF 8D E8 99			sta RESULT+2
   469 1DC2 A5 91			lda :FPMAN3
   470 1DC4 8D E9 99			sta RESULT+3
   471
   472 				; optimize OK (SYSTEM), line = 813
   473
   474 1DC7 AD E2 99			lda X
   475 1DCA 85 8E			sta :FPMAN0
   476 1DCC AD E3 99			lda X+1
   477 1DCF 85 8F			sta :FPMAN1
   478 1DD1 AD E4 99			lda X+2
   479 1DD4 85 90			sta :FPMAN2
   480 1DD6 AD E5 99			lda X+3
   481 1DD9 85 91			sta :FPMAN3
   482 1DDB 20 42 19			jsr @I2F
   483 1DDE A5 8E			lda :FPMAN0
   484 1DE0 85 86			sta :FP1MAN0
   485 1DE2 A5 8F			lda :FPMAN1
   486 1DE4 85 87			sta :FP1MAN1
   487 1DE6 A5 90			lda :FPMAN2
   488 1DE8 85 88			sta :FP1MAN2
   489 1DEA A5 91			lda :FPMAN3
   490 1DEC 85 89			sta :FP1MAN3
   491 1DEE AD E6 99			lda RESULT
   492 1DF1 85 8A			sta :FP2MAN0
   493 1DF3 AD E7 99			lda RESULT+1
   494 1DF6 85 8B			sta :FP2MAN1
   495 1DF8 AD E8 99			lda RESULT+2
   496 1DFB 85 8C			sta :FP2MAN2
   497 1DFD AD E9 99			lda RESULT+3
   498 1E00 85 8D			sta :FP2MAN3
   499 1E02 20 55 18			jsr @FDIV
   500 1E05 A5 8E			lda :FPMAN0
   501 1E07 85 8A			sta :FP2MAN0
   502 1E09 A5 8F			lda :FPMAN1
   503 1E0B 85 8B			sta :FP2MAN1
   504 1E0D A5 90			lda :FPMAN2
   505 1E0F 85 8C			sta :FP2MAN2
   506 1E11 A5 91			lda :FPMAN3
   507 1E13 85 8D			sta :FP2MAN3
   508 1E15 AD E6 99			lda RESULT
   509 1E18 85 86			sta :FP1MAN0
   510 1E1A AD E7 99			lda RESULT+1
   511 1E1D 85 87			sta :FP1MAN1
   512 1E1F AD E8 99			lda RESULT+2
   513 1E22 85 88			sta :FP1MAN2
   514 1E24 AD E9 99			lda RESULT+3
   515 1E27 85 89			sta :FP1MAN3
   516 1E29 20 48 16			jsr @FADD
   517 1E2C A5 8E			lda :FPMAN0
   518 1E2E 85 86			sta :FP1MAN0
   519 1E30 A5 8F			lda :FPMAN1
   520 1E32 85 87			sta :FP1MAN1
   521 1E34 A5 90			lda :FPMAN2
   522 1E36 85 88			sta :FP1MAN2
   523 1E38 A5 91			lda :FPMAN3
   524 1E3A 85 89			sta :FP1MAN3
   525 1E3C A9 00			lda #$00
   526 1E3E 85 8A			sta :FP2MAN0
   527 1E40 85 8B			sta :FP2MAN1
   528 1E42 85 8C			sta :FP2MAN2
   529 1E44 A9 3F			lda #$3F
   530 1E46 85 8D			sta :FP2MAN3
   531 1E48 20 B4 17			jsr @FMUL
   532 1E4B A5 8E			lda :FPMAN0
   533 1E4D 8D E6 99			sta RESULT
   534 1E50 A5 8F			lda :FPMAN1
   535 1E52 8D E7 99			sta RESULT+1
   536 1E55 A5 90			lda :FPMAN2
   537 1E57 8D E8 99			sta RESULT+2
   538 1E5A A5 91			lda :FPMAN3
   539 1E5C 8D E9 99			sta RESULT+3
   540 1E5F			@exit
   541
   542 				; ------------------------------------------------------------
   543
   544 = 99E2			X	= DATAORIGIN+$000B
   545 = 99E6			RESULT	= DATAORIGIN+$000F
   546 = 99EA			SP	= DATAORIGIN+$0013
   547 = 99EC			C	= DATAORIGIN+$0015
   548
   549 = 99E2			@VarData	= X
   550 = 000A			@VarDataSize	= 10
   551
   552 1E5F 60				rts						; ret
   553 				.endl
   554 				.endl							; overload
   555
   556 1E60			.local	ARCTAN						; FUNCTION | OVERLOAD
   557 1E60			.local	@01018E000
   558
   559 				; optimize OK (SYSTEM), line = 862
   560
   561 1E60 A9 00			lda #$00
   562 1E62 8D 00 9A			sta SIGN
   563
   564 				; optimize OK (SYSTEM), line = 863
   565
   566 1E65 AD F0 99			lda VALUE
   567 1E68 8D F8 99			sta X
   568 1E6B AD F1 99			lda VALUE+1
   569 1E6E 8D F9 99			sta X+1
   570 1E71 AD F2 99			lda VALUE+2
   571 1E74 8D FA 99			sta X+2
   572 1E77 AD F3 99			lda VALUE+3
   573 1E7A 8D FB 99			sta X+3
   574
   575 				; optimize OK (SYSTEM), line = 864
   576
   577 1E7D A9 00			lda #$00
   578 1E7F 8D FC 99			sta Y
   579 1E82 8D FD 99			sta Y+1
   580 1E85 8D FE 99			sta Y+2
   581 1E88 8D FF 99			sta Y+3
   582
   583 				; optimize OK (SYSTEM), line = 866
   584
   585 1E8B AD F3 99			lda VALUE+3
   586 1E8E 0D F2 99			ora VALUE+2
   587 1E91 0D F1 99			ora VALUE+1
   588 1E94 0D F0 99			ora VALUE
   589 1E97 D0 11			jne l_00AF
   590
   591 				; optimize OK (SYSTEM), line = 867
   592
   593 1E99 A9 00			lda #$00
   594 1E9B 8D F4 99			sta RESULT
   595 1E9E 8D F5 99			sta RESULT+1
   596 1EA1 8D F6 99			sta RESULT+2
   597 1EA4 8D F7 99			sta RESULT+3
   598 1EA7 4C 71 21			jmp @exit
   599 1EAA			l_00AF
   600
   601 				; optimize OK (SYSTEM), line = 870
   602
   603 1EAA AD FB 99			lda X+3
   604 1EAD 10 26			jpl l_00CD
   605
   606 				; optimize OK (SYSTEM), line = 871
   607
   608 1EAF A9 01			lda #$01
   609 1EB1 8D 00 9A			sta SIGN
   610
   611 				; optimize OK (SYSTEM), line = 872
   612
   613 1EB4 A9 00			lda #$00
   614 1EB6 38 ED F8 99			sub X
   615 1EBA 8D F8 99			sta X
   616 1EBD A9 00			lda #$00
   617 1EBF ED F9 99			sbc X+1
   618 1EC2 8D F9 99			sta X+1
   619 1EC5 A9 00			lda #$00
   620 1EC7 ED FA 99			sbc X+2
   621 1ECA 8D FA 99			sta X+2
   622 1ECD A9 00			lda #$00
   623 1ECF ED FB 99			sbc X+3
   624 1ED2 8D FB 99			sta X+3
   625 1ED5			l_00CD
   626 1ED5			l_00BD
   627
   628 				; optimize OK (SYSTEM), line = 875
   629
   630 1ED5 AD F8 99			lda X
   631 1ED8 85 86			sta @REAL_DIV.A
   632 1EDA AD F9 99			lda X+1
   633 1EDD 38 E9 01			sub #$01
   634 1EE0 85 87			sta @REAL_DIV.A+1
   635 1EE2 AD FA 99			lda X+2
   636 1EE5 E9 00			sbc #$00
   637 1EE7 85 88			sta @REAL_DIV.A+2
   638 1EE9 AD FB 99			lda X+3
   639 1EEC E9 00			sbc #$00
   640 1EEE 85 89			sta @REAL_DIV.A+3
   641 1EF0 AD F8 99			lda X
   642 1EF3 85 8E			sta @REAL_DIV.B
   643 1EF5 AD F9 99			lda X+1
   644 1EF8 18 69 01			add #$01
   645 1EFB 85 8F			sta @REAL_DIV.B+1
   646 1EFD AD FA 99			lda X+2
   647 1F00 69 00			adc #$00
   648 1F02 85 90			sta @REAL_DIV.B+2
   649 1F04 AD FB 99			lda X+3
   650 1F07 69 00			adc #$00
   651 1F09 85 91			sta @REAL_DIV.B+3
   652 1F0B 20 22 15			jsr @REAL_DIV
   653 1F0E A5 86			lda :eax
   654 1F10 8D F8 99			sta X
   655 1F13 A5 87			lda :eax+1
   656 1F15 8D F9 99			sta X+1
   657 1F18 A5 88			lda :eax+2
   658 1F1A 8D FA 99			sta X+2
   659 1F1D A5 89			lda :eax+3
   660 1F1F 8D FB 99			sta X+3
   661
   662 				; optimize OK (SYSTEM), line = 876
   663
   664 1F22 AD F8 99			lda X
   665 1F25 85 8E			sta @REAL_MUL.B
   666 1F27 AD F9 99			lda X+1
   667 1F2A 85 8F			sta @REAL_MUL.B+1
   668 1F2C AD FA 99			lda X+2
   669 1F2F 85 90			sta @REAL_MUL.B+2
   670 1F31 AD FB 99			lda X+3
   671 1F34 85 91			sta @REAL_MUL.B+3
   672 1F36 AD F8 99			lda X
   673 1F39 85 86			sta @REAL_MUL.A
   674 1F3B AD F9 99			lda X+1
   675 1F3E 85 87			sta @REAL_MUL.A+1
   676 1F40 AD FA 99			lda X+2
   677 1F43 85 88			sta @REAL_MUL.A+2
   678 1F45 AD FB 99			lda X+3
   679 1F48 85 89			sta @REAL_MUL.A+3
   680 1F4A 20 63 14			jsr @REAL_MUL
   681 1F4D A5 86			lda :eax
   682 1F4F 8D FC 99			sta Y
   683 1F52 A5 87			lda :eax+1
   684 1F54 8D FD 99			sta Y+1
   685 1F57 A5 88			lda :eax+2
   686 1F59 8D FE 99			sta Y+2
   687 1F5C A5 89			lda :eax+3
   688 1F5E 8D FF 99			sta Y+3
   689
   690 				; optimize OK (SYSTEM), line = 877
   691
   692 1F61 AD FC 99			lda Y
   693 1F64 85 8E			sta @REAL_MUL.B
   694 1F66 AD FD 99			lda Y+1
   695 1F69 85 8F			sta @REAL_MUL.B+1
   696 1F6B AD FE 99			lda Y+2
   697 1F6E 85 90			sta @REAL_MUL.B+2
   698 1F70 AD FF 99			lda Y+3
   699 1F73 85 91			sta @REAL_MUL.B+3
   700 1F75 A9 01			lda #$01
   701 1F77 85 86			sta @REAL_MUL.A
   702 1F79 A9 00			lda #$00
   703 1F7B 85 87			sta @REAL_MUL.A+1
   704 1F7D 85 88			sta @REAL_MUL.A+2
   705 1F7F 85 89			sta @REAL_MUL.A+3
   706 1F81 20 63 14			jsr @REAL_MUL
   707 1F84 A5 86			lda :eax
   708 1F86 38 E9 04			sub #$04
   709 1F89 85 86			sta @REAL_MUL.A
   710 1F8B A5 87			lda :eax+1
   711 1F8D E9 00			sbc #$00
   712 1F8F 85 87			sta @REAL_MUL.A+1
   713 1F91 A5 88			lda :eax+2
   714 1F93 E9 00			sbc #$00
   715 1F95 85 88			sta @REAL_MUL.A+2
   716 1F97 A5 89			lda :eax+3
   717 1F99 E9 00			sbc #$00
   718 1F9B 85 89			sta @REAL_MUL.A+3
   719 1F9D AD FC 99			lda Y
   720 1FA0 85 8E			sta @REAL_MUL.B
   721 1FA2 AD FD 99			lda Y+1
   722 1FA5 85 8F			sta @REAL_MUL.B+1
   723 1FA7 AD FE 99			lda Y+2
   724 1FAA 85 90			sta @REAL_MUL.B+2
   725 1FAC AD FF 99			lda Y+3
   726 1FAF 85 91			sta @REAL_MUL.B+3
   727 1FB1 20 63 14			jsr @REAL_MUL
   728 1FB4 A5 86			lda :eax
   729 1FB6 18 69 0B			add #$0B
   730 1FB9 85 86			sta @REAL_MUL.A
   731 1FBB A5 87			lda :eax+1
   732 1FBD 69 00			adc #$00
   733 1FBF 85 87			sta @REAL_MUL.A+1
   734 1FC1 A5 88			lda :eax+2
   735 1FC3 69 00			adc #$00
   736 1FC5 85 88			sta @REAL_MUL.A+2
   737 1FC7 A5 89			lda :eax+3
   738 1FC9 69 00			adc #$00
   739 1FCB 85 89			sta @REAL_MUL.A+3
   740 1FCD AD FC 99			lda Y
   741 1FD0 85 8E			sta @REAL_MUL.B
   742 1FD2 AD FD 99			lda Y+1
   743 1FD5 85 8F			sta @REAL_MUL.B+1
   744 1FD7 AD FE 99			lda Y+2
   745 1FDA 85 90			sta @REAL_MUL.B+2
   746 1FDC AD FF 99			lda Y+3
   747 1FDF 85 91			sta @REAL_MUL.B+3
   748 1FE1 20 63 14			jsr @REAL_MUL
   749 1FE4 A5 86			lda :eax
   750 1FE6 38 E9 13			sub #$13
   751 1FE9 85 86			sta @REAL_MUL.A
   752 1FEB A5 87			lda :eax+1
   753 1FED E9 00			sbc #$00
   754 1FEF 85 87			sta @REAL_MUL.A+1
   755 1FF1 A5 88			lda :eax+2
   756 1FF3 E9 00			sbc #$00
   757 1FF5 85 88			sta @REAL_MUL.A+2
   758 1FF7 A5 89			lda :eax+3
   759 1FF9 E9 00			sbc #$00
   760 1FFB 85 89			sta @REAL_MUL.A+3
   761 1FFD AD FC 99			lda Y
   762 2000 85 8E			sta @REAL_MUL.B
   763 2002 AD FD 99			lda Y+1
   764 2005 85 8F			sta @REAL_MUL.B+1
   765 2007 AD FE 99			lda Y+2
   766 200A 85 90			sta @REAL_MUL.B+2
   767 200C AD FF 99			lda Y+3
   768 200F 85 91			sta @REAL_MUL.B+3
   769 2011 20 63 14			jsr @REAL_MUL
   770 2014 A5 86			lda :eax
   771 2016 18 69 1B			add #$1B
   772 2019 85 86			sta @REAL_MUL.A
   773 201B A5 87			lda :eax+1
   774 201D 69 00			adc #$00
   775 201F 85 87			sta @REAL_MUL.A+1
   776 2021 A5 88			lda :eax+2
   777 2023 69 00			adc #$00
   778 2025 85 88			sta @REAL_MUL.A+2
   779 2027 A5 89			lda :eax+3
   780 2029 69 00			adc #$00
   781 202B 85 89			sta @REAL_MUL.A+3
   782 202D AD FC 99			lda Y
   783 2030 85 8E			sta @REAL_MUL.B
   784 2032 AD FD 99			lda Y+1
   785 2035 85 8F			sta @REAL_MUL.B+1
   786 2037 AD FE 99			lda Y+2
   787 203A 85 90			sta @REAL_MUL.B+2
   788 203C AD FF 99			lda Y+3
   789 203F 85 91			sta @REAL_MUL.B+3
   790 2041 20 63 14			jsr @REAL_MUL
   791 2044 A5 86			lda :eax
   792 2046 38 E9 24			sub #$24
   793 2049 85 86			sta @REAL_MUL.A
   794 204B A5 87			lda :eax+1
   795 204D E9 00			sbc #$00
   796 204F 85 87			sta @REAL_MUL.A+1
   797 2051 A5 88			lda :eax+2
   798 2053 E9 00			sbc #$00
   799 2055 85 88			sta @REAL_MUL.A+2
   800 2057 A5 89			lda :eax+3
   801 2059 E9 00			sbc #$00
   802 205B 85 89			sta @REAL_MUL.A+3
   803 205D AD FC 99			lda Y
   804 2060 85 8E			sta @REAL_MUL.B
   805 2062 AD FD 99			lda Y+1
   806 2065 85 8F			sta @REAL_MUL.B+1
   807 2067 AD FE 99			lda Y+2
   808 206A 85 90			sta @REAL_MUL.B+2
   809 206C AD FF 99			lda Y+3
   810 206F 85 91			sta @REAL_MUL.B+3
   811 2071 20 63 14			jsr @REAL_MUL
   812 2074 A5 86			lda :eax
   813 2076 18 69 33			add #$33
   814 2079 85 86			sta @REAL_MUL.A
   815 207B A5 87			lda :eax+1
   816 207D 69 00			adc #$00
   817 207F 85 87			sta @REAL_MUL.A+1
   818 2081 A5 88			lda :eax+2
   819 2083 69 00			adc #$00
   820 2085 85 88			sta @REAL_MUL.A+2
   821 2087 A5 89			lda :eax+3
   822 2089 69 00			adc #$00
   823 208B 85 89			sta @REAL_MUL.A+3
   824 208D AD FC 99			lda Y
   825 2090 85 8E			sta @REAL_MUL.B
   826 2092 AD FD 99			lda Y+1
   827 2095 85 8F			sta @REAL_MUL.B+1
   828 2097 AD FE 99			lda Y+2
   829 209A 85 90			sta @REAL_MUL.B+2
   830 209C AD FF 99			lda Y+3
   831 209F 85 91			sta @REAL_MUL.B+3
   832 20A1 20 63 14			jsr @REAL_MUL
   833 20A4 A5 86			lda :eax
   834 20A6 38 E9 55			sub #$55
   835 20A9 85 86			sta @REAL_MUL.A
   836 20AB A5 87			lda :eax+1
   837 20AD E9 00			sbc #$00
   838 20AF 85 87			sta @REAL_MUL.A+1
   839 20B1 A5 88			lda :eax+2
   840 20B3 E9 00			sbc #$00
   841 20B5 85 88			sta @REAL_MUL.A+2
   842 20B7 A5 89			lda :eax+3
   843 20B9 E9 00			sbc #$00
   844 20BB 85 89			sta @REAL_MUL.A+3
   845 20BD AD FC 99			lda Y
   846 20C0 85 8E			sta @REAL_MUL.B
   847 20C2 AD FD 99			lda Y+1
   848 20C5 85 8F			sta @REAL_MUL.B+1
   849 20C7 AD FE 99			lda Y+2
   850 20CA 85 90			sta @REAL_MUL.B+2
   851 20CC AD FF 99			lda Y+3
   852 20CF 85 91			sta @REAL_MUL.B+3
   853 20D1 20 63 14			jsr @REAL_MUL
   854 20D4 A5 87			lda :eax+1
   855 20D6 18 69 01			add #$01
   856 20D9 85 87			sta @REAL_MUL.A+1
   857 20DB A5 88			lda :eax+2
   858 20DD 69 00			adc #$00
   859 20DF 85 88			sta @REAL_MUL.A+2
   860 20E1 A5 89			lda :eax+3
   861 20E3 69 00			adc #$00
   862 20E5 85 89			sta @REAL_MUL.A+3
   863 20E7 AD F8 99			lda X
   864 20EA 85 8E			sta @REAL_MUL.B
   865 20EC AD F9 99			lda X+1
   866 20EF 85 8F			sta @REAL_MUL.B+1
   867 20F1 AD FA 99			lda X+2
   868 20F4 85 90			sta @REAL_MUL.B+2
   869 20F6 AD FB 99			lda X+3
   870 20F9 85 91			sta @REAL_MUL.B+3
   871 20FB 20 63 14			jsr @REAL_MUL
   872 20FE A5 86			lda :eax
   873 2100 8D F8 99			sta X
   874 2103 A5 87			lda :eax+1
   875 2105 8D F9 99			sta X+1
   876 2108 A5 88			lda :eax+2
   877 210A 8D FA 99			sta X+2
   878 210D A5 89			lda :eax+3
   879 210F 8D FB 99			sta X+3
   880
   881 				; optimize OK (SYSTEM), line = 880
   882
   883 2112 A9 C9			lda #$C9
   884 2114 18 6D F8 99			add X
   885 2118 8D F8 99			sta X
   886 211B A9 00			lda #$00
   887 211D 6D F9 99			adc X+1
   888 2120 8D F9 99			sta X+1
   889 2123 A9 00			lda #$00
   890 2125 6D FA 99			adc X+2
   891 2128 8D FA 99			sta X+2
   892 212B A9 00			lda #$00
   893 212D 6D FB 99			adc X+3
   894 2130 8D FB 99			sta X+3
   895
   896 				; optimize OK (SYSTEM), line = 882
   897
   898 2133 AD 00 9A			lda SIGN
   899 2136 F0 21			jeq l_014F
   900
   901 				; optimize OK (SYSTEM), line = 883
   902
   903 2138 A9 00			lda #$00
   904 213A 38 ED F8 99			sub X
   905 213E 8D F4 99			sta RESULT
   906 2141 A9 00			lda #$00
   907 2143 ED F9 99			sbc X+1
   908 2146 8D F5 99			sta RESULT+1
   909 2149 A9 00			lda #$00
   910 214B ED FA 99			sbc X+2
   911 214E 8D F6 99			sta RESULT+2
   912 2151 A9 00			lda #$00
   913 2153 ED FB 99			sbc X+3
   914 2156 4C 6E 21			jmp l_0160
   915 2159			l_014F
   916
   917 				; optimize OK (SYSTEM), line = 885
   918
   919 2159 AD F8 99			lda X
   920 215C 8D F4 99			sta RESULT
   921 215F AD F9 99			lda X+1
   922 2162 8D F5 99			sta RESULT+1
   923 2165 AD FA 99			lda X+2
   924 2168 8D F6 99			sta RESULT+2
   925 216B AD FB 99			lda X+3
   926 216E			l_0160
   927 216E 8D F7 99			sta RESULT+3
   928 2171			@exit
   929
   930 				; ------------------------------------------------------------
   931
   932 = 99F0			VALUE	= DATAORIGIN+$0019
   933 = 99F4			RESULT	= DATAORIGIN+$001D
   934 = 99F8			X	= DATAORIGIN+$0021
   935 = 99FC			Y	= DATAORIGIN+$0025
   936 = 9A00			SIGN	= DATAORIGIN+$0029
   937
   938 = 99F0			@VarData	= VALUE
   939 = 000D			@VarDataSize	= 13
   940
   941 2171 60				rts						; ret
   942 				.endl
   943 				.endl							; overload
   944
   945 2172			.local	RSINCOS						; FUNCTION
   946
   947 				; --- WhileProlog
   948 2172 4C 96 21			jmp l_019D
   949 2175			l_019E
   950
   951 				; optimize OK (SYSTEM), line = 1776
   952
   953 2175 AD 01 9A			lda X
   954 2178 38 E9 48			sub #$48
   955 217B 8D 01 9A			sta X
   956 217E AD 02 9A			lda X+1
   957 2181 E9 06			sbc #$06
   958 2183 8D 02 9A			sta X+1
   959 2186 AD 03 9A			lda X+2
   960 2189 E9 00			sbc #$00
   961 218B 8D 03 9A			sta X+2
   962 218E AD 04 9A			lda X+3
   963 2191 E9 00			sbc #$00
   964 2193 8D 04 9A			sta X+3
   965 2196			l_019D
   966 2196				.LOCAL
   967 2196 AD 04 9A			lda X+3
   968 2199 38 E9 00			sub #$00
   969 219C D0 1F			bne L4
   970 219E AD 03 9A			lda X+2
   971 21A1 C9 00			cmp #$00
   972 21A3 D0 0C			bne L1
   973 21A5 AD 02 9A			lda X+1
   974 21A8 C9 06			cmp #$06
   975 21AA D0 05			bne L1
   976 21AC AD 01 9A			lda X
   977 21AF C9 48			cmp #$48
   978 21B1 F0 10		L1	beq L5
   979 21B3 B0 04			bcs L3
   980 21B5 A9 FF			lda #$FF
   981 21B7 D0 0A			bne L5
   982 21B9 A9 01		L3	lda #$01
   983 21BB D0 06			bne L5
   984 21BD 50 04		L4	bvc L5
   985 21BF 49 FF			eor #$FF
   986 21C1 09 01			ora #$01
   987 21C3			L5
   988 					.ENDL
   989 21C3 30 02			smi
   990 21C5 D0 AE			jne l_019E
   991
   992 				; --- WhileProlog
   993 21C7 4C EB 21			jmp l_01B2
   994 21CA			l_01B3
   995
   996 				; optimize OK (SYSTEM), line = 1777
   997
   998 21CA AD 01 9A			lda X
   999 21CD 18 69 48			add #$48
  1000 21D0 8D 01 9A			sta X
  1001 21D3 AD 02 9A			lda X+1
  1002 21D6 69 06			adc #$06
  1003 21D8 8D 02 9A			sta X+1
  1004 21DB AD 03 9A			lda X+2
  1005 21DE 69 00			adc #$00
  1006 21E0 8D 03 9A			sta X+2
  1007 21E3 AD 04 9A			lda X+3
  1008 21E6 69 00			adc #$00
  1009 21E8 8D 04 9A			sta X+3
  1010 21EB			l_01B2
  1011 21EB AD 04 9A			lda X+3
  1012 21EE 30 DA			jmi l_01B3
  1013
  1014 				; optimize OK (SYSTEM), line = 1780
  1015
  1016 21F0 A9 A3			lda #$A3
  1017 21F2 85 8E			sta @REAL_MUL.B
  1018 21F4 A9 00			lda #$00
  1019 21F6 85 8F			sta @REAL_MUL.B+1
  1020 21F8 85 90			sta @REAL_MUL.B+2
  1021 21FA 85 91			sta @REAL_MUL.B+3
  1022 21FC AD 01 9A			lda X
  1023 21FF 85 86			sta @REAL_MUL.A
  1024 2201 AD 02 9A			lda X+1
  1025 2204 85 87			sta @REAL_MUL.A+1
  1026 2206 AD 03 9A			lda X+2
  1027 2209 85 88			sta @REAL_MUL.A+2
  1028 220B AD 04 9A			lda X+3
  1029 220E 85 89			sta @REAL_MUL.A+3
  1030 2210 20 63 14			jsr @REAL_MUL
  1031 2213 A5 86			lda :eax
  1032 2215 8D 01 9A			sta X
  1033 2218 A5 87			lda :eax+1
  1034 221A 8D 02 9A			sta X+1
  1035 221D A5 88			lda :eax+2
  1036 221F 8D 03 9A			sta X+2
  1037 2222 A5 89			lda :eax+3
  1038 2224 8D 04 9A			sta X+3
  1039
  1040 				; optimize OK (SYSTEM), line = 1783
  1041
  1042 2227 AD 01 9A			lda X
  1043 222A 85 86			sta @REAL_TRUNC.A
  1044 222C AD 02 9A			lda X+1
  1045 222F 85 87			sta @REAL_TRUNC.A+1
  1046 2231 AD 03 9A			lda X+2
  1047 2234 85 88			sta @REAL_TRUNC.A+2
  1048 2236 AD 04 9A			lda X+3
  1049 2239 85 89			sta @REAL_TRUNC.A+3
  1050 223B 20 AC 15			jsr @REAL_TRUNC
  1051 223E A5 86			lda :eax
  1052 2240 8D 0A 9A			sta I
  1053
  1054 				; optimize OK (SYSTEM), line = 1786
  1055
  1056 2243 AD 04 9A			lda X+3
  1057 2246 10 03			jpl l_01E1
  1058 2248 CE 0A 9A			dec I
  1059 224B			l_01E1
  1060
  1061 				; optimize OK (SYSTEM), line = 1789
  1062
  1063 224B A0 00			ldy #$00
  1064 224D AD 0A 9A			lda I
  1065 2250 10 01			spl
  1066 2252 88				dey
  1067 2253 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  1068 2255 84 C0			sty :STACKORIGIN+STACKWIDTH*2+10
  1069 2257 84 D0			sty :STACKORIGIN+STACKWIDTH*3+10
  1070 2259 AD 02 9A			lda X+1
  1071 225C 38 E5 B0			sub :STACKORIGIN+STACKWIDTH+10
  1072 225F 8D 02 9A			sta X+1
  1073 2262 AD 03 9A			lda X+2
  1074 2265 E5 C0			sbc :STACKORIGIN+STACKWIDTH*2+10
  1075 2267 8D 03 9A			sta X+2
  1076 226A AD 04 9A			lda X+3
  1077 226D E5 D0			sbc :STACKORIGIN+STACKWIDTH*3+10
  1078 226F 8D 04 9A			sta X+3
  1079
  1080 				; optimize OK (SYSTEM), line = 1792
  1081
  1082 2272 AD 05 9A			lda SC
  1083 2275 F0 03			jeq l_01FE
  1084 2277 EE 0A 9A			inc I
  1085 227A			l_01FE
  1086
  1087 				; optimize OK (SYSTEM), line = 1795
  1088
  1089 227A AD 0A 9A			lda I
  1090 227D 29 01			and #$01
  1091 227F D0 21			jne l_021B
  1092 2281 A9 00			lda #$00
  1093 2283 38 ED 01 9A			sub X
  1094 2287 8D 01 9A			sta X
  1095 228A A9 01			lda #$01
  1096 228C ED 02 9A			sbc X+1
  1097 228F 8D 02 9A			sta X+1
  1098 2292 A9 00			lda #$00
  1099 2294 ED 03 9A			sbc X+2
  1100 2297 8D 03 9A			sta X+2
  1101 229A A9 00			lda #$00
  1102 229C ED 04 9A			sbc X+3
  1103 229F 8D 04 9A			sta X+3
  1104 22A2			l_021B
  1105
  1106 				; optimize OK (SYSTEM), line = 1798
  1107
  1108 22A2 AD 01 9A			lda X
  1109 22A5 85 8E			sta @REAL_MUL.B
  1110 22A7 AD 02 9A			lda X+1
  1111 22AA 85 8F			sta @REAL_MUL.B+1
  1112 22AC AD 03 9A			lda X+2
  1113 22AF 85 90			sta @REAL_MUL.B+2
  1114 22B1 AD 04 9A			lda X+3
  1115 22B4 85 91			sta @REAL_MUL.B+3
  1116 22B6 AD 01 9A			lda X
  1117 22B9 85 86			sta @REAL_MUL.A
  1118 22BB AD 02 9A			lda X+1
  1119 22BE 85 87			sta @REAL_MUL.A+1
  1120 22C0 AD 03 9A			lda X+2
  1121 22C3 85 88			sta @REAL_MUL.A+2
  1122 22C5 AD 04 9A			lda X+3
  1123 22C8 85 89			sta @REAL_MUL.A+3
  1124 22CA 20 63 14			jsr @REAL_MUL
  1125 22CD A5 86			lda :eax
  1126 22CF 8D 01 9A			sta X
  1127 22D2 A5 87			lda :eax+1
  1128 22D4 8D 02 9A			sta X+1
  1129 22D7 A5 88			lda :eax+2
  1130 22D9 8D 03 9A			sta X+2
  1131 22DC A5 89			lda :eax+3
  1132 22DE 8D 04 9A			sta X+3
  1133
  1134 				; optimize OK (SYSTEM), line = 1799
  1135
  1136 22E1 AD 01 9A			lda X
  1137 22E4 85 8E			sta @REAL_MUL.B
  1138 22E6 AD 02 9A			lda X+1
  1139 22E9 85 8F			sta @REAL_MUL.B+1
  1140 22EB AD 03 9A			lda X+2
  1141 22EE 85 90			sta @REAL_MUL.B+2
  1142 22F0 AD 04 9A			lda X+3
  1143 22F3 85 91			sta @REAL_MUL.B+3
  1144 22F5 A9 05			lda #$05
  1145 22F7 85 86			sta @REAL_MUL.A
  1146 22F9 A9 00			lda #$00
  1147 22FB 85 87			sta @REAL_MUL.A+1
  1148 22FD 85 88			sta @REAL_MUL.A+2
  1149 22FF 85 89			sta @REAL_MUL.A+3
  1150 2301 20 63 14			jsr @REAL_MUL
  1151 2304 A5 86			lda :eax
  1152 2306 38 E9 3C			sub #$3C
  1153 2309 85 86			sta @REAL_MUL.A
  1154 230B A5 87			lda :eax+1
  1155 230D E9 00			sbc #$00
  1156 230F 85 87			sta @REAL_MUL.A+1
  1157 2311 A5 88			lda :eax+2
  1158 2313 E9 00			sbc #$00
  1159 2315 85 88			sta @REAL_MUL.A+2
  1160 2317 A5 89			lda :eax+3
  1161 2319 E9 00			sbc #$00
  1162 231B 85 89			sta @REAL_MUL.A+3
  1163 231D AD 01 9A			lda X
  1164 2320 85 8E			sta @REAL_MUL.B
  1165 2322 AD 02 9A			lda X+1
  1166 2325 85 8F			sta @REAL_MUL.B+1
  1167 2327 AD 03 9A			lda X+2
  1168 232A 85 90			sta @REAL_MUL.B+2
  1169 232C AD 04 9A			lda X+3
  1170 232F 85 91			sta @REAL_MUL.B+3
  1171 2331 20 63 14			jsr @REAL_MUL
  1172 2334 A5 87			lda :eax+1
  1173 2336 18 69 01			add #$01
  1174 2339 85 87			sta @REAL_MUL.A+1
  1175 233B A5 88			lda :eax+2
  1176 233D 69 00			adc #$00
  1177 233F 85 88			sta @REAL_MUL.A+2
  1178 2341 A5 89			lda :eax+3
  1179 2343 69 00			adc #$00
  1180 2345 85 89			sta @REAL_MUL.A+3
  1181 2347 A9 00			lda #$00
  1182 2349 38 ED 01 9A			sub X
  1183 234D 85 8E			sta @REAL_MUL.B
  1184 234F A9 01			lda #$01
  1185 2351 ED 02 9A			sbc X+1
  1186 2354 85 8F			sta @REAL_MUL.B+1
  1187 2356 A9 00			lda #$00
  1188 2358 ED 03 9A			sbc X+2
  1189 235B 85 90			sta @REAL_MUL.B+2
  1190 235D A9 00			lda #$00
  1191 235F ED 04 9A			sbc X+3
  1192 2362 85 91			sta @REAL_MUL.B+3
  1193 2364 20 63 14			jsr @REAL_MUL
  1194 2367 A5 86			lda :eax
  1195 2369 8D 06 9A			sta RESULT
  1196 236C A5 87			lda :eax+1
  1197 236E 8D 07 9A			sta RESULT+1
  1198 2371 A5 88			lda :eax+2
  1199 2373 8D 08 9A			sta RESULT+2
  1200 2376 A5 89			lda :eax+3
  1201 2378 8D 09 9A			sta RESULT+3
  1202
  1203 				; optimize OK (SYSTEM), line = 1802
  1204
  1205 237B AD 0A 9A			lda I
  1206 237E 29 02			and #$02
  1207 2380 C9 02			cmp #$02
  1208 2382 D0 21			jne l_0260
  1209 2384 A9 00			lda #$00
  1210 2386 38 ED 06 9A			sub RESULT
  1211 238A 8D 06 9A			sta RESULT
  1212 238D A9 00			lda #$00
  1213 238F ED 07 9A			sbc RESULT+1
  1214 2392 8D 07 9A			sta RESULT+1
  1215 2395 A9 00			lda #$00
  1216 2397 ED 08 9A			sbc RESULT+2
  1217 239A 8D 08 9A			sta RESULT+2
  1218 239D A9 00			lda #$00
  1219 239F ED 09 9A			sbc RESULT+3
  1220 23A2 8D 09 9A			sta RESULT+3
  1221 23A5			l_0260
  1222 23A5			@exit
  1223
  1224 				; ------------------------------------------------------------
  1225
  1226 = 9A01			X	= DATAORIGIN+$002A
  1227 = 9A05			SC	= DATAORIGIN+$002E
  1228 = 9A06			RESULT	= DATAORIGIN+$002F
  1229 = 9A0A			I	= DATAORIGIN+$0033
  1230
  1231 = 9A01			@VarData	= X
  1232 = 0006			@VarDataSize	= 6
  1233
  1234 23A5 60				rts						; ret
  1235 				.endl
  1236
  1237 23A6			.local	SIN						; FUNCTION | OVERLOAD
  1238 23A6			.local	@01018E000
  1239
  1240 				; optimize OK (SYSTEM), line = 1817
  1241
  1242 23A6 AD 0B 9A			lda X
  1243 23A9 8D 01 9A			sta RSINCOS.X
  1244 23AC AD 0C 9A			lda X+1
  1245 23AF 8D 02 9A			sta RSINCOS.X+1
  1246 23B2 AD 0D 9A			lda X+2
  1247 23B5 8D 03 9A			sta RSINCOS.X+2
  1248 23B8 AD 0E 9A			lda X+3
  1249 23BB 8D 04 9A			sta RSINCOS.X+3
  1250 23BE A9 00			lda #$00
  1251 23C0 8D 05 9A			sta RSINCOS.SC
  1252 23C3 20 72 21			jsr RSINCOS
  1253 23C6 AD 06 9A			lda RSINCOS.RESULT
  1254 23C9 8D 0F 9A			sta RESULT
  1255 23CC AD 07 9A			lda RSINCOS.RESULT+1
  1256 23CF 8D 10 9A			sta RESULT+1
  1257 23D2 AD 08 9A			lda RSINCOS.RESULT+2
  1258 23D5 8D 11 9A			sta RESULT+2
  1259 23D8 AD 09 9A			lda RSINCOS.RESULT+3
  1260 23DB 8D 12 9A			sta RESULT+3
  1261 23DE			@exit
  1262
  1263 				; ------------------------------------------------------------
  1264
  1265 = 9A0B			X	= DATAORIGIN+$0034
  1266 = 9A0F			RESULT	= DATAORIGIN+$0038
  1267
  1268 = 9A0B			@VarData	= X
  1269 = 0004			@VarDataSize	= 4
  1270
  1271 23DE 60				rts						; ret
  1272 				.endl
  1273 				.endl							; overload
  1274
  1275 23DF			.local	COS						; FUNCTION | OVERLOAD
  1276 23DF			.local	@01018E000
  1277
  1278 				; optimize OK (SYSTEM), line = 1831
  1279
  1280 23DF AD 13 9A			lda X
  1281 23E2 8D 01 9A			sta RSINCOS.X
  1282 23E5 AD 14 9A			lda X+1
  1283 23E8 8D 02 9A			sta RSINCOS.X+1
  1284 23EB AD 15 9A			lda X+2
  1285 23EE 8D 03 9A			sta RSINCOS.X+2
  1286 23F1 AD 16 9A			lda X+3
  1287 23F4 8D 04 9A			sta RSINCOS.X+3
  1288 23F7 A9 01			lda #$01
  1289 23F9 8D 05 9A			sta RSINCOS.SC
  1290 23FC 20 72 21			jsr RSINCOS
  1291 23FF AD 06 9A			lda RSINCOS.RESULT
  1292 2402 8D 17 9A			sta RESULT
  1293 2405 AD 07 9A			lda RSINCOS.RESULT+1
  1294 2408 8D 18 9A			sta RESULT+1
  1295 240B AD 08 9A			lda RSINCOS.RESULT+2
  1296 240E 8D 19 9A			sta RESULT+2
  1297 2411 AD 09 9A			lda RSINCOS.RESULT+3
  1298 2414 8D 1A 9A			sta RESULT+3
  1299 2417			@exit
  1300
  1301 				; ------------------------------------------------------------
  1302
  1303 = 9A13			X	= DATAORIGIN+$003C
  1304 = 9A17			RESULT	= DATAORIGIN+$0040
  1305
  1306 = 9A13			@VarData	= X
  1307 = 0004			@VarDataSize	= 4
  1308
  1309 2417 60				rts						; ret
  1310 				.endl
  1311 				.endl							; overload
  1312
  1313 2418			.local	RANDOM						; FUNCTION | ASSEMBLER | OVERLOAD
  1314 2418			.local	@010180000
  1315 2418 8D 1B 9A			sta RANGE
  1316
  1317 				; -------------------  ASM Block 00000049  -------------------
  1318
  1319
  1320 				;BYTE FUNC Rand(BYTE range)
  1321 				; returns random number between 0 and
  1322 				; range-1.  If range=0, then a random
  1323 				; number between 0 and 255 is returned
  1324
  1325 241B AC 0A D2		  ldy $d20a   ; RANDOM
  1326
  1327 241E AD 1B 9A		  lda range
  1328 2421 F0 08		  beq stop
  1329
  1330 2423 85 8E		  sta :ecx
  1331 2425 84 86		  sty :eax
  1332
  1333 2427 20 DE 12		  jsr imulCL
  1334 242A A8			  tay
  1335
  1336 242B 8C 1C 9A		stop  sty Result
  1337
  1338
  1339 242E			@exit
  1340
  1341 				; ------------------------------------------------------------
  1342
  1343 = 9A1B			RANGE	= DATAORIGIN+$0044
  1344 = 9A1C			RESULT	= DATAORIGIN+$0045
  1345
  1346 = 9A1B			@VarData	= RANGE
  1347 = 0001			@VarDataSize	= 1
  1348
  1349 242E 60				rts						; ret
  1350 				.endl
  1351 				.endl							; overload
  1352
  1353 242F			.local	RANDOM						; FUNCTION | OVERLOAD
  1354 242F			.local	@010184000
  1355
  1356 				; optimize OK (system_atari.inc), line = 179
  1357
  1358 242F AD 1E 9A			lda RANGE+1
  1359 2432 0D 1D 9A			ora RANGE
  1360 2435 D0 0B			jne l_02B2
  1361
  1362 				; optimize OK (system_atari.inc), line = 180
  1363
  1364 2437 A9 00			lda #$00
  1365 2439 8D 1F 9A			sta RESULT
  1366 243C 8D 20 9A			sta RESULT+1
  1367 243F 4C A4 24			jmp l_02C0
  1368 2442			l_02B2
  1369
  1370 				; optimize OK (system_atari.inc), line = 183
  1371
  1372 2442 AD E0 99			lda RNDSEED
  1373 2445 85 8E			sta :ecx
  1374 2447 AD E1 99			lda RNDSEED+1
  1375 244A 85 8F			sta :ecx+1
  1376 244C A9 95			lda #$95
  1377 244E 85 86			sta :eax
  1378 2450 A9 45			lda #$45
  1379 2452 85 87			sta :eax+1
  1380 					.ifdef fmulinit
  1381 					fmulu_16
  1382 					els
  1383 2454 20 2A 13			imulCX
  1384 					eif
  1385 2457 A5 86			lda :eax
  1386 2459 8D E0 99			sta RNDSEED
  1387 245C A5 87			lda :eax+1
  1388 245E 8D E1 99			sta RNDSEED+1
  1389
  1390 				; optimize OK (system_atari.inc), line = 184
  1391
  1392 2461 AD 1D 9A			lda RANGE
  1393 2464 85 8E			sta @SMALLINT.MOD.B
  1394 2466 AD 1E 9A			lda RANGE+1
  1395 2469 85 8F			sta @SMALLINT.MOD.B+1
  1396 246B AD E0 99			lda RNDSEED
  1397 246E 85 86			sta @SMALLINT.MOD.A
  1398 2470 AD E1 99			lda RNDSEED+1
  1399 2473 85 87			sta @SMALLINT.MOD.A+1
  1400 2475 20 6F 12			jsr @SMALLINT.MOD
  1401 2478 A5 92			lda @SMALLINT.MOD.RESULT
  1402 247A 8D 1F 9A			sta RESULT
  1403 247D A5 93			lda @SMALLINT.MOD.RESULT+1
  1404 247F 8D 20 9A			sta RESULT+1
  1405
  1406 				; -------------------  ASM Block 00000050  -------------------
  1407
  1408 2482 AD 1E 9A			lda range+1
  1409 2485 10 07			bpl plus
  1410
  1411 2487 AD 20 9A			lda Result+1
  1412 248A 30 18			bmi ok
  1413 248C 10 05			bpl sign
  1414
  1415 248E AD 20 9A		plus	lda Result+1
  1416 2491 10 11			bpl ok
  1417
  1418 2493 A9 00		sign 	lda #0
  1419 2495 38 ED 1F 9A			sub Result
  1420 2499 8D 1F 9A			sta Result
  1421
  1422 249C A9 00			lda #0
  1423 249E ED 20 9A			sbc Result+1
  1424 24A1 8D 20 9A			sta Result+1
  1425 24A4			ok
  1426
  1427 24A4			l_02C0
  1428 24A4			@exit
  1429
  1430 				; ------------------------------------------------------------
  1431
  1432 = 9A1D			RANGE	= DATAORIGIN+$0046
  1433 = 9A1F			RESULT	= DATAORIGIN+$0048
  1434
  1435 = 9A1D			@VarData	= RANGE
  1436 = 0002			@VarDataSize	= 2
  1437
  1438 24A4 60				rts						; ret
  1439 				.endl
  1440 				.endl							; overload
  1441
  1442 				; ------------------------------------------------------------
  1443 				; ------------------------------------------------------------
  1444 24A5			@UnitInit
  1445
  1446 				; -------------------  ASM Block 00000060  -------------------
  1447
  1448 					.ifdef @CmdLine
  1449
  1450 					ldx #$0F
  1451 					mva:rpl $340,x IOCB@COPY,x-
  1452 					rts
  1453
  1454 				IOCB@COPY	:16 brk
  1455 					eif
  1456
  1457
  1458 24A5 60				rts
  1459
  1460 				; ------------------------------------------------------------
  1461
  1462 = 0648			M_PI_2	= $0648
  1463 = 0192			D_PI_2	= $0192
  1464 = 0004			D_PI_180	= $04
  1465 = 0101			__PORTB_BANKS	= $0101
  1466 = 0000			MGTIA	= $00
  1467 = 0080			MVBXE	= $80
  1468 = 0000			VBXE_XDLADR	= $00
  1469 = 00E0			VBXE_BCBTMP	= $E0
  1470 = 0100			VBXE_BCBADR	= $0100
  1471 = 1000			VBXE_MAPADR	= $1000
  1472 = 1000			VBXE_CHBASE	= $1000
  1473 = 5000			VBXE_OVRADR	= $5000
  1474 = B000			VBXE_WINDOW	= $B000
  1475 = 0000			IDLI	= $00
  1476 = 0001			IVBL	= $01
  1477 = 0001			IVBLD	= $01
  1478 = 0002			IVBLI	= $02
  1479 = 0003			ITIM1	= $03
  1480 = 0004			ITIM2	= $04
  1481 = 0005			ITIM4	= $05
  1482 = 00FE			CH_DELCHR	= $FE
  1483 = 009B			CH_ENTER	= $9B
  1484 = 001B			CH_ESC	= $1B
  1485 = 001C			CH_CURS_UP	= $1C
  1486 = 001D			CH_CURS_DOWN	= $1D
  1487 = 001E			CH_CURS_LEFT	= $1E
  1488 = 001F			CH_CURS_RIGHT	= $1F
  1489 = 007F			CH_TAB	= $7F
  1490 = 009B			CH_EOL	= $9B
  1491 = 007D			CH_CLR	= $7D
  1492 = 00FD			CH_BELL	= $FD
  1493 = 007E			CH_DEL	= $7E
  1494 = 009C			CH_DELLINE	= $9C
  1495 = 009D			CH_INSLINE	= $9D
  1496 = 0000			PAL_PMCOLOR0	= $00
  1497 = 0001			PAL_PMCOLOR1	= $01
  1498 = 0002			PAL_PMCOLOR2	= $02
  1499 = 0003			PAL_PMCOLOR3	= $03
  1500 = 0004			PAL_COLOR0	= $04
  1501 = 0005			PAL_COLOR1	= $05
  1502 = 0006			PAL_COLOR2	= $06
  1503 = 0007			PAL_COLOR3	= $07
  1504 = 0008			PAL_COLBAK	= $08
  1505 = 0000			COLOR_BLACK	= $00
  1506 = 000E			COLOR_WHITE	= $0E
  1507 = 0032			COLOR_RED	= $32
  1508 = 0096			COLOR_CYAN	= $96
  1509 = 0068			COLOR_VIOLET	= $68
  1510 = 00C4			COLOR_GREEN	= $C4
  1511 = 0074			COLOR_BLUE	= $74
  1512 = 00EE			COLOR_YELLOW	= $EE
  1513 = 0028			COLOR_ORANGE	= $28
  1514 = 00E4			COLOR_BROWN	= $E4
  1515 = 003C			COLOR_LIGHTRED	= $3C
  1516 = 0004			COLOR_GRAY1	= $04
  1517 = 0006			COLOR_GRAY2	= $06
  1518 = 000A			COLOR_GRAY3	= $0A
  1519 = 00CC			COLOR_LIGHTGREEN	= $CC
  1520 = 007C			COLOR_LIGHTBLUE	= $7C
  1521 = 0004			FMOPENREAD	= $04
  1522 = 0008			FMOPENWRITE	= $08
  1523 = 0009			FMOPENAPPEND	= $09
  1524 = 000C			FMOPENREADWRITE	= $0C
  1525 = 99D7			DATESEPARATOR	= DATAORIGIN+$0000
  1526 = D20A			RND	= $D20A
  1527 = 02C0			adr.PALETTE	= $02C0
  1528 24A6			.var PALETTE	= adr.PALETTE .word
  1529 = D012			adr.HPALETTE	= $D012
  1530 24A6			.var HPALETTE	= adr.HPALETTE .word
  1531 = 99D8			FILEMODE	= DATAORIGIN+$0001
  1532 = 99D9			GRAPHMODE	= DATAORIGIN+$0002
  1533 = 99DA			IORESULT	= DATAORIGIN+$0003
  1534 = 99DB			EOLN	= DATAORIGIN+$0004
  1535 = 99DC			SCREENWIDTH	= DATAORIGIN+$0005
  1536 = 99DE			SCREENHEIGHT	= DATAORIGIN+$0007
  1537 = 0000			adr.MEM	= $00
  1538 24A6			.var MEM	= adr.MEM .word
  1539 = 99E0			RNDSEED	= DATAORIGIN+$0009
  1540
  1541 = 24A6 C0 02		PALETTE
  1541 = 24A8 12 D0		HPALETTE
  1541 = 24AA 00 00		MEM
  1541 				.endl							; UNIT SYSTEM
  1542
  1543 				; ------------------------------------------------------------
  1544
  1545 24AC			.local	ATARI						; UNIT
  1546
  1547 				; ------------------------------------------------------------
  1548
  1549 = 0000			DL_BLANK1	= $00
  1550 = 0010			DL_BLANK2	= $10
  1551 = 0020			DL_BLANK3	= $20
  1552 = 0030			DL_BLANK4	= $30
  1553 = 0040			DL_BLANK5	= $40
  1554 = 0050			DL_BLANK6	= $50
  1555 = 0060			DL_BLANK7	= $60
  1556 = 0070			DL_BLANK8	= $70
  1557 = 0080			DL_DLI	= $80
  1558 = 0040			DL_LMS	= $40
  1559 = 0020			DL_VSCROLL	= $20
  1560 = 0010			DL_HSCROLL	= $10
  1561 = 0001			DL_JMP	= $01
  1562 = 0041			DL_JVB	= $41
  1563 = 000E			DL_MODE_GR15	= $0E
  1564 = 000F			DL_MODE_GR8	= $0F
  1565 = 0010			IRQENS	= $10
  1566 = 0012			RTCLOK	= $12
  1567 = 0012			RTCLOK1	= $12
  1568 = 0013			RTCLOK2	= $13
  1569 = 0014			RTCLOK3	= $14
  1570 = 004D			ATRACT	= $4D
  1571 = 0052			LMARGIN	= $52
  1572 = 0053			RMARGIN	= $53
  1573 = 0054			ROWCRS	= $54
  1574 = 0055			COLCRS	= $55
  1575 = 0057			DINDEX	= $57
  1576 = 0058			SAVMSC	= $58
  1577 = 0062			PALNTS	= $62
  1578 = 006A			RAMTOP	= $6A
  1579 = 0200			VDSLST	= $0200
  1580 = 0230			SDLSTL	= $0230
  1581 = 0290			TXTROW	= $0290
  1582 = 0291			TXTCOL	= $0291
  1583 = 0293			TINDEX	= $0293
  1584 = 0294			TXTMSC	= $0294
  1585 = 022F			SDMCTL	= $022F
  1586 = 026F			GPRIOR	= $026F
  1587 = 02F0			CRSINH	= $02F0
  1588 = 02F3			CHACT	= $02F3
  1589 = 02F4			CHBAS	= $02F4
  1590 = 02FC			CH	= $02FC
  1591 = 02FD			FILDAT	= $02FD
  1592 = 02C0			PCOLR0	= $02C0
  1593 = 02C1			PCOLR1	= $02C1
  1594 = 02C2			PCOLR2	= $02C2
  1595 = 02C3			PCOLR3	= $02C3
  1596 = 02C4			COLOR0	= $02C4
  1597 = 02C5			COLOR1	= $02C5
  1598 = 02C6			COLOR2	= $02C6
  1599 = 02C7			COLOR3	= $02C7
  1600 = 02C8			COLOR4	= $02C8
  1601 = 02C8			COLBAKS	= $02C8
  1602 = D000			HPOSP0	= $D000
  1603 = D001			HPOSP1	= $D001
  1604 = D002			HPOSP2	= $D002
  1605 = D003			HPOSP3	= $D003
  1606 = D004			HPOSM0	= $D004
  1607 = D005			HPOSM1	= $D005
  1608 = D006			HPOSM2	= $D006
  1609 = D007			HPOSM3	= $D007
  1610 = D008			SIZEP0	= $D008
  1611 = D009			SIZEP1	= $D009
  1612 = D00A			SIZEP2	= $D00A
  1613 = D00B			SIZEP3	= $D00B
  1614 = D00C			SIZEM	= $D00C
  1615 = D00D			GRAFP0	= $D00D
  1616 = D00E			GRAFP1	= $D00E
  1617 = D00F			GRAFP2	= $D00F
  1618 = D010			GRAFP3	= $D010
  1619 = D011			GRAFM	= $D011
  1620 = D004			P0PF	= $D004
  1621 = D014			PAL	= $D014
  1622 = D013			TRIG3	= $D013
  1623 = D012			COLPM0	= $D012
  1624 = D013			COLPM1	= $D013
  1625 = D014			COLPM2	= $D014
  1626 = D015			COLPM3	= $D015
  1627 = D016			COLPF0	= $D016
  1628 = D017			COLPF1	= $D017
  1629 = D018			COLPF2	= $D018
  1630 = D019			COLPF3	= $D019
  1631 = D01A			COLBAK	= $D01A
  1632 = D01A			COLBK	= $D01A
  1633 = D01B			PRIOR	= $D01B
  1634 = D01D			GRACTL	= $D01D
  1635 = D01D			PMCNTL	= $D01D
  1636 = D01E			HITCLR	= $D01E
  1637 = D01F			CONSOL	= $D01F
  1638 = D200			AUDF1	= $D200
  1639 = D201			AUDC1	= $D201
  1640 = D202			AUDF2	= $D202
  1641 = D203			AUDC2	= $D203
  1642 = D204			AUDF3	= $D204
  1643 = D205			AUDC3	= $D205
  1644 = D206			AUDF4	= $D206
  1645 = D207			AUDC4	= $D207
  1646 = D208			AUDCTL	= $D208
  1647 = D209			KBCODE	= $D209
  1648 = D20E			IRQEN	= $D20E
  1649 = D20F			SKSTAT	= $D20F
  1650 = D300			PORTA	= $D300
  1651 = D301			PORTB	= $D301
  1652 = D302			PACTL	= $D302
  1653 = D400			DMACTL	= $D400
  1654 = D401			CHACTL	= $D401
  1655 = D402			DLISTL	= $D402
  1656 = D404			HSCROL	= $D404
  1657 = D405			VSCROL	= $D405
  1658 = D407			PMBASE	= $D407
  1659 = D409			CHBASE	= $D409
  1660 = D40A			WSYNC	= $D40A
  1661 = D40B			VCOUNT	= $D40B
  1662 = D40C			PENH	= $D40C
  1663 = D40D			PENV	= $D40D
  1664 = D40E			NMIEN	= $D40E
  1665 = FFFA			NMIVEC	= $FFFA
  1666 = FFFC			RESETVEC	= $FFFC
  1667 = FFFE			IRQVEC	= $FFFE
  1668
  1669 				.endl							; UNIT ATARI
  1670
  1671 				; ------------------------------------------------------------
  1672
  1673 24AC			.local	CRT						; UNIT
  1674
  1675 				; ------------------------------------------------------------
  1676
  1677 = 9A21			TEXTATTR	= DATAORIGIN+$004A
  1678 = D01F			CONSOL	= $D01F
  1679 = 0000			CN_START_SELECT_OPTION	= $00
  1680 = 0001			CN_SELECT_OPTION	= $01
  1681 = 0002			CN_START_OPTION	= $02
  1682 = 0003			CN_OPTION	= $03
  1683 = 0004			CN_START_SELECT	= $04
  1684 = 0005			CN_SELECT	= $05
  1685 = 0006			CN_START	= $06
  1686 = 0007			CN_NONE	= $07
  1687 = 0000			BLACK	= $00
  1688 = 000F			WHITE	= $0F
  1689 = 0026			RED	= $26
  1690 = 00AC			CYAN	= $AC
  1691 = 0048			PURPLE	= $48
  1692 = 00B6			GREEN	= $B6
  1693 = 0086			BLUE	= $86
  1694 = 00DC			YELLOW	= $DC
  1695 = 0018			ORANGE	= $18
  1696 = 00F4			BROWN	= $F4
  1697 = 002A			LIGHT_RED	= $2A
  1698 = 0004			DARK_GREY	= $04
  1699 = 0008			GREY	= $08
  1700 = 00BC			LIGHT_GREEN	= $BC
  1701 = 009A			LIGHT_BLUE	= $9A
  1702 = 000C			LIGHT_GREY	= $0C
  1703 = 0000			BW40	= $00
  1704 = 0001			CO40	= $01
  1705 = 0002			BW80	= $02
  1706 = 0003			CO80	= $03
  1707 = 0007			MONO	= $07
  1708 = 0001			C40	= $01
  1709 = 0003			C80	= $03
  1710 = 0080			BLINK	= $80
  1711
  1712 				.endl							; UNIT CRT
  1713
  1714 				; ------------------------------------------------------------
  1715
  1716 24AC			.local	TYPES						; UNIT
  1717
  1718 				; ------------------------------------------------------------
  1719
  1720 				.endl							; UNIT TYPES
  1721
  1722 				; ------------------------------------------------------------
  1723
  1724 24AC			.local	GRAPH						; UNIT
  1725
  1726 				; ------------------------------------------------------------
  1727
  1728 = 0080			CURRENTDRIVER	= $80
  1729 = 0000			DETECT	= $00
  1730 = 0001			CGA	= $01
  1731 = 0002			MCGA	= $02
  1732 = 0003			EGA	= $03
  1733 = 0004			EGA64	= $04
  1734 = 0005			EGAMONO	= $05
  1735 = 0006			LOWRES	= $06
  1736 = 0007			HERCMONO	= $07
  1737 = 0009			VGA	= $09
  1738 = 000A			VESA	= $0A
  1739 = 000B			D1BIT	= $0B
  1740 = 000C			D2BIT	= $0C
  1741 = 000D			D4BIT	= $0D
  1742 = 000E			D6BIT	= $0E
  1743 = 000F			D8BIT	= $0F
  1744 = 0010			D12BIT	= $10
  1745 = 0018			M640X400	= $18
  1746 = 0018			M640X480	= $18
  1747 = 0001			GROK	= $01
  1748 = 00FF			GRNOINITGRAPH	= $FF
  1749 = 00FE			GRNOTDETECTED	= $FE
  1750 = 00FD			GRFILENOTFOUND	= $FD
  1751 = 00FC			GRINVALIDDRIVER	= $FC
  1752 = 00FB			GRNOLOADMEM	= $FB
  1753 = 00FA			GRNOSCANMEM	= $FA
  1754 = 00F9			GRNOFLOODMEM	= $F9
  1755 = 00F8			GRFONTNOTFOUND	= $F8
  1756 = 00F7			GRNOFONTMEM	= $F7
  1757 = 00F6			GRINVALIDMODE	= $F6
  1758 = 00F5			GRERROR	= $F5
  1759 = 00F4			GRIOERROR	= $F4
  1760 = 00F3			GRINVALIDFONT	= $F3
  1761 = 00F2			GRINVALIDFONTNUM	= $F2
  1762 = 00EE			GRINVALIDVERSION	= $EE
  1763 = 0000			CGAC0	= $00
  1764 = 0001			CGAC1	= $01
  1765 = 0002			CGAC2	= $02
  1766 = 0003			CGAC3	= $03
  1767 = 0004			CGAHI	= $04
  1768 = 0000			MCGAC0	= $00
  1769 = 0001			MCGAC1	= $01
  1770 = 0002			MCGAC2	= $02
  1771 = 0003			MCGAC3	= $03
  1772 = 0004			MCGAMED	= $04
  1773 = 0005			MCGAHI	= $05
  1774 = 0000			EGALO	= $00
  1775 = 0001			EGAHI	= $01
  1776 = 0000			EGA64LO	= $00
  1777 = 0001			EGA64HI	= $01
  1778 = 0003			EGAMONOHI	= $03
  1779 = 000A			VGALO	= $0A
  1780 = 001F			VGAMED	= $1F
  1781 = 0018			VGAHI	= $18
  1782 = 9A22			GRAPHRESULT	= DATAORIGIN+$004B
  1783 = 9A23			GETCOLOR	= DATAORIGIN+$004C
  1784 = 9A24			VIDEORAM	= DATAORIGIN+$004D
  1785 = 9A26			adr.LASTARCCOORDS	= DATAORIGIN+$004F	; [12] RECORD
  1786 24AC			.var LASTARCCOORDS	= adr.LASTARCCOORDS .word
  1787 = 9A26			LASTARCCOORDS.X	= DATAORIGIN+$004F
  1788 = 9A28			LASTARCCOORDS.Y	= DATAORIGIN+$0051
  1789 = 9A2A			LASTARCCOORDS.XSTART	= DATAORIGIN+$0053
  1790 = 9A2C			LASTARCCOORDS.YSTART	= DATAORIGIN+$0055
  1791 = 9A2E			LASTARCCOORDS.XEND	= DATAORIGIN+$0057
  1792 = 9A30			LASTARCCOORDS.YEND	= DATAORIGIN+$0059
  1793 = 9A32			WIN_LEFT	= DATAORIGIN+$005B
  1794 = 9A34			WIN_RIGHT	= DATAORIGIN+$005D
  1795 = 9A36			WIN_TOP	= DATAORIGIN+$005F
  1796 = 9A38			WIN_BOTTOM	= DATAORIGIN+$0061
  1797 = 9A3A			SCANLINE_WIDTH	= DATAORIGIN+$0063
  1798 = 9A3B			CURRENTX	= DATAORIGIN+$0064
  1799 = 9A3D			CURRENTY	= DATAORIGIN+$0066
  1800
  1801 = 24AC 26 9A		LASTARCCOORDS
  1801 				.endl							; UNIT GRAPH
  1802
  1803 				; ------------------------------------------------------------
  1804
  1805 24AE			.local	VBXE						; UNIT
  1806
  1807 				; ------------------------------------------------------------
  1808 				; ------------------------------------------------------------
  1809 24AE			@UnitInit
  1810
  1811 				; -------------------  ASM Block 00000138  -------------------
  1812
  1813 24AE 8A 48			txa:pha
  1814
  1815 24B0 20 95 19			jsr @vbxe_detect
  1816 24B3 90 04			bcc ok
  1817
  1818 24B5 A2 FF			ldx #MAIN.GRAPH.grNoInitGraph
  1819 24B7 D0 05			bne status
  1820
  1821 24B9 20 EB 19		ok	jsr @vbxe_init
  1822
  1823 24BC A2 01			ldx #MAIN.GRAPH.grOK
  1824 24BE 8E 22 9A		status	stx MAIN.GRAPH.GraphResult
  1825
  1826 24C1 68 AA			pla:tax
  1827
  1828 24C3 60				rts
  1829
  1830 				; ------------------------------------------------------------
  1831
  1832 = 0001			VC_XDL	= $01
  1833 = 0002			VC_XCOLOR	= $02
  1834 = 0004			VC_NO_TRANS	= $04
  1835 = 0008			VC_TRANS15	= $08
  1836 = 0000			TCBLACK	= $00
  1837 = 0001			TCRED	= $01
  1838 = 0002			TCGREEN	= $02
  1839 = 0003			TCYELLOW	= $03
  1840 = 0004			TCBLUE	= $04
  1841 = 0005			TCMAGENTA	= $05
  1842 = 0006			TCCYAN	= $06
  1843 = 0007			TCWHITE	= $07
  1844 = 0008			TCBRIGHTBLACK	= $08
  1845 = 0009			TCBRIGHTRED	= $09
  1846 = 000A			TCBRIGHTGREEN	= $0A
  1847 = 000B			TCBRIGHTYELLOW	= $0B
  1848 = 000C			TCBRIGHTBLUE	= $0C
  1849 = 000D			TCBRIGHTMAGENTA	= $0D
  1850 = 000E			TCBRIGHTCYAN	= $0E
  1851 = 000F			TCBRIGHTWHITE	= $0F
  1852 = 0080			TBBLACK	= $80
  1853 = 0090			TBRED	= $90
  1854 = 00A0			TBGREEN	= $A0
  1855 = 00B0			TBYELLOW	= $B0
  1856 = 00C0			TBBLUE	= $C0
  1857 = 00D0			TBMAGENTA	= $D0
  1858 = 00E0			TBCYAN	= $E0
  1859 = 00F0			TBWHITE	= $F0
  1860 = 9A4B			adr.VRAM	= DATAORIGIN+$0074	; [8] OBJECT
  1861 24C4			.var VRAM	= adr.VRAM .word
  1862 = 9A4B			VRAM.POSITION	= DATAORIGIN+$0074
  1863 = 9A4F			VRAM.SIZE	= DATAORIGIN+$0078
  1864 = 0063			SCROLLBACK_FILL	= $63
  1865 = 1AD7			COLORMAPCONTROL = @VBXE_CMAP.CONFIG
  1866 = 0400			adr.SCROLLBACK_BUFFER	= $0400
  1867 24C4			.var SCROLLBACK_BUFFER	= adr.SCROLLBACK_BUFFER .word
  1868 = 02FD			FILDAT	= $02FD
  1869 = 0054			ROWCRS	= $54
  1870 = 0055			COLCRS	= $55
  1871 = 0068			CRSADR	= $68
  1872
  1873 = 24C4 4B 9A		VRAM
  1873 = 24C6 00 04		SCROLLBACK_BUFFER
  1873 				.endl							; UNIT VBXE
  1874
  1875 24C8			.local	START_LEVEL					; PROCEDURE
  1876
  1877 24C8			@exit
  1878 					.ifdef @new
  1879 					lda <@VarData
  1880 					sta :ztmp
  1881 					lda >@VarData
  1882 					ldy #@VarDataSize-1
  1883 					jmp @FreeMem
  1884 					els
  1885 24C8 60				rts						; ret
  1886 					eif
  1887 				.endl
  1888
  1889 24C9			.local	DEATH_SOUND					; PROCEDURE
  1890
  1891 				; ------------------------------------------------------------
  1892
  1893 = 9A84			A	= DATAORIGIN+$00AD
  1894
  1895 = 9A84			@VarData	= A
  1896 = 0002			@VarDataSize	= 2
  1897
  1898 24C9			@exit
  1899 					.ifdef @new
  1900 					lda <@VarData
  1901 					sta :ztmp
  1902 					lda >@VarData
  1903 					ldy #@VarDataSize-1
  1904 					jmp @FreeMem
  1905 					els
  1906 24C9 60				rts						; ret
  1907 					eif
  1908 				.endl
  1909
  1910 24CA			.local	BALL_BLOCK_SOUND				; PROCEDURE
  1911
  1912 				; ------------------------------------------------------------
  1913
  1914 = 9A86			A	= DATAORIGIN+$00AF
  1915 = 9A88			B	= DATAORIGIN+$00B1
  1916
  1917 = 9A86			@VarData	= A
  1918 = 0004			@VarDataSize	= 4
  1919
  1920 24CA			@exit
  1921 					.ifdef @new
  1922 					lda <@VarData
  1923 					sta :ztmp
  1924 					lda >@VarData
  1925 					ldy #@VarDataSize-1
  1926 					jmp @FreeMem
  1927 					els
  1928 24CA 60				rts						; ret
  1929 					eif
  1930 				.endl
  1931
  1932 24CB			.local	MOUSERESET					; PROCEDURE
  1933
  1934 24CB			@exit
  1935 					.ifdef @new
  1936 					lda <@VarData
  1937 					sta :ztmp
  1938 					lda >@VarData
  1939 					ldy #@VarDataSize-1
  1940 					jmp @FreeMem
  1941 					els
  1942 24CB 60				rts						; ret
  1943 					eif
  1944 				.endl
  1945
  1946 24CC			.local	MOUSECLICK					; FUNCTION
  1947
  1948 				; optimize OK (arkanoid_vbxe.pas), line = 89
  1949
  1950 24CC AD 83 9A			lda MOUS.FIRE
  1951 24CF 8D 8A 9A			sta RESULT
  1952 24D2 A9 00			lda #$00
  1953 24D4 8D 8B 9A			sta RESULT+1
  1954
  1955 				; optimize OK (arkanoid_vbxe.pas), line = 91
  1956
  1957 24D7 A0 01			ldy #1
  1958 24D9 AD 83 9A			lda MOUS.FIRE
  1959 24DC F0 01			beq @+
  1960 24DE 88				dey
  1961 				@
  1962 24DF 98				tya
  1963 24E0 8D 83 9A			sta MOUS.FIRE
  1964 24E3			@exit
  1965
  1966 				; ------------------------------------------------------------
  1967
  1968 = 9A8A			RESULT	= DATAORIGIN+$00B3
  1969
  1970 24E3 60				rts						; ret
  1971 				.endl
  1972
  1973 24E4			.local	MOUSECOORDS					; PROCEDURE
  1974
  1975 				; optimize OK (arkanoid_vbxe.pas), line = 104
  1976
  1977 24E4 AC 8C 9A 84 84 AC + 	mwy X :bp2
  1978 24EE A0 00			ldy #$00
  1979 24F0 AD 7F 9A			lda MOUS.X
  1980 24F3 91 84			sta (:bp2),y
  1981 24F5 C8				iny
  1982 24F6 AD 80 9A			lda MOUS.X+1
  1983 24F9 91 84			sta (:bp2),y
  1984
  1985 				; optimize OK (arkanoid_vbxe.pas), line = 105
  1986
  1987 24FB AC 8E 9A 84 84 AC + 	mwy Y :bp2
  1988 2505 A0 00			ldy #$00
  1989 2507 A9 BE			lda #$BE
  1990 2509 91 84			sta (:bp2),y
  1991 250B C8				iny
  1992 250C A9 00			lda #$00
  1993 250E 91 84			sta (:bp2),y
  1994
  1995 				; ------------------------------------------------------------
  1996
  1997 = 9A8C			X	= DATAORIGIN+$00B5
  1998 = 9A8E			Y	= DATAORIGIN+$00B7
  1999
  2000 = 9A8C			@VarData	= X
  2001 = 0004			@VarDataSize	= 4
  2002
  2003 2510			@exit
  2004 					.ifdef @new
  2005 					lda <@VarData
  2006 					sta :ztmp
  2007 					lda >@VarData
  2008 					ldy #@VarDataSize-1
  2009 					jmp @FreeMem
  2010 					els
  2011 2510 60				rts						; ret
  2012 					eif
  2013 				.endl
  2014
  2015 2511			.local	MOUSE_X_LIMIT					; PROCEDURE
  2016
  2017 				; ------------------------------------------------------------
  2018
  2019 = 9A90			MN	= DATAORIGIN+$00B9
  2020 = 9A92			MX	= DATAORIGIN+$00BB
  2021
  2022 = 9A90			@VarData	= MN
  2023 = 0004			@VarDataSize	= 4
  2024
  2025 2511			@exit
  2026 					.ifdef @new
  2027 					lda <@VarData
  2028 					sta :ztmp
  2029 					lda >@VarData
  2030 					ldy #@VarDataSize-1
  2031 					jmp @FreeMem
  2032 					els
  2033 2511 60				rts						; ret
  2034 					eif
  2035 				.endl
  2036
  2037 2512			.local	MOUSEMOVE					; PROCEDURE
  2038
  2039 				; ------------------------------------------------------------
  2040
  2041 = 9A94			X	= DATAORIGIN+$00BD
  2042 = 9A96			Y	= DATAORIGIN+$00BF
  2043
  2044 = 9A94			@VarData	= X
  2045 = 0004			@VarDataSize	= 4
  2046
  2047 2512			@exit
  2048 					.ifdef @new
  2049 					lda <@VarData
  2050 					sta :ztmp
  2051 					lda >@VarData
  2052 					ldy #@VarDataSize-1
  2053 					jmp @FreeMem
  2054 					els
  2055 2512 60				rts						; ret
  2056 					eif
  2057 				.endl
  2058
  2059 2513			.local	BLITZERO					; PROCEDURE
  2060
  2061 				; optimize OK (service.pas), line = 283
  2062
  2063 2513 A9 00			lda #$00
  2064 2515 8D 9F A3			sta I
  2065 2518 8D A0 A3			sta I+1
  2066 251B AD 9D A3			lda SIZE
  2067 251E 38 E9 01			sub #$01
  2068 2521 8D 34 25			sta @FORTMP_03C7_0
  2069 2524 AD 9E A3			lda SIZE+1
  2070 2527 E9 00			sbc #$00
  2071 2529 8D 2D 25			sta @FORTMP_03C7_1
  2072
  2073 252C			l_03CA
  2074 				; --- ForToDoCondition
  2075 252C A9 00			lda @FORTMP_03C7_1::#$00
  2076 252E CD A0 A3			cmp I+1
  2077 2531 D0 05			bne @+
  2078 2533 A9 00			lda @FORTMP_03C7_0::#$00
  2079 2535 CD 9F A3			cmp I
  2080 				@
  2081 2538 90 76			jcc l_03D6
  2082
  2083 				; optimize OK (service.pas), line = 284
  2084
  2085 253A AD 95 A3			lda SRC
  2086 253D 18 6D 9F A3			add I
  2087 2541 85 9F			sta :STACKORIGIN+9
  2088 2543 AD 96 A3			lda SRC+1
  2089 2546 6D A0 A3			adc I+1
  2090 2549 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  2091 254B AD E0 98			lda SCREEN
  2092 254E 18 65 9F			add :STACKORIGIN+9
  2093 2551 A8				tay
  2094 2552 AD E1 98			lda SCREEN+1
  2095 2555 65 AF			adc :STACKORIGIN+STACKWIDTH+9
  2096 2557 85 83			sta :bp+1
  2097 2559 B1 82			lda (:bp),y
  2098 255B F0 46			jeq l_03EE
  2099 255D AD 99 A3			lda DST
  2100 2560 18 6D 9F A3			add I
  2101 2564 85 9F			sta :STACKORIGIN+9
  2102 2566 AD 9A A3			lda DST+1
  2103 2569 6D A0 A3			adc I+1
  2104 256C 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  2105 256E AD 95 A3			lda SRC
  2106 2571 18 6D 9F A3			add I
  2107 2575 85 A0			sta :STACKORIGIN+10
  2108 2577 AD 96 A3			lda SRC+1
  2109 257A 6D A0 A3			adc I+1
  2110 257D 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  2111 257F AD E0 98			lda SCREEN
  2112 2582 18 65 A0			add :STACKORIGIN+10
  2113 2585 A8				tay
  2114 2586 AD E1 98			lda SCREEN+1
  2115 2589 65 B0			adc :STACKORIGIN+STACKWIDTH+10
  2116 258B 85 83			sta :bp+1
  2117 258D B1 82			lda (:bp),y
  2118 258F 85 A0			sta :STACKORIGIN+10
  2119 2591 AD E0 98			lda SCREEN
  2120 2594 18 65 9F			add :STACKORIGIN+9
  2121 2597 A8				tay
  2122 2598 AD E1 98			lda SCREEN+1
  2123 259B 65 AF			adc :STACKORIGIN+STACKWIDTH+9
  2124 259D 85 83			sta :bp+1
  2125 259F A5 A0			lda :STACKORIGIN+10
  2126 25A1 91 82			sta (:bp),y
  2127 25A3			l_03EE
  2128
  2129 				; --- ForToDoEpilog
  2130 25A3 EE 9F A3			inc I
  2131 25A6 D0 84			jne l_03CA
  2132 25A8 EE A0 A3			inc I+1
  2133 25AB F0 03 4C 2C 25		jne l_03CA
  2134 25B0			l_03D6
  2135
  2136 				; ------------------------------------------------------------
  2137
  2138 = A395			SRC	= DATAORIGIN+$09BE
  2139 = A399			DST	= DATAORIGIN+$09C2
  2140 = A39D			SIZE	= DATAORIGIN+$09C6
  2141 = A39F			I	= DATAORIGIN+$09C8
  2142
  2143 = A395			@VarData	= SRC
  2144 = 000C			@VarDataSize	= 12
  2145
  2146 25B0			@exit
  2147 					.ifdef @new
  2148 					lda <@VarData
  2149 					sta :ztmp
  2150 					lda >@VarData
  2151 					ldy #@VarDataSize-1
  2152 					jmp @FreeMem
  2153 					els
  2154 25B0 60				rts						; ret
  2155 					eif
  2156 				.endl
  2157
  2158 25B1			.local	BLITTMP						; PROCEDURE
  2159
  2160 				; optimize OK (service.pas), line = 293
  2161
  2162 25B1 A9 00			lda #$00
  2163 25B3 8D A8 A3			sta X
  2164 25B6 AC A7 A3			ldy SIZE
  2165 25B9 88				dey
  2166 25BA 8C BE 25			sty @FORTMP_0418_0
  2167
  2168 25BD			l_041B
  2169 				; --- ForToDoCondition
  2170 25BD A9 00			lda @FORTMP_0418_0::#$00
  2171 25BF CD A8 A3			cmp X
  2172 25C2 90 2F			jcc l_0429
  2173
  2174 				; optimize OK (service.pas), line = 294
  2175
  2176 25C4 AD A3 A3			lda DST
  2177 25C7 18 6D A8 A3			add X
  2178 25CB 85 9F			sta :STACKORIGIN+9
  2179 25CD AD A4 A3			lda DST+1
  2180 25D0 69 00			adc #$00
  2181 25D2 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  2182 25D4 AC A8 A3			ldy X
  2183 25D7 B9 97 9E			lda adr.TMP,y
  2184 25DA 85 A0			sta :STACKORIGIN+10
  2185 25DC AD E0 98			lda SCREEN
  2186 25DF 18 65 9F			add :STACKORIGIN+9
  2187 25E2 A8				tay
  2188 25E3 AD E1 98			lda SCREEN+1
  2189 25E6 65 AF			adc :STACKORIGIN+STACKWIDTH+9
  2190 25E8 85 83			sta :bp+1
  2191 25EA A5 A0			lda :STACKORIGIN+10
  2192 25EC 91 82			sta (:bp),y
  2193
  2194 				; --- ForToDoEpilog
  2195 25EE EE A8 A3			inc X
  2196 25F1 D0 CA			jne l_041B
  2197 25F3			l_0429
  2198
  2199 				; ------------------------------------------------------------
  2200
  2201 = A3A3			DST	= DATAORIGIN+$09CC
  2202 = A3A7			SIZE	= DATAORIGIN+$09D0
  2203 = A3A8			X	= DATAORIGIN+$09D1
  2204
  2205 = A3A3			@VarData	= DST
  2206 = 0006			@VarDataSize	= 6
  2207
  2208 25F3			@exit
  2209 					.ifdef @new
  2210 					lda <@VarData
  2211 					sta :ztmp
  2212 					lda >@VarData
  2213 					ldy #@VarDataSize-1
  2214 					jmp @FreeMem
  2215 					els
  2216 25F3 60				rts						; ret
  2217 					eif
  2218 				.endl
  2219
  2220 25F4			.local	BLITROW						; PROCEDURE
  2221
  2222 				; optimize OK (service.pas), line = 303
  2223
  2224 25F4 A9 00			lda #$00
  2225 25F6 8D B4 A3			sta X
  2226 25F9 8D B5 A3			sta X+1
  2227 25FC AD B2 A3			lda SIZE
  2228 25FF 38 E9 01			sub #$01
  2229 2602 8D 15 26			sta @FORTMP_044D_0
  2230 2605 AD B3 A3			lda SIZE+1
  2231 2608 E9 00			sbc #$00
  2232 260A 8D 0E 26			sta @FORTMP_044D_1
  2233
  2234 260D			l_0450
  2235 				; --- ForToDoCondition
  2236 260D A9 00			lda @FORTMP_044D_1::#$00
  2237 260F CD B5 A3			cmp X+1
  2238 2612 D0 05			bne @+
  2239 2614 A9 00			lda @FORTMP_044D_0::#$00
  2240 2616 CD B4 A3			cmp X
  2241 				@
  2242 2619 90 50			jcc l_045C
  2243
  2244 				; optimize OK (service.pas), line = 304
  2245
  2246 261B AD AE A3			lda DST
  2247 261E 18 6D B4 A3			add X
  2248 2622 85 9F			sta :STACKORIGIN+9
  2249 2624 AD AF A3			lda DST+1
  2250 2627 6D B5 A3			adc X+1
  2251 262A 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  2252 262C AD AA A3			lda SRC
  2253 262F 18 6D B4 A3			add X
  2254 2633 85 A0			sta :STACKORIGIN+10
  2255 2635 AD AB A3			lda SRC+1
  2256 2638 6D B5 A3			adc X+1
  2257 263B 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  2258 263D AD E0 98			lda SCREEN
  2259 2640 18 65 A0			add :STACKORIGIN+10
  2260 2643 A8				tay
  2261 2644 AD E1 98			lda SCREEN+1
  2262 2647 65 B0			adc :STACKORIGIN+STACKWIDTH+10
  2263 2649 85 83			sta :bp+1
  2264 264B B1 82			lda (:bp),y
  2265 264D 85 A0			sta :STACKORIGIN+10
  2266 264F AD E0 98			lda SCREEN
  2267 2652 18 65 9F			add :STACKORIGIN+9
  2268 2655 A8				tay
  2269 2656 AD E1 98			lda SCREEN+1
  2270 2659 65 AF			adc :STACKORIGIN+STACKWIDTH+9
  2271 265B 85 83			sta :bp+1
  2272 265D A5 A0			lda :STACKORIGIN+10
  2273 265F 91 82			sta (:bp),y
  2274
  2275 				; --- ForToDoEpilog
  2276 2661 EE B4 A3			inc X
  2277 2664 D0 A7			jne l_0450
  2278 2666 EE B5 A3			inc X+1
  2279 2669 D0 A2			jne l_0450
  2280 266B			l_045C
  2281
  2282 				; ------------------------------------------------------------
  2283
  2284 = A3AA			SRC	= DATAORIGIN+$09D3
  2285 = A3AE			DST	= DATAORIGIN+$09D7
  2286 = A3B2			SIZE	= DATAORIGIN+$09DB
  2287 = A3B4			X	= DATAORIGIN+$09DD
  2288
  2289 = A3AA			@VarData	= SRC
  2290 = 000C			@VarDataSize	= 12
  2291
  2292 266B			@exit
  2293 					.ifdef @new
  2294 					lda <@VarData
  2295 					sta :ztmp
  2296 					lda >@VarData
  2297 					ldy #@VarDataSize-1
  2298 					jmp @FreeMem
  2299 					els
  2300 266B 60				rts						; ret
  2301 					eif
  2302 				.endl
  2303
  2304 266C			.local	BLITBYTE					; PROCEDURE
  2305
  2306 				; optimize OK (service.pas), line = 312
  2307
  2308 266C AD E0 98			lda SCREEN
  2309 266F 18 6D B8 A3			add SRC
  2310 2673 A8				tay
  2311 2674 AD E1 98			lda SCREEN+1
  2312 2677 6D B9 A3			adc SRC+1
  2313 267A 85 83			sta :bp+1
  2314 267C B1 82			lda (:bp),y
  2315 267E 85 A0			sta :STACKORIGIN+10
  2316 2680 AD E0 98			lda SCREEN
  2317 2683 18 6D BC A3			add DST
  2318 2687 A8				tay
  2319 2688 AD E1 98			lda SCREEN+1
  2320 268B 6D BD A3			adc DST+1
  2321 268E 85 83			sta :bp+1
  2322 2690 A5 A0			lda :STACKORIGIN+10
  2323 2692 91 82			sta (:bp),y
  2324
  2325 				; ------------------------------------------------------------
  2326
  2327 = A3B8			SRC	= DATAORIGIN+$09E1
  2328 = A3BC			DST	= DATAORIGIN+$09E5
  2329
  2330 = A3B8			@VarData	= SRC
  2331 = 0008			@VarDataSize	= 8
  2332
  2333 2694			@exit
  2334 					.ifdef @new
  2335 					lda <@VarData
  2336 					sta :ztmp
  2337 					lda >@VarData
  2338 					ldy #@VarDataSize-1
  2339 					jmp @FreeMem
  2340 					els
  2341 2694 60				rts						; ret
  2342 					eif
  2343 				.endl
  2344
  2345 2695			.local	PUTBYTE						; PROCEDURE
  2346
  2347 				; optimize OK (service.pas), line = 320
  2348
  2349 2695 AD E0 98			lda SCREEN
  2350 2698 18 6D C0 A3			add DST
  2351 269C A8				tay
  2352 269D AD E1 98			lda SCREEN+1
  2353 26A0 6D C1 A3			adc DST+1
  2354 26A3 85 83			sta :bp+1
  2355 26A5 AD C4 A3			lda V
  2356 26A8 91 82			sta (:bp),y
  2357
  2358 				; ------------------------------------------------------------
  2359
  2360 = A3C0			DST	= DATAORIGIN+$09E9
  2361 = A3C4			V	= DATAORIGIN+$09ED
  2362
  2363 = A3C0			@VarData	= DST
  2364 = 0005			@VarDataSize	= 5
  2365
  2366 26AA			@exit
  2367 					.ifdef @new
  2368 					lda <@VarData
  2369 					sta :ztmp
  2370 					lda >@VarData
  2371 					ldy #@VarDataSize-1
  2372 					jmp @FreeMem
  2373 					els
  2374 26AA 60				rts						; ret
  2375 					eif
  2376 				.endl
  2377
  2378 26AB			.local	GETBYTE						; FUNCTION
  2379
  2380 				; optimize OK (service.pas), line = 328
  2381
  2382 26AB AD E0 98			lda SCREEN
  2383 26AE 18 6D C5 A3			add SRC
  2384 26B2 A8				tay
  2385 26B3 AD E1 98			lda SCREEN+1
  2386 26B6 6D C6 A3			adc SRC+1
  2387 26B9 85 83			sta :bp+1
  2388 26BB B1 82			lda (:bp),y
  2389 26BD 8D C9 A3			sta RESULT
  2390 26C0			@exit
  2391
  2392 				; ------------------------------------------------------------
  2393
  2394 = A3C5			SRC	= DATAORIGIN+$09EE
  2395 = A3C9			RESULT	= DATAORIGIN+$09F2
  2396
  2397 = A3C5			@VarData	= SRC
  2398 = 0004			@VarDataSize	= 4
  2399
  2400 26C0 60				rts						; ret
  2401 				.endl
  2402
  2403 26C1			.local	NOSOUND						; PROCEDURE
  2404
  2405 26C1			@exit
  2406 					.ifdef @new
  2407 					lda <@VarData
  2408 					sta :ztmp
  2409 					lda >@VarData
  2410 					ldy #@VarDataSize-1
  2411 					jmp @FreeMem
  2412 					els
  2413 26C1 60				rts						; ret
  2414 					eif
  2415 				.endl
  2416
  2417 26C2			.local	MYDELAY						; PROCEDURE
  2418
  2419 				; ------------------------------------------------------------
  2420
  2421 = A3CA			A	= DATAORIGIN+$09F3
  2422
  2423 = A3CA			@VarData	= A
  2424 = 0002			@VarDataSize	= 2
  2425
  2426 26C2			@exit
  2427 					.ifdef @new
  2428 					lda <@VarData
  2429 					sta :ztmp
  2430 					lda >@VarData
  2431 					ldy #@VarDataSize-1
  2432 					jmp @FreeMem
  2433 					els
  2434 26C2 60				rts						; ret
  2435 					eif
  2436 				.endl
  2437
  2438 26C3			.local	MAX						; FUNCTION
  2439
  2440 				; optimize OK (service.pas), line = 395
  2441
  2442 26C3 AD CE A3			lda B
  2443 26C6 CD CC A3			cmp A
  2444 26C9 AD CF A3			lda B+1
  2445 26CC ED CD A3			sbc A+1
  2446 26CF 50 02			svc
  2447 26D1 49 80			eor #$80
  2448 26D3 10 0C			jpl l_04B3
  2449 26D5 AD CC A3			lda A
  2450 26D8 8D D0 A3			sta RESULT
  2451 26DB AD CD A3			lda A+1
  2452 26DE 4C EA 26			jmp l_04C2
  2453 26E1			l_04B3
  2454
  2455 				; optimize OK (service.pas), line = 396
  2456
  2457 26E1 AD CE A3			lda B
  2458 26E4 8D D0 A3			sta RESULT
  2459 26E7 AD CF A3			lda B+1
  2460 26EA			l_04C2
  2461 26EA 8D D1 A3			sta RESULT+1
  2462 26ED			@exit
  2463
  2464 				; ------------------------------------------------------------
  2465
  2466 = A3CC			A	= DATAORIGIN+$09F5
  2467 = A3CE			B	= DATAORIGIN+$09F7
  2468 = A3D0			RESULT	= DATAORIGIN+$09F9
  2469
  2470 = A3CC			@VarData	= A
  2471 = 0004			@VarDataSize	= 4
  2472
  2473 26ED 60				rts						; ret
  2474 				.endl
  2475
  2476 26EE			.local	MIN						; FUNCTION
  2477
  2478 				; optimize OK (service.pas), line = 402
  2479
  2480 26EE AD D2 A3			lda A
  2481 26F1 CD D4 A3			cmp B
  2482 26F4 AD D3 A3			lda A+1
  2483 26F7 ED D5 A3			sbc B+1
  2484 26FA 50 02			svc
  2485 26FC 49 80			eor #$80
  2486 26FE 10 0C			jpl l_04DD
  2487 2700 AD D2 A3			lda A
  2488 2703 8D D6 A3			sta RESULT
  2489 2706 AD D3 A3			lda A+1
  2490 2709 4C 15 27			jmp l_04EC
  2491 270C			l_04DD
  2492
  2493 				; optimize OK (service.pas), line = 403
  2494
  2495 270C AD D4 A3			lda B
  2496 270F 8D D6 A3			sta RESULT
  2497 2712 AD D5 A3			lda B+1
  2498 2715			l_04EC
  2499 2715 8D D7 A3			sta RESULT+1
  2500 2718			@exit
  2501
  2502 				; ------------------------------------------------------------
  2503
  2504 = A3D2			A	= DATAORIGIN+$09FB
  2505 = A3D4			B	= DATAORIGIN+$09FD
  2506 = A3D6			RESULT	= DATAORIGIN+$09FF
  2507
  2508 = A3D2			@VarData	= A
  2509 = 0004			@VarDataSize	= 4
  2510
  2511 2718 60				rts						; ret
  2512 				.endl
  2513
  2514 2719			.local	FATAL_ERROR					; PROCEDURE
  2515 2719 8D D8 A3			sta ERR_TYPE
  2516
  2517 				; optimize OK (service.pas), line = 412
  2518
  2519 271C 8D 55 9B			sta STATUS
  2520
  2521 				; ------------------------------------------------------------
  2522
  2523 = A3D8			ERR_TYPE	= DATAORIGIN+$0A01
  2524
  2525 = A3D8			@VarData	= ERR_TYPE
  2526 = 0001			@VarDataSize	= 1
  2527
  2528 271F			@exit
  2529 					.ifdef @new
  2530 					lda <@VarData
  2531 					sta :ztmp
  2532 					lda >@VarData
  2533 					ldy #@VarDataSize-1
  2534 					jmp @FreeMem
  2535 					els
  2536 271F 60				rts						; ret
  2537 					eif
  2538 				.endl
  2539
  2540 2720			.local	INITROWARRAY					; PROCEDURE
  2541
  2542 				; optimize OK (service.pas), line = 450
  2543
  2544 2720 A9 00			lda #$00
  2545 2722 8D D9 A3			sta Y
  2546
  2547 2725			l_0508
  2548 				; --- ForToDoCondition
  2549 2725 AD D9 A3			lda Y
  2550 2728 C9 C8			cmp #$C8
  2551 272A B0 34			jcs l_0516
  2552
  2553 				; optimize OK (service.pas), line = 451
  2554
  2555 272C 85 9F			sta :STACKORIGIN+9
  2556 272E A9 00			lda #$00
  2557 2730 06 9F			asl :STACKORIGIN+9
  2558 2732 2A				rol @
  2559 2733 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  2560 2735 AD D9 A3			lda Y
  2561 2738 85 86			sta :eax
  2562 273A A9 00			lda #$00
  2563 273C 85 87			sta :eax+1
  2564 273E 20 58 19			jsr @mul320
  2565 2741 AD DA 98			lda ROW
  2566 2744 18 65 9F			add :STACKORIGIN+9
  2567 2747 85 84			sta :bp2
  2568 2749 AD DB 98			lda ROW+1
  2569 274C 65 AF			adc :STACKORIGIN+STACKWIDTH+9
  2570 274E 85 85			sta :bp2+1
  2571 2750 A0 00			ldy #$00
  2572 2752 A5 86			lda :eax
  2573 2754 91 84			sta (:bp2),y
  2574 2756 C8				iny
  2575 2757 A5 87			lda :eax+1
  2576 2759 91 84			sta (:bp2),y
  2577
  2578 				; --- ForToDoEpilog
  2579 275B EE D9 A3			inc Y
  2580 275E D0 C5			jne l_0508
  2581 2760			l_0516
  2582
  2583 				; optimize OK (service.pas), line = 453
  2584
  2585 2760 A9 C8			lda #$C8
  2586 2762 8D D9 A3			sta Y
  2587
  2588 2765			l_0531
  2589 				; --- ForToDoCondition
  2590 2765 AD D9 A3			lda Y
  2591 2768 C9 FB			cmp #$FB
  2592 276A B0 26			jcs l_053F
  2593
  2594 				; optimize OK (service.pas), line = 454
  2595
  2596 276C A9 00			lda #$00
  2597 276E 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  2598 2770 AD D9 A3			lda Y
  2599 2773 0A				asl @
  2600 2774 26 AF			rol :STACKORIGIN+STACKWIDTH+9
  2601 2776 18 6D DA 98			add ROW
  2602 277A 85 84			sta :bp2
  2603 277C AD DB 98			lda ROW+1
  2604 277F 65 AF			adc :STACKORIGIN+STACKWIDTH+9
  2605 2781 85 85			sta :bp2+1
  2606 2783 A0 00			ldy #$00
  2607 2785 98				tya
  2608 2786 91 84			sta (:bp2),y
  2609 2788 C8				iny
  2610 2789 A9 FA			lda #$FA
  2611 278B 91 84			sta (:bp2),y
  2612
  2613 				; --- ForToDoEpilog
  2614 278D EE D9 A3			inc Y
  2615 2790 D0 D3			jne l_0531
  2616 2792			l_053F
  2617
  2618 				; ------------------------------------------------------------
  2619
  2620 = A3D9			Y	= DATAORIGIN+$0A02
  2621
  2622 = A3D9			@VarData	= Y
  2623 = 0001			@VarDataSize	= 1
  2624
  2625 2792			@exit
  2626 					.ifdef @new
  2627 					lda <@VarData
  2628 					sta :ztmp
  2629 					lda >@VarData
  2630 					ldy #@VarDataSize-1
  2631 					jmp @FreeMem
  2632 					els
  2633 2792 60				rts						; ret
  2634 					eif
  2635 				.endl
  2636
  2637 2793			.local	INITSVGA					; PROCEDURE
  2638
  2639 2793			@exit
  2640 					.ifdef @new
  2641 					lda <@VarData
  2642 					sta :ztmp
  2643 					lda >@VarData
  2644 					ldy #@VarDataSize-1
  2645 					jmp @FreeMem
  2646 					els
  2647 2793 60				rts						; ret
  2648 					eif
  2649 				.endl
  2650
  2651 2794			.local	SHINE_BLOCK					; PROCEDURE
  2652
  2653 				; optimize OK (service.pas), line = 509
  2654
  2655 2794 AD 75 9B			lda SHINEREC.XB
  2656 2797 8D DA A3			sta XB
  2657 279A A9 00			lda #$00
  2658 279C 8D DB A3			sta XB+1
  2659
  2660 				; optimize OK (service.pas), line = 510
  2661
  2662 279F AD 76 9B			lda SHINEREC.YB
  2663 27A2 8D DC A3			sta YB
  2664 27A5 A9 00			lda #$00
  2665 27A7 8D DD A3			sta YB+1
  2666
  2667 				; optimize OK (service.pas), line = 512
  2668
  2669 27AA 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  2670 27AC AD DC A3			lda YB
  2671 27AF 0A				asl @
  2672 27B0 26 B0			rol :STACKORIGIN+STACKWIDTH+10
  2673 27B2 0A				asl @
  2674 27B3 26 B0			rol :STACKORIGIN+STACKWIDTH+10
  2675 27B5 0A				asl @
  2676 27B6 0A				asl @
  2677 27B7 18 6D DA A3			add XB
  2678 27BB 8D E9 A3			sta I
  2679
  2680 				; optimize OK (service.pas), line = 514
  2681
  2682 27BE A8				tay
  2683 27BF B9 00 DB			lda adr.WALL,y
  2684 27C2 C9 09			cmp #$09
  2685 27C4 B0 03 4C 1B 29		jcc l_0582
  2686
  2687 				; optimize OK (service.pas), line = 516
  2688
  2689 27C9 AD 77 9B			lda SHINEREC.FRAME
  2690 27CC 4A				lsr @
  2691 27CD 8D DE A3			sta FRAME
  2692 27D0 A9 00			lda #$00
  2693 27D2 8D DF A3			sta FRAME+1
  2694
  2695 				; optimize OK (service.pas), line = 517
  2696
  2697 27D5 B9 00 DB			lda adr.WALL,y
  2698 27D8 C9 0A			cmp #$0A
  2699 27DA F0 0E			jeq l_05A2
  2700 27DC AD DE A3			lda FRAME
  2701 27DF 18 69 05			add #$05
  2702 27E2 8D DE A3			sta FRAME
  2703 27E5 90 03			scc
  2704 27E7 EE DF A3			inc FRAME+1
  2705 27EA			l_05A2
  2706
  2707 				; optimize OK (service.pas), line = 519
  2708
  2709 27EA AD DA A3			lda XB
  2710 27ED 85 A0			sta :STACKORIGIN+10
  2711 27EF AD DB A3			lda XB+1
  2712 27F2 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  2713 27F4 06 A0			asl :STACKORIGIN+10
  2714 27F6 26 B0			rol :STACKORIGIN+STACKWIDTH+10
  2715 27F8 06 A0			asl :STACKORIGIN+10
  2716 27FA 26 B0			rol :STACKORIGIN+STACKWIDTH+10
  2717 27FC 06 A0			asl :STACKORIGIN+10
  2718 27FE 26 B0			rol :STACKORIGIN+STACKWIDTH+10
  2719 2800 06 A0			asl :STACKORIGIN+10
  2720 2802 26 B0			rol :STACKORIGIN+STACKWIDTH+10
  2721 2804 A9 09			lda #$09
  2722 2806 18 65 A0			add :STACKORIGIN+10
  2723 2809 8D E0 A3			sta XF
  2724 280C A9 00			lda #$00
  2725 280E 65 B0			adc :STACKORIGIN+STACKWIDTH+10
  2726 2810 8D E1 A3			sta XF+1
  2727
  2728 				; optimize OK (service.pas), line = 520
  2729
  2730 2813 AD DC A3			lda YB
  2731 2816 85 A0			sta :STACKORIGIN+10
  2732 2818 AD DD A3			lda YB+1
  2733 281B 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  2734 281D 06 A0			asl :STACKORIGIN+10
  2735 281F 26 B0			rol :STACKORIGIN+STACKWIDTH+10
  2736 2821 06 A0			asl :STACKORIGIN+10
  2737 2823 26 B0			rol :STACKORIGIN+STACKWIDTH+10
  2738 2825 06 A0			asl :STACKORIGIN+10
  2739 2827 26 B0			rol :STACKORIGIN+STACKWIDTH+10
  2740 2829 A9 16			lda #$16
  2741 282B 18 65 A0			add :STACKORIGIN+10
  2742 282E 8D E2 A3			sta YF
  2743 2831 A9 00			lda #$00
  2744 2833 65 B0			adc :STACKORIGIN+STACKWIDTH+10
  2745 2835 8D E3 A3			sta YF+1
  2746
  2747 				; optimize OK (service.pas), line = 521
  2748
  2749 2838 AD DE A3			lda FRAME
  2750 283B 85 9F			sta :STACKORIGIN+9
  2751 283D AD DF A3			lda FRAME+1
  2752 2840 06 9F			asl :STACKORIGIN+9
  2753 2842 2A				rol @
  2754 2843 06 9F			asl :STACKORIGIN+9
  2755 2845 2A				rol @
  2756 2846 06 9F			asl :STACKORIGIN+9
  2757 2848 2A				rol @
  2758 2849 06 9F			asl :STACKORIGIN+9
  2759 284B 2A				rol @
  2760 284C 06 9F			asl :STACKORIGIN+9
  2761 284E 2A				rol @
  2762 284F 06 9F			asl :STACKORIGIN+9
  2763 2851 2A				rol @
  2764 2852 06 9F			asl :STACKORIGIN+9
  2765 2854 2A				rol @
  2766 2855 8D E5 A3			sta FR+1
  2767 2858 A5 9F			lda :STACKORIGIN+9
  2768 285A 8D E4 A3			sta FR
  2769
  2770 				; optimize OK (service.pas), line = 523
  2771
  2772 285D A9 00			lda #$00
  2773 285F 8D E8 A3			sta Y
  2774
  2775 2862			l_05D2
  2776 				; --- ForToDoCondition
  2777 2862 AD E8 A3			lda Y
  2778 2865 C9 08			cmp #$08
  2779 2867 90 03 4C 1B 29		jcs l_05E0
  2780
  2781 				; optimize OK (service.pas), line = 525
  2782
  2783 286C 85 9F			sta :STACKORIGIN+9
  2784 286E A9 00			lda #$00
  2785 2870 06 9F			asl :STACKORIGIN+9
  2786 2872 2A				rol @
  2787 2873 06 9F			asl :STACKORIGIN+9
  2788 2875 2A				rol @
  2789 2876 06 9F			asl :STACKORIGIN+9
  2790 2878 2A				rol @
  2791 2879 06 9F			asl :STACKORIGIN+9
  2792 287B 2A				rol @
  2793 287C 8D E7 A3			sta OG+1
  2794 287F A5 9F			lda :STACKORIGIN+9
  2795 2881 8D E6 A3			sta OG
  2796
  2797 				; optimize OK (service.pas), line = 528
  2798
  2799 2884 AD E2 A3			lda YF
  2800 2887 18 6D E8 A3			add Y
  2801 288B 85 A1			sta :STACKORIGIN+11
  2802 288D AD E3 A3			lda YF+1
  2803 2890 69 00			adc #$00
  2804 2892 06 A1			asl :STACKORIGIN+11
  2805 2894 2A				rol @
  2806 2895 85 B1			sta :STACKORIGIN+STACKWIDTH+11
  2807 2897 AD DA 98			lda ROW
  2808 289A 18 65 A1			add :STACKORIGIN+11
  2809 289D 85 84			sta :bp2
  2810 289F AD DB 98			lda ROW+1
  2811 28A2 65 B1			adc :STACKORIGIN+STACKWIDTH+11
  2812 28A4 85 85			sta :bp2+1
  2813 28A6 A0 00			ldy #$00
  2814 28A8 AD E0 A3			lda XF
  2815 28AB 18 71 84			add (:bp2),y
  2816 28AE 8D AE A3			sta BLITROW.DST
  2817 28B1 C8				iny
  2818 28B2 AD E1 A3			lda XF+1
  2819 28B5 71 84			adc (:bp2),y
  2820 28B7 8D AF A3			sta BLITROW.DST+1
  2821 28BA A9 00			lda #$00
  2822 28BC 69 00			adc #$00
  2823 28BE 8D B0 A3			sta BLITROW.DST+2
  2824 28C1 A9 00			lda #$00
  2825 28C3 69 00			adc #$00
  2826 28C5 8D B1 A3			sta BLITROW.DST+3
  2827 28C8 AD EC 9A			lda SHINEWALL.OFS
  2828 28CB 18 6D E4 A3			add FR
  2829 28CF 85 A1			sta :STACKORIGIN+11
  2830 28D1 AD ED 9A			lda SHINEWALL.OFS+1
  2831 28D4 6D E5 A3			adc FR+1
  2832 28D7 85 B1			sta :STACKORIGIN+STACKWIDTH+11
  2833 28D9 AD EE 9A			lda SHINEWALL.OFS+2
  2834 28DC 69 00			adc #$00
  2835 28DE 85 C1			sta :STACKORIGIN+STACKWIDTH*2+11
  2836 28E0 AD EF 9A			lda SHINEWALL.OFS+3
  2837 28E3 69 00			adc #$00
  2838 28E5 85 D1			sta :STACKORIGIN+STACKWIDTH*3+11
  2839 28E7 A5 A1			lda :STACKORIGIN+11
  2840 28E9 18 6D E6 A3			add OG
  2841 28ED 8D AA A3			sta BLITROW.SRC
  2842 28F0 A5 B1			lda :STACKORIGIN+STACKWIDTH+11
  2843 28F2 6D E7 A3			adc OG+1
  2844 28F5 8D AB A3			sta BLITROW.SRC+1
  2845 28F8 A5 C1			lda :STACKORIGIN+STACKWIDTH*2+11
  2846 28FA 69 00			adc #$00
  2847 28FC 8D AC A3			sta BLITROW.SRC+2
  2848 28FF A5 D1			lda :STACKORIGIN+STACKWIDTH*3+11
  2849 2901 69 00			adc #$00
  2850 2903 8D AD A3			sta BLITROW.SRC+3
  2851 2906 A9 10			lda #$10
  2852 2908 8D B2 A3			sta BLITROW.SIZE
  2853 290B A9 00			lda #$00
  2854 290D 8D B3 A3			sta BLITROW.SIZE+1
  2855 2910 20 F4 25			jsr BLITROW
  2856
  2857 				; --- ForToDoEpilog
  2858 2913 EE E8 A3			inc Y
  2859 2916 F0 03 4C 62 28		jne l_05D2
  2860 291B			l_05E0
  2861 291B			l_0582
  2862
  2863 				; optimize FAIL (0, service.pas), line = 532
  2864
  2865 291B EE 77 9B			inc SHINEREC.FRAME
  2866
  2867 				; optimize OK (service.pas), line = 533
  2868
  2869 291E AD 77 9B			lda SHINEREC.FRAME
  2870 2921 C9 0A			cmp #$0A
  2871 2923 D0 05			jne l_0627
  2872 2925 A9 00			lda #$00
  2873 2927 8D 79 9B			sta SHINEREC.ACTIVE
  2874 292A			l_0627
  2875
  2876 				; ------------------------------------------------------------
  2877
  2878 = A3DA			XB	= DATAORIGIN+$0A03
  2879 = A3DC			YB	= DATAORIGIN+$0A05
  2880 = A3DE			FRAME	= DATAORIGIN+$0A07
  2881 = A3E0			XF	= DATAORIGIN+$0A09
  2882 = A3E2			YF	= DATAORIGIN+$0A0B
  2883 = A3E4			FR	= DATAORIGIN+$0A0D
  2884 = A3E6			OG	= DATAORIGIN+$0A0F
  2885 = A3E8			Y	= DATAORIGIN+$0A11
  2886 = A3E9			I	= DATAORIGIN+$0A12
  2887
  2888 = A3DA			@VarData	= XB
  2889 = 0010			@VarDataSize	= 16
  2890
  2891 292A			@exit
  2892 					.ifdef @new
  2893 					lda <@VarData
  2894 					sta :ztmp
  2895 					lda >@VarData
  2896 					ldy #@VarDataSize-1
  2897 					jmp @FreeMem
  2898 					els
  2899 292A 60				rts						; ret
  2900 					eif
  2901 				.endl
  2902
  2903 292B			.local	UNSHINE_BLOCK					; PROCEDURE
  2904
  2905 				; optimize OK (service.pas), line = 542
  2906
  2907 292B A9 09			lda #$09
  2908 292D 8D 77 9B			sta SHINEREC.FRAME
  2909
  2910 				; optimize FAIL ('SHINE_BLOCK', service.pas), line = 543
  2911
  2912 2930 20 94 27			jsr SHINE_BLOCK
  2913
  2914 2933			@exit
  2915 					.ifdef @new
  2916 					lda <@VarData
  2917 					sta :ztmp
  2918 					lda >@VarData
  2919 					ldy #@VarDataSize-1
  2920 					jmp @FreeMem
  2921 					els
  2922 2933 60				rts						; ret
  2923 					eif
  2924 				.endl
  2925
  2926 2934			.local	SHINE						; PROCEDURE
  2927
  2928 				; optimize OK (service.pas), line = 550
  2929
  2930 2934 AD 79 9B			lda SHINEREC.ACTIVE
  2931 2937 F0 03			jeq l_0647
  2932 2939 20 2B 29			jsr UNSHINE_BLOCK
  2933 293C			l_0647
  2934
  2935 				; optimize OK (service.pas), line = 552
  2936
  2937 293C AD EA A3			lda XB
  2938 293F 8D 75 9B			sta SHINEREC.XB
  2939
  2940 				; optimize OK (service.pas), line = 553
  2941
  2942 2942 AD EB A3			lda YB
  2943 2945 8D 76 9B			sta SHINEREC.YB
  2944
  2945 				; optimize OK (service.pas), line = 554
  2946
  2947 2948 A9 00			lda #$00
  2948 294A 8D 77 9B			sta SHINEREC.FRAME
  2949
  2950 				; optimize OK (service.pas), line = 555
  2951
  2952 294D A9 01			lda #$01
  2953 294F 8D 79 9B			sta SHINEREC.ACTIVE
  2954
  2955 				; optimize OK (service.pas), line = 556
  2956
  2957 2952 AD EB A3			lda YB
  2958 2955 0A				asl @
  2959 2956 0A				asl @
  2960 2957 0A				asl @
  2961 2958 0A				asl @
  2962 2959 18 6D EA A3			add XB
  2963 295D A8				tay
  2964 295E B9 00 DB			lda adr.WALL,y
  2965 2961 8D 78 9B			sta SHINEREC.BLOCK
  2966
  2967 				; ------------------------------------------------------------
  2968
  2969 = A3EA			XB	= DATAORIGIN+$0A13
  2970 = A3EB			YB	= DATAORIGIN+$0A14
  2971
  2972 = A3EA			@VarData	= XB
  2973 = 0002			@VarDataSize	= 2
  2974
  2975 2964			@exit
  2976 					.ifdef @new
  2977 					lda <@VarData
  2978 					sta :ztmp
  2979 					lda >@VarData
  2980 					ldy #@VarDataSize-1
  2981 					jmp @FreeMem
  2982 					els
  2983 2964 60				rts						; ret
  2984 					eif
  2985 				.endl
  2986
  2987 2965			.local	CHECKSHINE					; PROCEDURE
  2988
  2989 				; optimize OK (service.pas), line = 562
  2990
  2991 2965 AD 79 9B			lda SHINEREC.ACTIVE
  2992 2968 C9 01			cmp #$01
  2993 296A D0 03			jne l_0688
  2994 296C 20 94 27			jsr SHINE_BLOCK
  2995 296F			l_0688
  2996
  2997 296F			@exit
  2998 					.ifdef @new
  2999 					lda <@VarData
  3000 					sta :ztmp
  3001 					lda >@VarData
  3002 					ldy #@VarDataSize-1
  3003 					jmp @FreeMem
  3004 					els
  3005 296F 60				rts						; ret
  3006 					eif
  3007 				.endl
  3008
  3009 2970			.local	RANDOM_LETTER_DROP				; FUNCTION
  3010
  3011 				; --- RepeatUntilProlog
  3012 2970			l_0691
  3013
  3014 				; optimize OK (service.pas), line = 570
  3015
  3016 2970 A9 64			lda #$64
  3017 2972 20 18 24			jsr SYSTEM.RANDOM.@010180000
  3018 2975 AD 1C 9A			lda SYSTEM.RANDOM.@010180000.RESULT
  3019 2978 8D EE A3			sta RN
  3020 297B A9 00			lda #$00
  3021 297D 8D EF A3			sta RN+1
  3022
  3023 				; optimize OK (service.pas), line = 571
  3024
  3025 2980 A9 00			lda #$00
  3026 2982 8D F0 A3			sta SUM
  3027 2985 8D F1 A3			sta SUM+1
  3028
  3029 				; optimize OK (service.pas), line = 572
  3030
  3031 2988 8D F2 A3			sta LETTER
  3032 298B 8D F3 A3			sta LETTER+1
  3033
  3034 				; --- RepeatUntilProlog
  3035 298E			l_069F
  3036
  3037 				; optimize FAIL (0, service.pas), line = 577
  3038
  3039 298E EE F2 A3			inc LETTER
  3040 2991 D0 03			sne
  3041 2993 EE F3 A3			inc LETTER+1
  3042
  3043 				; optimize OK (service.pas), line = 578
  3044
  3045 2996 AC F2 A3			ldy LETTER
  3046 2999 B9 CB 10			lda adr.LETTER_DIS,y
  3047 299C 18 6D F0 A3			add SUM
  3048 29A0 8D F0 A3			sta SUM
  3049 29A3 AD F1 A3			lda SUM+1
  3050 29A6 69 00			adc #$00
  3051 29A8 8D F1 A3			sta SUM+1
  3052
  3053 				; optimize OK (service.pas), line = 581
  3054
  3055 29AB AD EF A3			lda RN+1
  3056 29AE CD F1 A3			cmp SUM+1
  3057 29B1 D0 06			bne @+
  3058 29B3 AD EE A3			lda RN
  3059 29B6 CD F0 A3			cmp SUM
  3060 				@
  3061 29B9 B0 D3			jcs l_069F
  3062
  3063 				; optimize OK (service.pas), line = 585
  3064
  3065 29BB AD F2 A3			lda LETTER
  3066 29BE 38 E9 01			sub #$01
  3067 29C1 85 9F			sta :STACKORIGIN+9
  3068 29C3 AD F3 A3			lda LETTER+1
  3069 29C6 E9 00			sbc #$00
  3070 29C8 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  3071 29CA A9 00			lda #$00
  3072 29CC E9 00			sbc #$00
  3073 29CE 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
  3074 29D0 A9 00			lda #$00
  3075 29D2 E9 00			sbc #$00
  3076 29D4 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
  3077 29D6 AD 8C 9B			lda LETT.LAST
  3078 29D9 85 A0			sta :STACKORIGIN+10
  3079 29DB A0 00			ldy #$00
  3080 29DD AD 8D 9B			lda LETT.LAST+1
  3081 29E0 10 01			spl
  3082 29E2 88				dey
  3083 29E3 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  3084 29E5 84 C0			sty :STACKORIGIN+STACKWIDTH*2+10
  3085 29E7 84 D0			sty :STACKORIGIN+STACKWIDTH*3+10
  3086 29E9 A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
  3087 29EB C5 D0			cmp :STACKORIGIN+STACKWIDTH*3+10
  3088 29ED D0 10			bne @+
  3089 29EF A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
  3090 29F1 C5 C0			cmp :STACKORIGIN+STACKWIDTH*2+10
  3091 29F3 D0 0A			bne @+
  3092 29F5 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  3093 29F7 C5 B0			cmp :STACKORIGIN+STACKWIDTH+10
  3094 29F9 D0 04			bne @+
  3095 29FB A5 9F			lda :STACKORIGIN+9
  3096 29FD C5 A0			cmp :STACKORIGIN+10
  3097 				@
  3098 29FF D0 03 4C 70 29		jeq l_0691
  3099
  3100 				; optimize OK (service.pas), line = 587
  3101
  3102 2A04 AD F2 A3			lda LETTER
  3103 2A07 38 E9 01			sub #$01
  3104 2A0A 8D EC A3			sta RESULT
  3105 2A0D AD F3 A3			lda LETTER+1
  3106 2A10 E9 00			sbc #$00
  3107 2A12 8D ED A3			sta RESULT+1
  3108 2A15			@exit
  3109
  3110 				; ------------------------------------------------------------
  3111
  3112 = A3EC			RESULT	= DATAORIGIN+$0A15
  3113 = A3EE			RN	= DATAORIGIN+$0A17
  3114 = A3F0			SUM	= DATAORIGIN+$0A19
  3115 = A3F2			LETTER	= DATAORIGIN+$0A1B
  3116
  3117 = A3EE			@VarData	= RN
  3118 = 0006			@VarDataSize	= 6
  3119
  3120 2A15 60				rts						; ret
  3121 				.endl
  3122
  3123 2A16			.local	PUT_LETTER					; PROCEDURE
  3124
  3125 				; optimize OK (service.pas), line = 596
  3126
  3127 2A16 A9 00			lda #$00
  3128 2A18 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
  3129 2A1A AD 80 9B			lda LETT.TYP+1
  3130 2A1D 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  3131 2A1F AD 7F 9B			lda LETT.TYP
  3132 2A22 0A				asl @
  3133 2A23 26 AF			rol :STACKORIGIN+STACKWIDTH+9
  3134 2A25 26 BF			rol :STACKORIGIN+STACKWIDTH*2+9
  3135 2A27 0A				asl @
  3136 2A28 26 AF			rol :STACKORIGIN+STACKWIDTH+9
  3137 2A2A 26 BF			rol :STACKORIGIN+STACKWIDTH*2+9
  3138 2A2C 85 9F			sta :STACKORIGIN+9
  3139 2A2E A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  3140 2A30 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
  3141 2A32 A5 9F			lda :STACKORIGIN+9
  3142 2A34 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  3143 2A36 AD 81 9B			lda LETT.FRAME
  3144 2A39 85 A0			sta :STACKORIGIN+10
  3145 2A3B A9 00			lda #$00
  3146 2A3D 06 A0			asl :STACKORIGIN+10
  3147 2A3F 2A				rol @
  3148 2A40 06 A0			asl :STACKORIGIN+10
  3149 2A42 2A				rol @
  3150 2A43 06 A0			asl :STACKORIGIN+10
  3151 2A45 2A				rol @
  3152 2A46 06 A0			asl :STACKORIGIN+10
  3153 2A48 2A				rol @
  3154 2A49 18 65 AF			add :STACKORIGIN+STACKWIDTH+9
  3155 2A4C 8D F5 A3			sta FL+1
  3156 2A4F A5 A0			lda :STACKORIGIN+10
  3157 2A51 8D F4 A3			sta FL
  3158
  3159 				; optimize OK (service.pas), line = 598
  3160
  3161 2A54 A9 00			lda #$00
  3162 2A56 8D F8 A3			sta YL
  3163
  3164 2A59			l_06EF
  3165 				; --- ForToDoCondition
  3166 2A59 AD F8 A3			lda YL
  3167 2A5C C9 08			cmp #$08
  3168 2A5E 90 03 4C 19 2B		jcs l_06FD
  3169
  3170 				; optimize OK (service.pas), line = 600
  3171
  3172 2A63 85 9F			sta :STACKORIGIN+9
  3173 2A65 A9 00			lda #$00
  3174 2A67 06 9F			asl :STACKORIGIN+9
  3175 2A69 2A				rol @
  3176 2A6A 06 9F			asl :STACKORIGIN+9
  3177 2A6C 2A				rol @
  3178 2A6D 06 9F			asl :STACKORIGIN+9
  3179 2A6F 2A				rol @
  3180 2A70 06 9F			asl :STACKORIGIN+9
  3181 2A72 2A				rol @
  3182 2A73 06 9F			asl :STACKORIGIN+9
  3183 2A75 2A				rol @
  3184 2A76 06 9F			asl :STACKORIGIN+9
  3185 2A78 2A				rol @
  3186 2A79 06 9F			asl :STACKORIGIN+9
  3187 2A7B 2A				rol @
  3188 2A7C 8D F7 A3			sta FW+1
  3189 2A7F A5 9F			lda :STACKORIGIN+9
  3190 2A81 8D F6 A3			sta FW
  3191
  3192 				; optimize OK (service.pas), line = 602
  3193
  3194 2A84 AD 7E 9B			lda LETT.Y
  3195 2A87 18 6D F8 A3			add YL
  3196 2A8B 85 A1			sta :STACKORIGIN+11
  3197 2A8D A9 00			lda #$00
  3198 2A8F 69 00			adc #$00
  3199 2A91 06 A1			asl :STACKORIGIN+11
  3200 2A93 2A				rol @
  3201 2A94 85 B1			sta :STACKORIGIN+STACKWIDTH+11
  3202 2A96 AD DA 98			lda ROW
  3203 2A99 18 65 A1			add :STACKORIGIN+11
  3204 2A9C 85 84			sta :bp2
  3205 2A9E AD DB 98			lda ROW+1
  3206 2AA1 65 B1			adc :STACKORIGIN+STACKWIDTH+11
  3207 2AA3 85 85			sta :bp2+1
  3208 2AA5 A0 00			ldy #$00
  3209 2AA7 AD 7D 9B			lda LETT.X
  3210 2AAA 18 71 84			add (:bp2),y
  3211 2AAD 8D 99 A3			sta BLITZERO.DST
  3212 2AB0 C8				iny
  3213 2AB1 A9 00			lda #$00
  3214 2AB3 71 84			adc (:bp2),y
  3215 2AB5 8D 9A A3			sta BLITZERO.DST+1
  3216 2AB8 A9 00			lda #$00
  3217 2ABA 69 00			adc #$00
  3218 2ABC 8D 9B A3			sta BLITZERO.DST+2
  3219 2ABF A9 00			lda #$00
  3220 2AC1 69 00			adc #$00
  3221 2AC3 8D 9C A3			sta BLITZERO.DST+3
  3222 2AC6 AD 04 9B			lda LETTERS.OFS
  3223 2AC9 18 6D F6 A3			add FW
  3224 2ACD 85 A1			sta :STACKORIGIN+11
  3225 2ACF AD 05 9B			lda LETTERS.OFS+1
  3226 2AD2 6D F7 A3			adc FW+1
  3227 2AD5 85 B1			sta :STACKORIGIN+STACKWIDTH+11
  3228 2AD7 AD 06 9B			lda LETTERS.OFS+2
  3229 2ADA 69 00			adc #$00
  3230 2ADC 85 C1			sta :STACKORIGIN+STACKWIDTH*2+11
  3231 2ADE AD 07 9B			lda LETTERS.OFS+3
  3232 2AE1 69 00			adc #$00
  3233 2AE3 85 D1			sta :STACKORIGIN+STACKWIDTH*3+11
  3234 2AE5 A5 A1			lda :STACKORIGIN+11
  3235 2AE7 18 6D F4 A3			add FL
  3236 2AEB 8D 95 A3			sta BLITZERO.SRC
  3237 2AEE A5 B1			lda :STACKORIGIN+STACKWIDTH+11
  3238 2AF0 6D F5 A3			adc FL+1
  3239 2AF3 8D 96 A3			sta BLITZERO.SRC+1
  3240 2AF6 A5 C1			lda :STACKORIGIN+STACKWIDTH*2+11
  3241 2AF8 69 00			adc #$00
  3242 2AFA 8D 97 A3			sta BLITZERO.SRC+2
  3243 2AFD A5 D1			lda :STACKORIGIN+STACKWIDTH*3+11
  3244 2AFF 69 00			adc #$00
  3245 2B01 8D 98 A3			sta BLITZERO.SRC+3
  3246 2B04 A9 10			lda #$10
  3247 2B06 8D 9D A3			sta BLITZERO.SIZE
  3248 2B09 A9 00			lda #$00
  3249 2B0B 8D 9E A3			sta BLITZERO.SIZE+1
  3250 2B0E 20 13 25			jsr BLITZERO
  3251
  3252 				; --- ForToDoEpilog
  3253 2B11 EE F8 A3			inc YL
  3254 2B14 F0 03 4C 59 2A		jne l_06EF
  3255 2B19			l_06FD
  3256
  3257 				; ------------------------------------------------------------
  3258
  3259 = A3F4			FL	= DATAORIGIN+$0A1D
  3260 = A3F6			FW	= DATAORIGIN+$0A1F
  3261 = A3F8			YL	= DATAORIGIN+$0A21
  3262
  3263 = A3F4			@VarData	= FL
  3264 = 0005			@VarDataSize	= 5
  3265
  3266 2B19			@exit
  3267 					.ifdef @new
  3268 					lda <@VarData
  3269 					sta :ztmp
  3270 					lda >@VarData
  3271 					ldy #@VarDataSize-1
  3272 					jmp @FreeMem
  3273 					els
  3274 2B19 60				rts						; ret
  3275 					eif
  3276 				.endl
  3277
  3278 2B1A			.local	REMOVE_LETTER					; PROCEDURE
  3279
  3280 				; optimize OK (service.pas), line = 614
  3281
  3282 2B1A A9 00			lda #$00
  3283 2B1C 8D FB A3			sta YL
  3284
  3285 2B1F			l_073B
  3286 				; --- ForToDoCondition
  3287 2B1F AD FB A3			lda YL
  3288 2B22 C9 08			cmp #$08
  3289 2B24 90 03 4C AC 2B		jcs l_0749
  3290
  3291 				; optimize OK (service.pas), line = 616
  3292
  3293 2B29 AD 7E 9B			lda LETT.Y
  3294 2B2C 6D FB A3			adc YL
  3295 2B2F 85 A0			sta :STACKORIGIN+10
  3296 2B31 A9 00			lda #$00
  3297 2B33 69 00			adc #$00
  3298 2B35 06 A0			asl :STACKORIGIN+10
  3299 2B37 2A				rol @
  3300 2B38 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  3301 2B3A AD DA 98			lda ROW
  3302 2B3D 18 65 A0			add :STACKORIGIN+10
  3303 2B40 85 84			sta :bp2
  3304 2B42 AD DB 98			lda ROW+1
  3305 2B45 65 B0			adc :STACKORIGIN+STACKWIDTH+10
  3306 2B47 85 85			sta :bp2+1
  3307 2B49 A0 00			ldy #$00
  3308 2B4B AD 7D 9B			lda LETT.X
  3309 2B4E 18 71 84			add (:bp2),y
  3310 2B51 8D F9 A3			sta AD
  3311 2B54 C8				iny
  3312 2B55 A9 00			lda #$00
  3313 2B57 71 84			adc (:bp2),y
  3314 2B59 8D FA A3			sta AD+1
  3315
  3316 				; optimize OK (service.pas), line = 617
  3317
  3318 2B5C C9 FA			cmp #$FA
  3319 2B5E B0 44			jcs l_076E
  3320
  3321 				; optimize OK (service.pas), line = 620
  3322
  3323 2B60 AD F9 A3			lda AD
  3324 2B63 8D AE A3			sta BLITROW.DST
  3325 2B66 AD FA A3			lda AD+1
  3326 2B69 8D AF A3			sta BLITROW.DST+1
  3327 2B6C A9 00			lda #$00
  3328 2B6E 8D B0 A3			sta BLITROW.DST+2
  3329 2B71 8D B1 A3			sta BLITROW.DST+3
  3330 2B74 AD A4 9A			lda PLAYSCREEN.OFS
  3331 2B77 18 6D F9 A3			add AD
  3332 2B7B 8D AA A3			sta BLITROW.SRC
  3333 2B7E AD A5 9A			lda PLAYSCREEN.OFS+1
  3334 2B81 6D FA A3			adc AD+1
  3335 2B84 8D AB A3			sta BLITROW.SRC+1
  3336 2B87 AD A6 9A			lda PLAYSCREEN.OFS+2
  3337 2B8A 69 00			adc #$00
  3338 2B8C 8D AC A3			sta BLITROW.SRC+2
  3339 2B8F AD A7 9A			lda PLAYSCREEN.OFS+3
  3340 2B92 69 00			adc #$00
  3341 2B94 8D AD A3			sta BLITROW.SRC+3
  3342 2B97 A9 10			lda #$10
  3343 2B99 8D B2 A3			sta BLITROW.SIZE
  3344 2B9C A9 00			lda #$00
  3345 2B9E 8D B3 A3			sta BLITROW.SIZE+1
  3346 2BA1 20 F4 25			jsr BLITROW
  3347 2BA4			l_076E
  3348
  3349 				; --- ForToDoEpilog
  3350 2BA4 EE FB A3			inc YL
  3351 2BA7 F0 03 4C 1F 2B		jne l_073B
  3352 2BAC			l_0749
  3353
  3354 				; ------------------------------------------------------------
  3355
  3356 = A3F9			AD	= DATAORIGIN+$0A22
  3357 = A3FB			YL	= DATAORIGIN+$0A24
  3358
  3359 = A3F9			@VarData	= AD
  3360 = 0003			@VarDataSize	= 3
  3361
  3362 2BAC			@exit
  3363 					.ifdef @new
  3364 					lda <@VarData
  3365 					sta :ztmp
  3366 					lda >@VarData
  3367 					ldy #@VarDataSize-1
  3368 					jmp @FreeMem
  3369 					els
  3370 2BAC 60				rts						; ret
  3371 					eif
  3372 				.endl
  3373
  3374 2BAD			.local	DISABLE_LETTER					; PROCEDURE
  3375
  3376 				; optimize FAIL ('REMOVE_LETTER', service.pas), line = 628
  3377
  3378 2BAD 20 1A 2B			jsr REMOVE_LETTER
  3379
  3380 				; optimize OK (service.pas), line = 629
  3381
  3382 2BB0 A9 00			lda #$00
  3383 2BB2 8D 83 9B			sta LETT.ACTIVE
  3384
  3385 2BB5			@exit
  3386 					.ifdef @new
  3387 					lda <@VarData
  3388 					sta :ztmp
  3389 					lda >@VarData
  3390 					ldy #@VarDataSize-1
  3391 					jmp @FreeMem
  3392 					els
  3393 2BB5 60				rts						; ret
  3394 					eif
  3395 				.endl
  3396
  3397 2BB6			.local	START_LETTER					; PROCEDURE
  3398
  3399 				; optimize OK (service.pas), line = 635
  3400
  3401 2BB6 AD 83 9B			lda LETT.ACTIVE
  3402 2BB9 F0 03			jeq l_079D
  3403 2BBB 20 AD 2B			jsr DISABLE_LETTER
  3404 2BBE			l_079D
  3405
  3406 				; optimize OK (service.pas), line = 637
  3407
  3408 2BBE AD FC A3			lda XL
  3409 2BC1 8D 7D 9B			sta LETT.X
  3410
  3411 				; optimize OK (service.pas), line = 638
  3412
  3413 2BC4 AD FE A3			lda YL
  3414 2BC7 8D 7E 9B			sta LETT.Y
  3415
  3416 				; optimize OK (service.pas), line = 639
  3417
  3418 2BCA AD 00 A4			lda LETTER
  3419 2BCD 8D 7F 9B			sta LETT.TYP
  3420 2BD0 AD 01 A4			lda LETTER+1
  3421 2BD3 8D 80 9B			sta LETT.TYP+1
  3422
  3423 				; optimize OK (service.pas), line = 640
  3424
  3425 2BD6 A9 00			lda #$00
  3426 2BD8 8D 81 9B			sta LETT.FRAME
  3427
  3428 				; optimize OK (service.pas), line = 641
  3429
  3430 2BDB 8D 82 9B			sta LETT.SUBFRAME
  3431
  3432 				; optimize OK (service.pas), line = 642
  3433
  3434 2BDE A9 01			lda #$01
  3435 2BE0 8D 83 9B			sta LETT.ACTIVE
  3436
  3437 				; ------------------------------------------------------------
  3438
  3439 = A3FC			XL	= DATAORIGIN+$0A25
  3440 = A3FE			YL	= DATAORIGIN+$0A27
  3441 = A400			LETTER	= DATAORIGIN+$0A29
  3442
  3443 = A3FC			@VarData	= XL
  3444 = 0006			@VarDataSize	= 6
  3445
  3446 2BE3			@exit
  3447 					.ifdef @new
  3448 					lda <@VarData
  3449 					sta :ztmp
  3450 					lda >@VarData
  3451 					ldy #@VarDataSize-1
  3452 					jmp @FreeMem
  3453 					els
  3454 2BE3 60				rts						; ret
  3455 					eif
  3456 				.endl
  3457
  3458 2BE4			.local	CHECK_LETTER					; PROCEDURE
  3459
  3460 				; optimize OK (service.pas), line = 648
  3461
  3462 2BE4 AD 83 9B			lda LETT.ACTIVE
  3463 2BE7 D0 03 4C E3 2C		jeq l_07CC
  3464
  3465 				; optimize FAIL ('REMOVE_LETTER', service.pas), line = 650
  3466
  3467 2BEC 20 1A 2B			jsr REMOVE_LETTER
  3468
  3469 				; optimize FAIL (0, service.pas), line = 651
  3470
  3471 2BEF EE 7E 9B			inc LETT.Y
  3472
  3473 				; optimize OK (service.pas), line = 652
  3474
  3475 2BF2 AD 7E 9B			lda LETT.Y
  3476 2BF5 C9 C8			cmp #$C8
  3477 2BF7 90 03			jcc l_07E4
  3478 				; optimize FAIL ('DISABLE_LETTER', service.pas), line = 653
  3479 2BF9 4C D5 2C			jmp l_07EF
  3480 2BFC			l_07E4
  3481
  3482 				; optimize FAIL ('PUT_LETTER', service.pas), line = 655
  3483
  3484 2BFC 20 16 2A			jsr PUT_LETTER
  3485
  3486 				; optimize FAIL (0, service.pas), line = 656
  3487
  3488 2BFF EE 82 9B			inc LETT.SUBFRAME
  3489
  3490 				; optimize OK (service.pas), line = 657
  3491
  3492 2C02 AD 82 9B			lda LETT.SUBFRAME
  3493 2C05 C9 05			cmp #$05
  3494 2C07 D0 08			jne l_0806
  3495
  3496 				; optimize OK (service.pas), line = 659
  3497
  3498 2C09 A9 00			lda #$00
  3499 2C0B 8D 82 9B			sta LETT.SUBFRAME
  3500
  3501 				; optimize FAIL (0, service.pas), line = 660
  3502
  3503 2C0E EE 81 9B			inc LETT.FRAME
  3504 2C11			l_0806
  3505
  3506 				; optimize OK (service.pas), line = 663
  3507
  3508 2C11 AD 81 9B			lda LETT.FRAME
  3509 2C14 C9 08			cmp #$08
  3510 2C16 D0 05			jne l_0823
  3511 2C18 A9 00			lda #$00
  3512 2C1A 8D 81 9B			sta LETT.FRAME
  3513 2C1D			l_0823
  3514
  3515 				; optimize OK (service.pas), line = 665
  3516
  3517 2C1D AD 7D 9B			lda LETT.X
  3518 2C20 18 69 10			add #$10
  3519 2C23 85 A0			sta :STACKORIGIN+10
  3520 2C25 A9 00			lda #$00
  3521 2C27 69 00			adc #$00
  3522 2C29 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  3523 2C2B A9 00			lda #$00
  3524 2C2D C5 B0			cmp :STACKORIGIN+STACKWIDTH+10
  3525 2C2F D0 05			bne @+
  3526 2C31 AD 18 9B			lda VAUS.X
  3527 2C34 C5 A0			cmp :STACKORIGIN+10
  3528 				@
  3529 2C36 90 03 4C D8 2C		jcs l_087C
  3530 				@
  3531 2C3B AD 18 9B			lda VAUS.X
  3532 2C3E 18 6D 20 9B			add VAUS.WIDTH
  3533 2C42 85 A0			sta :STACKORIGIN+10
  3534 2C44 A9 00			lda #$00
  3535 2C46 69 00			adc #$00
  3536 2C48 C9 00			cmp #$00
  3537 2C4A D0 05			bne @+
  3538 2C4C A5 A0			lda :STACKORIGIN+10
  3539 2C4E CD 7D 9B			cmp LETT.X
  3540 				@
  3541 2C51 B0 03 4C D8 2C		jcc l_087C
  3542 2C56 D0 03 4C D8 2C		jeq l_087C
  3543 				@
  3544 2C5B AD 7E 9B			lda LETT.Y
  3545 2C5E 18 69 08			add #$08
  3546 2C61 85 A1			sta :STACKORIGIN+11
  3547 2C63 A9 00			lda #$00
  3548 2C65 69 00			adc #$00
  3549 2C67 85 B1			sta :STACKORIGIN+STACKWIDTH+11
  3550 2C69 A9 00			lda #$00
  3551 2C6B C5 B1			cmp :STACKORIGIN+STACKWIDTH+11
  3552 2C6D D0 05			bne @+
  3553 2C6F AD 19 9B			lda VAUS.Y
  3554 2C72 C5 A1			cmp :STACKORIGIN+11
  3555 				@
  3556 2C74 B0 62			jcs l_087C
  3557 				@
  3558 2C76 AD 19 9B			lda VAUS.Y
  3559 2C79 18 6D 21 9B			add VAUS.HEIGHT
  3560 2C7D 85 A0			sta :STACKORIGIN+10
  3561 2C7F A9 00			lda #$00
  3562 2C81 69 00			adc #$00
  3563 2C83 C9 00			cmp #$00
  3564 2C85 D0 05			bne @+
  3565 2C87 A5 A0			lda :STACKORIGIN+10
  3566 2C89 CD 7E 9B			cmp LETT.Y
  3567 				@
  3568 2C8C 90 4A			jcc l_087C
  3569 2C8E F0 48			jeq l_087C
  3570 				@
  3571
  3572 				; optimize OK (service.pas), line = 668
  3573
  3574 2C90 A9 64			lda #$64
  3575 2C92 8D 86 9A			sta BALL_BLOCK_SOUND.A
  3576 2C95 A9 00			lda #$00
  3577 2C97 8D 87 9A			sta BALL_BLOCK_SOUND.A+1
  3578 2C9A A9 0A			lda #$0A
  3579 2C9C 8D 88 9A			sta BALL_BLOCK_SOUND.B
  3580 2C9F A9 00			lda #$00
  3581 2CA1 8D 89 9A			sta BALL_BLOCK_SOUND.B+1
  3582 2CA4 20 CA 24			jsr BALL_BLOCK_SOUND
  3583
  3584 				; optimize OK (service.pas), line = 669
  3585
  3586 2CA7 AC 7F 9B			ldy LETT.TYP
  3587 2CAA C8				iny
  3588 2CAB 8C 24 9B			sty VAUS.LETTER
  3589
  3590 				; optimize OK (service.pas), line = 670
  3591
  3592 2CAE AD 74 9B			lda CUR_PLAYER
  3593 2CB1 0A				asl @
  3594 2CB2 0A				asl @
  3595 2CB3 A8				tay
  3596 2CB4 B9 59 9B			lda adr.SCORE.PLAYER,y
  3597 2CB7 18 69 E8			add #$E8
  3598 2CBA 99 59 9B			sta adr.SCORE.PLAYER,y
  3599 2CBD B9 5A 9B			lda adr.SCORE.PLAYER+1,y
  3600 2CC0 69 03			adc #$03
  3601 2CC2 99 5A 9B			sta adr.SCORE.PLAYER+1,y
  3602 2CC5 B9 5B 9B			lda adr.SCORE.PLAYER+2,y
  3603 2CC8 69 00			adc #$00
  3604 2CCA 99 5B 9B			sta adr.SCORE.PLAYER+2,y
  3605 2CCD B9 5C 9B			lda adr.SCORE.PLAYER+3,y
  3606 2CD0 69 00			adc #$00
  3607 2CD2 99 5C 9B			sta adr.SCORE.PLAYER+3,y
  3608 2CD5			l_07EF
  3609
  3610 				; optimize FAIL ('DISABLE_LETTER', service.pas), line = 671
  3611
  3612 2CD5 20 AD 2B			jsr DISABLE_LETTER
  3613 2CD8			l_087C
  3614
  3615 				; optimize OK (service.pas), line = 675
  3616
  3617 2CD8 A9 00			lda #$00
  3618 2CDA 8D 84 9B			sta LETT.INCOMING
  3619 2CDD 8D 85 9B			sta LETT.INCOMING+1
  3620 2CE0 4C 1A 2D			jmp l_089D
  3621 2CE3			l_07CC
  3622
  3623 				; optimize OK (service.pas), line = 677
  3624
  3625 2CE3 AD 84 9B			lda LETT.INCOMING
  3626 2CE6 C9 E9			cmp #$E9
  3627 2CE8 AD 85 9B			lda LETT.INCOMING+1
  3628 2CEB E9 03			sbc #$03
  3629 2CED 50 02			svc
  3630 2CEF 49 80			eor #$80
  3631 2CF1 30 27			jmi l_08AE
  3632
  3633 				; optimize OK (service.pas), line = 678
  3634
  3635 2CF3 AD 86 9B			lda LETT.NEXTX
  3636 2CF6 8D FC A3			sta START_LETTER.XL
  3637 2CF9 AD 87 9B			lda LETT.NEXTX+1
  3638 2CFC 8D FD A3			sta START_LETTER.XL+1
  3639 2CFF AD 88 9B			lda LETT.NEXTY
  3640 2D02 8D FE A3			sta START_LETTER.YL
  3641 2D05 AD 89 9B			lda LETT.NEXTY+1
  3642 2D08 8D FF A3			sta START_LETTER.YL+1
  3643 2D0B AD 8A 9B			lda LETT.NEXTTYPE
  3644 2D0E 8D 00 A4			sta START_LETTER.LETTER
  3645 2D11 AD 8B 9B			lda LETT.NEXTTYPE+1
  3646 2D14 8D 01 A4			sta START_LETTER.LETTER+1
  3647 2D17 20 B6 2B			jsr START_LETTER
  3648 2D1A			l_089D
  3649 2D1A			l_08AE
  3650
  3651 2D1A			@exit
  3652 					.ifdef @new
  3653 					lda <@VarData
  3654 					sta :ztmp
  3655 					lda >@VarData
  3656 					ldy #@VarDataSize-1
  3657 					jmp @FreeMem
  3658 					els
  3659 2D1A 60				rts						; ret
  3660 					eif
  3661 				.endl
  3662
  3663 2D1B			.local	SHOWBTMPICTURE					; PROCEDURE
  3664
  3665 				; ------------------------------------------------------------
  3666
  3667 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
  3668 				; as Pointer
  3669 2D1B B5 96			lda :STACKORIGIN,x
  3670 2D1D 85 84			sta :bp2
  3671 2D1F B5 A6			lda :STACKORIGIN+STACKWIDTH,x
  3672 2D21 85 85			sta :bp2+1
  3673 2D23 A0 07			ldy #$07
  3674 2D25 B1 84 99 02 A4 88 + 	mva:rpl (:bp2),y adr.BTM,y-
  3675 2D2D CA				dex
  3676 2D2E			@main
  3677
  3678 				; optimize OK (service.pas), line = 688
  3679
  3680 2D2E AD 04 A4			lda BTM.HEIGHT
  3681 2D31 85 8E			sta :ecx
  3682 2D33 AD 05 A4			lda BTM.HEIGHT+1
  3683 2D36 85 8F			sta :ecx+1
  3684 2D38 AD 02 A4			lda BTM.WIDTH
  3685 2D3B 85 86			sta :eax
  3686 2D3D AD 03 A4			lda BTM.WIDTH+1
  3687 2D40 85 87			sta :eax+1
  3688 					.ifdef fmulinit
  3689 					fmulu_16
  3690 					els
  3691 2D42 20 2A 13			imulCX
  3692 					eif
  3693 2D45 A5 86			lda :eax
  3694 2D47 8D B2 A3			sta BLITROW.SIZE
  3695 2D4A A5 87			lda :eax+1
  3696 2D4C 8D B3 A3			sta BLITROW.SIZE+1
  3697 2D4F AD 06 A4			lda BTM.OFS
  3698 2D52 8D AA A3			sta BLITROW.SRC
  3699 2D55 AD 07 A4			lda BTM.OFS+1
  3700 2D58 8D AB A3			sta BLITROW.SRC+1
  3701 2D5B AD 08 A4			lda BTM.OFS+2
  3702 2D5E 8D AC A3			sta BLITROW.SRC+2
  3703 2D61 AD 09 A4			lda BTM.OFS+3
  3704 2D64 8D AD A3			sta BLITROW.SRC+3
  3705 2D67 A9 00			lda #$00
  3706 2D69 8D AE A3			sta BLITROW.DST
  3707 2D6C 8D AF A3			sta BLITROW.DST+1
  3708 2D6F 8D B0 A3			sta BLITROW.DST+2
  3709 2D72 8D B1 A3			sta BLITROW.DST+3
  3710 2D75 20 F4 25			jsr BLITROW
  3711
  3712 				; ------------------------------------------------------------
  3713
  3714 = A402			adr.BTM	= DATAORIGIN+$0A2B	; [8] RECORD
  3715 2D78			.var BTM	= adr.BTM .word
  3716 = A402			BTM.WIDTH	= DATAORIGIN+$0A2B
  3717 = A404			BTM.HEIGHT	= DATAORIGIN+$0A2D
  3718 = A406			BTM.OFS	= DATAORIGIN+$0A2F
  3719 = A40A			X	= DATAORIGIN+$0A33
  3720 = A40C			Y	= DATAORIGIN+$0A35
  3721 = A40E			OFST	= DATAORIGIN+$0A37
  3722
  3723 = A402			@VarData	= BTM.WIDTH
  3724 = 000E			@VarDataSize	= 14
  3725
  3726 2D78			@exit
  3727 					.ifdef @new
  3728 					lda <@VarData
  3729 					sta :ztmp
  3730 					lda >@VarData
  3731 					ldy #@VarDataSize-1
  3732 					jmp @FreeMem
  3733 					els
  3734 2D78 60				rts						; ret
  3735 					eif
  3736 = 2D79 02 A4		BTM
  3736 				.endl
  3737
  3738 2D7B			.local	SETPALETTE					; PROCEDURE
  3739
  3740 				; ------------------------------------------------------------
  3741
  3742 = A410			BTM	= DATAORIGIN+$0A39
  3743 = 99D7			BTM.WIDTH	= DATAORIGIN+$0000
  3744 = 99D9			BTM.HEIGHT	= DATAORIGIN+$0002
  3745 = 99DB			BTM.OFS	= DATAORIGIN+$0004
  3746
  3747 = A410			@VarData	= BTM
  3748 = 0002			@VarDataSize	= 2
  3749
  3750 2D7B			@exit
  3751 					.ifdef @new
  3752 					lda <@VarData
  3753 					sta :ztmp
  3754 					lda >@VarData
  3755 					ldy #@VarDataSize-1
  3756 					jmp @FreeMem
  3757 					els
  3758 2D7B 60				rts						; ret
  3759 					eif
  3760 				.endl
  3761
  3762 2D7C			.local	PLACE_BALL					; PROCEDURE
  3763
  3764 				; optimize OK (service.pas), line = 783
  3765
  3766 2D7C A9 00			lda #$00
  3767 2D7E 8D 18 A4			sta YP
  3768
  3769 2D81			l_08DA
  3770 				; --- ForToDoCondition
  3771 2D81 AD 18 A4			lda YP
  3772 2D84 C9 05			cmp #$05
  3773 2D86 90 03 4C 48 2E		jcs l_08E8
  3774
  3775 				; optimize OK (service.pas), line = 785
  3776
  3777 2D8B AC 14 A4 84 84 AC + 	mwy BALL :bp2
  3778 2D95 A0 00			ldy #BALL.X-DATAORIGIN
  3779 2D97 B1 84			lda (:bp2),y
  3780 2D99 38 E9 03			sub #$03
  3781 2D9C 85 9F			sta :STACKORIGIN+9
  3782 2D9E C8				iny
  3783 2D9F B1 84			lda (:bp2),y
  3784 2DA1 E9 00			sbc #$00
  3785 2DA3 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  3786 2DA5 AD 18 A4			lda YP
  3787 2DA8 38 E9 03			sub #$03
  3788 2DAB 85 A0			sta :STACKORIGIN+10
  3789 2DAD A9 00			lda #$00
  3790 2DAF E9 00			sbc #$00
  3791 2DB1 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  3792 2DB3 A0 02			ldy #BALL.Y-DATAORIGIN
  3793 2DB5 A5 A0			lda :STACKORIGIN+10
  3794 2DB7 18 71 84			add (:bp2),y
  3795 2DBA 85 A0			sta :STACKORIGIN+10
  3796 2DBC C8				iny
  3797 2DBD A5 B0			lda :STACKORIGIN+STACKWIDTH+10
  3798 2DBF 71 84			adc (:bp2),y
  3799 2DC1 06 A0			asl :STACKORIGIN+10
  3800 2DC3 2A				rol @
  3801 2DC4 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  3802 2DC6 AD DA 98			lda ROW
  3803 2DC9 18 65 A0			add :STACKORIGIN+10
  3804 2DCC 85 84			sta :bp2
  3805 2DCE AD DB 98			lda ROW+1
  3806 2DD1 65 B0			adc :STACKORIGIN+STACKWIDTH+10
  3807 2DD3 85 85			sta :bp2+1
  3808 2DD5 A0 00			ldy #$00
  3809 2DD7 A5 9F			lda :STACKORIGIN+9
  3810 2DD9 18 71 84			add (:bp2),y
  3811 2DDC 8D 19 A4			sta ADR
  3812 2DDF C8				iny
  3813 2DE0 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  3814 2DE2 71 84			adc (:bp2),y
  3815 2DE4 8D 1A A4			sta ADR+1
  3816
  3817 				; optimize OK (service.pas), line = 788
  3818
  3819 2DE7 AD 19 A4			lda ADR
  3820 2DEA 8D 99 A3			sta BLITZERO.DST
  3821 2DED AD 1A A4			lda ADR+1
  3822 2DF0 8D 9A A3			sta BLITZERO.DST+1
  3823 2DF3 A9 00			lda #$00
  3824 2DF5 8D 9B A3			sta BLITZERO.DST+2
  3825 2DF8 8D 9C A3			sta BLITZERO.DST+3
  3826 2DFB 85 B2			sta :STACKORIGIN+STACKWIDTH+12
  3827 2DFD AD 18 A4			lda YP
  3828 2E00 0A				asl @
  3829 2E01 26 B2			rol :STACKORIGIN+STACKWIDTH+12
  3830 2E03 0A				asl @
  3831 2E04 26 B2			rol :STACKORIGIN+STACKWIDTH+12
  3832 2E06 18 6D 18 A4			add YP
  3833 2E0A 85 A2			sta :STACKORIGIN+12
  3834 2E0C A5 B2			lda :STACKORIGIN+STACKWIDTH+12
  3835 2E0E 69 00			adc #$00
  3836 2E10 85 B2			sta :STACKORIGIN+STACKWIDTH+12
  3837 2E12 AD 9C 9A			lda BALLDATA.OFS
  3838 2E15 18 65 A2			add :STACKORIGIN+12
  3839 2E18 8D 95 A3			sta BLITZERO.SRC
  3840 2E1B AD 9D 9A			lda BALLDATA.OFS+1
  3841 2E1E 65 B2			adc :STACKORIGIN+STACKWIDTH+12
  3842 2E20 8D 96 A3			sta BLITZERO.SRC+1
  3843 2E23 AD 9E 9A			lda BALLDATA.OFS+2
  3844 2E26 69 00			adc #$00
  3845 2E28 8D 97 A3			sta BLITZERO.SRC+2
  3846 2E2B AD 9F 9A			lda BALLDATA.OFS+3
  3847 2E2E 69 00			adc #$00
  3848 2E30 8D 98 A3			sta BLITZERO.SRC+3
  3849 2E33 A9 05			lda #$05
  3850 2E35 8D 9D A3			sta BLITZERO.SIZE
  3851 2E38 A9 00			lda #$00
  3852 2E3A 8D 9E A3			sta BLITZERO.SIZE+1
  3853 2E3D 20 13 25			jsr BLITZERO
  3854
  3855 				; --- ForToDoEpilog
  3856 2E40 EE 18 A4			inc YP
  3857 2E43 F0 03 4C 81 2D		jne l_08DA
  3858 2E48			l_08E8
  3859
  3860 				; ------------------------------------------------------------
  3861
  3862 = A414			BALL	= DATAORIGIN+$0A3D
  3863 = 99D7			BALL.X	= DATAORIGIN+$0000
  3864 = 99D9			BALL.Y	= DATAORIGIN+$0002
  3865 = 99DB			BALL.FINEX	= DATAORIGIN+$0004
  3866 = 99DD			BALL.FINEY	= DATAORIGIN+$0006
  3867 = 99DF			BALL.OLDX	= DATAORIGIN+$0008
  3868 = 99E1			BALL.OLDY	= DATAORIGIN+$000A
  3869 = 99E3			BALL.SPEED	= DATAORIGIN+$000C
  3870 = 99E5			BALL.FINESPEED	= DATAORIGIN+$000E
  3871 = 99E7			BALL.SPEEDX	= DATAORIGIN+$0010
  3872 = 99E9			BALL.SPEEDY	= DATAORIGIN+$0012
  3873 = 99EB			BALL.SBD	= DATAORIGIN+$0014
  3874 = 99ED			BALL.BRWHIT	= DATAORIGIN+$0016
  3875 = 99EE			BALL.INPLAY	= DATAORIGIN+$0017
  3876 = 99EF			BALL.LAUNCH	= DATAORIGIN+$0018
  3877 = 99F0			BALL.ONVAUS	= DATAORIGIN+$0019
  3878 = 99F1			BALL.STM	= DATAORIGIN+$001A
  3879 = A418			YP	= DATAORIGIN+$0A41
  3880 = A419			ADR	= DATAORIGIN+$0A42
  3881
  3882 = A414			@VarData	= BALL
  3883 = 0005			@VarDataSize	= 5
  3884
  3885 2E48			@exit
  3886 					.ifdef @new
  3887 					lda <@VarData
  3888 					sta :ztmp
  3889 					lda >@VarData
  3890 					ldy #@VarDataSize-1
  3891 					jmp @FreeMem
  3892 					els
  3893 2E48 60				rts						; ret
  3894 					eif
  3895 				.endl
  3896
  3897 2E49			.local	REMOVE_BALL					; PROCEDURE
  3898
  3899 				; optimize OK (service.pas), line = 802
  3900
  3901 2E49 A9 00			lda #$00
  3902 2E4B 8D 1F A4			sta YP
  3903
  3904 2E4E			l_0927
  3905 				; --- ForToDoCondition
  3906 2E4E AD 1F A4			lda YP
  3907 2E51 C9 05			cmp #$05
  3908 2E53 90 03 4C 0C 2F		jcs l_0935
  3909
  3910 				; optimize OK (service.pas), line = 804
  3911
  3912 2E58 AC 1B A4 84 84 AC + 	mwy BALL :bp2
  3913 2E62 A0 08			ldy #BALL.OLDX-DATAORIGIN
  3914 2E64 B1 84			lda (:bp2),y
  3915 2E66 38 E9 03			sub #$03
  3916 2E69 85 9F			sta :STACKORIGIN+9
  3917 2E6B C8				iny
  3918 2E6C B1 84			lda (:bp2),y
  3919 2E6E E9 00			sbc #$00
  3920 2E70 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  3921 2E72 AD 1F A4			lda YP
  3922 2E75 38 E9 03			sub #$03
  3923 2E78 85 A0			sta :STACKORIGIN+10
  3924 2E7A A9 00			lda #$00
  3925 2E7C E9 00			sbc #$00
  3926 2E7E 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  3927 2E80 A0 0A			ldy #BALL.OLDY-DATAORIGIN
  3928 2E82 A5 A0			lda :STACKORIGIN+10
  3929 2E84 18 71 84			add (:bp2),y
  3930 2E87 85 A0			sta :STACKORIGIN+10
  3931 2E89 C8				iny
  3932 2E8A A5 B0			lda :STACKORIGIN+STACKWIDTH+10
  3933 2E8C 71 84			adc (:bp2),y
  3934 2E8E 06 A0			asl :STACKORIGIN+10
  3935 2E90 2A				rol @
  3936 2E91 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  3937 2E93 AD DA 98			lda ROW
  3938 2E96 18 65 A0			add :STACKORIGIN+10
  3939 2E99 85 84			sta :bp2
  3940 2E9B AD DB 98			lda ROW+1
  3941 2E9E 65 B0			adc :STACKORIGIN+STACKWIDTH+10
  3942 2EA0 85 85			sta :bp2+1
  3943 2EA2 A0 00			ldy #$00
  3944 2EA4 A5 9F			lda :STACKORIGIN+9
  3945 2EA6 18 71 84			add (:bp2),y
  3946 2EA9 8D 20 A4			sta TEMP
  3947 2EAC C8				iny
  3948 2EAD A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  3949 2EAF 71 84			adc (:bp2),y
  3950 2EB1 8D 21 A4			sta TEMP+1
  3951
  3952 				; optimize OK (service.pas), line = 806
  3953
  3954 2EB4 0D 20 A4			ora TEMP
  3955 2EB7 F0 4B			jeq l_096B
  3956 2EB9 AD 21 A4			lda TEMP+1
  3957 2EBC C9 FA			cmp #$FA
  3958 2EBE B0 44			jcs l_096B
  3959
  3960 				; optimize OK (service.pas), line = 809
  3961
  3962 2EC0 AD 20 A4			lda TEMP
  3963 2EC3 8D AE A3			sta BLITROW.DST
  3964 2EC6 AD 21 A4			lda TEMP+1
  3965 2EC9 8D AF A3			sta BLITROW.DST+1
  3966 2ECC A9 00			lda #$00
  3967 2ECE 8D B0 A3			sta BLITROW.DST+2
  3968 2ED1 8D B1 A3			sta BLITROW.DST+3
  3969 2ED4 AD A4 9A			lda PLAYSCREEN.OFS
  3970 2ED7 18 6D 20 A4			add TEMP
  3971 2EDB 8D AA A3			sta BLITROW.SRC
  3972 2EDE AD A5 9A			lda PLAYSCREEN.OFS+1
  3973 2EE1 6D 21 A4			adc TEMP+1
  3974 2EE4 8D AB A3			sta BLITROW.SRC+1
  3975 2EE7 AD A6 9A			lda PLAYSCREEN.OFS+2
  3976 2EEA 69 00			adc #$00
  3977 2EEC 8D AC A3			sta BLITROW.SRC+2
  3978 2EEF AD A7 9A			lda PLAYSCREEN.OFS+3
  3979 2EF2 69 00			adc #$00
  3980 2EF4 8D AD A3			sta BLITROW.SRC+3
  3981 2EF7 A9 05			lda #$05
  3982 2EF9 8D B2 A3			sta BLITROW.SIZE
  3983 2EFC A9 00			lda #$00
  3984 2EFE 8D B3 A3			sta BLITROW.SIZE+1
  3985 2F01 20 F4 25			jsr BLITROW
  3986 2F04			l_096B
  3987
  3988 				; --- ForToDoEpilog
  3989 2F04 EE 1F A4			inc YP
  3990 2F07 F0 03 4C 4E 2E		jne l_0927
  3991 2F0C			l_0935
  3992
  3993 				; ------------------------------------------------------------
  3994
  3995 = A41B			BALL	= DATAORIGIN+$0A44
  3996 = 99D7			BALL.X	= DATAORIGIN+$0000
  3997 = 99D9			BALL.Y	= DATAORIGIN+$0002
  3998 = 99DB			BALL.FINEX	= DATAORIGIN+$0004
  3999 = 99DD			BALL.FINEY	= DATAORIGIN+$0006
  4000 = 99DF			BALL.OLDX	= DATAORIGIN+$0008
  4001 = 99E1			BALL.OLDY	= DATAORIGIN+$000A
  4002 = 99E3			BALL.SPEED	= DATAORIGIN+$000C
  4003 = 99E5			BALL.FINESPEED	= DATAORIGIN+$000E
  4004 = 99E7			BALL.SPEEDX	= DATAORIGIN+$0010
  4005 = 99E9			BALL.SPEEDY	= DATAORIGIN+$0012
  4006 = 99EB			BALL.SBD	= DATAORIGIN+$0014
  4007 = 99ED			BALL.BRWHIT	= DATAORIGIN+$0016
  4008 = 99EE			BALL.INPLAY	= DATAORIGIN+$0017
  4009 = 99EF			BALL.LAUNCH	= DATAORIGIN+$0018
  4010 = 99F0			BALL.ONVAUS	= DATAORIGIN+$0019
  4011 = 99F1			BALL.STM	= DATAORIGIN+$001A
  4012 = A41F			YP	= DATAORIGIN+$0A48
  4013 = A420			TEMP	= DATAORIGIN+$0A49
  4014
  4015 = A41B			@VarData	= BALL
  4016 = 0005			@VarDataSize	= 5
  4017
  4018 2F0C			@exit
  4019 					.ifdef @new
  4020 					lda <@VarData
  4021 					sta :ztmp
  4022 					lda >@VarData
  4023 					ldy #@VarDataSize-1
  4024 					jmp @FreeMem
  4025 					els
  4026 2F0C 60				rts						; ret
  4027 					eif
  4028 				.endl
  4029
  4030 2F0D			.local	WAIT_VBL					; PROCEDURE
  4031
  4032 2F0D			@exit
  4033 					.ifdef @new
  4034 					lda <@VarData
  4035 					sta :ztmp
  4036 					lda >@VarData
  4037 					ldy #@VarDataSize-1
  4038 					jmp @FreeMem
  4039 					els
  4040 2F0D 60				rts						; ret
  4041 					eif
  4042 				.endl
  4043
  4044 2F0E			.local	SET_BALL					; PROCEDURE
  4045
  4046 				; optimize OK (service.pas), line = 849
  4047
  4048 2F0E AC 22 A4 84 84 AC + 	mwy BALL :bp2
  4049 2F18 A0 08			ldy #BALL.OLDX-DATAORIGIN
  4050 2F1A B1 84			lda (:bp2),y
  4051 2F1C 85 9F			sta :STACKORIGIN+9
  4052 2F1E C8				iny
  4053 2F1F B1 84			lda (:bp2),y
  4054 2F21 A0 01			ldy #1
  4055 2F23 C9 FF			cmp #$FF
  4056 2F25 D0 04			bne @+
  4057 2F27 A5 9F			lda :STACKORIGIN+9
  4058 2F29 C9 FF			cmp #$FF
  4059 				@
  4060 2F2B D0 01			bne @+
  4061 2F2D 88				dey
  4062 				@
  4063 2F2E 84 9F			sty :STACKORIGIN+9
  4064 2F30 A0 0A			ldy #BALL.OLDY-DATAORIGIN
  4065 2F32 B1 84			lda (:bp2),y
  4066 2F34 85 A0			sta :STACKORIGIN+10
  4067 2F36 C8				iny
  4068 2F37 B1 84			lda (:bp2),y
  4069 2F39 A0 01			ldy #1
  4070 2F3B C9 FF			cmp #$FF
  4071 2F3D D0 04			bne @+
  4072 2F3F A5 A0			lda :STACKORIGIN+10
  4073 2F41 C9 FF			cmp #$FF
  4074 				@
  4075 2F43 D0 01			bne @+
  4076 2F45 88				dey
  4077 				@
  4078 2F46 98				tya
  4079 2F47 25 9F			and :STACKORIGIN+9
  4080 2F49 85 9F			sta :STACKORIGIN+9
  4081 2F4B A0 08			ldy #BALL.OLDX-DATAORIGIN
  4082 2F4D B1 84			lda (:bp2),y
  4083 2F4F 85 A0			sta :STACKORIGIN+10
  4084 2F51 C8				iny
  4085 2F52 B1 84			lda (:bp2),y
  4086 2F54 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  4087 2F56 A0 00			ldy #BALL.X-DATAORIGIN
  4088 2F58 B1 84			lda (:bp2),y
  4089 2F5A 85 A1			sta :STACKORIGIN+11
  4090 2F5C C8				iny
  4091 2F5D B1 84			lda (:bp2),y
  4092 2F5F 85 B1			sta :STACKORIGIN+STACKWIDTH+11
  4093 2F61 A0 01			ldy #1
  4094 2F63 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
  4095 2F65 C5 B1			cmp :STACKORIGIN+STACKWIDTH+11
  4096 2F67 D0 04			bne @+
  4097 2F69 A5 A0			lda :STACKORIGIN+10
  4098 2F6B C5 A1			cmp :STACKORIGIN+11
  4099 				@
  4100 2F6D D0 01			bne @+
  4101 2F6F 88				dey
  4102 				@
  4103 2F70 84 A0			sty :STACKORIGIN+10
  4104 2F72 A0 0A			ldy #BALL.OLDY-DATAORIGIN
  4105 2F74 B1 84			lda (:bp2),y
  4106 2F76 85 A1			sta :STACKORIGIN+11
  4107 2F78 C8				iny
  4108 2F79 B1 84			lda (:bp2),y
  4109 2F7B 85 B1			sta :STACKORIGIN+STACKWIDTH+11
  4110 2F7D A0 02			ldy #BALL.Y-DATAORIGIN
  4111 2F7F B1 84			lda (:bp2),y
  4112 2F81 85 A2			sta :STACKORIGIN+12
  4113 2F83 C8				iny
  4114 2F84 B1 84			lda (:bp2),y
  4115 2F86 85 B2			sta :STACKORIGIN+STACKWIDTH+12
  4116 2F88 A0 01			ldy #1
  4117 2F8A A5 B1			lda :STACKORIGIN+STACKWIDTH+11
  4118 2F8C C5 B2			cmp :STACKORIGIN+STACKWIDTH+12
  4119 2F8E D0 04			bne @+
  4120 2F90 A5 A1			lda :STACKORIGIN+11
  4121 2F92 C5 A2			cmp :STACKORIGIN+12
  4122 				@
  4123 2F94 D0 01			bne @+
  4124 2F96 88				dey
  4125 				@
  4126 2F97 98				tya
  4127 2F98 05 A0			ora :STACKORIGIN+10
  4128 2F9A 25 9F			and :STACKORIGIN+9
  4129 2F9C F0 0F			jeq l_09BD
  4130
  4131 				; optimize OK (service.pas), line = 851
  4132
  4133 2F9E AD 22 A4			lda BALL
  4134 2FA1 8D 1B A4			sta REMOVE_BALL.BALL
  4135 2FA4 AD 23 A4			lda BALL+1
  4136 2FA7 8D 1C A4			sta REMOVE_BALL.BALL+1
  4137 2FAA 20 49 2E			jsr REMOVE_BALL
  4138 2FAD			l_09BD
  4139
  4140 				; optimize OK (service.pas), line = 853
  4141
  4142 2FAD AD 22 A4			lda BALL
  4143 2FB0 8D 14 A4			sta PLACE_BALL.BALL
  4144 2FB3 AD 23 A4			lda BALL+1
  4145 2FB6 8D 15 A4			sta PLACE_BALL.BALL+1
  4146 2FB9 20 7C 2D			jsr PLACE_BALL
  4147
  4148 				; optimize OK (service.pas), line = 855
  4149
  4150 2FBC AC 22 A4 84 84 AC + 	mwy BALL :bp2
  4151 2FC6 A0 00			ldy #BALL.X-DATAORIGIN
  4152 2FC8 B1 84			lda (:bp2),y
  4153 2FCA 85 9F			sta :STACKORIGIN+9
  4154 2FCC C8				iny
  4155 2FCD B1 84			lda (:bp2),y
  4156 2FCF 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  4157 2FD1 A0 08			ldy #BALL.OLDX-DATAORIGIN
  4158 2FD3 A5 9F			lda :STACKORIGIN+9
  4159 2FD5 91 84			sta (:bp2),y
  4160 2FD7 C8				iny
  4161 2FD8 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  4162 2FDA 91 84			sta (:bp2),y
  4163
  4164 				; optimize OK (service.pas), line = 856
  4165
  4166 2FDC A0 02			ldy #BALL.Y-DATAORIGIN
  4167 2FDE B1 84			lda (:bp2),y
  4168 2FE0 85 9F			sta :STACKORIGIN+9
  4169 2FE2 C8				iny
  4170 2FE3 B1 84			lda (:bp2),y
  4171 2FE5 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  4172 2FE7 A0 0A			ldy #BALL.OLDY-DATAORIGIN
  4173 2FE9 A5 9F			lda :STACKORIGIN+9
  4174 2FEB 91 84			sta (:bp2),y
  4175 2FED C8				iny
  4176 2FEE A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  4177 2FF0 91 84			sta (:bp2),y
  4178
  4179 				; ------------------------------------------------------------
  4180
  4181 = A422			BALL	= DATAORIGIN+$0A4B
  4182 = 99D7			BALL.X	= DATAORIGIN+$0000
  4183 = 99D9			BALL.Y	= DATAORIGIN+$0002
  4184 = 99DB			BALL.FINEX	= DATAORIGIN+$0004
  4185 = 99DD			BALL.FINEY	= DATAORIGIN+$0006
  4186 = 99DF			BALL.OLDX	= DATAORIGIN+$0008
  4187 = 99E1			BALL.OLDY	= DATAORIGIN+$000A
  4188 = 99E3			BALL.SPEED	= DATAORIGIN+$000C
  4189 = 99E5			BALL.FINESPEED	= DATAORIGIN+$000E
  4190 = 99E7			BALL.SPEEDX	= DATAORIGIN+$0010
  4191 = 99E9			BALL.SPEEDY	= DATAORIGIN+$0012
  4192 = 99EB			BALL.SBD	= DATAORIGIN+$0014
  4193 = 99ED			BALL.BRWHIT	= DATAORIGIN+$0016
  4194 = 99EE			BALL.INPLAY	= DATAORIGIN+$0017
  4195 = 99EF			BALL.LAUNCH	= DATAORIGIN+$0018
  4196 = 99F0			BALL.ONVAUS	= DATAORIGIN+$0019
  4197 = 99F1			BALL.STM	= DATAORIGIN+$001A
  4198
  4199 = A422			@VarData	= BALL
  4200 = 0002			@VarDataSize	= 2
  4201
  4202 2FF2			@exit
  4203 					.ifdef @new
  4204 					lda <@VarData
  4205 					sta :ztmp
  4206 					lda >@VarData
  4207 					ldy #@VarDataSize-1
  4208 					jmp @FreeMem
  4209 					els
  4210 2FF2 60				rts						; ret
  4211 					eif
  4212 				.endl
  4213
  4214 2FF3			.local	SET_BALL_SPEED					; PROCEDURE
  4215
  4216 				; optimize OK (service.pas), line = 866
  4217
  4218 2FF3 AC 26 A4 84 84 AC + 	mwy BALL :bp2
  4219 2FFD A0 10			ldy #BALL.SPEEDX-DATAORIGIN
  4220 2FFF B1 84			lda (:bp2),y
  4221 3001 8D 2C A4			sta SX
  4222 3004 C8				iny
  4223 3005 B1 84			lda (:bp2),y
  4224 3007 8D 2D A4			sta SX+1
  4225
  4226 				; optimize OK (service.pas), line = 867
  4227
  4228 300A A0 12			ldy #BALL.SPEEDY-DATAORIGIN
  4229 300C B1 84			lda (:bp2),y
  4230 300E 8D 2E A4			sta SY
  4231 3011 C8				iny
  4232 3012 B1 84			lda (:bp2),y
  4233 3014 8D 2F A4			sta SY+1
  4234
  4235 				; optimize FAIL (1, service.pas), line = 869
  4236
  4237 3017 E8				inx
  4238 3018 AD 2A A4 95 96		mva SPEED :STACKORIGIN,x
  4239 301D AD 2B A4 95 A6		mva SPEED+1 :STACKORIGIN+STACKWIDTH,x
  4240 3022 AD 2C A4			lda SX
  4241 3025 85 8E			sta :ecx
  4242 3027 85 92			sta :ztmp8
  4243 3029 AD 2D A4			lda SX+1
  4244 302C 85 8F			sta :ecx+1
  4245 302E 85 93			sta :ztmp9
  4246 3030 AD 2C A4			lda SX
  4247 3033 85 86			sta :eax
  4248 3035 85 94			sta :ztmp10
  4249 3037 AD 2D A4			lda SX+1
  4250 303A 85 87			sta :eax+1
  4251 303C 85 95			sta :ztmp11
  4252 					.ifdef fmulinit
  4253 					fmulu_16
  4254 					els
  4255 303E 20 2A 13			imulCX
  4256 					eif
  4257 3041 A5 95			lda :ztmp11
  4258 3043 10 0D			bpl @+
  4259 3045 A5 88			lda :eax+2
  4260 3047 38 E5 92			sub :ztmp8
  4261 304A 85 88			sta :eax+2
  4262 304C A5 89			lda :eax+3
  4263 304E E5 93			sbc :ztmp9
  4264 3050 85 89			sta :eax+3
  4265 				@
  4266 3052 A5 93			lda :ztmp9
  4267 3054 10 0D			bpl @+
  4268 3056 A5 88			lda :eax+2
  4269 3058 38 E5 94			sub :ztmp10
  4270 305B 85 88			sta :eax+2
  4271 305D A5 89			lda :eax+3
  4272 305F E5 95			sbc :ztmp11
  4273 3061 85 89			sta :eax+3
  4274 				@
  4275 3063 A5 86			lda :eax
  4276 3065 85 9F			sta :STACKORIGIN+9
  4277 3067 A5 87			lda :eax+1
  4278 3069 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  4279 306B A5 88			lda :eax+2
  4280 306D 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
  4281 306F A5 89			lda :eax+3
  4282 3071 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
  4283 3073 AD 2E A4			lda SY
  4284 3076 85 8E			sta :ecx
  4285 3078 85 92			sta :ztmp8
  4286 307A AD 2F A4			lda SY+1
  4287 307D 85 8F			sta :ecx+1
  4288 307F 85 93			sta :ztmp9
  4289 3081 AD 2E A4			lda SY
  4290 3084 85 86			sta :eax
  4291 3086 85 94			sta :ztmp10
  4292 3088 AD 2F A4			lda SY+1
  4293 308B 85 87			sta :eax+1
  4294 308D 85 95			sta :ztmp11
  4295 					.ifdef fmulinit
  4296 					fmulu_16
  4297 					els
  4298 308F 20 2A 13			imulCX
  4299 					eif
  4300 3092 A5 95			lda :ztmp11
  4301 3094 10 0D			bpl @+
  4302 3096 A5 88			lda :eax+2
  4303 3098 38 E5 92			sub :ztmp8
  4304 309B 85 88			sta :eax+2
  4305 309D A5 89			lda :eax+3
  4306 309F E5 93			sbc :ztmp9
  4307 30A1 85 89			sta :eax+3
  4308 				@
  4309 30A3 A5 93			lda :ztmp9
  4310 30A5 10 0D			bpl @+
  4311 30A7 A5 88			lda :eax+2
  4312 30A9 38 E5 94			sub :ztmp10
  4313 30AC 85 88			sta :eax+2
  4314 30AE A5 89			lda :eax+3
  4315 30B0 E5 95			sbc :ztmp11
  4316 30B2 85 89			sta :eax+3
  4317 				@
  4318 30B4 A5 9F			lda :STACKORIGIN+9
  4319 30B6 18 65 86			add :eax
  4320 30B9 8D E2 99			sta SYSTEM.SQRT.@010185000.X
  4321 30BC A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  4322 30BE 65 87			adc :eax+1
  4323 30C0 8D E3 99			sta SYSTEM.SQRT.@010185000.X+1
  4324 30C3 A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
  4325 30C5 65 88			adc :eax+2
  4326 30C7 8D E4 99			sta SYSTEM.SQRT.@010185000.X+2
  4327 30CA A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
  4328 30CC 65 89			adc :eax+3
  4329 30CE 8D E5 99			sta SYSTEM.SQRT.@010185000.X+3
  4330 30D1 20 CB 1B			jsr SYSTEM.SQRT.@010185000
  4331 30D4 E8				inx
  4332 30D5 AD E6 99 95 96		mva SYSTEM.SQRT.@010185000.RESULT :STACKORIGIN,x
  4333 30DA AD E7 99 95 A6		mva SYSTEM.SQRT.@010185000.RESULT+1 :STACKORIGIN+STACKWIDTH,x
  4334 30DF AD E8 99 95 B6		mva SYSTEM.SQRT.@010185000.RESULT+2 :STACKORIGIN+STACKWIDTH*2,x
  4335 30E4 AD E9 99 95 C6		mva SYSTEM.SQRT.@010185000.RESULT+3 :STACKORIGIN+STACKWIDTH*3,x
  4336 30E9 20 6B 11			jsr @expandToCARD1.SMALL
  4337 30EC B5 95			lda :STACKORIGIN-1,x
  4338 30EE 85 8E			sta :FPMAN0
  4339 30F0 B5 A5			lda :STACKORIGIN-1+STACKWIDTH,x
  4340 30F2 85 8F			sta :FPMAN1
  4341 30F4 B5 B5			lda :STACKORIGIN-1+STACKWIDTH*2,x
  4342 30F6 85 90			sta :FPMAN2
  4343 30F8 B5 C5			lda :STACKORIGIN-1+STACKWIDTH*3,x
  4344 30FA 85 91			sta :FPMAN3
  4345 30FC 20 42 19			jsr @I2F
  4346 30FF A5 8E			lda :FPMAN0
  4347 3101 85 8A			sta :FP2MAN0
  4348 3103 A5 8F			lda :FPMAN1
  4349 3105 85 8B			sta :FP2MAN1
  4350 3107 A5 90			lda :FPMAN2
  4351 3109 85 8C			sta :FP2MAN2
  4352 310B A5 91			lda :FPMAN3
  4353 310D 85 8D			sta :FP2MAN3
  4354 310F B5 95			lda :STACKORIGIN-1,x
  4355 3111 85 86			sta :FP1MAN0
  4356 3113 B5 A5			lda :STACKORIGIN-1+STACKWIDTH,x
  4357 3115 85 87			sta :FP1MAN1
  4358 3117 B5 B5			lda :STACKORIGIN-1+STACKWIDTH*2,x
  4359 3119 85 88			sta :FP1MAN2
  4360 311B B5 C5			lda :STACKORIGIN-1+STACKWIDTH*3,x
  4361 311D 85 89			sta :FP1MAN3
  4362 311F 20 55 18			jsr @FDIV
  4363 3122 CA				dex
  4364 3123 A5 8E			lda :FPMAN0
  4365 3125 8D 30 A4			sta VM
  4366 3128 A5 8F			lda :FPMAN1
  4367 312A 8D 31 A4			sta VM+1
  4368 312D A5 90			lda :FPMAN2
  4369 312F 8D 32 A4			sta VM+2
  4370 3132 A5 91			lda :FPMAN3
  4371 3134 8D 33 A4			sta VM+3
  4372 3137 CA				dex
  4373
  4374 				; optimize OK (service.pas), line = 874
  4375
  4376 3138 AD 2C A4			lda SX
  4377 313B 85 8E			sta :FPMAN0
  4378 313D A0 00			ldy #$00
  4379 313F AD 2D A4			lda SX+1
  4380 3142 10 01			spl
  4381 3144 88				dey
  4382 3145 85 8F			sta :FPMAN1
  4383 3147 84 90			sty :FPMAN2
  4384 3149 84 91			sty :FPMAN3
  4385 314B 20 42 19			jsr @I2F
  4386 314E A5 8E			lda :FPMAN0
  4387 3150 85 86			sta :FP1MAN0
  4388 3152 A5 8F			lda :FPMAN1
  4389 3154 85 87			sta :FP1MAN1
  4390 3156 A5 90			lda :FPMAN2
  4391 3158 85 88			sta :FP1MAN2
  4392 315A A5 91			lda :FPMAN3
  4393 315C 85 89			sta :FP1MAN3
  4394 315E AD 30 A4			lda VM
  4395 3161 85 8A			sta :FP2MAN0
  4396 3163 AD 31 A4			lda VM+1
  4397 3166 85 8B			sta :FP2MAN1
  4398 3168 AD 32 A4			lda VM+2
  4399 316B 85 8C			sta :FP2MAN2
  4400 316D AD 33 A4			lda VM+3
  4401 3170 85 8D			sta :FP2MAN3
  4402 3172 20 B4 17			jsr @FMUL
  4403 3175 A5 8E			lda :FPMAN0
  4404 3177 85 8A			sta :FP2MAN0
  4405 3179 A5 8F			lda :FPMAN1
  4406 317B 85 8B			sta :FP2MAN1
  4407 317D A5 90			lda :FPMAN2
  4408 317F 85 8C			sta :FP2MAN2
  4409 3181 A5 91			lda :FPMAN3
  4410 3183 85 8D			sta :FP2MAN3
  4411 3185 20 0C 16			jsr @FROUND
  4412 3188 AC 26 A4 84 84 AC + 	mwy BALL :bp2
  4413 3192 A0 10			ldy #BALL.SPEEDX-DATAORIGIN
  4414 3194 A5 8E			lda :FPMAN0
  4415 3196 91 84			sta (:bp2),y
  4416 3198 C8				iny
  4417 3199 A5 8F			lda :FPMAN1
  4418 319B 91 84			sta (:bp2),y
  4419
  4420 				; optimize OK (service.pas), line = 875
  4421
  4422 319D AD 2E A4			lda SY
  4423 31A0 85 8E			sta :FPMAN0
  4424 31A2 A0 00			ldy #$00
  4425 31A4 AD 2F A4			lda SY+1
  4426 31A7 10 01			spl
  4427 31A9 88				dey
  4428 31AA 85 8F			sta :FPMAN1
  4429 31AC 84 90			sty :FPMAN2
  4430 31AE 84 91			sty :FPMAN3
  4431 31B0 20 42 19			jsr @I2F
  4432 31B3 A5 8E			lda :FPMAN0
  4433 31B5 85 86			sta :FP1MAN0
  4434 31B7 A5 8F			lda :FPMAN1
  4435 31B9 85 87			sta :FP1MAN1
  4436 31BB A5 90			lda :FPMAN2
  4437 31BD 85 88			sta :FP1MAN2
  4438 31BF A5 91			lda :FPMAN3
  4439 31C1 85 89			sta :FP1MAN3
  4440 31C3 AD 30 A4			lda VM
  4441 31C6 85 8A			sta :FP2MAN0
  4442 31C8 AD 31 A4			lda VM+1
  4443 31CB 85 8B			sta :FP2MAN1
  4444 31CD AD 32 A4			lda VM+2
  4445 31D0 85 8C			sta :FP2MAN2
  4446 31D2 AD 33 A4			lda VM+3
  4447 31D5 85 8D			sta :FP2MAN3
  4448 31D7 20 B4 17			jsr @FMUL
  4449 31DA A5 8E			lda :FPMAN0
  4450 31DC 85 8A			sta :FP2MAN0
  4451 31DE A5 8F			lda :FPMAN1
  4452 31E0 85 8B			sta :FP2MAN1
  4453 31E2 A5 90			lda :FPMAN2
  4454 31E4 85 8C			sta :FP2MAN2
  4455 31E6 A5 91			lda :FPMAN3
  4456 31E8 85 8D			sta :FP2MAN3
  4457 31EA 20 0C 16			jsr @FROUND
  4458 31ED AC 26 A4 84 84 AC + 	mwy BALL :bp2
  4459 31F7 A0 12			ldy #BALL.SPEEDY-DATAORIGIN
  4460 31F9 A5 8E			lda :FPMAN0
  4461 31FB 91 84			sta (:bp2),y
  4462 31FD C8				iny
  4463 31FE A5 8F			lda :FPMAN1
  4464 3200 91 84			sta (:bp2),y
  4465
  4466 				; ------------------------------------------------------------
  4467
  4468 = A426			BALL	= DATAORIGIN+$0A4F
  4469 = 99D7			BALL.X	= DATAORIGIN+$0000
  4470 = 99D9			BALL.Y	= DATAORIGIN+$0002
  4471 = 99DB			BALL.FINEX	= DATAORIGIN+$0004
  4472 = 99DD			BALL.FINEY	= DATAORIGIN+$0006
  4473 = 99DF			BALL.OLDX	= DATAORIGIN+$0008
  4474 = 99E1			BALL.OLDY	= DATAORIGIN+$000A
  4475 = 99E3			BALL.SPEED	= DATAORIGIN+$000C
  4476 = 99E5			BALL.FINESPEED	= DATAORIGIN+$000E
  4477 = 99E7			BALL.SPEEDX	= DATAORIGIN+$0010
  4478 = 99E9			BALL.SPEEDY	= DATAORIGIN+$0012
  4479 = 99EB			BALL.SBD	= DATAORIGIN+$0014
  4480 = 99ED			BALL.BRWHIT	= DATAORIGIN+$0016
  4481 = 99EE			BALL.INPLAY	= DATAORIGIN+$0017
  4482 = 99EF			BALL.LAUNCH	= DATAORIGIN+$0018
  4483 = 99F0			BALL.ONVAUS	= DATAORIGIN+$0019
  4484 = 99F1			BALL.STM	= DATAORIGIN+$001A
  4485 = A42A			SPEED	= DATAORIGIN+$0A53
  4486 = A42C			SX	= DATAORIGIN+$0A55
  4487 = A42E			SY	= DATAORIGIN+$0A57
  4488 = A430			VM	= DATAORIGIN+$0A59
  4489
  4490 = A426			@VarData	= BALL
  4491 = 000C			@VarDataSize	= 12
  4492
  4493 3202			@exit
  4494 					.ifdef @new
  4495 					lda <@VarData
  4496 					sta :ztmp
  4497 					lda >@VarData
  4498 					ldy #@VarDataSize-1
  4499 					jmp @FreeMem
  4500 					els
  4501 3202 60				rts						; ret
  4502 					eif
  4503 				.endl
  4504
  4505 3203			.local	SET_BALL_DIRECTION				; PROCEDURE
  4506
  4507 				; optimize OK (service.pas), line = 882
  4508
  4509 3203 AD 38 A4			lda ANGLE
  4510 3206 85 9F			sta :STACKORIGIN+9
  4511 3208 A0 00			ldy #$00
  4512 320A AD 39 A4			lda ANGLE+1
  4513 320D 10 01			spl
  4514 320F 88				dey
  4515 3210 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  4516 3212 85 88			sta @REAL_MUL.A+2
  4517 3214 84 89			sty @REAL_MUL.A+3
  4518 3216 A5 9F			lda :STACKORIGIN+9
  4519 3218 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  4520 321A A9 00			lda #$00
  4521 321C 85 86			sta @REAL_MUL.A
  4522 321E A9 24			lda #$24
  4523 3220 85 8E			sta @REAL_MUL.B
  4524 3222 A9 03			lda #$03
  4525 3224 85 8F			sta @REAL_MUL.B+1
  4526 3226 A9 00			lda #$00
  4527 3228 85 90			sta @REAL_MUL.B+2
  4528 322A 85 91			sta @REAL_MUL.B+3
  4529 322C A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  4530 322E 85 87			sta @REAL_MUL.A+1
  4531 3230 20 63 14			jsr @REAL_MUL
  4532 3233 A9 00			lda #$00
  4533 3235 85 8E			sta @REAL_DIV.B
  4534 3237 A9 B4			lda #$B4
  4535 3239 85 8F			sta @REAL_DIV.B+1
  4536 323B A9 00			lda #$00
  4537 323D 85 90			sta @REAL_DIV.B+2
  4538 323F 85 91			sta @REAL_DIV.B+3
  4539 3241 20 22 15			jsr @REAL_DIV
  4540 3244 A5 86			lda :eax
  4541 3246 8D 3A A4			sta W
  4542 3249 A5 87			lda :eax+1
  4543 324B 8D 3B A4			sta W+1
  4544 324E A5 88			lda :eax+2
  4545 3250 8D 3C A4			sta W+2
  4546 3253 A5 89			lda :eax+3
  4547 3255 8D 3D A4			sta W+3
  4548
  4549 				; optimize FAIL (1, service.pas), line = 884
  4550
  4551 3258 E8				inx
  4552 3259 A9 00 95 96			mva #$00 :STACKORIGIN,x
  4553 325D A9 01 95 A6			mva #$01 :STACKORIGIN+STACKWIDTH,x
  4554 3261 AD 3A A4			lda W
  4555 3264 8D 13 9A			sta SYSTEM.COS.@01018E000.X
  4556 3267 AD 3B A4			lda W+1
  4557 326A 8D 14 9A			sta SYSTEM.COS.@01018E000.X+1
  4558 326D AD 3C A4			lda W+2
  4559 3270 8D 15 9A			sta SYSTEM.COS.@01018E000.X+2
  4560 3273 AD 3D A4			lda W+3
  4561 3276 8D 16 9A			sta SYSTEM.COS.@01018E000.X+3
  4562 3279 20 DF 23			jsr SYSTEM.COS.@01018E000
  4563 327C E8				inx
  4564 327D AD 17 9A 95 96		mva SYSTEM.COS.@01018E000.RESULT :STACKORIGIN,x
  4565 3282 AD 18 9A 95 A6		mva SYSTEM.COS.@01018E000.RESULT+1 :STACKORIGIN+STACKWIDTH,x
  4566 3287 AD 19 9A 95 B6		mva SYSTEM.COS.@01018E000.RESULT+2 :STACKORIGIN+STACKWIDTH*2,x
  4567 328C AD 1A 9A 95 C6		mva SYSTEM.COS.@01018E000.RESULT+3 :STACKORIGIN+STACKWIDTH*3,x
  4568 3291 A9 00 95 B5			mva #$00 :STACKORIGIN-1+STACKWIDTH*2,x
  4569 3295 95 C5			sta :STACKORIGIN-1+STACKWIDTH*3,x
  4570 3297 20 88 11			jsr @expandToREAL1
  4571 329A B5 96			lda :STACKORIGIN,x
  4572 329C 85 8E			sta @REAL_MUL.B
  4573 329E B5 A6			lda :STACKORIGIN+STACKWIDTH,x
  4574 32A0 85 8F			sta @REAL_MUL.B+1
  4575 32A2 B5 B6			lda :STACKORIGIN+STACKWIDTH*2,x
  4576 32A4 85 90			sta @REAL_MUL.B+2
  4577 32A6 B5 C6			lda :STACKORIGIN+STACKWIDTH*3,x
  4578 32A8 85 91			sta @REAL_MUL.B+3
  4579 32AA B5 95			lda :STACKORIGIN-1,x
  4580 32AC 85 86			sta @REAL_MUL.A
  4581 32AE B5 A5			lda :STACKORIGIN-1+STACKWIDTH,x
  4582 32B0 85 87			sta @REAL_MUL.A+1
  4583 32B2 B5 B5			lda :STACKORIGIN-1+STACKWIDTH*2,x
  4584 32B4 85 88			sta @REAL_MUL.A+2
  4585 32B6 B5 C5			lda :STACKORIGIN-1+STACKWIDTH*3,x
  4586 32B8 85 89			sta @REAL_MUL.A+3
  4587 32BA 20 63 14			jsr @REAL_MUL
  4588 32BD CA				dex
  4589 32BE 20 CA 15			jsr @REAL_ROUND
  4590 32C1 A5 86			lda :eax
  4591 32C3 95 96			sta :STACKORIGIN,x
  4592 32C5 A5 87			lda :eax+1
  4593 32C7 95 A6			sta :STACKORIGIN+STACKWIDTH,x
  4594 32C9 A5 88			lda :eax+2
  4595 32CB 95 B6			sta :STACKORIGIN+STACKWIDTH*2,x
  4596 32CD A5 89			lda :eax+3
  4597 32CF 95 C6			sta :STACKORIGIN+STACKWIDTH*3,x
  4598 32D1 AC 34 A4 84 84 AC + 	mwy BALL :bp2
  4599 32DB A0 10			ldy #BALL.SPEEDX-DATAORIGIN
  4600 32DD B5 96			lda :STACKORIGIN,x
  4601 32DF 91 84			sta (:bp2),y
  4602 32E1 C8				iny
  4603 32E2 B5 A6			lda :STACKORIGIN+STACKWIDTH,x
  4604 32E4 91 84			sta (:bp2),y
  4605
  4606 				; optimize FAIL (1, service.pas), line = 885
  4607
  4608 32E6 A9 00 95 96			mva #$00 :STACKORIGIN,x
  4609 32EA A9 01 95 A6			mva #$01 :STACKORIGIN+STACKWIDTH,x
  4610 32EE AD 3A A4			lda W
  4611 32F1 8D 0B 9A			sta SYSTEM.SIN.@01018E000.X
  4612 32F4 AD 3B A4			lda W+1
  4613 32F7 8D 0C 9A			sta SYSTEM.SIN.@01018E000.X+1
  4614 32FA AD 3C A4			lda W+2
  4615 32FD 8D 0D 9A			sta SYSTEM.SIN.@01018E000.X+2
  4616 3300 AD 3D A4			lda W+3
  4617 3303 8D 0E 9A			sta SYSTEM.SIN.@01018E000.X+3
  4618 3306 20 A6 23			jsr SYSTEM.SIN.@01018E000
  4619 3309 E8				inx
  4620 330A AD 0F 9A 95 96		mva SYSTEM.SIN.@01018E000.RESULT :STACKORIGIN,x
  4621 330F AD 10 9A 95 A6		mva SYSTEM.SIN.@01018E000.RESULT+1 :STACKORIGIN+STACKWIDTH,x
  4622 3314 AD 11 9A 95 B6		mva SYSTEM.SIN.@01018E000.RESULT+2 :STACKORIGIN+STACKWIDTH*2,x
  4623 3319 AD 12 9A 95 C6		mva SYSTEM.SIN.@01018E000.RESULT+3 :STACKORIGIN+STACKWIDTH*3,x
  4624 331E A9 00 95 B5			mva #$00 :STACKORIGIN-1+STACKWIDTH*2,x
  4625 3322 95 C5			sta :STACKORIGIN-1+STACKWIDTH*3,x
  4626 3324 20 88 11			jsr @expandToREAL1
  4627 3327 B5 96			lda :STACKORIGIN,x
  4628 3329 85 8E			sta @REAL_MUL.B
  4629 332B B5 A6			lda :STACKORIGIN+STACKWIDTH,x
  4630 332D 85 8F			sta @REAL_MUL.B+1
  4631 332F B5 B6			lda :STACKORIGIN+STACKWIDTH*2,x
  4632 3331 85 90			sta @REAL_MUL.B+2
  4633 3333 B5 C6			lda :STACKORIGIN+STACKWIDTH*3,x
  4634 3335 85 91			sta @REAL_MUL.B+3
  4635 3337 B5 95			lda :STACKORIGIN-1,x
  4636 3339 85 86			sta @REAL_MUL.A
  4637 333B B5 A5			lda :STACKORIGIN-1+STACKWIDTH,x
  4638 333D 85 87			sta @REAL_MUL.A+1
  4639 333F B5 B5			lda :STACKORIGIN-1+STACKWIDTH*2,x
  4640 3341 85 88			sta @REAL_MUL.A+2
  4641 3343 B5 C5			lda :STACKORIGIN-1+STACKWIDTH*3,x
  4642 3345 85 89			sta @REAL_MUL.A+3
  4643 3347 20 63 14			jsr @REAL_MUL
  4644 334A CA				dex
  4645 334B 20 CA 15			jsr @REAL_ROUND
  4646 334E A5 86			lda :eax
  4647 3350 95 96			sta :STACKORIGIN,x
  4648 3352 A5 87			lda :eax+1
  4649 3354 95 A6			sta :STACKORIGIN+STACKWIDTH,x
  4650 3356 A5 88			lda :eax+2
  4651 3358 95 B6			sta :STACKORIGIN+STACKWIDTH*2,x
  4652 335A A5 89			lda :eax+3
  4653 335C 95 C6			sta :STACKORIGIN+STACKWIDTH*3,x
  4654 335E A9 00			lda #$00
  4655 3360 38 F5 96			sub :STACKORIGIN,x
  4656 3363 95 96			sta :STACKORIGIN,x
  4657 3365 A9 00			lda #$00
  4658 3367 F5 A6			sbc :STACKORIGIN+STACKWIDTH,x
  4659 3369 95 A6			sta :STACKORIGIN+STACKWIDTH,x
  4660 336B A9 00			lda #$00
  4661 336D F5 B6			sbc :STACKORIGIN+STACKWIDTH*2,x
  4662 336F 95 B6			sta :STACKORIGIN+STACKWIDTH*2,x
  4663 3371 A9 00			lda #$00
  4664 3373 F5 C6			sbc :STACKORIGIN+STACKWIDTH*3,x
  4665 3375 95 C6			sta :STACKORIGIN+STACKWIDTH*3,x
  4666 3377 AC 34 A4 84 84 AC + 	mwy BALL :bp2
  4667 3381 A0 12			ldy #BALL.SPEEDY-DATAORIGIN
  4668 3383 B5 96			lda :STACKORIGIN,x
  4669 3385 91 84			sta (:bp2),y
  4670 3387 C8				iny
  4671 3388 B5 A6			lda :STACKORIGIN+STACKWIDTH,x
  4672 338A 91 84			sta (:bp2),y
  4673 338C CA				dex
  4674
  4675 				; ------------------------------------------------------------
  4676
  4677 = A434			BALL	= DATAORIGIN+$0A5D
  4678 = 99D7			BALL.X	= DATAORIGIN+$0000
  4679 = 99D9			BALL.Y	= DATAORIGIN+$0002
  4680 = 99DB			BALL.FINEX	= DATAORIGIN+$0004
  4681 = 99DD			BALL.FINEY	= DATAORIGIN+$0006
  4682 = 99DF			BALL.OLDX	= DATAORIGIN+$0008
  4683 = 99E1			BALL.OLDY	= DATAORIGIN+$000A
  4684 = 99E3			BALL.SPEED	= DATAORIGIN+$000C
  4685 = 99E5			BALL.FINESPEED	= DATAORIGIN+$000E
  4686 = 99E7			BALL.SPEEDX	= DATAORIGIN+$0010
  4687 = 99E9			BALL.SPEEDY	= DATAORIGIN+$0012
  4688 = 99EB			BALL.SBD	= DATAORIGIN+$0014
  4689 = 99ED			BALL.BRWHIT	= DATAORIGIN+$0016
  4690 = 99EE			BALL.INPLAY	= DATAORIGIN+$0017
  4691 = 99EF			BALL.LAUNCH	= DATAORIGIN+$0018
  4692 = 99F0			BALL.ONVAUS	= DATAORIGIN+$0019
  4693 = 99F1			BALL.STM	= DATAORIGIN+$001A
  4694 = A438			ANGLE	= DATAORIGIN+$0A61
  4695 = A43A			W	= DATAORIGIN+$0A63
  4696
  4697 = A434			@VarData	= BALL
  4698 = 0008			@VarDataSize	= 8
  4699
  4700 338D			@exit
  4701 					.ifdef @new
  4702 					lda <@VarData
  4703 					sta :ztmp
  4704 					lda >@VarData
  4705 					ldy #@VarDataSize-1
  4706 					jmp @FreeMem
  4707 					els
  4708 338D 60				rts						; ret
  4709 					eif
  4710 				.endl
  4711
  4712 338E			.local	GET_BALL_DIRECTION				; FUNCTION
  4713
  4714 				; optimize OK (service.pas), line = 893
  4715
  4716 338E AC 3E A4 84 84 AC + 	mwy BALL :bp2
  4717 3398 A0 11			ldy #BALL.SPEEDX-DATAORIGIN+$01
  4718 339A B1 84			lda (:bp2),y
  4719 339C 88				dey
  4720 339D 11 84			ora (:bp2),y
  4721 339F D0 75			jne l_0A45
  4722 33A1 E8				inx
  4723 33A2 A9 5A 95 96			mva #$5A :STACKORIGIN,x
  4724 33A6 E8				inx
  4725 33A7 AC 3E A4 84 84 AC + 	mwy BALL :bp2
  4726 33B1 A0 12			ldy #BALL.SPEEDY-DATAORIGIN
  4727 33B3 B1 84 95 96			mva (:bp2),y :STACKORIGIN,x
  4728 33B7 C8				iny
  4729 33B8 B1 84 95 A6			mva (:bp2),y :STACKORIGIN+STACKWIDTH,x
  4730 33BC A0 12			ldy #BALL.SPEEDY-DATAORIGIN
  4731 33BE B1 84			lda (:bp2),y
  4732 33C0 85 8A			sta SYSTEM.ABS.@010184000.X
  4733 33C2 C8				iny
  4734 33C3 B1 84			lda (:bp2),y
  4735 33C5 85 8B			sta SYSTEM.ABS.@010184000.X+1
  4736 33C7 20 9D 1B			jsr SYSTEM.ABS.@010184000
  4737 33CA E8				inx
  4738 33CB A5 92			lda SYSTEM.ABS.@010184000.RESULT
  4739 33CD 85 8E			sta @SMALLINT.DIV.B
  4740 33CF A5 93			lda SYSTEM.ABS.@010184000.RESULT+1
  4741 33D1 85 8F			sta @SMALLINT.DIV.B+1
  4742 33D3 B5 95			lda :STACKORIGIN-1,x
  4743 33D5 85 86			sta @SMALLINT.DIV.A
  4744 33D7 B5 A5			lda :STACKORIGIN-1+STACKWIDTH,x
  4745 33D9 85 87			sta @SMALLINT.DIV.A+1
  4746 33DB 20 52 12			jsr @SMALLINT.DIV
  4747 33DE A5 86			lda :eax
  4748 33E0 95 95			sta :STACKORIGIN-1,x
  4749 33E2 A5 87			lda :eax+1
  4750 33E4 95 A5			sta :STACKORIGIN-1+STACKWIDTH,x
  4751 33E6 CA				dex
  4752 33E7 A9 00 95 A5			mva #$00 :STACKORIGIN-1+STACKWIDTH,x
  4753 33EB 20 2A 12			jsr mulSMALLINT
  4754 33EE CA				dex
  4755 33EF A9 00			lda #$00
  4756 33F1 38 F5 96			sub :STACKORIGIN,x
  4757 33F4 95 96			sta :STACKORIGIN,x
  4758 33F6 A9 00			lda #$00
  4759 33F8 F5 A6			sbc :STACKORIGIN+STACKWIDTH,x
  4760 33FA 95 A6			sta :STACKORIGIN+STACKWIDTH,x
  4761 33FC A9 00			lda #$00
  4762 33FE F5 B6			sbc :STACKORIGIN+STACKWIDTH*2,x
  4763 3400 95 B6			sta :STACKORIGIN+STACKWIDTH*2,x
  4764 3402 A9 00			lda #$00
  4765 3404 F5 C6			sbc :STACKORIGIN+STACKWIDTH*3,x
  4766 3406 95 C6			sta :STACKORIGIN+STACKWIDTH*3,x
  4767 3408 B5 96			lda :STACKORIGIN,x
  4768 340A 8D 44 A4			sta W
  4769 340D B5 A6			lda :STACKORIGIN+STACKWIDTH,x
  4770 340F 8D 45 A4			sta W+1
  4771 3412 CA				dex
  4772 3413 4C 3C 35			jmp l_0A61
  4773 3416			l_0A45
  4774
  4775 				; optimize OK (service.pas), line = 899
  4776
  4777 3416 AC 3E A4 84 84 AC + 	mwy BALL :bp2
  4778 3420 A0 12			ldy #BALL.SPEEDY-DATAORIGIN
  4779 3422 B1 84			lda (:bp2),y
  4780 3424 85 87			sta @REAL_DIV.A+1
  4781 3426 C8				iny
  4782 3427 B1 84			lda (:bp2),y
  4783 3429 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  4784 342B A0 10			ldy #BALL.SPEEDX-DATAORIGIN
  4785 342D B1 84			lda (:bp2),y
  4786 342F 85 A0			sta :STACKORIGIN+10
  4787 3431 C8				iny
  4788 3432 B1 84			lda (:bp2),y
  4789 3434 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  4790 3436 A0 00			ldy #$00
  4791 3438 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
  4792 343A 10 01			spl
  4793 343C 88				dey
  4794 343D 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  4795 343F 85 90			sta @REAL_DIV.B+2
  4796 3441 84 91			sty @REAL_DIV.B+3
  4797 3443 A5 A0			lda :STACKORIGIN+10
  4798 3445 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  4799 3447 A9 00			lda #$00
  4800 3449 85 8E			sta @REAL_DIV.B
  4801 344B A0 00			ldy #$00
  4802 344D A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  4803 344F 10 01			spl
  4804 3451 88				dey
  4805 3452 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  4806 3454 85 88			sta @REAL_DIV.A+2
  4807 3456 84 89			sty @REAL_DIV.A+3
  4808 3458 A9 00			lda #$00
  4809 345A 85 86			sta @REAL_DIV.A
  4810 345C A5 B0			lda :STACKORIGIN+STACKWIDTH+10
  4811 345E 85 8F			sta @REAL_DIV.B+1
  4812 3460 20 22 15			jsr @REAL_DIV
  4813 3463 A9 00			lda #$00
  4814 3465 38 E5 86			sub :eax
  4815 3468 8D F0 99			sta SYSTEM.ARCTAN.@01018E000.VALUE
  4816 346B A9 00			lda #$00
  4817 346D E5 87			sbc :eax+1
  4818 346F 8D F1 99			sta SYSTEM.ARCTAN.@01018E000.VALUE+1
  4819 3472 A9 00			lda #$00
  4820 3474 E5 88			sbc :eax+2
  4821 3476 8D F2 99			sta SYSTEM.ARCTAN.@01018E000.VALUE+2
  4822 3479 A9 00			lda #$00
  4823 347B E5 89			sbc :eax+3
  4824 347D 8D F3 99			sta SYSTEM.ARCTAN.@01018E000.VALUE+3
  4825 3480 20 60 1E			jsr SYSTEM.ARCTAN.@01018E000
  4826 3483 E8				inx
  4827 3484 E8				inx
  4828 3485 A9 00			lda #$00
  4829 3487 85 8E			sta @REAL_MUL.B
  4830 3489 A9 B4			lda #$B4
  4831 348B 85 8F			sta @REAL_MUL.B+1
  4832 348D A9 00			lda #$00
  4833 348F 85 90			sta @REAL_MUL.B+2
  4834 3491 A9 00			lda #$00
  4835 3493 85 91			sta @REAL_MUL.B+3
  4836 3495 AD F4 99			lda SYSTEM.ARCTAN.@01018E000.RESULT
  4837 3498 85 86			sta @REAL_MUL.A
  4838 349A AD F5 99			lda SYSTEM.ARCTAN.@01018E000.RESULT+1
  4839 349D 85 87			sta @REAL_MUL.A+1
  4840 349F AD F6 99			lda SYSTEM.ARCTAN.@01018E000.RESULT+2
  4841 34A2 85 88			sta @REAL_MUL.A+2
  4842 34A4 AD F7 99			lda SYSTEM.ARCTAN.@01018E000.RESULT+3
  4843 34A7 85 89			sta @REAL_MUL.A+3
  4844 34A9 20 63 14			jsr @REAL_MUL
  4845 34AC A5 86			lda :eax
  4846 34AE 95 95			sta :STACKORIGIN-1,x
  4847 34B0 A5 87			lda :eax+1
  4848 34B2 95 A5			sta :STACKORIGIN-1+STACKWIDTH,x
  4849 34B4 A5 88			lda :eax+2
  4850 34B6 95 B5			sta :STACKORIGIN-1+STACKWIDTH*2,x
  4851 34B8 A5 89			lda :eax+3
  4852 34BA 95 C5			sta :STACKORIGIN-1+STACKWIDTH*3,x
  4853 34BC A9 24			lda #$24
  4854 34BE 85 8E			sta @REAL_DIV.B
  4855 34C0 A9 03			lda #$03
  4856 34C2 85 8F			sta @REAL_DIV.B+1
  4857 34C4 A9 00			lda #$00
  4858 34C6 85 90			sta @REAL_DIV.B+2
  4859 34C8 A9 00			lda #$00
  4860 34CA 85 91			sta @REAL_DIV.B+3
  4861 34CC B5 95			lda :STACKORIGIN-1,x
  4862 34CE 85 86			sta @REAL_DIV.A
  4863 34D0 B5 A5			lda :STACKORIGIN-1+STACKWIDTH,x
  4864 34D2 85 87			sta @REAL_DIV.A+1
  4865 34D4 B5 B5			lda :STACKORIGIN-1+STACKWIDTH*2,x
  4866 34D6 85 88			sta @REAL_DIV.A+2
  4867 34D8 B5 C5			lda :STACKORIGIN-1+STACKWIDTH*3,x
  4868 34DA 85 89			sta @REAL_DIV.A+3
  4869 34DC 20 22 15			jsr @REAL_DIV
  4870 34DF CA				dex
  4871 34E0 20 CA 15			jsr @REAL_ROUND
  4872 34E3 A5 86			lda :eax
  4873 34E5 8D 44 A4			sta W
  4874 34E8 A5 87			lda :eax+1
  4875 34EA 8D 45 A4			sta W+1
  4876 34ED CA				dex
  4877
  4878 				; optimize OK (service.pas), line = 901
  4879
  4880 34EE AC 3E A4 84 84 AC + 	mwy BALL :bp2
  4881 34F8 A0 00			ldy #$00
  4882 34FA B1 84			lda (:bp2),y
  4883 34FC 10 0E			jpl l_0A88
  4884 34FE AD 44 A4			lda W
  4885 3501 18 69 B4			add #$B4
  4886 3504 8D 44 A4			sta W
  4887 3507 90 03			scc
  4888 3509 EE 45 A4			inc W+1
  4889 350C			l_0A88
  4890
  4891 				; optimize OK (service.pas), line = 903
  4892
  4893 350C AD 44 A4			lda W
  4894 350F 18 69 68			add #$68
  4895 3512 8D 44 A4			sta W
  4896 3515 AD 45 A4			lda W+1
  4897 3518 69 01			adc #$01
  4898 351A 8D 45 A4			sta W+1
  4899
  4900 				; optimize OK (service.pas), line = 904
  4901
  4902 351D A9 68			lda #$68
  4903 351F 85 8E			sta @SMALLINT.MOD.B
  4904 3521 A9 01			lda #$01
  4905 3523 85 8F			sta @SMALLINT.MOD.B+1
  4906 3525 AD 44 A4			lda W
  4907 3528 85 86			sta @SMALLINT.MOD.A
  4908 352A AD 45 A4			lda W+1
  4909 352D 85 87			sta @SMALLINT.MOD.A+1
  4910 352F 20 6F 12			jsr @SMALLINT.MOD
  4911 3532 A5 92			lda @SMALLINT.MOD.RESULT
  4912 3534 8D 44 A4			sta W
  4913 3537 A5 93			lda @SMALLINT.MOD.RESULT+1
  4914 3539 8D 45 A4			sta W+1
  4915 353C			l_0A61
  4916
  4917 				; optimize OK (service.pas), line = 907
  4918
  4919 353C AD 44 A4			lda W
  4920 353F 8D 42 A4			sta RESULT
  4921 3542 AD 45 A4			lda W+1
  4922 3545 8D 43 A4			sta RESULT+1
  4923 3548			@exit
  4924
  4925 				; ------------------------------------------------------------
  4926
  4927 = A43E			BALL	= DATAORIGIN+$0A67
  4928 = 99D7			BALL.X	= DATAORIGIN+$0000
  4929 = 99D9			BALL.Y	= DATAORIGIN+$0002
  4930 = 99DB			BALL.FINEX	= DATAORIGIN+$0004
  4931 = 99DD			BALL.FINEY	= DATAORIGIN+$0006
  4932 = 99DF			BALL.OLDX	= DATAORIGIN+$0008
  4933 = 99E1			BALL.OLDY	= DATAORIGIN+$000A
  4934 = 99E3			BALL.SPEED	= DATAORIGIN+$000C
  4935 = 99E5			BALL.FINESPEED	= DATAORIGIN+$000E
  4936 = 99E7			BALL.SPEEDX	= DATAORIGIN+$0010
  4937 = 99E9			BALL.SPEEDY	= DATAORIGIN+$0012
  4938 = 99EB			BALL.SBD	= DATAORIGIN+$0014
  4939 = 99ED			BALL.BRWHIT	= DATAORIGIN+$0016
  4940 = 99EE			BALL.INPLAY	= DATAORIGIN+$0017
  4941 = 99EF			BALL.LAUNCH	= DATAORIGIN+$0018
  4942 = 99F0			BALL.ONVAUS	= DATAORIGIN+$0019
  4943 = 99F1			BALL.STM	= DATAORIGIN+$001A
  4944 = A442			RESULT	= DATAORIGIN+$0A6B
  4945 = A444			W	= DATAORIGIN+$0A6D
  4946
  4947 = A43E			@VarData	= BALL
  4948 = 0004			@VarDataSize	= 4
  4949
  4950 3548 60				rts						; ret
  4951 				.endl
  4952
  4953 3549			.local	START_BALL					; PROCEDURE
  4954
  4955 				; optimize OK (service.pas), line = 915
  4956
  4957 3549 AC 46 A4 84 84 AC + 	mwy BALL :bp2
  4958 3553 A0 19			ldy #BALL.ONVAUS-DATAORIGIN
  4959 3555 A0 00			ldy #BALL.X-DATAORIGIN
  4960 3557 AD 18 9B			lda VAUS.X
  4961 355A 18 71 84			add (:bp2),y
  4962 355D 91 84			sta (:bp2),y
  4963 355F C8				iny
  4964 3560 A9 00			lda #$00
  4965 3562 69 00			adc #$00
  4966 3564 91 84			sta (:bp2),y
  4967
  4968 				; optimize OK (service.pas), line = 921
  4969
  4970 3566 A0 02			ldy #BALL.Y-DATAORIGIN
  4971 3568 AD 19 9B			lda VAUS.Y
  4972 356B 38 E9 03			sub #$03
  4973 356E 91 84			sta (:bp2),y
  4974 3570 C8				iny
  4975 3571 A9 00			lda #$00
  4976 3573 E9 00			sbc #$00
  4977 3575 91 84			sta (:bp2),y
  4978
  4979 				; optimize OK (service.pas), line = 926
  4980
  4981 3577 A0 04			ldy #BALL.FINEX-DATAORIGIN
  4982 3579 A9 00			lda #$00
  4983 357B 91 84			sta (:bp2),y
  4984 357D C8				iny
  4985 357E 91 84			sta (:bp2),y
  4986
  4987 				; optimize OK (service.pas), line = 927
  4988
  4989 3580 A0 06			ldy #BALL.FINEY-DATAORIGIN
  4990 3582 91 84			sta (:bp2),y
  4991 3584 C8				iny
  4992 3585 91 84			sta (:bp2),y
  4993
  4994 				; optimize OK (service.pas), line = 929
  4995
  4996 3587 A0 17			ldy #BALL.INPLAY-DATAORIGIN
  4997 3589 A9 01			lda #$01
  4998 358B 91 84			sta (:bp2),y
  4999
  5000 				; optimize OK (service.pas), line = 931
  5001
  5002 358D A0 14			ldy #BALL.SBD-DATAORIGIN
  5003 358F A9 00			lda #$00
  5004 3591 91 84			sta (:bp2),y
  5005 3593 C8				iny
  5006 3594 91 84			sta (:bp2),y
  5007
  5008 				; optimize OK (service.pas), line = 932
  5009
  5010 3596 A0 16			ldy #BALL.BRWHIT-DATAORIGIN
  5011 3598 91 84			sta (:bp2),y
  5012
  5013 				; ------------------------------------------------------------
  5014
  5015 = A446			BALL	= DATAORIGIN+$0A6F
  5016 = 99D7			BALL.X	= DATAORIGIN+$0000
  5017 = 99D9			BALL.Y	= DATAORIGIN+$0002
  5018 = 99DB			BALL.FINEX	= DATAORIGIN+$0004
  5019 = 99DD			BALL.FINEY	= DATAORIGIN+$0006
  5020 = 99DF			BALL.OLDX	= DATAORIGIN+$0008
  5021 = 99E1			BALL.OLDY	= DATAORIGIN+$000A
  5022 = 99E3			BALL.SPEED	= DATAORIGIN+$000C
  5023 = 99E5			BALL.FINESPEED	= DATAORIGIN+$000E
  5024 = 99E7			BALL.SPEEDX	= DATAORIGIN+$0010
  5025 = 99E9			BALL.SPEEDY	= DATAORIGIN+$0012
  5026 = 99EB			BALL.SBD	= DATAORIGIN+$0014
  5027 = 99ED			BALL.BRWHIT	= DATAORIGIN+$0016
  5028 = 99EE			BALL.INPLAY	= DATAORIGIN+$0017
  5029 = 99EF			BALL.LAUNCH	= DATAORIGIN+$0018
  5030 = 99F0			BALL.ONVAUS	= DATAORIGIN+$0019
  5031 = 99F1			BALL.STM	= DATAORIGIN+$001A
  5032
  5033 = A446			@VarData	= BALL
  5034 = 0002			@VarDataSize	= 2
  5035
  5036 359A			@exit
  5037 					.ifdef @new
  5038 					lda <@VarData
  5039 					sta :ztmp
  5040 					lda >@VarData
  5041 					ldy #@VarDataSize-1
  5042 					jmp @FreeMem
  5043 					els
  5044 359A 60				rts						; ret
  5045 					eif
  5046 				.endl
  5047
  5048 359B			.local	BALL_SPEED					; FUNCTION
  5049
  5050 				; ------------------------------------------------------------
  5051
  5052 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
  5053 				; as Pointer
  5054 359B B5 96			lda :STACKORIGIN,x
  5055 359D 85 84			sta :bp2
  5056 359F B5 A6			lda :STACKORIGIN+STACKWIDTH,x
  5057 35A1 85 85			sta :bp2+1
  5058 35A3 A0 1A			ldy #$1A
  5059 35A5 B1 84 99 4A A4 88 + 	mva:rpl (:bp2),y adr.BALL,y-
  5060 35AD CA				dex
  5061 35AE			@main
  5062
  5063 				; optimize OK (service.pas), line = 940
  5064
  5065 35AE AD 5A A4			lda BALL.SPEEDX
  5066 35B1 85 8E			sta :ecx
  5067 35B3 85 92			sta :ztmp8
  5068 35B5 AD 5B A4			lda BALL.SPEEDX+1
  5069 35B8 85 8F			sta :ecx+1
  5070 35BA 85 93			sta :ztmp9
  5071 35BC AD 5A A4			lda BALL.SPEEDX
  5072 35BF 85 86			sta :eax
  5073 35C1 85 94			sta :ztmp10
  5074 35C3 AD 5B A4			lda BALL.SPEEDX+1
  5075 35C6 85 87			sta :eax+1
  5076 35C8 85 95			sta :ztmp11
  5077 					.ifdef fmulinit
  5078 					fmulu_16
  5079 					els
  5080 35CA 20 2A 13			imulCX
  5081 					eif
  5082 35CD A5 95			lda :ztmp11
  5083 35CF 10 0D			bpl @+
  5084 35D1 A5 88			lda :eax+2
  5085 35D3 38 E5 92			sub :ztmp8
  5086 35D6 85 88			sta :eax+2
  5087 35D8 A5 89			lda :eax+3
  5088 35DA E5 93			sbc :ztmp9
  5089 35DC 85 89			sta :eax+3
  5090 				@
  5091 35DE A5 93			lda :ztmp9
  5092 35E0 10 0D			bpl @+
  5093 35E2 A5 88			lda :eax+2
  5094 35E4 38 E5 94			sub :ztmp10
  5095 35E7 85 88			sta :eax+2
  5096 35E9 A5 89			lda :eax+3
  5097 35EB E5 95			sbc :ztmp11
  5098 35ED 85 89			sta :eax+3
  5099 				@
  5100 35EF A5 86			lda :eax
  5101 35F1 85 9F			sta :STACKORIGIN+9
  5102 35F3 A5 87			lda :eax+1
  5103 35F5 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  5104 35F7 A5 88			lda :eax+2
  5105 35F9 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
  5106 35FB A5 89			lda :eax+3
  5107 35FD 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
  5108 35FF AD 5C A4			lda BALL.SPEEDY
  5109 3602 85 8E			sta :ecx
  5110 3604 85 92			sta :ztmp8
  5111 3606 AD 5D A4			lda BALL.SPEEDY+1
  5112 3609 85 8F			sta :ecx+1
  5113 360B 85 93			sta :ztmp9
  5114 360D AD 5C A4			lda BALL.SPEEDY
  5115 3610 85 86			sta :eax
  5116 3612 85 94			sta :ztmp10
  5117 3614 AD 5D A4			lda BALL.SPEEDY+1
  5118 3617 85 87			sta :eax+1
  5119 3619 85 95			sta :ztmp11
  5120 					.ifdef fmulinit
  5121 					fmulu_16
  5122 					els
  5123 361B 20 2A 13			imulCX
  5124 					eif
  5125 361E A5 95			lda :ztmp11
  5126 3620 10 0D			bpl @+
  5127 3622 A5 88			lda :eax+2
  5128 3624 38 E5 92			sub :ztmp8
  5129 3627 85 88			sta :eax+2
  5130 3629 A5 89			lda :eax+3
  5131 362B E5 93			sbc :ztmp9
  5132 362D 85 89			sta :eax+3
  5133 				@
  5134 362F A5 93			lda :ztmp9
  5135 3631 10 0D			bpl @+
  5136 3633 A5 88			lda :eax+2
  5137 3635 38 E5 94			sub :ztmp10
  5138 3638 85 88			sta :eax+2
  5139 363A A5 89			lda :eax+3
  5140 363C E5 95			sbc :ztmp11
  5141 363E 85 89			sta :eax+3
  5142 				@
  5143 3640 A5 9F			lda :STACKORIGIN+9
  5144 3642 18 65 86			add :eax
  5145 3645 8D E2 99			sta SYSTEM.SQRT.@010185000.X
  5146 3648 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  5147 364A 65 87			adc :eax+1
  5148 364C 8D E3 99			sta SYSTEM.SQRT.@010185000.X+1
  5149 364F A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
  5150 3651 65 88			adc :eax+2
  5151 3653 8D E4 99			sta SYSTEM.SQRT.@010185000.X+2
  5152 3656 A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
  5153 3658 65 89			adc :eax+3
  5154 365A 8D E5 99			sta SYSTEM.SQRT.@010185000.X+3
  5155 365D 20 CB 1B			jsr SYSTEM.SQRT.@010185000
  5156 3660 E8				inx
  5157 3661 AD E6 99			lda SYSTEM.SQRT.@010185000.RESULT
  5158 3664 85 8A			sta :FP2MAN0
  5159 3666 AD E7 99			lda SYSTEM.SQRT.@010185000.RESULT+1
  5160 3669 85 8B			sta :FP2MAN1
  5161 366B AD E8 99			lda SYSTEM.SQRT.@010185000.RESULT+2
  5162 366E 85 8C			sta :FP2MAN2
  5163 3670 AD E9 99			lda SYSTEM.SQRT.@010185000.RESULT+3
  5164 3673 85 8D			sta :FP2MAN3
  5165 3675 20 0C 16			jsr @FROUND
  5166 3678 A5 8E			lda :FPMAN0
  5167 367A 8D 65 A4			sta RESULT
  5168 367D A5 8F			lda :FPMAN1
  5169 367F 8D 66 A4			sta RESULT+1
  5170 3682 CA				dex
  5171 3683			@exit
  5172
  5173 				; ------------------------------------------------------------
  5174
  5175 = A44A			adr.BALL	= DATAORIGIN+$0A73	; [27] RECORD
  5176 3683			.var BALL	= adr.BALL .word
  5177 = A44A			BALL.X	= DATAORIGIN+$0A73
  5178 = A44C			BALL.Y	= DATAORIGIN+$0A75
  5179 = A44E			BALL.FINEX	= DATAORIGIN+$0A77
  5180 = A450			BALL.FINEY	= DATAORIGIN+$0A79
  5181 = A452			BALL.OLDX	= DATAORIGIN+$0A7B
  5182 = A454			BALL.OLDY	= DATAORIGIN+$0A7D
  5183 = A456			BALL.SPEED	= DATAORIGIN+$0A7F
  5184 = A458			BALL.FINESPEED	= DATAORIGIN+$0A81
  5185 = A45A			BALL.SPEEDX	= DATAORIGIN+$0A83
  5186 = A45C			BALL.SPEEDY	= DATAORIGIN+$0A85
  5187 = A45E			BALL.SBD	= DATAORIGIN+$0A87
  5188 = A460			BALL.BRWHIT	= DATAORIGIN+$0A89
  5189 = A461			BALL.INPLAY	= DATAORIGIN+$0A8A
  5190 = A462			BALL.LAUNCH	= DATAORIGIN+$0A8B
  5191 = A463			BALL.ONVAUS	= DATAORIGIN+$0A8C
  5192 = A464			BALL.STM	= DATAORIGIN+$0A8D
  5193 = A465			RESULT	= DATAORIGIN+$0A8E
  5194
  5195 = A44A			@VarData	= BALL.X
  5196 = 001B			@VarDataSize	= 27
  5197
  5198 3683 60				rts						; ret
  5199 = 3684 4A A4		BALL
  5199 				.endl
  5200
  5201 3686			.local	MOVE_BALL					; PROCEDURE
  5202
  5203 				; optimize OK (service.pas), line = 954
  5204
  5205 3686 AC 67 A4 84 84 AC + 	mwy BALL :bp2
  5206 3690 A0 00			ldy #BALL.X-DATAORIGIN
  5207 3692 B1 84			lda (:bp2),y
  5208 3694 C8				iny
  5209 3695 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  5210 3697 A9 00			lda #$00
  5211 3699 A0 04			ldy #BALL.FINEX-DATAORIGIN
  5212 369B 18 71 84			add (:bp2),y
  5213 369E 85 9F			sta :STACKORIGIN+9
  5214 36A0 C8				iny
  5215 36A1 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  5216 36A3 71 84			adc (:bp2),y
  5217 36A5 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  5218 36A7 A0 10			ldy #BALL.SPEEDX-DATAORIGIN
  5219 36A9 A5 9F			lda :STACKORIGIN+9
  5220 36AB 18 71 84			add (:bp2),y
  5221 36AE 8D 6B A4			sta X
  5222 36B1 C8				iny
  5223 36B2 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  5224 36B4 71 84			adc (:bp2),y
  5225 36B6 8D 6C A4			sta X+1
  5226
  5227 				; optimize OK (service.pas), line = 955
  5228
  5229 36B9 A0 02			ldy #BALL.Y-DATAORIGIN
  5230 36BB B1 84			lda (:bp2),y
  5231 36BD C8				iny
  5232 36BE 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  5233 36C0 A9 00			lda #$00
  5234 36C2 A0 06			ldy #BALL.FINEY-DATAORIGIN
  5235 36C4 18 71 84			add (:bp2),y
  5236 36C7 85 9F			sta :STACKORIGIN+9
  5237 36C9 C8				iny
  5238 36CA A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  5239 36CC 71 84			adc (:bp2),y
  5240 36CE 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  5241 36D0 A0 12			ldy #BALL.SPEEDY-DATAORIGIN
  5242 36D2 A5 9F			lda :STACKORIGIN+9
  5243 36D4 18 71 84			add (:bp2),y
  5244 36D7 8D 6D A4			sta Y
  5245 36DA C8				iny
  5246 36DB A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  5247 36DD 71 84			adc (:bp2),y
  5248 36DF 8D 6E A4			sta Y+1
  5249
  5250 				; optimize OK (service.pas), line = 957
  5251
  5252 36E2 A0 00			ldy #BALL.X-DATAORIGIN
  5253 36E4 AD 6C A4			lda X+1
  5254 36E7 91 84			sta (:bp2),y
  5255 36E9 C8				iny
  5256 36EA A9 00			lda #$00
  5257 36EC 91 84			sta (:bp2),y
  5258
  5259 				; optimize OK (service.pas), line = 958
  5260
  5261 36EE A0 02			ldy #BALL.Y-DATAORIGIN
  5262 36F0 AD 6E A4			lda Y+1
  5263 36F3 91 84			sta (:bp2),y
  5264 36F5 C8				iny
  5265 36F6 A9 00			lda #$00
  5266 36F8 91 84			sta (:bp2),y
  5267
  5268 				; optimize OK (service.pas), line = 960
  5269
  5270 36FA A0 04			ldy #BALL.FINEX-DATAORIGIN
  5271 36FC AD 6B A4			lda X
  5272 36FF 91 84			sta (:bp2),y
  5273 3701 C8				iny
  5274 3702 A9 00			lda #$00
  5275 3704 91 84			sta (:bp2),y
  5276
  5277 				; optimize OK (service.pas), line = 961
  5278
  5279 3706 A0 06			ldy #BALL.FINEY-DATAORIGIN
  5280 3708 AD 6D A4			lda Y
  5281 370B 91 84			sta (:bp2),y
  5282 370D C8				iny
  5283 370E A9 00			lda #$00
  5284 3710 91 84			sta (:bp2),y
  5285
  5286 				; optimize OK (service.pas), line = 966
  5287
  5288 3712 A0 00			ldy #BALL.X-DATAORIGIN
  5289 3714 B1 84			lda (:bp2),y
  5290 3716 C8				iny
  5291 3717 C9 D9			cmp #$D9
  5292 3719 B1 84			lda (:bp2),y
  5293 371B E9 00			sbc #$00
  5294 371D 50 02			svc
  5295 371F 49 80			eor #$80
  5296 3721 30 67			jmi l_0B44
  5297
  5298 				; optimize OK (service.pas), line = 968
  5299
  5300 3723 A0 10			ldy #BALL.SPEEDX-DATAORIGIN
  5301 3725 A9 00			lda #$00
  5302 3727 38 F1 84			sub (:bp2),y
  5303 372A 85 9F			sta :STACKORIGIN+9
  5304 372C C8				iny
  5305 372D A9 00			lda #$00
  5306 372F F1 84			sbc (:bp2),y
  5307 3731 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  5308 3733 A0 10			ldy #BALL.SPEEDX-DATAORIGIN
  5309 3735 A5 9F			lda :STACKORIGIN+9
  5310 3737 91 84			sta (:bp2),y
  5311 3739 C8				iny
  5312 373A A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  5313 373C 91 84			sta (:bp2),y
  5314
  5315 				; optimize OK (service.pas), line = 969
  5316
  5317 373E A0 00			ldy #BALL.X-DATAORIGIN
  5318 3740 A9 B0			lda #$B0
  5319 3742 38 F1 84			sub (:bp2),y
  5320 3745 85 9F			sta :STACKORIGIN+9
  5321 3747 C8				iny
  5322 3748 A9 01			lda #$01
  5323 374A F1 84			sbc (:bp2),y
  5324 374C 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  5325 374E A0 00			ldy #BALL.X-DATAORIGIN
  5326 3750 A5 9F			lda :STACKORIGIN+9
  5327 3752 91 84			sta (:bp2),y
  5328 3754 C8				iny
  5329 3755 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  5330 3757 91 84			sta (:bp2),y
  5331
  5332 				; optimize OK (service.pas), line = 970
  5333
  5334 3759 A0 04			ldy #BALL.FINEX-DATAORIGIN
  5335 375B A9 FF			lda #$FF
  5336 375D 51 84			eor (:bp2),y
  5337 375F 85 9F			sta :STACKORIGIN+9
  5338 3761 C8				iny
  5339 3762 A9 00			lda #$00
  5340 3764 F1 84			sbc (:bp2),y
  5341 3766 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  5342 3768 A0 04			ldy #BALL.FINEX-DATAORIGIN
  5343 376A A5 9F			lda :STACKORIGIN+9
  5344 376C 91 84			sta (:bp2),y
  5345 376E C8				iny
  5346 376F A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  5347 3771 91 84			sta (:bp2),y
  5348
  5349 				; optimize OK (service.pas), line = 971
  5350
  5351 3773 A9 F0			lda #$F0
  5352 3775 8D 86 9A			sta BALL_BLOCK_SOUND.A
  5353 3778 A9 00			lda #$00
  5354 377A 8D 87 9A			sta BALL_BLOCK_SOUND.A+1
  5355 377D A9 05			lda #$05
  5356 377F 8D 88 9A			sta BALL_BLOCK_SOUND.B
  5357 3782 A9 00			lda #$00
  5358 3784 8D 89 9A			sta BALL_BLOCK_SOUND.B+1
  5359 3787 20 CA 24			jsr BALL_BLOCK_SOUND
  5360 378A			l_0B44
  5361
  5362 				; optimize OK (service.pas), line = 976
  5363
  5364 378A AC 67 A4 84 84 AC + 	mwy BALL :bp2
  5365 3794 A0 00			ldy #BALL.X-DATAORIGIN
  5366 3796 B1 84			lda (:bp2),y
  5367 3798 C8				iny
  5368 3799 C9 0A			cmp #$0A
  5369 379B B1 84			lda (:bp2),y
  5370 379D E9 00			sbc #$00
  5371 379F 50 02			svc
  5372 37A1 49 80			eor #$80
  5373 37A3 10 67			jpl l_0B79
  5374
  5375 				; optimize OK (service.pas), line = 978
  5376
  5377 37A5 A0 10			ldy #BALL.SPEEDX-DATAORIGIN
  5378 37A7 A9 00			lda #$00
  5379 37A9 38 F1 84			sub (:bp2),y
  5380 37AC 85 9F			sta :STACKORIGIN+9
  5381 37AE C8				iny
  5382 37AF A9 00			lda #$00
  5383 37B1 F1 84			sbc (:bp2),y
  5384 37B3 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  5385 37B5 A0 10			ldy #BALL.SPEEDX-DATAORIGIN
  5386 37B7 A5 9F			lda :STACKORIGIN+9
  5387 37B9 91 84			sta (:bp2),y
  5388 37BB C8				iny
  5389 37BC A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  5390 37BE 91 84			sta (:bp2),y
  5391
  5392 				; optimize OK (service.pas), line = 979
  5393
  5394 37C0 A0 00			ldy #BALL.X-DATAORIGIN
  5395 37C2 A9 14			lda #$14
  5396 37C4 38 F1 84			sub (:bp2),y
  5397 37C7 85 9F			sta :STACKORIGIN+9
  5398 37C9 C8				iny
  5399 37CA A9 00			lda #$00
  5400 37CC F1 84			sbc (:bp2),y
  5401 37CE 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  5402 37D0 A0 00			ldy #BALL.X-DATAORIGIN
  5403 37D2 A5 9F			lda :STACKORIGIN+9
  5404 37D4 91 84			sta (:bp2),y
  5405 37D6 C8				iny
  5406 37D7 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  5407 37D9 91 84			sta (:bp2),y
  5408
  5409 				; optimize OK (service.pas), line = 980
  5410
  5411 37DB A0 04			ldy #BALL.FINEX-DATAORIGIN
  5412 37DD A9 FF			lda #$FF
  5413 37DF 51 84			eor (:bp2),y
  5414 37E1 85 9F			sta :STACKORIGIN+9
  5415 37E3 C8				iny
  5416 37E4 A9 00			lda #$00
  5417 37E6 F1 84			sbc (:bp2),y
  5418 37E8 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  5419 37EA A0 04			ldy #BALL.FINEX-DATAORIGIN
  5420 37EC A5 9F			lda :STACKORIGIN+9
  5421 37EE 91 84			sta (:bp2),y
  5422 37F0 C8				iny
  5423 37F1 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  5424 37F3 91 84			sta (:bp2),y
  5425
  5426 				; optimize OK (service.pas), line = 981
  5427
  5428 37F5 A9 F0			lda #$F0
  5429 37F7 8D 86 9A			sta BALL_BLOCK_SOUND.A
  5430 37FA A9 00			lda #$00
  5431 37FC 8D 87 9A			sta BALL_BLOCK_SOUND.A+1
  5432 37FF A9 05			lda #$05
  5433 3801 8D 88 9A			sta BALL_BLOCK_SOUND.B
  5434 3804 A9 00			lda #$00
  5435 3806 8D 89 9A			sta BALL_BLOCK_SOUND.B+1
  5436 3809 20 CA 24			jsr BALL_BLOCK_SOUND
  5437 380C			l_0B79
  5438
  5439 				; optimize OK (service.pas), line = 986
  5440
  5441 380C AC 67 A4 84 84 AC + 	mwy BALL :bp2
  5442 3816 A0 02			ldy #BALL.Y-DATAORIGIN
  5443 3818 B1 84			lda (:bp2),y
  5444 381A C8				iny
  5445 381B C9 0C			cmp #$0C
  5446 381D B1 84			lda (:bp2),y
  5447 381F E9 00			sbc #$00
  5448 3821 50 02			svc
  5449 3823 49 80			eor #$80
  5450 3825 10 67			jpl l_0BAE
  5451
  5452 				; optimize OK (service.pas), line = 988
  5453
  5454 3827 A0 12			ldy #BALL.SPEEDY-DATAORIGIN
  5455 3829 A9 00			lda #$00
  5456 382B 38 F1 84			sub (:bp2),y
  5457 382E 85 9F			sta :STACKORIGIN+9
  5458 3830 C8				iny
  5459 3831 A9 00			lda #$00
  5460 3833 F1 84			sbc (:bp2),y
  5461 3835 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  5462 3837 A0 12			ldy #BALL.SPEEDY-DATAORIGIN
  5463 3839 A5 9F			lda :STACKORIGIN+9
  5464 383B 91 84			sta (:bp2),y
  5465 383D C8				iny
  5466 383E A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  5467 3840 91 84			sta (:bp2),y
  5468
  5469 				; optimize OK (service.pas), line = 989
  5470
  5471 3842 A0 02			ldy #BALL.Y-DATAORIGIN
  5472 3844 A9 18			lda #$18
  5473 3846 38 F1 84			sub (:bp2),y
  5474 3849 85 9F			sta :STACKORIGIN+9
  5475 384B C8				iny
  5476 384C A9 00			lda #$00
  5477 384E F1 84			sbc (:bp2),y
  5478 3850 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  5479 3852 A0 02			ldy #BALL.Y-DATAORIGIN
  5480 3854 A5 9F			lda :STACKORIGIN+9
  5481 3856 91 84			sta (:bp2),y
  5482 3858 C8				iny
  5483 3859 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  5484 385B 91 84			sta (:bp2),y
  5485
  5486 				; optimize OK (service.pas), line = 990
  5487
  5488 385D A0 06			ldy #BALL.FINEY-DATAORIGIN
  5489 385F A9 FF			lda #$FF
  5490 3861 51 84			eor (:bp2),y
  5491 3863 85 9F			sta :STACKORIGIN+9
  5492 3865 C8				iny
  5493 3866 A9 00			lda #$00
  5494 3868 F1 84			sbc (:bp2),y
  5495 386A 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  5496 386C A0 06			ldy #BALL.FINEY-DATAORIGIN
  5497 386E A5 9F			lda :STACKORIGIN+9
  5498 3870 91 84			sta (:bp2),y
  5499 3872 C8				iny
  5500 3873 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  5501 3875 91 84			sta (:bp2),y
  5502
  5503 				; optimize OK (service.pas), line = 991
  5504
  5505 3877 A9 F0			lda #$F0
  5506 3879 8D 86 9A			sta BALL_BLOCK_SOUND.A
  5507 387C A9 00			lda #$00
  5508 387E 8D 87 9A			sta BALL_BLOCK_SOUND.A+1
  5509 3881 A9 05			lda #$05
  5510 3883 8D 88 9A			sta BALL_BLOCK_SOUND.B
  5511 3886 A9 00			lda #$00
  5512 3888 8D 89 9A			sta BALL_BLOCK_SOUND.B+1
  5513 388B 20 CA 24			jsr BALL_BLOCK_SOUND
  5514 388E			l_0BAE
  5515
  5516 				; optimize OK (service.pas), line = 999
  5517
  5518 388E AC 67 A4 84 84 AC + 	mwy BALL :bp2
  5519 3898 A0 02			ldy #BALL.Y-DATAORIGIN
  5520 389A B1 84			lda (:bp2),y
  5521 389C 18 69 03			add #$03
  5522 389F 85 9F			sta :STACKORIGIN+9
  5523 38A1 C8				iny
  5524 38A2 B1 84			lda (:bp2),y
  5525 38A4 69 00			adc #$00
  5526 38A6 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  5527 38A8 A0 01			ldy #1
  5528 38AA A5 9F			lda :STACKORIGIN+9
  5529 38AC C9 B9			cmp #$B9
  5530 38AE A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  5531 38B0 E9 00			sbc #$00
  5532 38B2 50 02			svc
  5533 38B4 49 80			eor #$80
  5534 38B6 10 01			bpl @+
  5535 38B8 88				dey
  5536 				@
  5537 38B9 84 9F			sty :STACKORIGIN+9
  5538 38BB A0 12			ldy #BALL.SPEEDY-DATAORIGIN
  5539 38BD B1 84			lda (:bp2),y
  5540 38BF 85 A0			sta :STACKORIGIN+10
  5541 38C1 C8				iny
  5542 38C2 B1 84			lda (:bp2),y
  5543 38C4 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  5544 38C6 A0 01			ldy #1
  5545 38C8 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
  5546 38CA 30 04			bmi @+
  5547 38CC 05 A0			ora :STACKORIGIN+10
  5548 38CE D0 01			sne
  5549 				@
  5550 38D0 88				dey
  5551 				@
  5552 38D1 98				tya
  5553 38D2 25 9F			and :STACKORIGIN+9
  5554 38D4 85 9F			sta :STACKORIGIN+9
  5555 38D6 A0 0A			ldy #BALL.OLDY-DATAORIGIN
  5556 38D8 B1 84			lda (:bp2),y
  5557 38DA 85 A0			sta :STACKORIGIN+10
  5558 38DC C8				iny
  5559 38DD B1 84			lda (:bp2),y
  5560 38DF 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  5561 38E1 A0 01			ldy #1
  5562 38E3 A5 A0			lda :STACKORIGIN+10
  5563 38E5 C9 B9			cmp #$B9
  5564 38E7 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
  5565 38E9 E9 00			sbc #$00
  5566 38EB 50 02			svc
  5567 38ED 49 80			eor #$80
  5568 38EF 30 01			bmi @+
  5569 38F1 88				dey
  5570 				@
  5571 38F2 98				tya
  5572 38F3 25 9F			and :STACKORIGIN+9
  5573 38F5 D0 03 4C 28 3C		jeq l_0BFD
  5574
  5575 				; optimize OK (service.pas), line = 1003
  5576
  5577 38FA A0 00			ldy #BALL.X-DATAORIGIN
  5578 38FC B1 84			lda (:bp2),y
  5579 38FE 85 9F			sta :STACKORIGIN+9
  5580 3900 C8				iny
  5581 3901 AD 18 9B			lda VAUS.X
  5582 3904 38 E9 03			sub #$03
  5583 3907 85 A0			sta :STACKORIGIN+10
  5584 3909 A9 00			lda #$00
  5585 390B E9 00			sbc #$00
  5586 390D 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  5587 390F A5 A0			lda :STACKORIGIN+10
  5588 3911 C5 9F			cmp :STACKORIGIN+9
  5589 3913 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
  5590 3915 F1 84			sbc (:bp2),y
  5591 3917 50 02			svc
  5592 3919 49 80			eor #$80
  5593 391B 30 03 4C 28 3C		jpl l_0C2C
  5594 3920 A0 00			ldy #BALL.X-DATAORIGIN
  5595 3922 B1 84			lda (:bp2),y
  5596 3924 85 A0			sta :STACKORIGIN+10
  5597 3926 C8				iny
  5598 3927 B1 84			lda (:bp2),y
  5599 3929 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  5600 392B AD 18 9B			lda VAUS.X
  5601 392E 18 6D 20 9B			add VAUS.WIDTH
  5602 3932 85 A1			sta :STACKORIGIN+11
  5603 3934 A9 00			lda #$00
  5604 3936 69 00			adc #$00
  5605 3938 85 B1			sta :STACKORIGIN+STACKWIDTH+11
  5606 393A A5 A1			lda :STACKORIGIN+11
  5607 393C 18 69 03			add #$03
  5608 393F 85 A1			sta :STACKORIGIN+11
  5609 3941 A5 B1			lda :STACKORIGIN+STACKWIDTH+11
  5610 3943 69 00			adc #$00
  5611 3945 85 B1			sta :STACKORIGIN+STACKWIDTH+11
  5612 3947 A9 00			lda #$00
  5613 3949 69 00			adc #$00
  5614 394B 85 C1			sta :STACKORIGIN+STACKWIDTH*2+11
  5615 394D A9 00			lda #$00
  5616 394F 69 00			adc #$00
  5617 3951 85 D1			sta :STACKORIGIN+STACKWIDTH*3+11
  5618 3953 A0 00			ldy #$00
  5619 3955 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
  5620 3957 10 01			spl
  5621 3959 88				dey
  5622 395A 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  5623 395C 84 C0			sty :STACKORIGIN+STACKWIDTH*2+10
  5624 395E 84 D0			sty :STACKORIGIN+STACKWIDTH*3+10
  5625 3960 A5 D0			lda :STACKORIGIN+STACKWIDTH*3+10
  5626 3962 C5 D1			cmp :STACKORIGIN+STACKWIDTH*3+11
  5627 3964 D0 10			bne @+
  5628 3966 A5 C0			lda :STACKORIGIN+STACKWIDTH*2+10
  5629 3968 C5 C1			cmp :STACKORIGIN+STACKWIDTH*2+11
  5630 396A D0 0A			bne @+
  5631 396C A5 B0			lda :STACKORIGIN+STACKWIDTH+10
  5632 396E C5 B1			cmp :STACKORIGIN+STACKWIDTH+11
  5633 3970 D0 04			bne @+
  5634 3972 A5 A0			lda :STACKORIGIN+10
  5635 3974 C5 A1			cmp :STACKORIGIN+11
  5636 				@
  5637 3976 90 03 4C 28 3C		jcs l_0C2C
  5638 				@
  5639
  5640 				; optimize OK (service.pas), line = 1006
  5641
  5642 397B A0 12			ldy #BALL.SPEEDY-DATAORIGIN
  5643 397D A9 00			lda #$00
  5644 397F 38 F1 84			sub (:bp2),y
  5645 3982 85 9F			sta :STACKORIGIN+9
  5646 3984 C8				iny
  5647 3985 A9 00			lda #$00
  5648 3987 F1 84			sbc (:bp2),y
  5649 3989 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  5650 398B A0 12			ldy #BALL.SPEEDY-DATAORIGIN
  5651 398D A5 9F			lda :STACKORIGIN+9
  5652 398F 91 84			sta (:bp2),y
  5653 3991 C8				iny
  5654 3992 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  5655 3994 91 84			sta (:bp2),y
  5656
  5657 				; optimize OK (service.pas), line = 1008
  5658
  5659 3996 AD 24 9B			lda VAUS.LETTER
  5660 3999 C9 06			cmp #$06
  5661 399B D0 1D			jne l_0C50
  5662 399D A0 18			ldy #BALL.LAUNCH-DATAORIGIN
  5663 399F B1 84			lda (:bp2),y
  5664 39A1 D0 17			jne l_0C50
  5665
  5666 				; optimize OK (service.pas), line = 1010
  5667
  5668 39A3 A0 1A			ldy #BALL.STM-DATAORIGIN
  5669 39A5 91 84			sta (:bp2),y
  5670
  5671 				; optimize OK (service.pas), line = 1011
  5672
  5673 39A7 A0 18			ldy #BALL.LAUNCH-DATAORIGIN
  5674 39A9 A9 01			lda #$01
  5675 39AB 91 84			sta (:bp2),y
  5676
  5677 				; optimize OK (service.pas), line = 1012
  5678
  5679 39AD A0 00			ldy #BALL.X-DATAORIGIN
  5680 39AF B1 84			lda (:bp2),y
  5681 39B1 C8				iny
  5682 39B2 38 ED 18 9B			sub VAUS.X
  5683 39B6 A0 19			ldy #BALL.ONVAUS-DATAORIGIN
  5684 39B8 91 84			sta (:bp2),y
  5685 39BA			l_0C50
  5686
  5687 				; optimize OK (service.pas), line = 1015
  5688
  5689 39BA A9 2C			lda #$2C
  5690 39BC 8D 86 9A			sta BALL_BLOCK_SOUND.A
  5691 39BF A9 01			lda #$01
  5692 39C1 8D 87 9A			sta BALL_BLOCK_SOUND.A+1
  5693 39C4 A9 06			lda #$06
  5694 39C6 8D 88 9A			sta BALL_BLOCK_SOUND.B
  5695 39C9 A9 00			lda #$00
  5696 39CB 8D 89 9A			sta BALL_BLOCK_SOUND.B+1
  5697 39CE 20 CA 24			jsr BALL_BLOCK_SOUND
  5698
  5699 				; optimize OK (service.pas), line = 1019
  5700
  5701 39D1 AC 67 A4 84 84 AC + 	mwy BALL :bp2
  5702 39DB A0 00			ldy #BALL.X-DATAORIGIN
  5703 39DD B1 84			lda (:bp2),y
  5704 39DF 85 9F			sta :STACKORIGIN+9
  5705 39E1 C8				iny
  5706 39E2 B1 84			lda (:bp2),y
  5707 39E4 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  5708 39E6 AD 18 9B			lda VAUS.X
  5709 39E9 18 69 0A			add #$0A
  5710 39EC 85 A0			sta :STACKORIGIN+10
  5711 39EE A9 00			lda #$00
  5712 39F0 69 00			adc #$00
  5713 39F2 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  5714 39F4 A0 00			ldy #$00
  5715 39F6 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  5716 39F8 10 01			spl
  5717 39FA 88				dey
  5718 39FB 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  5719 39FD 84 BF			sty :STACKORIGIN+STACKWIDTH*2+9
  5720 39FF 84 CF			sty :STACKORIGIN+STACKWIDTH*3+9
  5721 3A01				.LOCAL
  5722 3A01 A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
  5723 3A03 38 E9 00			sub #$00
  5724 3A06 D0 1C			bne L4
  5725 3A08 A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
  5726 3A0A C9 00			cmp #$00
  5727 3A0C D0 0A			bne L1
  5728 3A0E A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  5729 3A10 C5 B0			cmp :STACKORIGIN+STACKWIDTH+10
  5730 3A12 D0 04			bne L1
  5731 3A14 A5 9F			lda :STACKORIGIN+9
  5732 3A16 C5 A0			cmp :STACKORIGIN+10
  5733 3A18 F0 10		L1	beq L5
  5734 3A1A B0 04			bcs L3
  5735 3A1C A9 FF			lda #$FF
  5736 3A1E D0 0A			bne L5
  5737 3A20 A9 01		L3	lda #$01
  5738 3A22 D0 06			bne L5
  5739 3A24 50 04		L4	bvc L5
  5740 3A26 49 FF			eor #$FF
  5741 3A28 09 01			ora #$01
  5742 3A2A			L5
  5743 					.ENDL
  5744 3A2A 30 03 4C ED 3A		jpl l_0C80
  5745
  5746 				; optimize OK (service.pas), line = 1022
  5747
  5748 3A2F A0 10			ldy #BALL.SPEEDX-DATAORIGIN
  5749 3A31 A9 00			lda #$00
  5750 3A33 38 F1 84			sub (:bp2),y
  5751 3A36 85 9F			sta :STACKORIGIN+9
  5752 3A38 C8				iny
  5753 3A39 A9 00			lda #$00
  5754 3A3B F1 84			sbc (:bp2),y
  5755 3A3D 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  5756 3A3F A0 10			ldy #BALL.SPEEDX-DATAORIGIN
  5757 3A41 A5 9F			lda :STACKORIGIN+9
  5758 3A43 91 84			sta (:bp2),y
  5759 3A45 C8				iny
  5760 3A46 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  5761 3A48 91 84			sta (:bp2),y
  5762
  5763 				; optimize OK (service.pas), line = 1026
  5764
  5765 3A4A AD 67 A4			lda BALL
  5766 3A4D 8D 3E A4			sta GET_BALL_DIRECTION.BALL
  5767 3A50 AD 68 A4			lda BALL+1
  5768 3A53 8D 3F A4			sta GET_BALL_DIRECTION.BALL+1
  5769 3A56 20 8E 33			jsr GET_BALL_DIRECTION
  5770 3A59 E8				inx
  5771 3A5A AD 42 A4 95 96		mva GET_BALL_DIRECTION.RESULT :STACKORIGIN,x
  5772 3A5F AD 43 A4 95 A6		mva GET_BALL_DIRECTION.RESULT+1 :STACKORIGIN+STACKWIDTH,x
  5773 3A64 A9 1E			lda #$1E
  5774 3A66 20 18 24			jsr SYSTEM.RANDOM.@010180000
  5775 3A69 B5 96			lda :STACKORIGIN,x
  5776 3A6B 18 6D 1C 9A			add SYSTEM.RANDOM.@010180000.RESULT
  5777 3A6F 8D 6F A4			sta ANGLE
  5778 3A72 B5 A6			lda :STACKORIGIN+STACKWIDTH,x
  5779 3A74 69 00			adc #$00
  5780 3A76 8D 70 A4			sta ANGLE+1
  5781 3A79 CA				dex
  5782
  5783 				; optimize OK (service.pas), line = 1034
  5784
  5785 3A7A A9 A0			lda #$A0
  5786 3A7C 8D D2 A3			sta MIN.A
  5787 3A7F A9 00			lda #$00
  5788 3A81 8D D3 A3			sta MIN.A+1
  5789 3A84 AD 6F A4			lda ANGLE
  5790 3A87 8D D4 A3			sta MIN.B
  5791 3A8A AD 70 A4			lda ANGLE+1
  5792 3A8D 8D D5 A3			sta MIN.B+1
  5793 3A90 20 EE 26			jsr MIN
  5794 3A93 A9 78			lda #$78
  5795 3A95 8D CC A3			sta MAX.A
  5796 3A98 A9 00			lda #$00
  5797 3A9A 8D CD A3			sta MAX.A+1
  5798 3A9D AD D6 A3			lda MIN.RESULT
  5799 3AA0 8D CE A3			sta MAX.B
  5800 3AA3 AD D7 A3			lda MIN.RESULT+1
  5801 3AA6 8D CF A3			sta MAX.B+1
  5802 3AA9 20 C3 26			jsr MAX
  5803 3AAC AD 67 A4			lda BALL
  5804 3AAF 8D 34 A4			sta SET_BALL_DIRECTION.BALL
  5805 3AB2 AD 68 A4			lda BALL+1
  5806 3AB5 8D 35 A4			sta SET_BALL_DIRECTION.BALL+1
  5807 3AB8 AD D0 A3			lda MAX.RESULT
  5808 3ABB 8D 38 A4			sta SET_BALL_DIRECTION.ANGLE
  5809 3ABE AD D1 A3			lda MAX.RESULT+1
  5810 3AC1 8D 39 A4			sta SET_BALL_DIRECTION.ANGLE+1
  5811 3AC4 20 03 32			jsr SET_BALL_DIRECTION
  5812
  5813 				; optimize OK (service.pas), line = 1039
  5814
  5815 3AC7 AC 67 A4 84 84 AC + 	mwy BALL :bp2
  5816 3AD1 A0 0C			ldy #BALL.SPEED-DATAORIGIN
  5817 3AD3 B1 84			lda (:bp2),y
  5818 3AD5 8D 2A A4			sta SET_BALL_SPEED.SPEED
  5819 3AD8 C8				iny
  5820 3AD9 B1 84			lda (:bp2),y
  5821 3ADB 8D 2B A4			sta SET_BALL_SPEED.SPEED+1
  5822 3ADE AD 67 A4			lda BALL
  5823 3AE1 8D 26 A4			sta SET_BALL_SPEED.BALL
  5824 3AE4 AD 68 A4			lda BALL+1
  5825 3AE7 8D 27 A4			sta SET_BALL_SPEED.BALL+1
  5826 3AEA 20 F3 2F			jsr SET_BALL_SPEED
  5827 3AED			l_0C80
  5828
  5829 				; optimize OK (service.pas), line = 1045
  5830
  5831 3AED AC 67 A4 84 84 AC + 	mwy BALL :bp2
  5832 3AF7 A0 00			ldy #BALL.X-DATAORIGIN
  5833 3AF9 B1 84			lda (:bp2),y
  5834 3AFB 85 9F			sta :STACKORIGIN+9
  5835 3AFD C8				iny
  5836 3AFE B1 84			lda (:bp2),y
  5837 3B00 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  5838 3B02 AD 18 9B			lda VAUS.X
  5839 3B05 18 6D 20 9B			add VAUS.WIDTH
  5840 3B09 85 A0			sta :STACKORIGIN+10
  5841 3B0B A9 00			lda #$00
  5842 3B0D 69 00			adc #$00
  5843 3B0F 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  5844 3B11 A5 A0			lda :STACKORIGIN+10
  5845 3B13 38 E9 0A			sub #$0A
  5846 3B16 85 A0			sta :STACKORIGIN+10
  5847 3B18 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
  5848 3B1A E9 00			sbc #$00
  5849 3B1C 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  5850 3B1E A9 00			lda #$00
  5851 3B20 E9 00			sbc #$00
  5852 3B22 85 C0			sta :STACKORIGIN+STACKWIDTH*2+10
  5853 3B24 A9 00			lda #$00
  5854 3B26 E9 00			sbc #$00
  5855 3B28 85 D0			sta :STACKORIGIN+STACKWIDTH*3+10
  5856 3B2A A0 00			ldy #$00
  5857 3B2C A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  5858 3B2E 10 01			spl
  5859 3B30 88				dey
  5860 3B31 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  5861 3B33 84 BF			sty :STACKORIGIN+STACKWIDTH*2+9
  5862 3B35 84 CF			sty :STACKORIGIN+STACKWIDTH*3+9
  5863 3B37				.LOCAL
  5864 3B37 A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
  5865 3B39 38 E5 D0			sub :STACKORIGIN+STACKWIDTH*3+10
  5866 3B3C D0 1C			bne L4
  5867 3B3E A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
  5868 3B40 C5 C0			cmp :STACKORIGIN+STACKWIDTH*2+10
  5869 3B42 D0 0A			bne L1
  5870 3B44 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  5871 3B46 C5 B0			cmp :STACKORIGIN+STACKWIDTH+10
  5872 3B48 D0 04			bne L1
  5873 3B4A A5 9F			lda :STACKORIGIN+9
  5874 3B4C C5 A0			cmp :STACKORIGIN+10
  5875 3B4E F0 10		L1	beq L5
  5876 3B50 B0 04			bcs L3
  5877 3B52 A9 FF			lda #$FF
  5878 3B54 D0 0A			bne L5
  5879 3B56 A9 01		L3	lda #$01
  5880 3B58 D0 06			bne L5
  5881 3B5A 50 04		L4	bvc L5
  5882 3B5C 49 FF			eor #$FF
  5883 3B5E 09 01			ora #$01
  5884 3B60			L5
  5885 					.ENDL
  5886 3B60 10 03 4C 28 3C		jmi l_0CC1
  5887 3B65 D0 03 4C 28 3C		jeq l_0CC1
  5888
  5889 				; optimize OK (service.pas), line = 1047
  5890
  5891 3B6A A0 10			ldy #BALL.SPEEDX-DATAORIGIN
  5892 3B6C A9 00			lda #$00
  5893 3B6E 38 F1 84			sub (:bp2),y
  5894 3B71 85 9F			sta :STACKORIGIN+9
  5895 3B73 C8				iny
  5896 3B74 A9 00			lda #$00
  5897 3B76 F1 84			sbc (:bp2),y
  5898 3B78 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  5899 3B7A A0 10			ldy #BALL.SPEEDX-DATAORIGIN
  5900 3B7C A5 9F			lda :STACKORIGIN+9
  5901 3B7E 91 84			sta (:bp2),y
  5902 3B80 C8				iny
  5903 3B81 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  5904 3B83 91 84			sta (:bp2),y
  5905
  5906 				; optimize OK (service.pas), line = 1048
  5907
  5908 3B85 AD 67 A4			lda BALL
  5909 3B88 8D 3E A4			sta GET_BALL_DIRECTION.BALL
  5910 3B8B AD 68 A4			lda BALL+1
  5911 3B8E 8D 3F A4			sta GET_BALL_DIRECTION.BALL+1
  5912 3B91 20 8E 33			jsr GET_BALL_DIRECTION
  5913 3B94 E8				inx
  5914 3B95 AD 42 A4 95 96		mva GET_BALL_DIRECTION.RESULT :STACKORIGIN,x
  5915 3B9A AD 43 A4 95 A6		mva GET_BALL_DIRECTION.RESULT+1 :STACKORIGIN+STACKWIDTH,x
  5916 3B9F A9 1E			lda #$1E
  5917 3BA1 20 18 24			jsr SYSTEM.RANDOM.@010180000
  5918 3BA4 B5 96			lda :STACKORIGIN,x
  5919 3BA6 38 ED 1C 9A			sub SYSTEM.RANDOM.@010180000.RESULT
  5920 3BAA 8D 6F A4			sta ANGLE
  5921 3BAD B5 A6			lda :STACKORIGIN+STACKWIDTH,x
  5922 3BAF E9 00			sbc #$00
  5923 3BB1 8D 70 A4			sta ANGLE+1
  5924 3BB4 CA				dex
  5925
  5926 				; optimize OK (service.pas), line = 1049
  5927
  5928 3BB5 A9 14			lda #$14
  5929 3BB7 8D CC A3			sta MAX.A
  5930 3BBA A9 00			lda #$00
  5931 3BBC 8D CD A3			sta MAX.A+1
  5932 3BBF AD 6F A4			lda ANGLE
  5933 3BC2 8D CE A3			sta MAX.B
  5934 3BC5 AD 70 A4			lda ANGLE+1
  5935 3BC8 8D CF A3			sta MAX.B+1
  5936 3BCB 20 C3 26			jsr MAX
  5937 3BCE A9 3C			lda #$3C
  5938 3BD0 8D D2 A3			sta MIN.A
  5939 3BD3 A9 00			lda #$00
  5940 3BD5 8D D3 A3			sta MIN.A+1
  5941 3BD8 AD D0 A3			lda MAX.RESULT
  5942 3BDB 8D D4 A3			sta MIN.B
  5943 3BDE AD D1 A3			lda MAX.RESULT+1
  5944 3BE1 8D D5 A3			sta MIN.B+1
  5945 3BE4 20 EE 26			jsr MIN
  5946 3BE7 AD 67 A4			lda BALL
  5947 3BEA 8D 34 A4			sta SET_BALL_DIRECTION.BALL
  5948 3BED AD 68 A4			lda BALL+1
  5949 3BF0 8D 35 A4			sta SET_BALL_DIRECTION.BALL+1
  5950 3BF3 AD D6 A3			lda MIN.RESULT
  5951 3BF6 8D 38 A4			sta SET_BALL_DIRECTION.ANGLE
  5952 3BF9 AD D7 A3			lda MIN.RESULT+1
  5953 3BFC 8D 39 A4			sta SET_BALL_DIRECTION.ANGLE+1
  5954 3BFF 20 03 32			jsr SET_BALL_DIRECTION
  5955
  5956 				; optimize OK (service.pas), line = 1050
  5957
  5958 3C02 AC 67 A4 84 84 AC + 	mwy BALL :bp2
  5959 3C0C A0 0C			ldy #BALL.SPEED-DATAORIGIN
  5960 3C0E B1 84			lda (:bp2),y
  5961 3C10 8D 2A A4			sta SET_BALL_SPEED.SPEED
  5962 3C13 C8				iny
  5963 3C14 B1 84			lda (:bp2),y
  5964 3C16 8D 2B A4			sta SET_BALL_SPEED.SPEED+1
  5965 3C19 AD 67 A4			lda BALL
  5966 3C1C 8D 26 A4			sta SET_BALL_SPEED.BALL
  5967 3C1F AD 68 A4			lda BALL+1
  5968 3C22 8D 27 A4			sta SET_BALL_SPEED.BALL+1
  5969 3C25 20 F3 2F			jsr SET_BALL_SPEED
  5970 3C28			l_0CC1
  5971 3C28			l_0C2C
  5972 3C28			l_0BFD
  5973
  5974 				; optimize OK (service.pas), line = 1062
  5975
  5976 3C28 AC 67 A4 84 84 AC + 	mwy BALL :bp2
  5977 3C32 A0 0A			ldy #BALL.OLDY-DATAORIGIN
  5978 3C34 B1 84			lda (:bp2),y
  5979 3C36 85 9F			sta :STACKORIGIN+9
  5980 3C38 C8				iny
  5981 3C39 B1 84			lda (:bp2),y
  5982 3C3B 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  5983 3C3D A0 01			ldy #1
  5984 3C3F A5 9F			lda :STACKORIGIN+9
  5985 3C41 C9 B9			cmp #$B9
  5986 3C43 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  5987 3C45 E9 00			sbc #$00
  5988 3C47 50 02			svc
  5989 3C49 49 80			eor #$80
  5990 3C4B 10 01			bpl @+
  5991 3C4D 88				dey
  5992 				@
  5993 3C4E 84 9F			sty :STACKORIGIN+9
  5994 3C50 A0 02			ldy #BALL.Y-DATAORIGIN
  5995 3C52 B1 84			lda (:bp2),y
  5996 3C54 85 A0			sta :STACKORIGIN+10
  5997 3C56 C8				iny
  5998 3C57 B1 84			lda (:bp2),y
  5999 3C59 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  6000 3C5B A0 01			ldy #1
  6001 3C5D A5 A0			lda :STACKORIGIN+10
  6002 3C5F C9 C9			cmp #$C9
  6003 3C61 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
  6004 3C63 E9 00			sbc #$00
  6005 3C65 50 02			svc
  6006 3C67 49 80			eor #$80
  6007 3C69 10 01			bpl @+
  6008 3C6B 88				dey
  6009 				@
  6010 3C6C 98				tya
  6011 3C6D 25 9F			and :STACKORIGIN+9
  6012 3C6F 85 9F			sta :STACKORIGIN+9
  6013 3C71 A0 12			ldy #BALL.SPEEDY-DATAORIGIN
  6014 3C73 B1 84			lda (:bp2),y
  6015 3C75 85 A0			sta :STACKORIGIN+10
  6016 3C77 C8				iny
  6017 3C78 B1 84			lda (:bp2),y
  6018 3C7A 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  6019 3C7C A0 01			ldy #1
  6020 3C7E A5 B0			lda :STACKORIGIN+STACKWIDTH+10
  6021 3C80 30 04			bmi @+
  6022 3C82 05 A0			ora :STACKORIGIN+10
  6023 3C84 D0 01			sne
  6024 				@
  6025 3C86 88				dey
  6026 				@
  6027 3C87 98				tya
  6028 3C88 25 9F			and :STACKORIGIN+9
  6029 3C8A F0 15			jeq l_0D10
  6030
  6031 				; optimize OK (service.pas), line = 1064
  6032
  6033 3C8C A0 17			ldy #BALL.INPLAY-DATAORIGIN
  6034 3C8E A9 00			lda #$00
  6035 3C90 91 84			sta (:bp2),y
  6036
  6037 				; optimize OK (service.pas), line = 1066
  6038
  6039 3C92 AD 67 A4			lda BALL
  6040 3C95 8D 1B A4			sta REMOVE_BALL.BALL
  6041 3C98 AD 68 A4			lda BALL+1
  6042 3C9B 8D 1C A4			sta REMOVE_BALL.BALL+1
  6043 3C9E 20 49 2E			jsr REMOVE_BALL
  6044 3CA1			l_0D10
  6045
  6046 				; ------------------------------------------------------------
  6047
  6048 = A467			BALL	= DATAORIGIN+$0A90
  6049 = 99D7			BALL.X	= DATAORIGIN+$0000
  6050 = 99D9			BALL.Y	= DATAORIGIN+$0002
  6051 = 99DB			BALL.FINEX	= DATAORIGIN+$0004
  6052 = 99DD			BALL.FINEY	= DATAORIGIN+$0006
  6053 = 99DF			BALL.OLDX	= DATAORIGIN+$0008
  6054 = 99E1			BALL.OLDY	= DATAORIGIN+$000A
  6055 = 99E3			BALL.SPEED	= DATAORIGIN+$000C
  6056 = 99E5			BALL.FINESPEED	= DATAORIGIN+$000E
  6057 = 99E7			BALL.SPEEDX	= DATAORIGIN+$0010
  6058 = 99E9			BALL.SPEEDY	= DATAORIGIN+$0012
  6059 = 99EB			BALL.SBD	= DATAORIGIN+$0014
  6060 = 99ED			BALL.BRWHIT	= DATAORIGIN+$0016
  6061 = 99EE			BALL.INPLAY	= DATAORIGIN+$0017
  6062 = 99EF			BALL.LAUNCH	= DATAORIGIN+$0018
  6063 = 99F0			BALL.ONVAUS	= DATAORIGIN+$0019
  6064 = 99F1			BALL.STM	= DATAORIGIN+$001A
  6065 = A46B			X	= DATAORIGIN+$0A94
  6066 = A46D			Y	= DATAORIGIN+$0A96
  6067 = A46F			ANGLE	= DATAORIGIN+$0A98
  6068
  6069 = A467			@VarData	= BALL
  6070 = 0008			@VarDataSize	= 8
  6071
  6072 3CA1			@exit
  6073 					.ifdef @new
  6074 					lda <@VarData
  6075 					sta :ztmp
  6076 					lda >@VarData
  6077 					ldy #@VarDataSize-1
  6078 					jmp @FreeMem
  6079 					els
  6080 3CA1 60				rts						; ret
  6081 					eif
  6082 				.endl
  6083
  6084 3CA2			.local	MODIFY_VAUS					; PROCEDURE
  6085
  6086 				; optimize OK (service.pas), line = 1073
  6087
  6088 3CA2 AD 20 9B			lda VAUS.WIDTH
  6089 3CA5 8D 1E 9B			sta VAUS.OLDLEN
  6090 3CA8 A9 00			lda #$00
  6091 3CAA 8D 1F 9B			sta VAUS.OLDLEN+1
  6092
  6093 				; optimize OK (service.pas), line = 1074
  6094
  6095 3CAD AD A8 9A			lda PLAYVAUS.WIDTH
  6096 3CB0 8D 20 9B			sta VAUS.WIDTH
  6097
  6098 				; optimize OK (service.pas), line = 1075
  6099
  6100 3CB3 AD AA 9A			lda PLAYVAUS.HEIGHT
  6101 3CB6 8D 21 9B			sta VAUS.HEIGHT
  6102
  6103 3CB9			@exit
  6104 					.ifdef @new
  6105 					lda <@VarData
  6106 					sta :ztmp
  6107 					lda >@VarData
  6108 					ldy #@VarDataSize-1
  6109 					jmp @FreeMem
  6110 					els
  6111 3CB9 60				rts						; ret
  6112 					eif
  6113 				.endl
  6114
  6115 3CBA			.local	SET_VAUS					; PROCEDURE
  6116
  6117 				; optimize OK (service.pas), line = 1080
  6118
  6119 3CBA A9 5F			lda #$5F
  6120 3CBC 8D 18 9B			sta VAUS.X
  6121
  6122 				; optimize OK (service.pas), line = 1081
  6123
  6124 3CBF A9 B8			lda #$B8
  6125 3CC1 8D 19 9B			sta VAUS.Y
  6126
  6127 				; optimize OK (service.pas), line = 1083
  6128
  6129 3CC4 A9 FF			lda #$FF
  6130 3CC6 8D 1A 9B			sta VAUS.OLDX
  6131 3CC9 8D 1B 9B			sta VAUS.OLDX+1
  6132
  6133 				; optimize OK (service.pas), line = 1084
  6134
  6135 3CCC 8D 1C 9B			sta VAUS.OLDY
  6136 3CCF 8D 1D 9B			sta VAUS.OLDY+1
  6137
  6138 				; optimize OK (service.pas), line = 1085
  6139
  6140 3CD2 A9 00			lda #$00
  6141 3CD4 8D 23 9B			sta VAUS.IFLASH
  6142
  6143 				; optimize OK (service.pas), line = 1089
  6144
  6145 3CD7 8D 22 9B			sta VAUS.FLASH
  6146
  6147 				; optimize OK (service.pas), line = 1093
  6148
  6149 3CDA AD A8 9A			lda PLAYVAUS.WIDTH
  6150 3CDD 8D 20 9B			sta VAUS.WIDTH
  6151
  6152 				; optimize OK (service.pas), line = 1094
  6153
  6154 3CE0 AD AA 9A			lda PLAYVAUS.HEIGHT
  6155 3CE3 8D 21 9B			sta VAUS.HEIGHT
  6156
  6157 				; optimize OK (service.pas), line = 1095
  6158
  6159 3CE6 AD 20 9B			lda VAUS.WIDTH
  6160 3CE9 8D 1E 9B			sta VAUS.OLDLEN
  6161 3CEC A9 00			lda #$00
  6162 3CEE 8D 1F 9B			sta VAUS.OLDLEN+1
  6163
  6164 				; optimize OK (service.pas), line = 1096
  6165
  6166 3CF1 A9 FF			lda #$FF
  6167 3CF3 8D 24 9B			sta VAUS.LETTER
  6168
  6169 3CF6			@exit
  6170 					.ifdef @new
  6171 					lda <@VarData
  6172 					sta :ztmp
  6173 					lda >@VarData
  6174 					ldy #@VarDataSize-1
  6175 					jmp @FreeMem
  6176 					els
  6177 3CF6 60				rts						; ret
  6178 					eif
  6179 				.endl
  6180
  6181 3CF7			.local	START_VAUS					; PROCEDURE
  6182
  6183 				; optimize OK (service.pas), line = 1103
  6184
  6185 3CF7 A9 D8			lda #$D8
  6186 3CF9 38 ED 20 9B			sub VAUS.WIDTH
  6187 3CFD 85 9F			sta :STACKORIGIN+9
  6188 3CFF A9 00			lda #$00
  6189 3D01 E9 00			sbc #$00
  6190 3D03 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  6191 3D05 A0 00			ldy #$00
  6192 3D07 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  6193 3D09 10 01			spl
  6194 3D0B 88				dey
  6195 3D0C 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  6196 3D0E 84 BF			sty :STACKORIGIN+STACKWIDTH*2+9
  6197 3D10 84 CF			sty :STACKORIGIN+STACKWIDTH*3+9
  6198 3D12 A5 9F			lda :STACKORIGIN+9
  6199 3D14 38 E9 01			sub #$01
  6200 3D17 85 9F			sta :STACKORIGIN+9
  6201 3D19 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  6202 3D1B E9 00			sbc #$00
  6203 3D1D 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  6204 3D1F A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
  6205 3D21 E9 00			sbc #$00
  6206 3D23 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
  6207 3D25 A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
  6208 3D27 E9 00			sbc #$00
  6209 3D29 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
  6210 3D2B 06 9F			asl :STACKORIGIN+9
  6211 3D2D 26 AF			rol :STACKORIGIN+STACKWIDTH+9
  6212 3D2F 26 BF			rol :STACKORIGIN+STACKWIDTH*2+9
  6213 3D31 26 CF			rol :STACKORIGIN+STACKWIDTH*3+9
  6214 3D33 A9 14			lda #$14
  6215 3D35 8D 90 9A			sta MOUSE_X_LIMIT.MN
  6216 3D38 A9 00			lda #$00
  6217 3D3A 8D 91 9A			sta MOUSE_X_LIMIT.MN+1
  6218 3D3D A5 9F			lda :STACKORIGIN+9
  6219 3D3F 8D 92 9A			sta MOUSE_X_LIMIT.MX
  6220 3D42 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  6221 3D44 8D 93 9A			sta MOUSE_X_LIMIT.MX+1
  6222 3D47 20 11 25			jsr MOUSE_X_LIMIT
  6223
  6224 				; optimize OK (service.pas), line = 1104
  6225
  6226 3D4A A9 BE			lda #$BE
  6227 3D4C 8D 94 9A			sta MOUSEMOVE.X
  6228 3D4F A9 00			lda #$00
  6229 3D51 8D 95 9A			sta MOUSEMOVE.X+1
  6230 3D54 A9 B8			lda #$B8
  6231 3D56 8D 96 9A			sta MOUSEMOVE.Y
  6232 3D59 A9 00			lda #$00
  6233 3D5B 8D 97 9A			sta MOUSEMOVE.Y+1
  6234 3D5E 20 12 25			jsr MOUSEMOVE
  6235
  6236 				; optimize OK (service.pas), line = 1105
  6237
  6238 3D61 A9 5F			lda #$5F
  6239 3D63 8D 18 9B			sta VAUS.X
  6240
  6241 				; optimize OK (service.pas), line = 1106
  6242
  6243 3D66 A9 B8			lda #$B8
  6244 3D68 8D 19 9B			sta VAUS.Y
  6245
  6246 3D6B			@exit
  6247 					.ifdef @new
  6248 					lda <@VarData
  6249 					sta :ztmp
  6250 					lda >@VarData
  6251 					ldy #@VarDataSize-1
  6252 					jmp @FreeMem
  6253 					els
  6254 3D6B 60				rts						; ret
  6255 					eif
  6256 				.endl
  6257
  6258 3D6C			.local	REMOVE_VAUS					; PROCEDURE
  6259
  6260 				; optimize OK (service.pas), line = 1120
  6261
  6262 3D6C AD 1C 9B			lda VAUS.OLDY
  6263 3D6F 8D 71 A4			sta Y
  6264 3D72 18 6D 21 9B			add VAUS.HEIGHT
  6265 3D76 8D 7A 3D			sta @FORTMP_0D90_0
  6266
  6267 3D79			l_0D93
  6268 				; --- ForToDoCondition
  6269 3D79 A9 00			lda @FORTMP_0D90_0::#$00
  6270 3D7B CD 71 A4			cmp Y
  6271 3D7E B0 03 4C 4B 3E		jcc l_0DA1
  6272
  6273 				; optimize OK (service.pas), line = 1123
  6274
  6275 3D83 AD 1A 9B			lda VAUS.OLDX
  6276 3D86 85 A0			sta :STACKORIGIN+10
  6277 3D88 A0 00			ldy #$00
  6278 3D8A AD 1B 9B			lda VAUS.OLDX+1
  6279 3D8D 10 01			spl
  6280 3D8F 88				dey
  6281 3D90 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  6282 3D92 84 C0			sty :STACKORIGIN+STACKWIDTH*2+10
  6283 3D94 84 D0			sty :STACKORIGIN+STACKWIDTH*3+10
  6284 3D96 A9 00			lda #$00
  6285 3D98 85 B1			sta :STACKORIGIN+STACKWIDTH+11
  6286 3D9A AD 71 A4			lda Y
  6287 3D9D 0A				asl @
  6288 3D9E 26 B1			rol :STACKORIGIN+STACKWIDTH+11
  6289 3DA0 18 6D DA 98			add ROW
  6290 3DA4 85 84			sta :bp2
  6291 3DA6 AD DB 98			lda ROW+1
  6292 3DA9 65 B1			adc :STACKORIGIN+STACKWIDTH+11
  6293 3DAB 85 85			sta :bp2+1
  6294 3DAD A0 00			ldy #$00
  6295 3DAF A5 A0			lda :STACKORIGIN+10
  6296 3DB1 18 71 84			add (:bp2),y
  6297 3DB4 8D AE A3			sta BLITROW.DST
  6298 3DB7 C8				iny
  6299 3DB8 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
  6300 3DBA 71 84			adc (:bp2),y
  6301 3DBC 8D AF A3			sta BLITROW.DST+1
  6302 3DBF A5 C0			lda :STACKORIGIN+STACKWIDTH*2+10
  6303 3DC1 69 00			adc #$00
  6304 3DC3 8D B0 A3			sta BLITROW.DST+2
  6305 3DC6 A5 D0			lda :STACKORIGIN+STACKWIDTH*3+10
  6306 3DC8 69 00			adc #$00
  6307 3DCA 8D B1 A3			sta BLITROW.DST+3
  6308 3DCD AD 1A 9B			lda VAUS.OLDX
  6309 3DD0 85 A2			sta :STACKORIGIN+12
  6310 3DD2 A0 00			ldy #$00
  6311 3DD4 AD 1B 9B			lda VAUS.OLDX+1
  6312 3DD7 10 01			spl
  6313 3DD9 88				dey
  6314 3DDA 85 B2			sta :STACKORIGIN+STACKWIDTH+12
  6315 3DDC 84 C2			sty :STACKORIGIN+STACKWIDTH*2+12
  6316 3DDE 84 D2			sty :STACKORIGIN+STACKWIDTH*3+12
  6317 3DE0 AD A4 9A			lda PLAYSCREEN.OFS
  6318 3DE3 18 65 A2			add :STACKORIGIN+12
  6319 3DE6 85 A1			sta :STACKORIGIN+11
  6320 3DE8 AD A5 9A			lda PLAYSCREEN.OFS+1
  6321 3DEB 65 B2			adc :STACKORIGIN+STACKWIDTH+12
  6322 3DED 85 B1			sta :STACKORIGIN+STACKWIDTH+11
  6323 3DEF AD A6 9A			lda PLAYSCREEN.OFS+2
  6324 3DF2 65 C2			adc :STACKORIGIN+STACKWIDTH*2+12
  6325 3DF4 85 C1			sta :STACKORIGIN+STACKWIDTH*2+11
  6326 3DF6 AD A7 9A			lda PLAYSCREEN.OFS+3
  6327 3DF9 65 D2			adc :STACKORIGIN+STACKWIDTH*3+12
  6328 3DFB 85 D1			sta :STACKORIGIN+STACKWIDTH*3+11
  6329 3DFD A9 00			lda #$00
  6330 3DFF 85 B2			sta :STACKORIGIN+STACKWIDTH+12
  6331 3E01 AD 71 A4			lda Y
  6332 3E04 0A				asl @
  6333 3E05 26 B2			rol :STACKORIGIN+STACKWIDTH+12
  6334 3E07 18 6D DA 98			add ROW
  6335 3E0B 85 84			sta :bp2
  6336 3E0D AD DB 98			lda ROW+1
  6337 3E10 65 B2			adc :STACKORIGIN+STACKWIDTH+12
  6338 3E12 85 85			sta :bp2+1
  6339 3E14 A0 00			ldy #$00
  6340 3E16 A5 A1			lda :STACKORIGIN+11
  6341 3E18 18 71 84			add (:bp2),y
  6342 3E1B 8D AA A3			sta BLITROW.SRC
  6343 3E1E C8				iny
  6344 3E1F A5 B1			lda :STACKORIGIN+STACKWIDTH+11
  6345 3E21 71 84			adc (:bp2),y
  6346 3E23 8D AB A3			sta BLITROW.SRC+1
  6347 3E26 A5 C1			lda :STACKORIGIN+STACKWIDTH*2+11
  6348 3E28 69 00			adc #$00
  6349 3E2A 8D AC A3			sta BLITROW.SRC+2
  6350 3E2D A5 D1			lda :STACKORIGIN+STACKWIDTH*3+11
  6351 3E2F 69 00			adc #$00
  6352 3E31 8D AD A3			sta BLITROW.SRC+3
  6353 3E34 AD 1E 9B			lda VAUS.OLDLEN
  6354 3E37 8D B2 A3			sta BLITROW.SIZE
  6355 3E3A AD 1F 9B			lda VAUS.OLDLEN+1
  6356 3E3D 8D B3 A3			sta BLITROW.SIZE+1
  6357 3E40 20 F4 25			jsr BLITROW
  6358
  6359 				; --- ForToDoEpilog
  6360 3E43 EE 71 A4			inc Y
  6361 3E46 F0 03 4C 79 3D		jne l_0D93
  6362 3E4B			l_0DA1
  6363
  6364 				; optimize OK (service.pas), line = 1125
  6365
  6366 3E4B AD 20 9B			lda VAUS.WIDTH
  6367 3E4E 8D 1E 9B			sta VAUS.OLDLEN
  6368 3E51 A9 00			lda #$00
  6369 3E53 8D 1F 9B			sta VAUS.OLDLEN+1
  6370
  6371 				; ------------------------------------------------------------
  6372
  6373 = A471			Y	= DATAORIGIN+$0A9A
  6374
  6375 = A471			@VarData	= Y
  6376 = 0001			@VarDataSize	= 1
  6377
  6378 3E56			@exit
  6379 					.ifdef @new
  6380 					lda <@VarData
  6381 					sta :ztmp
  6382 					lda >@VarData
  6383 					ldy #@VarDataSize-1
  6384 					jmp @FreeMem
  6385 					els
  6386 3E56 60				rts						; ret
  6387 					eif
  6388 				.endl
  6389
  6390 3E57			.local	PLACE_VAUS					; PROCEDURE
  6391
  6392 				; optimize FAIL (0, service.pas), line = 1135
  6393
  6394 3E57 EE 23 9B			inc VAUS.IFLASH
  6395
  6396 				; optimize OK (service.pas), line = 1137
  6397
  6398 3E5A AD 23 9B			lda VAUS.IFLASH
  6399 3E5D C9 0B			cmp #$0B
  6400 3E5F 90 08			jcc l_0DE5
  6401
  6402 				; optimize FAIL (0, service.pas), line = 1139
  6403
  6404 3E61 EE 22 9B			inc VAUS.FLASH
  6405
  6406 				; optimize OK (service.pas), line = 1140
  6407
  6408 3E64 A9 00			lda #$00
  6409 3E66 8D 23 9B			sta VAUS.IFLASH
  6410 3E69			l_0DE5
  6411
  6412 				; optimize OK (service.pas), line = 1143
  6413
  6414 3E69 AD 22 9B			lda VAUS.FLASH
  6415 3E6C C9 0B			cmp #$0B
  6416 3E6E 90 05			jcc l_0E02
  6417 3E70 A9 00			lda #$00
  6418 3E72 8D 22 9B			sta VAUS.FLASH
  6419 3E75			l_0E02
  6420
  6421 				; optimize OK (service.pas), line = 1153
  6422
  6423 3E75 A9 00			lda #$00
  6424 3E77 8D 73 A4			sta Y
  6425 3E7A AC 21 9B			ldy VAUS.HEIGHT
  6426 3E7D 88				dey
  6427 3E7E 8C 82 3E			sty @FORTMP_0E15_0
  6428
  6429 3E81			l_0E18
  6430 				; --- ForToDoCondition
  6431 3E81 A9 00			lda @FORTMP_0E15_0::#$00
  6432 3E83 CD 73 A4			cmp Y
  6433 3E86 B0 03 4C 13 40		jcc l_0E26
  6434
  6435 				; optimize OK (service.pas), line = 1157
  6436
  6437 3E8B AD 20 9B			lda VAUS.WIDTH
  6438 3E8E 85 8E			sta :ecx
  6439 3E90 AD 73 A4			lda Y
  6440 3E93 85 86			sta :eax
  6441 					.ifdef fmulinit
  6442 					fmulu_8
  6443 					els
  6444 3E95 20 DE 12			imulCL
  6445 					eif
  6446 3E98 8D 75 A4			sta CNT+1
  6447 3E9B A5 86			lda :eax
  6448 3E9D 8D 74 A4			sta CNT
  6449
  6450 				; optimize OK (service.pas), line = 1159
  6451
  6452 3EA0 AD 73 A4			lda Y
  6453 3EA3 18 6D 19 9B			add VAUS.Y
  6454 3EA7 85 A1			sta :STACKORIGIN+11
  6455 3EA9 A9 00			lda #$00
  6456 3EAB 69 00			adc #$00
  6457 3EAD 06 A1			asl :STACKORIGIN+11
  6458 3EAF 2A				rol @
  6459 3EB0 85 B1			sta :STACKORIGIN+STACKWIDTH+11
  6460 3EB2 AD DA 98			lda ROW
  6461 3EB5 18 65 A1			add :STACKORIGIN+11
  6462 3EB8 85 84			sta :bp2
  6463 3EBA AD DB 98			lda ROW+1
  6464 3EBD 65 B1			adc :STACKORIGIN+STACKWIDTH+11
  6465 3EBF 85 85			sta :bp2+1
  6466 3EC1 A0 00			ldy #$00
  6467 3EC3 AD 18 9B			lda VAUS.X
  6468 3EC6 18 71 84			add (:bp2),y
  6469 3EC9 8D 99 A3			sta BLITZERO.DST
  6470 3ECC C8				iny
  6471 3ECD A9 00			lda #$00
  6472 3ECF 71 84			adc (:bp2),y
  6473 3ED1 8D 9A A3			sta BLITZERO.DST+1
  6474 3ED4 A9 00			lda #$00
  6475 3ED6 69 00			adc #$00
  6476 3ED8 8D 9B A3			sta BLITZERO.DST+2
  6477 3EDB A9 00			lda #$00
  6478 3EDD 69 00			adc #$00
  6479 3EDF 8D 9C A3			sta BLITZERO.DST+3
  6480 3EE2 AD AC 9A			lda PLAYVAUS.OFS
  6481 3EE5 18 6D 74 A4			add CNT
  6482 3EE9 8D 95 A3			sta BLITZERO.SRC
  6483 3EEC AD AD 9A			lda PLAYVAUS.OFS+1
  6484 3EEF 6D 75 A4			adc CNT+1
  6485 3EF2 8D 96 A3			sta BLITZERO.SRC+1
  6486 3EF5 AD AE 9A			lda PLAYVAUS.OFS+2
  6487 3EF8 69 00			adc #$00
  6488 3EFA 8D 97 A3			sta BLITZERO.SRC+2
  6489 3EFD AD AF 9A			lda PLAYVAUS.OFS+3
  6490 3F00 69 00			adc #$00
  6491 3F02 8D 98 A3			sta BLITZERO.SRC+3
  6492 3F05 AD 20 9B			lda VAUS.WIDTH
  6493 3F08 8D 9D A3			sta BLITZERO.SIZE
  6494 3F0B A9 00			lda #$00
  6495 3F0D 8D 9E A3			sta BLITZERO.SIZE+1
  6496 3F10 20 13 25			jsr BLITZERO
  6497
  6498 				; optimize OK (service.pas), line = 1161
  6499
  6500 3F13 AD 73 A4			lda Y
  6501 3F16 C9 02			cmp #$02
  6502 3F18 B0 03 4C 0B 40		jcc l_0E75
  6503 3F1D AD 21 9B			lda VAUS.HEIGHT
  6504 3F20 E9 02			sbc #$02
  6505 3F22 85 A1			sta :STACKORIGIN+11
  6506 3F24 A9 00			lda #$00
  6507 3F26 E9 00			sbc #$00
  6508 3F28 85 B1			sta :STACKORIGIN+STACKWIDTH+11
  6509 3F2A AD 73 A4			lda Y
  6510 3F2D C5 A1			cmp :STACKORIGIN+11
  6511 3F2F A9 00			lda #$00
  6512 3F31 E5 B1			sbc :STACKORIGIN+STACKWIDTH+11
  6513 3F33 50 02			svc
  6514 3F35 49 80			eor #$80
  6515 3F37 30 03 4C 0B 40		jpl l_0E75
  6516
  6517 				; optimize OK (service.pas), line = 1164
  6518
  6519 3F3C AC 22 9B			ldy VAUS.FLASH
  6520 3F3F B9 7C 10			lda adr.FLASH,y
  6521 3F42 8D C4 A3			sta PUTBYTE.V
  6522 3F45 AD 73 A4			lda Y
  6523 3F48 18 6D 19 9B			add VAUS.Y
  6524 3F4C 85 A1			sta :STACKORIGIN+11
  6525 3F4E A9 00			lda #$00
  6526 3F50 69 00			adc #$00
  6527 3F52 06 A1			asl :STACKORIGIN+11
  6528 3F54 2A				rol @
  6529 3F55 85 B1			sta :STACKORIGIN+STACKWIDTH+11
  6530 3F57 AD DA 98			lda ROW
  6531 3F5A 18 65 A1			add :STACKORIGIN+11
  6532 3F5D 85 84			sta :bp2
  6533 3F5F AD DB 98			lda ROW+1
  6534 3F62 65 B1			adc :STACKORIGIN+STACKWIDTH+11
  6535 3F64 85 85			sta :bp2+1
  6536 3F66 A0 00			ldy #$00
  6537 3F68 AD 18 9B			lda VAUS.X
  6538 3F6B 18 71 84			add (:bp2),y
  6539 3F6E 8D C0 A3			sta PUTBYTE.DST
  6540 3F71 C8				iny
  6541 3F72 A9 00			lda #$00
  6542 3F74 71 84			adc (:bp2),y
  6543 3F76 8D C1 A3			sta PUTBYTE.DST+1
  6544 3F79 A9 00			lda #$00
  6545 3F7B 69 00			adc #$00
  6546 3F7D 8D C2 A3			sta PUTBYTE.DST+2
  6547 3F80 A9 00			lda #$00
  6548 3F82 69 00			adc #$00
  6549 3F84 8D C3 A3			sta PUTBYTE.DST+3
  6550 3F87 20 95 26			jsr PUTBYTE
  6551
  6552 				; optimize OK (service.pas), line = 1167
  6553
  6554 3F8A AC 22 9B			ldy VAUS.FLASH
  6555 3F8D B9 7C 10			lda adr.FLASH,y
  6556 3F90 8D C4 A3			sta PUTBYTE.V
  6557 3F93 AD 18 9B			lda VAUS.X
  6558 3F96 18 6D 20 9B			add VAUS.WIDTH
  6559 3F9A 85 A0			sta :STACKORIGIN+10
  6560 3F9C A9 00			lda #$00
  6561 3F9E 69 00			adc #$00
  6562 3FA0 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  6563 3FA2 A9 00			lda #$00
  6564 3FA4 69 00			adc #$00
  6565 3FA6 85 C0			sta :STACKORIGIN+STACKWIDTH*2+10
  6566 3FA8 A9 00			lda #$00
  6567 3FAA 69 00			adc #$00
  6568 3FAC 85 D0			sta :STACKORIGIN+STACKWIDTH*3+10
  6569 3FAE A5 A0			lda :STACKORIGIN+10
  6570 3FB0 38 E9 01			sub #$01
  6571 3FB3 85 A0			sta :STACKORIGIN+10
  6572 3FB5 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
  6573 3FB7 E9 00			sbc #$00
  6574 3FB9 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  6575 3FBB A5 C0			lda :STACKORIGIN+STACKWIDTH*2+10
  6576 3FBD E9 00			sbc #$00
  6577 3FBF 85 C0			sta :STACKORIGIN+STACKWIDTH*2+10
  6578 3FC1 A5 D0			lda :STACKORIGIN+STACKWIDTH*3+10
  6579 3FC3 E9 00			sbc #$00
  6580 3FC5 85 D0			sta :STACKORIGIN+STACKWIDTH*3+10
  6581 3FC7 AD 73 A4			lda Y
  6582 3FCA 18 6D 19 9B			add VAUS.Y
  6583 3FCE 85 A1			sta :STACKORIGIN+11
  6584 3FD0 A9 00			lda #$00
  6585 3FD2 69 00			adc #$00
  6586 3FD4 06 A1			asl :STACKORIGIN+11
  6587 3FD6 2A				rol @
  6588 3FD7 85 B1			sta :STACKORIGIN+STACKWIDTH+11
  6589 3FD9 AD DA 98			lda ROW
  6590 3FDC 18 65 A1			add :STACKORIGIN+11
  6591 3FDF 85 84			sta :bp2
  6592 3FE1 AD DB 98			lda ROW+1
  6593 3FE4 65 B1			adc :STACKORIGIN+STACKWIDTH+11
  6594 3FE6 85 85			sta :bp2+1
  6595 3FE8 A0 00			ldy #$00
  6596 3FEA A5 A0			lda :STACKORIGIN+10
  6597 3FEC 18 71 84			add (:bp2),y
  6598 3FEF 8D C0 A3			sta PUTBYTE.DST
  6599 3FF2 C8				iny
  6600 3FF3 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
  6601 3FF5 71 84			adc (:bp2),y
  6602 3FF7 8D C1 A3			sta PUTBYTE.DST+1
  6603 3FFA A5 C0			lda :STACKORIGIN+STACKWIDTH*2+10
  6604 3FFC 69 00			adc #$00
  6605 3FFE 8D C2 A3			sta PUTBYTE.DST+2
  6606 4001 A5 D0			lda :STACKORIGIN+STACKWIDTH*3+10
  6607 4003 69 00			adc #$00
  6608 4005 8D C3 A3			sta PUTBYTE.DST+3
  6609 4008 20 95 26			jsr PUTBYTE
  6610 400B			l_0E75
  6611
  6612 				; --- ForToDoEpilog
  6613 400B EE 73 A4			inc Y
  6614 400E F0 03 4C 81 3E		jne l_0E18
  6615 4013			l_0E26
  6616
  6617 				; ------------------------------------------------------------
  6618
  6619 = A473			Y	= DATAORIGIN+$0A9C
  6620 = A474			CNT	= DATAORIGIN+$0A9D
  6621
  6622 = A473			@VarData	= Y
  6623 = 0003			@VarDataSize	= 3
  6624
  6625 4013			@exit
  6626 					.ifdef @new
  6627 					lda <@VarData
  6628 					sta :ztmp
  6629 					lda >@VarData
  6630 					ldy #@VarDataSize-1
  6631 					jmp @FreeMem
  6632 					els
  6633 4013 60				rts						; ret
  6634 					eif
  6635 				.endl
  6636
  6637 4014			.local	MOVE_VAUS					; PROCEDURE
  6638
  6639 				; optimize OK (service.pas), line = 1178
  6640
  6641 4014 A0 01			ldy #1
  6642 4016 AD 1B 9B			lda VAUS.OLDX+1
  6643 4019 C9 FF			cmp #$FF
  6644 401B D0 05			bne @+
  6645 401D AD 1A 9B			lda VAUS.OLDX
  6646 4020 C9 FF			cmp #$FF
  6647 				@
  6648 4022 D0 01			bne @+
  6649 4024 88				dey
  6650 				@
  6651 4025 84 9F			sty :STACKORIGIN+9
  6652 4027 A0 01			ldy #1
  6653 4029 AD 1B 9B			lda VAUS.OLDX+1
  6654 402C C9 00			cmp #$00
  6655 402E D0 06			bne @+
  6656 4030 AD 1A 9B			lda VAUS.OLDX
  6657 4033 CD 18 9B			cmp VAUS.X
  6658 				@
  6659 4036 D0 01			bne @+
  6660 4038 88				dey
  6661 				@
  6662 4039 98				tya
  6663 403A 25 9F			and :STACKORIGIN+9
  6664 403C 85 9F			sta :STACKORIGIN+9
  6665 403E A0 01			ldy #1
  6666 4040 A9 00			lda #$00
  6667 4042 CD 1F 9B			cmp VAUS.OLDLEN+1
  6668 4045 D0 06			bne @+
  6669 4047 AD 20 9B			lda VAUS.WIDTH
  6670 404A CD 1E 9B			cmp VAUS.OLDLEN
  6671 				@
  6672 404D D0 01			bne @+
  6673 404F 88				dey
  6674 				@
  6675 4050 98				tya
  6676 4051 05 9F			ora :STACKORIGIN+9
  6677 4053 F0 03			jeq l_0EEE
  6678
  6679 				; optimize FAIL ('REMOVE_VAUS', service.pas), line = 1179
  6680
  6681 4055 20 6C 3D			jsr REMOVE_VAUS
  6682 4058			l_0EEE
  6683
  6684 				; optimize OK (service.pas), line = 1181
  6685
  6686 4058 AD 18 9B			lda VAUS.X
  6687 405B 8D 1A 9B			sta VAUS.OLDX
  6688 405E A9 00			lda #$00
  6689 4060 8D 1B 9B			sta VAUS.OLDX+1
  6690
  6691 				; optimize OK (service.pas), line = 1182
  6692
  6693 4063 AD 19 9B			lda VAUS.Y
  6694 4066 8D 1C 9B			sta VAUS.OLDY
  6695 4069 A9 00			lda #$00
  6696 406B 8D 1D 9B			sta VAUS.OLDY+1
  6697
  6698 				; optimize OK (service.pas), line = 1189
  6699
  6700 406E A9 D8			lda #$D8
  6701 4070 38 ED 20 9B			sub VAUS.WIDTH
  6702 4074 8D D4 A3			sta MIN.B
  6703 4077 A9 00			lda #$00
  6704 4079 E9 00			sbc #$00
  6705 407B 8D D5 A3			sta MIN.B+1
  6706 407E AD 77 A4			lda X
  6707 4081 8D D2 A3			sta MIN.A
  6708 4084 AD 78 A4			lda X+1
  6709 4087 8D D3 A3			sta MIN.A+1
  6710 408A 20 EE 26			jsr MIN
  6711 408D A9 0A			lda #$0A
  6712 408F 8D CC A3			sta MAX.A
  6713 4092 A9 00			lda #$00
  6714 4094 8D CD A3			sta MAX.A+1
  6715 4097 AD D6 A3			lda MIN.RESULT
  6716 409A 8D CE A3			sta MAX.B
  6717 409D AD D7 A3			lda MIN.RESULT+1
  6718 40A0 8D CF A3			sta MAX.B+1
  6719 40A3 20 C3 26			jsr MAX
  6720 40A6 AD D0 A3			lda MAX.RESULT
  6721 40A9 8D 18 9B			sta VAUS.X
  6722
  6723 				; optimize OK (service.pas), line = 1190
  6724
  6725 40AC A9 C8			lda #$C8
  6726 40AE 38 ED 21 9B			sub VAUS.HEIGHT
  6727 40B2 8D D4 A3			sta MIN.B
  6728 40B5 A9 00			lda #$00
  6729 40B7 E9 00			sbc #$00
  6730 40B9 8D D5 A3			sta MIN.B+1
  6731 40BC AD 79 A4			lda Y
  6732 40BF 8D D2 A3			sta MIN.A
  6733 40C2 AD 7A A4			lda Y+1
  6734 40C5 8D D3 A3			sta MIN.A+1
  6735 40C8 20 EE 26			jsr MIN
  6736 40CB A9 0C			lda #$0C
  6737 40CD 8D CC A3			sta MAX.A
  6738 40D0 A9 00			lda #$00
  6739 40D2 8D CD A3			sta MAX.A+1
  6740 40D5 AD D6 A3			lda MIN.RESULT
  6741 40D8 8D CE A3			sta MAX.B
  6742 40DB AD D7 A3			lda MIN.RESULT+1
  6743 40DE 8D CF A3			sta MAX.B+1
  6744 40E1 20 C3 26			jsr MAX
  6745 40E4 AD D0 A3			lda MAX.RESULT
  6746 40E7 8D 19 9B			sta VAUS.Y
  6747
  6748 				; optimize FAIL ('PLACE_VAUS', service.pas), line = 1192
  6749
  6750 40EA 20 57 3E			jsr PLACE_VAUS
  6751
  6752 				; ------------------------------------------------------------
  6753
  6754 = A477			X	= DATAORIGIN+$0AA0
  6755 = A479			Y	= DATAORIGIN+$0AA2
  6756
  6757 = A477			@VarData	= X
  6758 = 0004			@VarDataSize	= 4
  6759
  6760 40ED			@exit
  6761 					.ifdef @new
  6762 					lda <@VarData
  6763 					sta :ztmp
  6764 					lda >@VarData
  6765 					ldy #@VarDataSize-1
  6766 					jmp @FreeMem
  6767 					els
  6768 40ED 60				rts						; ret
  6769 					eif
  6770 				.endl
  6771
  6772 40EE			.local	REMOVE_BLOCK					; PROCEDURE
  6773
  6774 				; optimize OK (service.pas), line = 1206
  6775
  6776 40EE AD 7B A4			lda XA
  6777 40F1 85 9F			sta :STACKORIGIN+9
  6778 40F3 A9 00			lda #$00
  6779 40F5 06 9F			asl :STACKORIGIN+9
  6780 40F7 2A				rol @
  6781 40F8 06 9F			asl :STACKORIGIN+9
  6782 40FA 2A				rol @
  6783 40FB 06 9F			asl :STACKORIGIN+9
  6784 40FD 2A				rol @
  6785 40FE 06 9F			asl :STACKORIGIN+9
  6786 4100 2A				rol @
  6787 4101 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  6788 4103 A5 9F			lda :STACKORIGIN+9
  6789 4105 18 69 09			add #$09
  6790 4108 8D 7F A4			sta XS
  6791 410B A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  6792 410D 69 00			adc #$00
  6793 410F 8D 80 A4			sta XS+1
  6794
  6795 				; optimize OK (service.pas), line = 1207
  6796
  6797 4112 AD 7C A4			lda YA
  6798 4115 85 9F			sta :STACKORIGIN+9
  6799 4117 A9 00			lda #$00
  6800 4119 06 9F			asl :STACKORIGIN+9
  6801 411B 2A				rol @
  6802 411C 06 9F			asl :STACKORIGIN+9
  6803 411E 2A				rol @
  6804 411F 06 9F			asl :STACKORIGIN+9
  6805 4121 2A				rol @
  6806 4122 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  6807 4124 A5 9F			lda :STACKORIGIN+9
  6808 4126 18 69 16			add #$16
  6809 4129 8D 81 A4			sta YS
  6810 412C A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  6811 412E 69 00			adc #$00
  6812 4130 8D 82 A4			sta YS+1
  6813
  6814 				; optimize OK (service.pas), line = 1209
  6815
  6816 4133 A9 00			lda #$00
  6817 4135 8D 7E A4			sta Y
  6818
  6819 4138			l_0F46
  6820 				; --- ForToDoCondition
  6821 4138 AD 7E A4			lda Y
  6822 413B C9 08			cmp #$08
  6823 413D 90 03 4C 79 43		jcs l_0F54
  6824
  6825 				; optimize OK (service.pas), line = 1211
  6826
  6827 4142 AD 81 A4			lda YS
  6828 4145 6D 7E A4			adc Y
  6829 4148 A8				tay
  6830 4149 B9 CD A2			lda adr.MODY,y
  6831 414C 85 86			sta :eax
  6832 414E A9 00			lda #$00
  6833 4150 85 87			sta :eax+1
  6834 4152 AD 25 9B			lda PATTERN.WIDTH
  6835 4155 85 8E			sta :ecx
  6836 4157 AD 26 9B			lda PATTERN.WIDTH+1
  6837 415A 85 8F			sta :ecx+1
  6838 					.ifdef fmulinit
  6839 					fmulu_16
  6840 					els
  6841 415C 20 6E 13			imulCX_AL
  6842 					eif
  6843 415F A5 86			lda :eax
  6844 4161 8D 83 A4			sta YH
  6845 4164 A5 87			lda :eax+1
  6846 4166 8D 84 A4			sta YH+1
  6847
  6848 				; optimize OK (service.pas), line = 1219
  6849
  6850 4169 A9 00			lda #$00
  6851 416B 8D 7D A4			sta X
  6852
  6853 416E			l_0F70
  6854 				; --- ForToDoCondition
  6855 416E AD 7D A4			lda X
  6856 4171 C9 10			cmp #$10
  6857 4173 90 03 4C 71 43		jcs l_0F7E
  6858
  6859 				; optimize OK (service.pas), line = 1220
  6860
  6861 4178 6D 7F A4			adc XS
  6862 417B 85 9F			sta :STACKORIGIN+9
  6863 417D A9 00			lda #$00
  6864 417F 6D 80 A4			adc XS+1
  6865 4182 C9 00			cmp #$00
  6866 4184 D0 04			bne @+
  6867 4186 A5 9F			lda :STACKORIGIN+9
  6868 4188 C9 D8			cmp #$D8
  6869 				@
  6870 418A 90 03 4C 69 43		jcs l_0F95
  6871
  6872 				; optimize OK (service.pas), line = 1226
  6873
  6874 418F AD A4 9A			lda PLAYSCREEN.OFS
  6875 4192 6D 7D A4			adc X
  6876 4195 85 9F			sta :STACKORIGIN+9
  6877 4197 AD A5 9A			lda PLAYSCREEN.OFS+1
  6878 419A 69 00			adc #$00
  6879 419C 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  6880 419E AD A6 9A			lda PLAYSCREEN.OFS+2
  6881 41A1 69 00			adc #$00
  6882 41A3 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
  6883 41A5 AD A7 9A			lda PLAYSCREEN.OFS+3
  6884 41A8 69 00			adc #$00
  6885 41AA 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
  6886 41AC A5 9F			lda :STACKORIGIN+9
  6887 41AE 18 6D 7F A4			add XS
  6888 41B2 85 9F			sta :STACKORIGIN+9
  6889 41B4 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  6890 41B6 6D 80 A4			adc XS+1
  6891 41B9 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  6892 41BB A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
  6893 41BD 69 00			adc #$00
  6894 41BF 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
  6895 41C1 A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
  6896 41C3 69 00			adc #$00
  6897 41C5 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
  6898 41C7 AD 7E A4			lda Y
  6899 41CA 18 6D 81 A4			add YS
  6900 41CE 85 A0			sta :STACKORIGIN+10
  6901 41D0 A9 00			lda #$00
  6902 41D2 6D 82 A4			adc YS+1
  6903 41D5 06 A0			asl :STACKORIGIN+10
  6904 41D7 2A				rol @
  6905 41D8 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  6906 41DA AD DA 98			lda ROW
  6907 41DD 18 65 A0			add :STACKORIGIN+10
  6908 41E0 85 84			sta :bp2
  6909 41E2 AD DB 98			lda ROW+1
  6910 41E5 65 B0			adc :STACKORIGIN+STACKWIDTH+10
  6911 41E7 85 85			sta :bp2+1
  6912 41E9 A0 00			ldy #$00
  6913 41EB A5 9F			lda :STACKORIGIN+9
  6914 41ED 18 71 84			add (:bp2),y
  6915 41F0 8D C5 A3			sta GETBYTE.SRC
  6916 41F3 C8				iny
  6917 41F4 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  6918 41F6 71 84			adc (:bp2),y
  6919 41F8 8D C6 A3			sta GETBYTE.SRC+1
  6920 41FB A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
  6921 41FD 69 00			adc #$00
  6922 41FF 8D C7 A3			sta GETBYTE.SRC+2
  6923 4202 A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
  6924 4204 69 00			adc #$00
  6925 4206 8D C8 A3			sta GETBYTE.SRC+3
  6926 4209 20 AB 26			jsr GETBYTE
  6927 420C AD C9 A3			lda GETBYTE.RESULT
  6928 420F 29 80			and #$80
  6929 4211 8D 86 A4			sta SHADOW
  6930
  6931 				; optimize OK (service.pas), line = 1230
  6932
  6933 4214 AD 7D A4			lda X
  6934 4217 18 6D 7F A4			add XS
  6935 421B 85 A0			sta :STACKORIGIN+10
  6936 421D A9 00			lda #$00
  6937 421F 6D 80 A4			adc XS+1
  6938 4222 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  6939 4224 AD DC 98			lda MODX
  6940 4227 18 65 A0			add :STACKORIGIN+10
  6941 422A A8				tay
  6942 422B AD DD 98			lda MODX+1
  6943 422E 65 B0			adc :STACKORIGIN+STACKWIDTH+10
  6944 4230 85 83			sta :bp+1
  6945 4232 AD 29 9B			lda PATTERN.OFS
  6946 4235 18 71 82			add (:bp),y
  6947 4238 85 9F			sta :STACKORIGIN+9
  6948 423A AD 2A 9B			lda PATTERN.OFS+1
  6949 423D 69 00			adc #$00
  6950 423F 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  6951 4241 AD 2B 9B			lda PATTERN.OFS+2
  6952 4244 69 00			adc #$00
  6953 4246 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
  6954 4248 AD 2C 9B			lda PATTERN.OFS+3
  6955 424B 69 00			adc #$00
  6956 424D 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
  6957 424F A5 9F			lda :STACKORIGIN+9
  6958 4251 18 6D 83 A4			add YH
  6959 4255 8D C5 A3			sta GETBYTE.SRC
  6960 4258 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  6961 425A 6D 84 A4			adc YH+1
  6962 425D 8D C6 A3			sta GETBYTE.SRC+1
  6963 4260 A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
  6964 4262 69 00			adc #$00
  6965 4264 8D C7 A3			sta GETBYTE.SRC+2
  6966 4267 A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
  6967 4269 69 00			adc #$00
  6968 426B 8D C8 A3			sta GETBYTE.SRC+3
  6969 426E 20 AB 26			jsr GETBYTE
  6970 4271 E8				inx
  6971 4272 AD C9 A3			lda GETBYTE.RESULT
  6972 4275 29 7F			and #$7F
  6973 4277 0D 86 A4			ora SHADOW
  6974 427A 8D 85 A4			sta CL
  6975 427D CA				dex
  6976
  6977 				; optimize OK (service.pas), line = 1234
  6978
  6979 427E AD 7D A4			lda X
  6980 4281 18 6D 7F A4			add XS
  6981 4285 85 A0			sta :STACKORIGIN+10
  6982 4287 A9 00			lda #$00
  6983 4289 6D 80 A4			adc XS+1
  6984 428C 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  6985 428E A9 00			lda #$00
  6986 4290 69 00			adc #$00
  6987 4292 85 C0			sta :STACKORIGIN+STACKWIDTH*2+10
  6988 4294 A9 00			lda #$00
  6989 4296 69 00			adc #$00
  6990 4298 85 D0			sta :STACKORIGIN+STACKWIDTH*3+10
  6991 429A AD 7E A4			lda Y
  6992 429D 18 6D 81 A4			add YS
  6993 42A1 85 A1			sta :STACKORIGIN+11
  6994 42A3 A9 00			lda #$00
  6995 42A5 6D 82 A4			adc YS+1
  6996 42A8 06 A1			asl :STACKORIGIN+11
  6997 42AA 2A				rol @
  6998 42AB 85 B1			sta :STACKORIGIN+STACKWIDTH+11
  6999 42AD AD DA 98			lda ROW
  7000 42B0 18 65 A1			add :STACKORIGIN+11
  7001 42B3 85 84			sta :bp2
  7002 42B5 AD DB 98			lda ROW+1
  7003 42B8 65 B1			adc :STACKORIGIN+STACKWIDTH+11
  7004 42BA 85 85			sta :bp2+1
  7005 42BC A0 00			ldy #$00
  7006 42BE A5 A0			lda :STACKORIGIN+10
  7007 42C0 18 71 84			add (:bp2),y
  7008 42C3 8D C0 A3			sta PUTBYTE.DST
  7009 42C6 C8				iny
  7010 42C7 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
  7011 42C9 71 84			adc (:bp2),y
  7012 42CB 8D C1 A3			sta PUTBYTE.DST+1
  7013 42CE A5 C0			lda :STACKORIGIN+STACKWIDTH*2+10
  7014 42D0 69 00			adc #$00
  7015 42D2 8D C2 A3			sta PUTBYTE.DST+2
  7016 42D5 A5 D0			lda :STACKORIGIN+STACKWIDTH*3+10
  7017 42D7 69 00			adc #$00
  7018 42D9 8D C3 A3			sta PUTBYTE.DST+3
  7019 42DC AD 85 A4			lda CL
  7020 42DF 8D C4 A3			sta PUTBYTE.V
  7021 42E2 20 95 26			jsr PUTBYTE
  7022
  7023 				; optimize OK (service.pas), line = 1239
  7024
  7025 42E5 AD A4 9A			lda PLAYSCREEN.OFS
  7026 42E8 18 6D 7D A4			add X
  7027 42EC 85 A0			sta :STACKORIGIN+10
  7028 42EE AD A5 9A			lda PLAYSCREEN.OFS+1
  7029 42F1 69 00			adc #$00
  7030 42F3 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  7031 42F5 AD A6 9A			lda PLAYSCREEN.OFS+2
  7032 42F8 69 00			adc #$00
  7033 42FA 85 C0			sta :STACKORIGIN+STACKWIDTH*2+10
  7034 42FC AD A7 9A			lda PLAYSCREEN.OFS+3
  7035 42FF 69 00			adc #$00
  7036 4301 85 D0			sta :STACKORIGIN+STACKWIDTH*3+10
  7037 4303 A5 A0			lda :STACKORIGIN+10
  7038 4305 18 6D 7F A4			add XS
  7039 4309 85 A0			sta :STACKORIGIN+10
  7040 430B A5 B0			lda :STACKORIGIN+STACKWIDTH+10
  7041 430D 6D 80 A4			adc XS+1
  7042 4310 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  7043 4312 A5 C0			lda :STACKORIGIN+STACKWIDTH*2+10
  7044 4314 69 00			adc #$00
  7045 4316 85 C0			sta :STACKORIGIN+STACKWIDTH*2+10
  7046 4318 A5 D0			lda :STACKORIGIN+STACKWIDTH*3+10
  7047 431A 69 00			adc #$00
  7048 431C 85 D0			sta :STACKORIGIN+STACKWIDTH*3+10
  7049 431E AD 7E A4			lda Y
  7050 4321 18 6D 81 A4			add YS
  7051 4325 85 A1			sta :STACKORIGIN+11
  7052 4327 A9 00			lda #$00
  7053 4329 6D 82 A4			adc YS+1
  7054 432C 06 A1			asl :STACKORIGIN+11
  7055 432E 2A				rol @
  7056 432F 85 B1			sta :STACKORIGIN+STACKWIDTH+11
  7057 4331 AD DA 98			lda ROW
  7058 4334 18 65 A1			add :STACKORIGIN+11
  7059 4337 85 84			sta :bp2
  7060 4339 AD DB 98			lda ROW+1
  7061 433C 65 B1			adc :STACKORIGIN+STACKWIDTH+11
  7062 433E 85 85			sta :bp2+1
  7063 4340 A0 00			ldy #$00
  7064 4342 A5 A0			lda :STACKORIGIN+10
  7065 4344 18 71 84			add (:bp2),y
  7066 4347 8D C0 A3			sta PUTBYTE.DST
  7067 434A C8				iny
  7068 434B A5 B0			lda :STACKORIGIN+STACKWIDTH+10
  7069 434D 71 84			adc (:bp2),y
  7070 434F 8D C1 A3			sta PUTBYTE.DST+1
  7071 4352 A5 C0			lda :STACKORIGIN+STACKWIDTH*2+10
  7072 4354 69 00			adc #$00
  7073 4356 8D C2 A3			sta PUTBYTE.DST+2
  7074 4359 A5 D0			lda :STACKORIGIN+STACKWIDTH*3+10
  7075 435B 69 00			adc #$00
  7076 435D 8D C3 A3			sta PUTBYTE.DST+3
  7077 4360 AD 85 A4			lda CL
  7078 4363 8D C4 A3			sta PUTBYTE.V
  7079 4366 20 95 26			jsr PUTBYTE
  7080 4369			l_0F95
  7081
  7082 				; --- ForToDoEpilog
  7083 4369 EE 7D A4			inc X
  7084 436C F0 03 4C 6E 41		jne l_0F70
  7085 4371			l_0F7E
  7086
  7087 				; --- ForToDoEpilog
  7088 4371 EE 7E A4			inc Y
  7089 4374 F0 03 4C 38 41		jne l_0F46
  7090 4379			l_0F54
  7091
  7092 				; optimize OK (service.pas), line = 1249
  7093
  7094 4379 AD 81 A4			lda YS
  7095 437C 18 69 04			add #$04
  7096 437F 8D 7E A4			sta Y
  7097 4382 AD 81 A4			lda YS
  7098 4385 18 69 0C			add #$0C
  7099 4388 8D 8C 43			sta @FORTMP_102F_0
  7100
  7101 438B			l_1032
  7102 				; --- ForToDoCondition
  7103 438B A9 00			lda @FORTMP_102F_0::#$00
  7104 438D CD 7E A4			cmp Y
  7105 4390 B0 03 4C C9 44		jcc l_1040
  7106
  7107 				; optimize OK (service.pas), line = 1250
  7108
  7109 4395 AD 7F A4			lda XS
  7110 4398 18 69 08			add #$08
  7111 439B 8D 7D A4			sta X
  7112 439E AD 7F A4			lda XS
  7113 43A1 18 69 18			add #$18
  7114 43A4 8D A8 43			sta @FORTMP_1050_0
  7115
  7116 43A7			l_1053
  7117 				; --- ForToDoCondition
  7118 43A7 A9 00			lda @FORTMP_1050_0::#$00
  7119 43A9 CD 7D A4			cmp X
  7120 43AC B0 03 4C C1 44		jcc l_1061
  7121
  7122 				; optimize OK (service.pas), line = 1266
  7123
  7124 43B1 AD 7D A4			lda X
  7125 43B4 C9 D8			cmp #$D8
  7126 43B6 90 03 4C B9 44		jcs l_1073
  7127
  7128 				; optimize OK (service.pas), line = 1270
  7129
  7130 43BB AD A4 9A			lda PLAYSCREEN.OFS
  7131 43BE 6D 7D A4			adc X
  7132 43C1 85 9F			sta :STACKORIGIN+9
  7133 43C3 AD A5 9A			lda PLAYSCREEN.OFS+1
  7134 43C6 69 00			adc #$00
  7135 43C8 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  7136 43CA AD A6 9A			lda PLAYSCREEN.OFS+2
  7137 43CD 69 00			adc #$00
  7138 43CF 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
  7139 43D1 AD A7 9A			lda PLAYSCREEN.OFS+3
  7140 43D4 69 00			adc #$00
  7141 43D6 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
  7142 43D8 A9 00			lda #$00
  7143 43DA 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  7144 43DC AD 7E A4			lda Y
  7145 43DF 0A				asl @
  7146 43E0 26 B0			rol :STACKORIGIN+STACKWIDTH+10
  7147 43E2 18 6D DA 98			add ROW
  7148 43E6 85 84			sta :bp2
  7149 43E8 AD DB 98			lda ROW+1
  7150 43EB 65 B0			adc :STACKORIGIN+STACKWIDTH+10
  7151 43ED 85 85			sta :bp2+1
  7152 43EF A0 00			ldy #$00
  7153 43F1 A5 9F			lda :STACKORIGIN+9
  7154 43F3 18 71 84			add (:bp2),y
  7155 43F6 8D C5 A3			sta GETBYTE.SRC
  7156 43F9 C8				iny
  7157 43FA A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  7158 43FC 71 84			adc (:bp2),y
  7159 43FE 8D C6 A3			sta GETBYTE.SRC+1
  7160 4401 A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
  7161 4403 69 00			adc #$00
  7162 4405 8D C7 A3			sta GETBYTE.SRC+2
  7163 4408 A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
  7164 440A 69 00			adc #$00
  7165 440C 8D C8 A3			sta GETBYTE.SRC+3
  7166 440F 20 AB 26			jsr GETBYTE
  7167 4412 AD C9 A3			lda GETBYTE.RESULT
  7168 4415 09 80			ora #$80
  7169 4417 8D 85 A4			sta CL
  7170
  7171 				; optimize OK (service.pas), line = 1274
  7172
  7173 441A A9 00			lda #$00
  7174 441C 85 B1			sta :STACKORIGIN+STACKWIDTH+11
  7175 441E AD 7E A4			lda Y
  7176 4421 0A				asl @
  7177 4422 26 B1			rol :STACKORIGIN+STACKWIDTH+11
  7178 4424 18 6D DA 98			add ROW
  7179 4428 85 84			sta :bp2
  7180 442A AD DB 98			lda ROW+1
  7181 442D 65 B1			adc :STACKORIGIN+STACKWIDTH+11
  7182 442F 85 85			sta :bp2+1
  7183 4431 A0 00			ldy #$00
  7184 4433 AD 7D A4			lda X
  7185 4436 18 71 84			add (:bp2),y
  7186 4439 8D C0 A3			sta PUTBYTE.DST
  7187 443C C8				iny
  7188 443D A9 00			lda #$00
  7189 443F 71 84			adc (:bp2),y
  7190 4441 8D C1 A3			sta PUTBYTE.DST+1
  7191 4444 A9 00			lda #$00
  7192 4446 69 00			adc #$00
  7193 4448 8D C2 A3			sta PUTBYTE.DST+2
  7194 444B A9 00			lda #$00
  7195 444D 69 00			adc #$00
  7196 444F 8D C3 A3			sta PUTBYTE.DST+3
  7197 4452 AD 85 A4			lda CL
  7198 4455 8D C4 A3			sta PUTBYTE.V
  7199 4458 20 95 26			jsr PUTBYTE
  7200
  7201 				; optimize OK (service.pas), line = 1279
  7202
  7203 445B AD A4 9A			lda PLAYSCREEN.OFS
  7204 445E 18 6D 7D A4			add X
  7205 4462 85 A0			sta :STACKORIGIN+10
  7206 4464 AD A5 9A			lda PLAYSCREEN.OFS+1
  7207 4467 69 00			adc #$00
  7208 4469 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  7209 446B AD A6 9A			lda PLAYSCREEN.OFS+2
  7210 446E 69 00			adc #$00
  7211 4470 85 C0			sta :STACKORIGIN+STACKWIDTH*2+10
  7212 4472 AD A7 9A			lda PLAYSCREEN.OFS+3
  7213 4475 69 00			adc #$00
  7214 4477 85 D0			sta :STACKORIGIN+STACKWIDTH*3+10
  7215 4479 A9 00			lda #$00
  7216 447B 85 B1			sta :STACKORIGIN+STACKWIDTH+11
  7217 447D AD 7E A4			lda Y
  7218 4480 0A				asl @
  7219 4481 26 B1			rol :STACKORIGIN+STACKWIDTH+11
  7220 4483 18 6D DA 98			add ROW
  7221 4487 85 84			sta :bp2
  7222 4489 AD DB 98			lda ROW+1
  7223 448C 65 B1			adc :STACKORIGIN+STACKWIDTH+11
  7224 448E 85 85			sta :bp2+1
  7225 4490 A0 00			ldy #$00
  7226 4492 A5 A0			lda :STACKORIGIN+10
  7227 4494 18 71 84			add (:bp2),y
  7228 4497 8D C0 A3			sta PUTBYTE.DST
  7229 449A C8				iny
  7230 449B A5 B0			lda :STACKORIGIN+STACKWIDTH+10
  7231 449D 71 84			adc (:bp2),y
  7232 449F 8D C1 A3			sta PUTBYTE.DST+1
  7233 44A2 A5 C0			lda :STACKORIGIN+STACKWIDTH*2+10
  7234 44A4 69 00			adc #$00
  7235 44A6 8D C2 A3			sta PUTBYTE.DST+2
  7236 44A9 A5 D0			lda :STACKORIGIN+STACKWIDTH*3+10
  7237 44AB 69 00			adc #$00
  7238 44AD 8D C3 A3			sta PUTBYTE.DST+3
  7239 44B0 AD 85 A4			lda CL
  7240 44B3 8D C4 A3			sta PUTBYTE.V
  7241 44B6 20 95 26			jsr PUTBYTE
  7242 44B9			l_1073
  7243
  7244 				; --- ForToDoEpilog
  7245 44B9 EE 7D A4			inc X
  7246 44BC F0 03 4C A7 43		jne l_1053
  7247 44C1			l_1061
  7248
  7249 				; --- ForToDoEpilog
  7250 44C1 EE 7E A4			inc Y
  7251 44C4 F0 03 4C 8B 43		jne l_1032
  7252 44C9			l_1040
  7253
  7254 				; ------------------------------------------------------------
  7255
  7256 = A47B			XA	= DATAORIGIN+$0AA4
  7257 = A47C			YA	= DATAORIGIN+$0AA5
  7258 = A47D			X	= DATAORIGIN+$0AA6
  7259 = A47E			Y	= DATAORIGIN+$0AA7
  7260 = A47F			XS	= DATAORIGIN+$0AA8
  7261 = A481			YS	= DATAORIGIN+$0AAA
  7262 = A483			YH	= DATAORIGIN+$0AAC
  7263 = A485			CL	= DATAORIGIN+$0AAE
  7264 = A486			SHADOW	= DATAORIGIN+$0AAF
  7265
  7266 = A47B			@VarData	= XA
  7267 = 000C			@VarDataSize	= 12
  7268
  7269 44C9			@exit
  7270 					.ifdef @new
  7271 					lda <@VarData
  7272 					sta :ztmp
  7273 					lda >@VarData
  7274 					ldy #@VarDataSize-1
  7275 					jmp @FreeMem
  7276 					els
  7277 44C9 60				rts						; ret
  7278 					eif
  7279 				.endl
  7280
  7281 44CA			.local	PLACE_BLOCK					; PROCEDURE
  7282
  7283 				; optimize OK (service.pas), line = 1294
  7284
  7285 44CA AD 89 A4			lda XA
  7286 44CD 85 9F			sta :STACKORIGIN+9
  7287 44CF A9 00			lda #$00
  7288 44D1 06 9F			asl :STACKORIGIN+9
  7289 44D3 2A				rol @
  7290 44D4 06 9F			asl :STACKORIGIN+9
  7291 44D6 2A				rol @
  7292 44D7 06 9F			asl :STACKORIGIN+9
  7293 44D9 2A				rol @
  7294 44DA 06 9F			asl :STACKORIGIN+9
  7295 44DC 2A				rol @
  7296 44DD 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  7297 44DF A5 9F			lda :STACKORIGIN+9
  7298 44E1 18 69 09			add #$09
  7299 44E4 8D 8E A4			sta XS
  7300 44E7 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  7301 44E9 69 00			adc #$00
  7302 44EB 8D 8F A4			sta XS+1
  7303
  7304 				; optimize OK (service.pas), line = 1295
  7305
  7306 44EE AD 8A A4			lda YA
  7307 44F1 85 9F			sta :STACKORIGIN+9
  7308 44F3 A9 00			lda #$00
  7309 44F5 06 9F			asl :STACKORIGIN+9
  7310 44F7 2A				rol @
  7311 44F8 06 9F			asl :STACKORIGIN+9
  7312 44FA 2A				rol @
  7313 44FB 06 9F			asl :STACKORIGIN+9
  7314 44FD 2A				rol @
  7315 44FE 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  7316 4500 A5 9F			lda :STACKORIGIN+9
  7317 4502 18 69 16			add #$16
  7318 4505 8D 90 A4			sta YS
  7319 4508 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  7320 450A 69 00			adc #$00
  7321 450C 8D 91 A4			sta YS+1
  7322
  7323 				; optimize OK (service.pas), line = 1297
  7324
  7325 450F A9 00			lda #$00
  7326 4511 8D 8D A4			sta Y
  7327
  7328 4514			l_10E6
  7329 				; --- ForToDoCondition
  7330 4514 AD 8D A4			lda Y
  7331 4517 C9 08			cmp #$08
  7332 4519 90 03 4C C5 47		jcs l_10F4
  7333
  7334 				; optimize OK (service.pas), line = 1298
  7335
  7336 451E A9 00			lda #$00
  7337 4520 8D 8C A4			sta X
  7338
  7339 4523			l_10FD
  7340 				; --- ForToDoCondition
  7341 4523 AD 8C A4			lda X
  7342 4526 C9 10			cmp #$10
  7343 4528 90 03 4C BD 47		jcs l_110B
  7344
  7345 				; optimize OK (service.pas), line = 1303
  7346
  7347 452D AD A4 9A			lda PLAYSCREEN.OFS
  7348 4530 6D 8E A4			adc XS
  7349 4533 85 9F			sta :STACKORIGIN+9
  7350 4535 AD A5 9A			lda PLAYSCREEN.OFS+1
  7351 4538 6D 8F A4			adc XS+1
  7352 453B 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  7353 453D AD A6 9A			lda PLAYSCREEN.OFS+2
  7354 4540 69 00			adc #$00
  7355 4542 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
  7356 4544 AD A7 9A			lda PLAYSCREEN.OFS+3
  7357 4547 69 00			adc #$00
  7358 4549 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
  7359 454B A5 9F			lda :STACKORIGIN+9
  7360 454D 18 6D 8C A4			add X
  7361 4551 85 9F			sta :STACKORIGIN+9
  7362 4553 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  7363 4555 69 00			adc #$00
  7364 4557 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  7365 4559 A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
  7366 455B 69 00			adc #$00
  7367 455D 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
  7368 455F A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
  7369 4561 69 00			adc #$00
  7370 4563 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
  7371 4565 AD 90 A4			lda YS
  7372 4568 18 6D 8D A4			add Y
  7373 456C 85 A0			sta :STACKORIGIN+10
  7374 456E AD 91 A4			lda YS+1
  7375 4571 69 00			adc #$00
  7376 4573 06 A0			asl :STACKORIGIN+10
  7377 4575 2A				rol @
  7378 4576 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  7379 4578 AD DA 98			lda ROW
  7380 457B 18 65 A0			add :STACKORIGIN+10
  7381 457E 85 84			sta :bp2
  7382 4580 AD DB 98			lda ROW+1
  7383 4583 65 B0			adc :STACKORIGIN+STACKWIDTH+10
  7384 4585 85 85			sta :bp2+1
  7385 4587 A0 00			ldy #$00
  7386 4589 A5 9F			lda :STACKORIGIN+9
  7387 458B 18 71 84			add (:bp2),y
  7388 458E 8D C5 A3			sta GETBYTE.SRC
  7389 4591 C8				iny
  7390 4592 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  7391 4594 71 84			adc (:bp2),y
  7392 4596 8D C6 A3			sta GETBYTE.SRC+1
  7393 4599 A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
  7394 459B 69 00			adc #$00
  7395 459D 8D C7 A3			sta GETBYTE.SRC+2
  7396 45A0 A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
  7397 45A2 69 00			adc #$00
  7398 45A4 8D C8 A3			sta GETBYTE.SRC+3
  7399 45A7 20 AB 26			jsr GETBYTE
  7400 45AA AD C9 A3			lda GETBYTE.RESULT
  7401 45AD 29 80			and #$80
  7402 45AF 8D 94 A4			sta SHADOW
  7403
  7404 				; optimize OK (service.pas), line = 1305
  7405
  7406 45B2 AD 8D A4			lda Y
  7407 45B5 C9 07			cmp #$07
  7408 45B7 90 03 4C CA 46		jcs l_114A
  7409 45BC AD 8C A4			lda X
  7410 45BF C9 0F			cmp #$0F
  7411 45C1 90 03 4C CA 46		jcs l_114A
  7412
  7413 				; optimize OK (service.pas), line = 1310
  7414
  7415 45C6 AD 8B A4			lda BLOCK
  7416 45C9 38 E9 01			sub #$01
  7417 45CC 85 9F			sta :STACKORIGIN+9
  7418 45CE A9 00			lda #$00
  7419 45D0 E9 00			sbc #$00
  7420 45D2 A5 9F			lda :STACKORIGIN+9
  7421 45D4 29 0F			and #$0F
  7422 45D6 A8				tay
  7423 45D7 B9 A6 10			lda adr.COLORBLOCK,y
  7424 45DA 29 7F			and #$7F
  7425 45DC 0D 94 A4			ora SHADOW
  7426 45DF 8D 92 A4			sta CL
  7427
  7428 				; optimize OK (service.pas), line = 1313
  7429
  7430 45E2 AD 8E A4			lda XS
  7431 45E5 18 6D 8C A4			add X
  7432 45E9 85 A0			sta :STACKORIGIN+10
  7433 45EB AD 8F A4			lda XS+1
  7434 45EE 69 00			adc #$00
  7435 45F0 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  7436 45F2 A9 00			lda #$00
  7437 45F4 69 00			adc #$00
  7438 45F6 85 C0			sta :STACKORIGIN+STACKWIDTH*2+10
  7439 45F8 A9 00			lda #$00
  7440 45FA 69 00			adc #$00
  7441 45FC 85 D0			sta :STACKORIGIN+STACKWIDTH*3+10
  7442 45FE AD 90 A4			lda YS
  7443 4601 18 6D 8D A4			add Y
  7444 4605 85 A1			sta :STACKORIGIN+11
  7445 4607 AD 91 A4			lda YS+1
  7446 460A 69 00			adc #$00
  7447 460C 06 A1			asl :STACKORIGIN+11
  7448 460E 2A				rol @
  7449 460F 85 B1			sta :STACKORIGIN+STACKWIDTH+11
  7450 4611 AD DA 98			lda ROW
  7451 4614 18 65 A1			add :STACKORIGIN+11
  7452 4617 85 84			sta :bp2
  7453 4619 AD DB 98			lda ROW+1
  7454 461C 65 B1			adc :STACKORIGIN+STACKWIDTH+11
  7455 461E 85 85			sta :bp2+1
  7456 4620 A0 00			ldy #$00
  7457 4622 A5 A0			lda :STACKORIGIN+10
  7458 4624 18 71 84			add (:bp2),y
  7459 4627 8D C0 A3			sta PUTBYTE.DST
  7460 462A C8				iny
  7461 462B A5 B0			lda :STACKORIGIN+STACKWIDTH+10
  7462 462D 71 84			adc (:bp2),y
  7463 462F 8D C1 A3			sta PUTBYTE.DST+1
  7464 4632 A5 C0			lda :STACKORIGIN+STACKWIDTH*2+10
  7465 4634 69 00			adc #$00
  7466 4636 8D C2 A3			sta PUTBYTE.DST+2
  7467 4639 A5 D0			lda :STACKORIGIN+STACKWIDTH*3+10
  7468 463B 69 00			adc #$00
  7469 463D 8D C3 A3			sta PUTBYTE.DST+3
  7470 4640 AD 92 A4			lda CL
  7471 4643 8D C4 A3			sta PUTBYTE.V
  7472 4646 20 95 26			jsr PUTBYTE
  7473
  7474 				; optimize OK (service.pas), line = 1316
  7475
  7476 4649 AD A4 9A			lda PLAYSCREEN.OFS
  7477 464C 18 6D 8E A4			add XS
  7478 4650 85 A0			sta :STACKORIGIN+10
  7479 4652 AD A5 9A			lda PLAYSCREEN.OFS+1
  7480 4655 6D 8F A4			adc XS+1
  7481 4658 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  7482 465A AD A6 9A			lda PLAYSCREEN.OFS+2
  7483 465D 69 00			adc #$00
  7484 465F 85 C0			sta :STACKORIGIN+STACKWIDTH*2+10
  7485 4661 AD A7 9A			lda PLAYSCREEN.OFS+3
  7486 4664 69 00			adc #$00
  7487 4666 85 D0			sta :STACKORIGIN+STACKWIDTH*3+10
  7488 4668 A5 A0			lda :STACKORIGIN+10
  7489 466A 18 6D 8C A4			add X
  7490 466E 85 A0			sta :STACKORIGIN+10
  7491 4670 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
  7492 4672 69 00			adc #$00
  7493 4674 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  7494 4676 A5 C0			lda :STACKORIGIN+STACKWIDTH*2+10
  7495 4678 69 00			adc #$00
  7496 467A 85 C0			sta :STACKORIGIN+STACKWIDTH*2+10
  7497 467C A5 D0			lda :STACKORIGIN+STACKWIDTH*3+10
  7498 467E 69 00			adc #$00
  7499 4680 85 D0			sta :STACKORIGIN+STACKWIDTH*3+10
  7500 4682 AD 90 A4			lda YS
  7501 4685 18 6D 8D A4			add Y
  7502 4689 85 A1			sta :STACKORIGIN+11
  7503 468B AD 91 A4			lda YS+1
  7504 468E 69 00			adc #$00
  7505 4690 06 A1			asl :STACKORIGIN+11
  7506 4692 2A				rol @
  7507 4693 85 B1			sta :STACKORIGIN+STACKWIDTH+11
  7508 4695 AD DA 98			lda ROW
  7509 4698 18 65 A1			add :STACKORIGIN+11
  7510 469B 85 84			sta :bp2
  7511 469D AD DB 98			lda ROW+1
  7512 46A0 65 B1			adc :STACKORIGIN+STACKWIDTH+11
  7513 46A2 85 85			sta :bp2+1
  7514 46A4 A0 00			ldy #$00
  7515 46A6 A5 A0			lda :STACKORIGIN+10
  7516 46A8 18 71 84			add (:bp2),y
  7517 46AB 8D C0 A3			sta PUTBYTE.DST
  7518 46AE C8				iny
  7519 46AF A5 B0			lda :STACKORIGIN+STACKWIDTH+10
  7520 46B1 71 84			adc (:bp2),y
  7521 46B3 8D C1 A3			sta PUTBYTE.DST+1
  7522 46B6 A5 C0			lda :STACKORIGIN+STACKWIDTH*2+10
  7523 46B8 69 00			adc #$00
  7524 46BA 8D C2 A3			sta PUTBYTE.DST+2
  7525 46BD A5 D0			lda :STACKORIGIN+STACKWIDTH*3+10
  7526 46BF 69 00			adc #$00
  7527 46C1 8D C3 A3			sta PUTBYTE.DST+3
  7528 46C4 AD 92 A4			lda CL
  7529 46C7 4C AF 47			jmp l_11A9
  7530 46CA			l_114A
  7531
  7532 				; optimize OK (service.pas), line = 1324
  7533
  7534 46CA AD 8E A4			lda XS
  7535 46CD 18 6D 8C A4			add X
  7536 46D1 85 A0			sta :STACKORIGIN+10
  7537 46D3 AD 8F A4			lda XS+1
  7538 46D6 69 00			adc #$00
  7539 46D8 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  7540 46DA A9 00			lda #$00
  7541 46DC 69 00			adc #$00
  7542 46DE 85 C0			sta :STACKORIGIN+STACKWIDTH*2+10
  7543 46E0 A9 00			lda #$00
  7544 46E2 69 00			adc #$00
  7545 46E4 85 D0			sta :STACKORIGIN+STACKWIDTH*3+10
  7546 46E6 AD 90 A4			lda YS
  7547 46E9 18 6D 8D A4			add Y
  7548 46ED 85 A1			sta :STACKORIGIN+11
  7549 46EF AD 91 A4			lda YS+1
  7550 46F2 69 00			adc #$00
  7551 46F4 06 A1			asl :STACKORIGIN+11
  7552 46F6 2A				rol @
  7553 46F7 85 B1			sta :STACKORIGIN+STACKWIDTH+11
  7554 46F9 AD DA 98			lda ROW
  7555 46FC 18 65 A1			add :STACKORIGIN+11
  7556 46FF 85 84			sta :bp2
  7557 4701 AD DB 98			lda ROW+1
  7558 4704 65 B1			adc :STACKORIGIN+STACKWIDTH+11
  7559 4706 85 85			sta :bp2+1
  7560 4708 A0 00			ldy #$00
  7561 470A A5 A0			lda :STACKORIGIN+10
  7562 470C 18 71 84			add (:bp2),y
  7563 470F 8D C0 A3			sta PUTBYTE.DST
  7564 4712 C8				iny
  7565 4713 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
  7566 4715 71 84			adc (:bp2),y
  7567 4717 8D C1 A3			sta PUTBYTE.DST+1
  7568 471A A5 C0			lda :STACKORIGIN+STACKWIDTH*2+10
  7569 471C 69 00			adc #$00
  7570 471E 8D C2 A3			sta PUTBYTE.DST+2
  7571 4721 A5 D0			lda :STACKORIGIN+STACKWIDTH*3+10
  7572 4723 69 00			adc #$00
  7573 4725 8D C3 A3			sta PUTBYTE.DST+3
  7574 4728 AD 94 A4			lda SHADOW
  7575 472B 8D C4 A3			sta PUTBYTE.V
  7576 472E 20 95 26			jsr PUTBYTE
  7577
  7578 				; optimize OK (service.pas), line = 1327
  7579
  7580 4731 AD A4 9A			lda PLAYSCREEN.OFS
  7581 4734 18 6D 8E A4			add XS
  7582 4738 85 A0			sta :STACKORIGIN+10
  7583 473A AD A5 9A			lda PLAYSCREEN.OFS+1
  7584 473D 6D 8F A4			adc XS+1
  7585 4740 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  7586 4742 AD A6 9A			lda PLAYSCREEN.OFS+2
  7587 4745 69 00			adc #$00
  7588 4747 85 C0			sta :STACKORIGIN+STACKWIDTH*2+10
  7589 4749 AD A7 9A			lda PLAYSCREEN.OFS+3
  7590 474C 69 00			adc #$00
  7591 474E 85 D0			sta :STACKORIGIN+STACKWIDTH*3+10
  7592 4750 A5 A0			lda :STACKORIGIN+10
  7593 4752 18 6D 8C A4			add X
  7594 4756 85 A0			sta :STACKORIGIN+10
  7595 4758 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
  7596 475A 69 00			adc #$00
  7597 475C 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  7598 475E A5 C0			lda :STACKORIGIN+STACKWIDTH*2+10
  7599 4760 69 00			adc #$00
  7600 4762 85 C0			sta :STACKORIGIN+STACKWIDTH*2+10
  7601 4764 A5 D0			lda :STACKORIGIN+STACKWIDTH*3+10
  7602 4766 69 00			adc #$00
  7603 4768 85 D0			sta :STACKORIGIN+STACKWIDTH*3+10
  7604 476A AD 90 A4			lda YS
  7605 476D 18 6D 8D A4			add Y
  7606 4771 85 A1			sta :STACKORIGIN+11
  7607 4773 AD 91 A4			lda YS+1
  7608 4776 69 00			adc #$00
  7609 4778 06 A1			asl :STACKORIGIN+11
  7610 477A 2A				rol @
  7611 477B 85 B1			sta :STACKORIGIN+STACKWIDTH+11
  7612 477D AD DA 98			lda ROW
  7613 4780 18 65 A1			add :STACKORIGIN+11
  7614 4783 85 84			sta :bp2
  7615 4785 AD DB 98			lda ROW+1
  7616 4788 65 B1			adc :STACKORIGIN+STACKWIDTH+11
  7617 478A 85 85			sta :bp2+1
  7618 478C A0 00			ldy #$00
  7619 478E A5 A0			lda :STACKORIGIN+10
  7620 4790 18 71 84			add (:bp2),y
  7621 4793 8D C0 A3			sta PUTBYTE.DST
  7622 4796 C8				iny
  7623 4797 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
  7624 4799 71 84			adc (:bp2),y
  7625 479B 8D C1 A3			sta PUTBYTE.DST+1
  7626 479E A5 C0			lda :STACKORIGIN+STACKWIDTH*2+10
  7627 47A0 69 00			adc #$00
  7628 47A2 8D C2 A3			sta PUTBYTE.DST+2
  7629 47A5 A5 D0			lda :STACKORIGIN+STACKWIDTH*3+10
  7630 47A7 69 00			adc #$00
  7631 47A9 8D C3 A3			sta PUTBYTE.DST+3
  7632 47AC AD 94 A4			lda SHADOW
  7633 47AF			l_11A9
  7634 47AF 8D C4 A3			sta PUTBYTE.V
  7635 47B2 20 95 26			jsr PUTBYTE
  7636
  7637 				; --- ForToDoEpilog
  7638 47B5 EE 8C A4			inc X
  7639 47B8 F0 03 4C 23 45		jne l_10FD
  7640 47BD			l_110B
  7641
  7642 				; --- ForToDoEpilog
  7643 47BD EE 8D A4			inc Y
  7644 47C0 F0 03 4C 14 45		jne l_10E6
  7645 47C5			l_10F4
  7646
  7647 				; optimize OK (service.pas), line = 1332
  7648
  7649 47C5 AD 90 A4			lda YS
  7650 47C8 18 69 04			add #$04
  7651 47CB 8D 8D A4			sta Y
  7652 47CE AD 90 A4			lda YS
  7653 47D1 18 69 0C			add #$0C
  7654 47D4 8D D8 47			sta @FORTMP_11FD_0
  7655
  7656 47D7			l_1200
  7657 				; --- ForToDoCondition
  7658 47D7 A9 00			lda @FORTMP_11FD_0::#$00
  7659 47D9 CD 8D A4			cmp Y
  7660 47DC B0 03 4C 15 49		jcc l_120E
  7661
  7662 				; optimize OK (service.pas), line = 1333
  7663
  7664 47E1 AD 8E A4			lda XS
  7665 47E4 18 69 08			add #$08
  7666 47E7 8D 8C A4			sta X
  7667 47EA AD 8E A4			lda XS
  7668 47ED 18 69 18			add #$18
  7669 47F0 8D F4 47			sta @FORTMP_121E_0
  7670
  7671 47F3			l_1221
  7672 				; --- ForToDoCondition
  7673 47F3 A9 00			lda @FORTMP_121E_0::#$00
  7674 47F5 CD 8C A4			cmp X
  7675 47F8 B0 03 4C 0D 49		jcc l_122F
  7676
  7677 				; optimize OK (service.pas), line = 1334
  7678
  7679 47FD AD 8C A4			lda X
  7680 4800 C9 D8			cmp #$D8
  7681 4802 90 03 4C 05 49		jcs l_1241
  7682
  7683 				; optimize OK (service.pas), line = 1341
  7684
  7685 4807 AD A4 9A			lda PLAYSCREEN.OFS
  7686 480A 6D 8C A4			adc X
  7687 480D 85 9F			sta :STACKORIGIN+9
  7688 480F AD A5 9A			lda PLAYSCREEN.OFS+1
  7689 4812 69 00			adc #$00
  7690 4814 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  7691 4816 AD A6 9A			lda PLAYSCREEN.OFS+2
  7692 4819 69 00			adc #$00
  7693 481B 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
  7694 481D AD A7 9A			lda PLAYSCREEN.OFS+3
  7695 4820 69 00			adc #$00
  7696 4822 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
  7697 4824 A9 00			lda #$00
  7698 4826 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  7699 4828 AD 8D A4			lda Y
  7700 482B 0A				asl @
  7701 482C 26 B0			rol :STACKORIGIN+STACKWIDTH+10
  7702 482E 18 6D DA 98			add ROW
  7703 4832 85 84			sta :bp2
  7704 4834 AD DB 98			lda ROW+1
  7705 4837 65 B0			adc :STACKORIGIN+STACKWIDTH+10
  7706 4839 85 85			sta :bp2+1
  7707 483B A0 00			ldy #$00
  7708 483D A5 9F			lda :STACKORIGIN+9
  7709 483F 18 71 84			add (:bp2),y
  7710 4842 8D C5 A3			sta GETBYTE.SRC
  7711 4845 C8				iny
  7712 4846 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  7713 4848 71 84			adc (:bp2),y
  7714 484A 8D C6 A3			sta GETBYTE.SRC+1
  7715 484D A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
  7716 484F 69 00			adc #$00
  7717 4851 8D C7 A3			sta GETBYTE.SRC+2
  7718 4854 A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
  7719 4856 69 00			adc #$00
  7720 4858 8D C8 A3			sta GETBYTE.SRC+3
  7721 485B 20 AB 26			jsr GETBYTE
  7722 485E AD C9 A3			lda GETBYTE.RESULT
  7723 4861 29 7F			and #$7F
  7724 4863 8D 92 A4			sta CL
  7725
  7726 				; optimize OK (service.pas), line = 1345
  7727
  7728 4866 A9 00			lda #$00
  7729 4868 85 B1			sta :STACKORIGIN+STACKWIDTH+11
  7730 486A AD 8D A4			lda Y
  7731 486D 0A				asl @
  7732 486E 26 B1			rol :STACKORIGIN+STACKWIDTH+11
  7733 4870 18 6D DA 98			add ROW
  7734 4874 85 84			sta :bp2
  7735 4876 AD DB 98			lda ROW+1
  7736 4879 65 B1			adc :STACKORIGIN+STACKWIDTH+11
  7737 487B 85 85			sta :bp2+1
  7738 487D A0 00			ldy #$00
  7739 487F AD 8C A4			lda X
  7740 4882 18 71 84			add (:bp2),y
  7741 4885 8D C0 A3			sta PUTBYTE.DST
  7742 4888 C8				iny
  7743 4889 A9 00			lda #$00
  7744 488B 71 84			adc (:bp2),y
  7745 488D 8D C1 A3			sta PUTBYTE.DST+1
  7746 4890 A9 00			lda #$00
  7747 4892 69 00			adc #$00
  7748 4894 8D C2 A3			sta PUTBYTE.DST+2
  7749 4897 A9 00			lda #$00
  7750 4899 69 00			adc #$00
  7751 489B 8D C3 A3			sta PUTBYTE.DST+3
  7752 489E AD 92 A4			lda CL
  7753 48A1 8D C4 A3			sta PUTBYTE.V
  7754 48A4 20 95 26			jsr PUTBYTE
  7755
  7756 				; optimize OK (service.pas), line = 1349
  7757
  7758 48A7 AD A4 9A			lda PLAYSCREEN.OFS
  7759 48AA 18 6D 8C A4			add X
  7760 48AE 85 A0			sta :STACKORIGIN+10
  7761 48B0 AD A5 9A			lda PLAYSCREEN.OFS+1
  7762 48B3 69 00			adc #$00
  7763 48B5 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  7764 48B7 AD A6 9A			lda PLAYSCREEN.OFS+2
  7765 48BA 69 00			adc #$00
  7766 48BC 85 C0			sta :STACKORIGIN+STACKWIDTH*2+10
  7767 48BE AD A7 9A			lda PLAYSCREEN.OFS+3
  7768 48C1 69 00			adc #$00
  7769 48C3 85 D0			sta :STACKORIGIN+STACKWIDTH*3+10
  7770 48C5 A9 00			lda #$00
  7771 48C7 85 B1			sta :STACKORIGIN+STACKWIDTH+11
  7772 48C9 AD 8D A4			lda Y
  7773 48CC 0A				asl @
  7774 48CD 26 B1			rol :STACKORIGIN+STACKWIDTH+11
  7775 48CF 18 6D DA 98			add ROW
  7776 48D3 85 84			sta :bp2
  7777 48D5 AD DB 98			lda ROW+1
  7778 48D8 65 B1			adc :STACKORIGIN+STACKWIDTH+11
  7779 48DA 85 85			sta :bp2+1
  7780 48DC A0 00			ldy #$00
  7781 48DE A5 A0			lda :STACKORIGIN+10
  7782 48E0 18 71 84			add (:bp2),y
  7783 48E3 8D C0 A3			sta PUTBYTE.DST
  7784 48E6 C8				iny
  7785 48E7 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
  7786 48E9 71 84			adc (:bp2),y
  7787 48EB 8D C1 A3			sta PUTBYTE.DST+1
  7788 48EE A5 C0			lda :STACKORIGIN+STACKWIDTH*2+10
  7789 48F0 69 00			adc #$00
  7790 48F2 8D C2 A3			sta PUTBYTE.DST+2
  7791 48F5 A5 D0			lda :STACKORIGIN+STACKWIDTH*3+10
  7792 48F7 69 00			adc #$00
  7793 48F9 8D C3 A3			sta PUTBYTE.DST+3
  7794 48FC AD 92 A4			lda CL
  7795 48FF 8D C4 A3			sta PUTBYTE.V
  7796 4902 20 95 26			jsr PUTBYTE
  7797 4905			l_1241
  7798
  7799 				; --- ForToDoEpilog
  7800 4905 EE 8C A4			inc X
  7801 4908 F0 03 4C F3 47		jne l_1221
  7802 490D			l_122F
  7803
  7804 				; --- ForToDoEpilog
  7805 490D EE 8D A4			inc Y
  7806 4910 F0 03 4C D7 47		jne l_1200
  7807 4915			l_120E
  7808
  7809 				; optimize OK (service.pas), line = 1352
  7810
  7811 4915 AD 8B A4			lda BLOCK
  7812 4918 C9 09			cmp #$09
  7813 491A B0 03 4C 0A 4C		jcc l_129D
  7814
  7815 				; optimize OK (service.pas), line = 1354
  7816
  7817 491F A9 00			lda #$00
  7818 4921 8D 93 A4			sta CL2
  7819
  7820 				; optimize OK (service.pas), line = 1355
  7821
  7822 4924 AD 8B A4			lda BLOCK
  7823 4927 29 0F			and #$0F
  7824 4929 C9 09			cmp #$09
  7825 492B D0 19			jne l_12B8
  7826
  7827 				; optimize OK (service.pas), line = 1357
  7828
  7829 492D A9 CA			lda #$CA
  7830 492F 8D 93 A4			sta CL2
  7831
  7832 				; optimize OK (service.pas), line = 1358
  7833
  7834 4932 AD 8A A4			lda YA
  7835 4935 0A				asl @
  7836 4936 0A				asl @
  7837 4937 0A				asl @
  7838 4938 0A				asl @
  7839 4939 18 6D 89 A4			add XA
  7840 493D A8				tay
  7841 493E A9 19			lda #$19
  7842 4940 99 00 DB			sta adr.WALL,y
  7843 4943 4C 52 49			jmp l_12D7
  7844 4946			l_12B8
  7845
  7846 				; optimize OK (service.pas), line = 1364
  7847
  7848 4946 AD 8B A4			lda BLOCK
  7849 4949 C9 0A			cmp #$0A
  7850 494B D0 05			jne l_12E9
  7851 494D A9 C9			lda #$C9
  7852 494F 8D 93 A4			sta CL2
  7853 4952			l_12D7
  7854 4952			l_12E9
  7855
  7856 				; optimize OK (service.pas), line = 1368
  7857
  7858 4952 A9 00			lda #$00
  7859 4954 8D 8D A4			sta Y
  7860
  7861 4957			l_12F9
  7862 				; --- ForToDoCondition
  7863 4957 AD 8D A4			lda Y
  7864 495A C9 07			cmp #$07
  7865 495C 90 03 4C 96 4A		jcs l_1307
  7866
  7867 				; optimize OK (service.pas), line = 1374
  7868
  7869 4961 AD A4 9A			lda PLAYSCREEN.OFS
  7870 4964 6D 8E A4			adc XS
  7871 4967 85 9F			sta :STACKORIGIN+9
  7872 4969 AD A5 9A			lda PLAYSCREEN.OFS+1
  7873 496C 6D 8F A4			adc XS+1
  7874 496F 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  7875 4971 AD A6 9A			lda PLAYSCREEN.OFS+2
  7876 4974 69 00			adc #$00
  7877 4976 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
  7878 4978 AD A7 9A			lda PLAYSCREEN.OFS+3
  7879 497B 69 00			adc #$00
  7880 497D 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
  7881 497F AD 8D A4			lda Y
  7882 4982 18 6D 90 A4			add YS
  7883 4986 85 A0			sta :STACKORIGIN+10
  7884 4988 A9 00			lda #$00
  7885 498A 6D 91 A4			adc YS+1
  7886 498D 06 A0			asl :STACKORIGIN+10
  7887 498F 2A				rol @
  7888 4990 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  7889 4992 AD DA 98			lda ROW
  7890 4995 18 65 A0			add :STACKORIGIN+10
  7891 4998 85 84			sta :bp2
  7892 499A AD DB 98			lda ROW+1
  7893 499D 65 B0			adc :STACKORIGIN+STACKWIDTH+10
  7894 499F 85 85			sta :bp2+1
  7895 49A1 A0 00			ldy #$00
  7896 49A3 A5 9F			lda :STACKORIGIN+9
  7897 49A5 18 71 84			add (:bp2),y
  7898 49A8 8D C5 A3			sta GETBYTE.SRC
  7899 49AB C8				iny
  7900 49AC A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  7901 49AE 71 84			adc (:bp2),y
  7902 49B0 8D C6 A3			sta GETBYTE.SRC+1
  7903 49B3 A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
  7904 49B5 69 00			adc #$00
  7905 49B7 8D C7 A3			sta GETBYTE.SRC+2
  7906 49BA A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
  7907 49BC 69 00			adc #$00
  7908 49BE 8D C8 A3			sta GETBYTE.SRC+3
  7909 49C1 20 AB 26			jsr GETBYTE
  7910 49C4 AD C9 A3			lda GETBYTE.RESULT
  7911 49C7 29 80			and #$80
  7912 49C9 8D 92 A4			sta CL
  7913
  7914 				; optimize OK (service.pas), line = 1376
  7915
  7916 49CC AD 93 A4			lda CL2
  7917 49CF 29 7F			and #$7F
  7918 49D1 0D 92 A4			ora CL
  7919 49D4 8D 93 A4			sta CL2
  7920
  7921 				; optimize OK (service.pas), line = 1380
  7922
  7923 49D7 AD 90 A4			lda YS
  7924 49DA 18 6D 8D A4			add Y
  7925 49DE 85 A1			sta :STACKORIGIN+11
  7926 49E0 AD 91 A4			lda YS+1
  7927 49E3 69 00			adc #$00
  7928 49E5 06 A1			asl :STACKORIGIN+11
  7929 49E7 2A				rol @
  7930 49E8 85 B1			sta :STACKORIGIN+STACKWIDTH+11
  7931 49EA AD DA 98			lda ROW
  7932 49ED 18 65 A1			add :STACKORIGIN+11
  7933 49F0 85 84			sta :bp2
  7934 49F2 AD DB 98			lda ROW+1
  7935 49F5 65 B1			adc :STACKORIGIN+STACKWIDTH+11
  7936 49F7 85 85			sta :bp2+1
  7937 49F9 A0 00			ldy #$00
  7938 49FB AD 8E A4			lda XS
  7939 49FE 18 71 84			add (:bp2),y
  7940 4A01 8D C0 A3			sta PUTBYTE.DST
  7941 4A04 C8				iny
  7942 4A05 AD 8F A4			lda XS+1
  7943 4A08 71 84			adc (:bp2),y
  7944 4A0A 8D C1 A3			sta PUTBYTE.DST+1
  7945 4A0D A9 00			lda #$00
  7946 4A0F 69 00			adc #$00
  7947 4A11 8D C2 A3			sta PUTBYTE.DST+2
  7948 4A14 A9 00			lda #$00
  7949 4A16 69 00			adc #$00
  7950 4A18 8D C3 A3			sta PUTBYTE.DST+3
  7951 4A1B AD 93 A4			lda CL2
  7952 4A1E 8D C4 A3			sta PUTBYTE.V
  7953 4A21 20 95 26			jsr PUTBYTE
  7954
  7955 				; optimize OK (service.pas), line = 1384
  7956
  7957 4A24 AD A4 9A			lda PLAYSCREEN.OFS
  7958 4A27 18 6D 8E A4			add XS
  7959 4A2B 85 A0			sta :STACKORIGIN+10
  7960 4A2D AD A5 9A			lda PLAYSCREEN.OFS+1
  7961 4A30 6D 8F A4			adc XS+1
  7962 4A33 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  7963 4A35 AD A6 9A			lda PLAYSCREEN.OFS+2
  7964 4A38 69 00			adc #$00
  7965 4A3A 85 C0			sta :STACKORIGIN+STACKWIDTH*2+10
  7966 4A3C AD A7 9A			lda PLAYSCREEN.OFS+3
  7967 4A3F 69 00			adc #$00
  7968 4A41 85 D0			sta :STACKORIGIN+STACKWIDTH*3+10
  7969 4A43 AD 90 A4			lda YS
  7970 4A46 18 6D 8D A4			add Y
  7971 4A4A 85 A1			sta :STACKORIGIN+11
  7972 4A4C AD 91 A4			lda YS+1
  7973 4A4F 69 00			adc #$00
  7974 4A51 06 A1			asl :STACKORIGIN+11
  7975 4A53 2A				rol @
  7976 4A54 85 B1			sta :STACKORIGIN+STACKWIDTH+11
  7977 4A56 AD DA 98			lda ROW
  7978 4A59 18 65 A1			add :STACKORIGIN+11
  7979 4A5C 85 84			sta :bp2
  7980 4A5E AD DB 98			lda ROW+1
  7981 4A61 65 B1			adc :STACKORIGIN+STACKWIDTH+11
  7982 4A63 85 85			sta :bp2+1
  7983 4A65 A0 00			ldy #$00
  7984 4A67 A5 A0			lda :STACKORIGIN+10
  7985 4A69 18 71 84			add (:bp2),y
  7986 4A6C 8D C0 A3			sta PUTBYTE.DST
  7987 4A6F C8				iny
  7988 4A70 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
  7989 4A72 71 84			adc (:bp2),y
  7990 4A74 8D C1 A3			sta PUTBYTE.DST+1
  7991 4A77 A5 C0			lda :STACKORIGIN+STACKWIDTH*2+10
  7992 4A79 69 00			adc #$00
  7993 4A7B 8D C2 A3			sta PUTBYTE.DST+2
  7994 4A7E A5 D0			lda :STACKORIGIN+STACKWIDTH*3+10
  7995 4A80 69 00			adc #$00
  7996 4A82 8D C3 A3			sta PUTBYTE.DST+3
  7997 4A85 AD 93 A4			lda CL2
  7998 4A88 8D C4 A3			sta PUTBYTE.V
  7999 4A8B 20 95 26			jsr PUTBYTE
  8000
  8001 				; --- ForToDoEpilog
  8002 4A8E EE 8D A4			inc Y
  8003 4A91 F0 03 4C 57 49		jne l_12F9
  8004 4A96			l_1307
  8005
  8006 				; optimize OK (service.pas), line = 1388
  8007
  8008 4A96 A9 00			lda #$00
  8009 4A98 8D 8C A4			sta X
  8010
  8011 4A9B			l_136E
  8012 				; --- ForToDoCondition
  8013 4A9B AD 8C A4			lda X
  8014 4A9E C9 0F			cmp #$0F
  8015 4AA0 90 03 4C 0A 4C		jcs l_137C
  8016
  8017 				; optimize OK (service.pas), line = 1392
  8018
  8019 4AA5 AD A4 9A			lda PLAYSCREEN.OFS
  8020 4AA8 6D 8E A4			adc XS
  8021 4AAB 85 9F			sta :STACKORIGIN+9
  8022 4AAD AD A5 9A			lda PLAYSCREEN.OFS+1
  8023 4AB0 6D 8F A4			adc XS+1
  8024 4AB3 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  8025 4AB5 AD A6 9A			lda PLAYSCREEN.OFS+2
  8026 4AB8 69 00			adc #$00
  8027 4ABA 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
  8028 4ABC AD A7 9A			lda PLAYSCREEN.OFS+3
  8029 4ABF 69 00			adc #$00
  8030 4AC1 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
  8031 4AC3 A5 9F			lda :STACKORIGIN+9
  8032 4AC5 18 6D 8C A4			add X
  8033 4AC9 85 9F			sta :STACKORIGIN+9
  8034 4ACB A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  8035 4ACD 69 00			adc #$00
  8036 4ACF 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  8037 4AD1 A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
  8038 4AD3 69 00			adc #$00
  8039 4AD5 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
  8040 4AD7 A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
  8041 4AD9 69 00			adc #$00
  8042 4ADB 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
  8043 4ADD AD 91 A4			lda YS+1
  8044 4AE0 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  8045 4AE2 AD 90 A4			lda YS
  8046 4AE5 0A				asl @
  8047 4AE6 26 B0			rol :STACKORIGIN+STACKWIDTH+10
  8048 4AE8 18 6D DA 98			add ROW
  8049 4AEC 85 84			sta :bp2
  8050 4AEE AD DB 98			lda ROW+1
  8051 4AF1 65 B0			adc :STACKORIGIN+STACKWIDTH+10
  8052 4AF3 85 85			sta :bp2+1
  8053 4AF5 A0 00			ldy #$00
  8054 4AF7 A5 9F			lda :STACKORIGIN+9
  8055 4AF9 18 71 84			add (:bp2),y
  8056 4AFC 8D C5 A3			sta GETBYTE.SRC
  8057 4AFF C8				iny
  8058 4B00 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  8059 4B02 71 84			adc (:bp2),y
  8060 4B04 8D C6 A3			sta GETBYTE.SRC+1
  8061 4B07 A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
  8062 4B09 69 00			adc #$00
  8063 4B0B 8D C7 A3			sta GETBYTE.SRC+2
  8064 4B0E A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
  8065 4B10 69 00			adc #$00
  8066 4B12 8D C8 A3			sta GETBYTE.SRC+3
  8067 4B15 20 AB 26			jsr GETBYTE
  8068 4B18 AD C9 A3			lda GETBYTE.RESULT
  8069 4B1B 29 80			and #$80
  8070 4B1D 8D 92 A4			sta CL
  8071
  8072 				; optimize OK (service.pas), line = 1394
  8073
  8074 4B20 AD 93 A4			lda CL2
  8075 4B23 29 7F			and #$7F
  8076 4B25 0D 92 A4			ora CL
  8077 4B28 8D 93 A4			sta CL2
  8078
  8079 				; optimize OK (service.pas), line = 1397
  8080
  8081 4B2B AD 8E A4			lda XS
  8082 4B2E 18 6D 8C A4			add X
  8083 4B32 85 A0			sta :STACKORIGIN+10
  8084 4B34 AD 8F A4			lda XS+1
  8085 4B37 69 00			adc #$00
  8086 4B39 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  8087 4B3B A9 00			lda #$00
  8088 4B3D 69 00			adc #$00
  8089 4B3F 85 C0			sta :STACKORIGIN+STACKWIDTH*2+10
  8090 4B41 A9 00			lda #$00
  8091 4B43 69 00			adc #$00
  8092 4B45 85 D0			sta :STACKORIGIN+STACKWIDTH*3+10
  8093 4B47 AD 91 A4			lda YS+1
  8094 4B4A 85 B1			sta :STACKORIGIN+STACKWIDTH+11
  8095 4B4C AD 90 A4			lda YS
  8096 4B4F 0A				asl @
  8097 4B50 26 B1			rol :STACKORIGIN+STACKWIDTH+11
  8098 4B52 18 6D DA 98			add ROW
  8099 4B56 85 84			sta :bp2
  8100 4B58 AD DB 98			lda ROW+1
  8101 4B5B 65 B1			adc :STACKORIGIN+STACKWIDTH+11
  8102 4B5D 85 85			sta :bp2+1
  8103 4B5F A0 00			ldy #$00
  8104 4B61 A5 A0			lda :STACKORIGIN+10
  8105 4B63 18 71 84			add (:bp2),y
  8106 4B66 8D C0 A3			sta PUTBYTE.DST
  8107 4B69 C8				iny
  8108 4B6A A5 B0			lda :STACKORIGIN+STACKWIDTH+10
  8109 4B6C 71 84			adc (:bp2),y
  8110 4B6E 8D C1 A3			sta PUTBYTE.DST+1
  8111 4B71 A5 C0			lda :STACKORIGIN+STACKWIDTH*2+10
  8112 4B73 69 00			adc #$00
  8113 4B75 8D C2 A3			sta PUTBYTE.DST+2
  8114 4B78 A5 D0			lda :STACKORIGIN+STACKWIDTH*3+10
  8115 4B7A 69 00			adc #$00
  8116 4B7C 8D C3 A3			sta PUTBYTE.DST+3
  8117 4B7F AD 93 A4			lda CL2
  8118 4B82 8D C4 A3			sta PUTBYTE.V
  8119 4B85 20 95 26			jsr PUTBYTE
  8120
  8121 				; optimize OK (service.pas), line = 1400
  8122
  8123 4B88 AD A4 9A			lda PLAYSCREEN.OFS
  8124 4B8B 18 6D 8E A4			add XS
  8125 4B8F 85 A0			sta :STACKORIGIN+10
  8126 4B91 AD A5 9A			lda PLAYSCREEN.OFS+1
  8127 4B94 6D 8F A4			adc XS+1
  8128 4B97 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  8129 4B99 AD A6 9A			lda PLAYSCREEN.OFS+2
  8130 4B9C 69 00			adc #$00
  8131 4B9E 85 C0			sta :STACKORIGIN+STACKWIDTH*2+10
  8132 4BA0 AD A7 9A			lda PLAYSCREEN.OFS+3
  8133 4BA3 69 00			adc #$00
  8134 4BA5 85 D0			sta :STACKORIGIN+STACKWIDTH*3+10
  8135 4BA7 A5 A0			lda :STACKORIGIN+10
  8136 4BA9 18 6D 8C A4			add X
  8137 4BAD 85 A0			sta :STACKORIGIN+10
  8138 4BAF A5 B0			lda :STACKORIGIN+STACKWIDTH+10
  8139 4BB1 69 00			adc #$00
  8140 4BB3 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  8141 4BB5 A5 C0			lda :STACKORIGIN+STACKWIDTH*2+10
  8142 4BB7 69 00			adc #$00
  8143 4BB9 85 C0			sta :STACKORIGIN+STACKWIDTH*2+10
  8144 4BBB A5 D0			lda :STACKORIGIN+STACKWIDTH*3+10
  8145 4BBD 69 00			adc #$00
  8146 4BBF 85 D0			sta :STACKORIGIN+STACKWIDTH*3+10
  8147 4BC1 AD 91 A4			lda YS+1
  8148 4BC4 85 B1			sta :STACKORIGIN+STACKWIDTH+11
  8149 4BC6 AD 90 A4			lda YS
  8150 4BC9 0A				asl @
  8151 4BCA 26 B1			rol :STACKORIGIN+STACKWIDTH+11
  8152 4BCC 18 6D DA 98			add ROW
  8153 4BD0 85 84			sta :bp2
  8154 4BD2 AD DB 98			lda ROW+1
  8155 4BD5 65 B1			adc :STACKORIGIN+STACKWIDTH+11
  8156 4BD7 85 85			sta :bp2+1
  8157 4BD9 A0 00			ldy #$00
  8158 4BDB A5 A0			lda :STACKORIGIN+10
  8159 4BDD 18 71 84			add (:bp2),y
  8160 4BE0 8D C0 A3			sta PUTBYTE.DST
  8161 4BE3 C8				iny
  8162 4BE4 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
  8163 4BE6 71 84			adc (:bp2),y
  8164 4BE8 8D C1 A3			sta PUTBYTE.DST+1
  8165 4BEB A5 C0			lda :STACKORIGIN+STACKWIDTH*2+10
  8166 4BED 69 00			adc #$00
  8167 4BEF 8D C2 A3			sta PUTBYTE.DST+2
  8168 4BF2 A5 D0			lda :STACKORIGIN+STACKWIDTH*3+10
  8169 4BF4 69 00			adc #$00
  8170 4BF6 8D C3 A3			sta PUTBYTE.DST+3
  8171 4BF9 AD 93 A4			lda CL2
  8172 4BFC 8D C4 A3			sta PUTBYTE.V
  8173 4BFF 20 95 26			jsr PUTBYTE
  8174
  8175 				; --- ForToDoEpilog
  8176 4C02 EE 8C A4			inc X
  8177 4C05 F0 03 4C 9B 4A		jne l_136E
  8178 4C0A			l_137C
  8179 4C0A			l_129D
  8180
  8181 				; ------------------------------------------------------------
  8182
  8183 = A489			XA	= DATAORIGIN+$0AB2
  8184 = A48A			YA	= DATAORIGIN+$0AB3
  8185 = A48B			BLOCK	= DATAORIGIN+$0AB4
  8186 = A48C			X	= DATAORIGIN+$0AB5
  8187 = A48D			Y	= DATAORIGIN+$0AB6
  8188 = A48E			XS	= DATAORIGIN+$0AB7
  8189 = A490			YS	= DATAORIGIN+$0AB9
  8190 = A492			CL	= DATAORIGIN+$0ABB
  8191 = A493			CL2	= DATAORIGIN+$0ABC
  8192 = A494			SHADOW	= DATAORIGIN+$0ABD
  8193
  8194 = A489			@VarData	= XA
  8195 = 000C			@VarDataSize	= 12
  8196
  8197 4C0A			@exit
  8198 					.ifdef @new
  8199 					lda <@VarData
  8200 					sta :ztmp
  8201 					lda >@VarData
  8202 					ldy #@VarDataSize-1
  8203 					jmp @FreeMem
  8204 					els
  8205 4C0A 60				rts						; ret
  8206 					eif
  8207 				.endl
  8208
  8209 4C0B			.local	PUT_WALL					; PROCEDURE
  8210
  8211 				; optimize OK (service.pas), line = 1410
  8212
  8213 4C0B A9 00			lda #$00
  8214 4C0D 8D 98 A4			sta Y
  8215
  8216 4C10			l_13E9
  8217 				; --- ForToDoCondition
  8218 4C10 AD 98 A4			lda Y
  8219 4C13 C9 0F			cmp #$0F
  8220 4C15 B0 48			jcs l_13F7
  8221
  8222 				; optimize OK (service.pas), line = 1411
  8223
  8224 4C17 A9 00			lda #$00
  8225 4C19 8D 97 A4			sta X
  8226
  8227 4C1C			l_1400
  8228 				; --- ForToDoCondition
  8229 4C1C AD 97 A4			lda X
  8230 4C1F C9 0D			cmp #$0D
  8231 4C21 B0 37			jcs l_140E
  8232
  8233 				; optimize OK (service.pas), line = 1412
  8234
  8235 4C23 AD 98 A4			lda Y
  8236 4C26 0A				asl @
  8237 4C27 0A				asl @
  8238 4C28 0A				asl @
  8239 4C29 0A				asl @
  8240 4C2A 18 6D 97 A4			add X
  8241 4C2E A8				tay
  8242 4C2F B9 00 DB			lda adr.WALL,y
  8243 4C32 F0 21			jeq l_142D
  8244 4C34 AD 98 A4			lda Y
  8245 4C37 0A				asl @
  8246 4C38 0A				asl @
  8247 4C39 0A				asl @
  8248 4C3A 0A				asl @
  8249 4C3B 18 6D 97 A4			add X
  8250 4C3F A8				tay
  8251 4C40 B9 00 DB			lda adr.WALL,y
  8252 4C43 8D 8B A4			sta PLACE_BLOCK.BLOCK
  8253 4C46 AD 97 A4			lda X
  8254 4C49 8D 89 A4			sta PLACE_BLOCK.XA
  8255 4C4C AD 98 A4			lda Y
  8256 4C4F 8D 8A A4			sta PLACE_BLOCK.YA
  8257 4C52 20 CA 44			jsr PLACE_BLOCK
  8258 4C55			l_142D
  8259
  8260 				; --- ForToDoEpilog
  8261 4C55 EE 97 A4			inc X
  8262 4C58 D0 C2			jne l_1400
  8263 4C5A			l_140E
  8264
  8265 				; --- ForToDoEpilog
  8266 4C5A EE 98 A4			inc Y
  8267 4C5D D0 B1			jne l_13E9
  8268 4C5F			l_13F7
  8269
  8270 				; ------------------------------------------------------------
  8271
  8272 = A497			X	= DATAORIGIN+$0AC0
  8273 = A498			Y	= DATAORIGIN+$0AC1
  8274
  8275 = A497			@VarData	= X
  8276 = 0002			@VarDataSize	= 2
  8277
  8278 4C5F			@exit
  8279 					.ifdef @new
  8280 					lda <@VarData
  8281 					sta :ztmp
  8282 					lda >@VarData
  8283 					ldy #@VarDataSize-1
  8284 					jmp @FreeMem
  8285 					els
  8286 4C5F 60				rts						; ret
  8287 					eif
  8288 				.endl
  8289
  8290 4C60			.local	SET_WALL					; PROCEDURE
  8291
  8292 				; optimize OK (service.pas), line = 1421
  8293
  8294 4C60 A9 00			lda #$00
  8295 4C62 8D 57 9B			sta REMAIN_BLK
  8296
  8297 				; optimize OK (service.pas), line = 1422
  8298
  8299 4C65 AC 74 9B			ldy CUR_PLAYER
  8300 4C68 B9 65 9B			lda adr.SCORE.WALL_N,y
  8301 4C6B 8D 9B A4			sta WL
  8302
  8303 				; optimize OK (service.pas), line = 1425
  8304
  8305 4C6E A9 00			lda #$00
  8306 4C70 8D 9A A4			sta Y
  8307
  8308 4C73			l_146B
  8309 				; --- ForToDoCondition
  8310 4C73 AD 9A A4			lda Y
  8311 4C76 C9 0F			cmp #$0F
  8312 4C78 B0 3D			jcs l_1479
  8313
  8314 				; optimize OK (service.pas), line = 1426
  8315
  8316 4C7A A9 00			lda #$00
  8317 4C7C 8D 99 A4			sta X
  8318
  8319 4C7F			l_1482
  8320 				; --- ForToDoCondition
  8321 4C7F AD 99 A4			lda X
  8322 4C82 C9 0D			cmp #$0D
  8323 4C84 B0 2C			jcs l_1490
  8324
  8325 				; optimize OK (service.pas), line = 1429
  8326
  8327 4C86 AD 9A A4			lda Y
  8328 4C89 0A				asl @
  8329 4C8A 0A				asl @
  8330 4C8B 0A				asl @
  8331 4C8C 0A				asl @
  8332 4C8D 18 6D 99 A4			add X
  8333 4C91 A8				tay
  8334 4C92 B9 00 DB			lda adr.WALL,y
  8335 4C95 F0 16			jeq l_14C8
  8336 4C97 AD 9A A4			lda Y
  8337 4C9A 0A				asl @
  8338 4C9B 0A				asl @
  8339 4C9C 0A				asl @
  8340 4C9D 0A				asl @
  8341 4C9E 18 6D 99 A4			add X
  8342 4CA2 A8				tay
  8343 4CA3 B9 00 DB			lda adr.WALL,y
  8344 4CA6 C9 0A			cmp #$0A
  8345 4CA8 F0 03			jeq l_14C8
  8346 4CAA EE 57 9B			inc REMAIN_BLK
  8347 4CAD			l_14C8
  8348
  8349 				; --- ForToDoEpilog
  8350 4CAD EE 99 A4			inc X
  8351 4CB0 D0 CD			jne l_1482
  8352 4CB2			l_1490
  8353
  8354 				; --- ForToDoEpilog
  8355 4CB2 EE 9A A4			inc Y
  8356 4CB5 D0 BC			jne l_146B
  8357 4CB7			l_1479
  8358
  8359 				; optimize OK (service.pas), line = 1431
  8360
  8361 4CB7 AD 9B A4			lda WL
  8362 4CBA 38 E9 01			sub #$01
  8363 4CBD 85 86			sta @SMALLINT.MOD.A
  8364 4CBF A9 00			lda #$00
  8365 4CC1 E9 00			sbc #$00
  8366 4CC3 85 87			sta @SMALLINT.MOD.A+1
  8367 4CC5 A9 04			lda #$04
  8368 4CC7 85 8E			sta @SMALLINT.MOD.B
  8369 4CC9 A9 00			lda #$00
  8370 4CCB 85 8F			sta @SMALLINT.MOD.B+1
  8371 4CCD 20 6F 12			jsr @SMALLINT.MOD
  8372 4CD0 A5 92			lda @SMALLINT.MOD.RESULT
  8373 4CD2 8D 9B A4			sta WL
  8374
  8375 				; optimize OK (service.pas), line = 1433
  8376
  8377 4CD5 8D 9C A4			sta @CASETMP_0007
  8378 4CD8 C9 00			cmp #$00
  8379 4CDA D0 33			jne l_14F2
  8380 				@
  8381
  8382 				; optimize OK (service.pas), line = 1434
  8383
  8384 4CDC AD 2D 9B 8D 25 9B + 	:8 mva adr.PATTERN0+# adr.PATTERN+#
  8385 4D0C 4C E8 4D			jmp a_0007
  8386 4D0F			l_14F2
  8387 4D0F C9 01			cmp #$01
  8388 4D11 D0 33			jne l_14FB
  8389
  8390 				; optimize OK (service.pas), line = 1435
  8391
  8392 4D13 AD 35 9B 8D 25 9B + 	:8 mva adr.PATTERN1+# adr.PATTERN+#
  8393 4D43 4C E8 4D			jmp a_0007
  8394 4D46			l_14FB
  8395 4D46 C9 02			cmp #$02
  8396 4D48 D0 33			jne l_1504
  8397
  8398 				; optimize OK (service.pas), line = 1436
  8399
  8400 4D4A AD 3D 9B 8D 25 9B + 	:8 mva adr.PATTERN2+# adr.PATTERN+#
  8401 4D7A 4C E8 4D			jmp a_0007
  8402 4D7D			l_1504
  8403 4D7D C9 03			cmp #$03
  8404 4D7F D0 33			jne l_150D
  8405
  8406 				; optimize OK (service.pas), line = 1437
  8407
  8408 4D81 AD 45 9B 8D 25 9B + 	:8 mva adr.PATTERN3+# adr.PATTERN+#
  8409 4DB1 4C E8 4D			jmp a_0007
  8410 4DB4			l_150D
  8411 4DB4 C9 04			cmp #$04
  8412 4DB6 D0 30			jne l_1516
  8413
  8414 				; optimize OK (service.pas), line = 1438
  8415
  8416 4DB8 AD 4D 9B 8D 25 9B + 	:8 mva adr.PATTERN4+# adr.PATTERN+#
  8417 4DE8			l_1516
  8418 4DE8			a_0007
  8419
  8420 				; ------------------------------------------------------------
  8421
  8422 = A499			X	= DATAORIGIN+$0AC2
  8423 = A49A			Y	= DATAORIGIN+$0AC3
  8424 = A49B			WL	= DATAORIGIN+$0AC4
  8425 = A49C			@CASETMP_0007	= DATAORIGIN+$0AC5
  8426
  8427 = A499			@VarData	= X
  8428 = 0004			@VarDataSize	= 4
  8429
  8430 4DE8			@exit
  8431 					.ifdef @new
  8432 					lda <@VarData
  8433 					sta :ztmp
  8434 					lda >@VarData
  8435 					ldy #@VarDataSize-1
  8436 					jmp @FreeMem
  8437 					els
  8438 4DE8 60				rts						; ret
  8439 					eif
  8440 				.endl
  8441
  8442 4DE9			.local	SPLIT_LINE					; FUNCTION
  8443
  8444 				; optimize OK (service.pas), line = 1477
  8445
  8446 4DE9 AC 9D A4 84 84 AC + 	mwy X1 :bp2
  8447 4DF3 A0 00			ldy #$00
  8448 4DF5 B1 84			lda (:bp2),y
  8449 4DF7 18 69 10			add #$10
  8450 4DFA 91 84			sta (:bp2),y
  8451 4DFC C8				iny
  8452 4DFD B1 84			lda (:bp2),y
  8453 4DFF 69 00			adc #$00
  8454 4E01 91 84			sta (:bp2),y
  8455
  8456 				; optimize OK (service.pas), line = 1478
  8457
  8458 4E03 AC 9F A4 84 84 AC + 	mwy Y1 :bp2
  8459 4E0D A0 00			ldy #$00
  8460 4E0F B1 84			lda (:bp2),y
  8461 4E11 18 69 18			add #$18
  8462 4E14 91 84			sta (:bp2),y
  8463 4E16 C8				iny
  8464 4E17 B1 84			lda (:bp2),y
  8465 4E19 69 00			adc #$00
  8466 4E1B 91 84			sta (:bp2),y
  8467
  8468 				; optimize OK (service.pas), line = 1479
  8469
  8470 4E1D AC A1 A4 84 84 AC + 	mwy X2 :bp2
  8471 4E27 A0 00			ldy #$00
  8472 4E29 B1 84			lda (:bp2),y
  8473 4E2B 18 69 10			add #$10
  8474 4E2E 91 84			sta (:bp2),y
  8475 4E30 C8				iny
  8476 4E31 B1 84			lda (:bp2),y
  8477 4E33 69 00			adc #$00
  8478 4E35 91 84			sta (:bp2),y
  8479
  8480 				; optimize OK (service.pas), line = 1480
  8481
  8482 4E37 AC A3 A4 84 84 AC + 	mwy Y2 :bp2
  8483 4E41 A0 00			ldy #$00
  8484 4E43 B1 84			lda (:bp2),y
  8485 4E45 18 69 18			add #$18
  8486 4E48 91 84			sta (:bp2),y
  8487 4E4A C8				iny
  8488 4E4B B1 84			lda (:bp2),y
  8489 4E4D 69 00			adc #$00
  8490 4E4F 91 84			sta (:bp2),y
  8491
  8492 				; optimize OK (service.pas), line = 1482
  8493
  8494 4E51 A9 00			lda #$00
  8495 4E53 8D C6 A4			sta COLLISION
  8496
  8497 				; optimize OK (service.pas), line = 1484
  8498
  8499 4E56 AC 9D A4 84 84 AC + 	mwy X1 :bp2
  8500 4E60 A0 00			ldy #$00
  8501 4E62 B1 84			lda (:bp2),y
  8502 4E64 85 9F			sta :STACKORIGIN+9
  8503 4E66 C8				iny
  8504 4E67 B1 84			lda (:bp2),y
  8505 4E69 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  8506 4E6B A0 00			ldy #$00
  8507 4E6D A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  8508 4E6F 10 01			spl
  8509 4E71 88				dey
  8510 4E72 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  8511 4E74 84 BF			sty :STACKORIGIN+STACKWIDTH*2+9
  8512 4E76 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
  8513 4E78 66 AF			ror :STACKORIGIN+STACKWIDTH+9
  8514 4E7A 66 9F			ror :STACKORIGIN+9
  8515 4E7C 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
  8516 4E7E 66 AF			ror :STACKORIGIN+STACKWIDTH+9
  8517 4E80 66 9F			ror :STACKORIGIN+9
  8518 4E82 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
  8519 4E84 66 AF			ror :STACKORIGIN+STACKWIDTH+9
  8520 4E86 66 9F			ror :STACKORIGIN+9
  8521 4E88 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
  8522 4E8A 66 AF			ror :STACKORIGIN+STACKWIDTH+9
  8523 4E8C 66 9F			ror :STACKORIGIN+9
  8524 4E8E A5 9F			lda :STACKORIGIN+9
  8525 4E90 8D BA A4			sta XP1
  8526 4E93 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  8527 4E95 8D BB A4			sta XP1+1
  8528
  8529 				; optimize OK (service.pas), line = 1485
  8530
  8531 4E98 AC 9F A4 84 84 AC + 	mwy Y1 :bp2
  8532 4EA2 A0 00			ldy #$00
  8533 4EA4 B1 84			lda (:bp2),y
  8534 4EA6 85 9F			sta :STACKORIGIN+9
  8535 4EA8 C8				iny
  8536 4EA9 B1 84			lda (:bp2),y
  8537 4EAB 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  8538 4EAD A0 00			ldy #$00
  8539 4EAF A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  8540 4EB1 10 01			spl
  8541 4EB3 88				dey
  8542 4EB4 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  8543 4EB6 84 BF			sty :STACKORIGIN+STACKWIDTH*2+9
  8544 4EB8 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
  8545 4EBA 66 AF			ror :STACKORIGIN+STACKWIDTH+9
  8546 4EBC 66 9F			ror :STACKORIGIN+9
  8547 4EBE 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
  8548 4EC0 66 AF			ror :STACKORIGIN+STACKWIDTH+9
  8549 4EC2 66 9F			ror :STACKORIGIN+9
  8550 4EC4 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
  8551 4EC6 66 AF			ror :STACKORIGIN+STACKWIDTH+9
  8552 4EC8 66 9F			ror :STACKORIGIN+9
  8553 4ECA A5 9F			lda :STACKORIGIN+9
  8554 4ECC 8D BC A4			sta YP1
  8555 4ECF A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  8556 4ED1 8D BD A4			sta YP1+1
  8557
  8558 				; optimize OK (service.pas), line = 1486
  8559
  8560 4ED4 AC A1 A4 84 84 AC + 	mwy X2 :bp2
  8561 4EDE A0 00			ldy #$00
  8562 4EE0 B1 84			lda (:bp2),y
  8563 4EE2 85 9F			sta :STACKORIGIN+9
  8564 4EE4 C8				iny
  8565 4EE5 B1 84			lda (:bp2),y
  8566 4EE7 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  8567 4EE9 A0 00			ldy #$00
  8568 4EEB A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  8569 4EED 10 01			spl
  8570 4EEF 88				dey
  8571 4EF0 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  8572 4EF2 84 BF			sty :STACKORIGIN+STACKWIDTH*2+9
  8573 4EF4 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
  8574 4EF6 66 AF			ror :STACKORIGIN+STACKWIDTH+9
  8575 4EF8 66 9F			ror :STACKORIGIN+9
  8576 4EFA 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
  8577 4EFC 66 AF			ror :STACKORIGIN+STACKWIDTH+9
  8578 4EFE 66 9F			ror :STACKORIGIN+9
  8579 4F00 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
  8580 4F02 66 AF			ror :STACKORIGIN+STACKWIDTH+9
  8581 4F04 66 9F			ror :STACKORIGIN+9
  8582 4F06 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
  8583 4F08 66 AF			ror :STACKORIGIN+STACKWIDTH+9
  8584 4F0A 66 9F			ror :STACKORIGIN+9
  8585 4F0C A5 9F			lda :STACKORIGIN+9
  8586 4F0E 8D BE A4			sta XP2
  8587 4F11 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  8588 4F13 8D BF A4			sta XP2+1
  8589
  8590 				; optimize OK (service.pas), line = 1487
  8591
  8592 4F16 AC A3 A4 84 84 AC + 	mwy Y2 :bp2
  8593 4F20 A0 00			ldy #$00
  8594 4F22 B1 84			lda (:bp2),y
  8595 4F24 85 9F			sta :STACKORIGIN+9
  8596 4F26 C8				iny
  8597 4F27 B1 84			lda (:bp2),y
  8598 4F29 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  8599 4F2B A0 00			ldy #$00
  8600 4F2D A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  8601 4F2F 10 01			spl
  8602 4F31 88				dey
  8603 4F32 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  8604 4F34 84 BF			sty :STACKORIGIN+STACKWIDTH*2+9
  8605 4F36 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
  8606 4F38 66 AF			ror :STACKORIGIN+STACKWIDTH+9
  8607 4F3A 66 9F			ror :STACKORIGIN+9
  8608 4F3C 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
  8609 4F3E 66 AF			ror :STACKORIGIN+STACKWIDTH+9
  8610 4F40 66 9F			ror :STACKORIGIN+9
  8611 4F42 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
  8612 4F44 66 AF			ror :STACKORIGIN+STACKWIDTH+9
  8613 4F46 66 9F			ror :STACKORIGIN+9
  8614 4F48 A5 9F			lda :STACKORIGIN+9
  8615 4F4A 8D C0 A4			sta YP2
  8616 4F4D A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  8617 4F4F 8D C1 A4			sta YP2+1
  8618
  8619 				; optimize OK (service.pas), line = 1489
  8620
  8621 4F52 AC 9D A4 84 84 AC + 	mwy X1 :bp2
  8622 4F5C A0 00			ldy #$00
  8623 4F5E B1 84			lda (:bp2),y
  8624 4F60 8D AA A4			sta XK
  8625 4F63 C8				iny
  8626 4F64 B1 84			lda (:bp2),y
  8627 4F66 8D AB A4			sta XK+1
  8628
  8629 				; optimize OK (service.pas), line = 1490
  8630
  8631 4F69 AC 9F A4 84 84 AC + 	mwy Y1 :bp2
  8632 4F73 A0 00			ldy #$00
  8633 4F75 B1 84			lda (:bp2),y
  8634 4F77 8D AC A4			sta YK
  8635 4F7A C8				iny
  8636 4F7B B1 84			lda (:bp2),y
  8637 4F7D 8D AD A4			sta YK+1
  8638
  8639 				; optimize OK (service.pas), line = 1491
  8640
  8641 4F80 AC A1 A4 84 84 AC + 	mwy X2 :bp2
  8642 4F8A A0 00			ldy #$00
  8643 4F8C B1 84			lda (:bp2),y
  8644 4F8E 8D AE A4			sta XJ
  8645 4F91 C8				iny
  8646 4F92 B1 84			lda (:bp2),y
  8647 4F94 8D AF A4			sta XJ+1
  8648
  8649 				; optimize OK (service.pas), line = 1492
  8650
  8651 4F97 AC A3 A4 84 84 AC + 	mwy Y2 :bp2
  8652 4FA1 A0 00			ldy #$00
  8653 4FA3 B1 84			lda (:bp2),y
  8654 4FA5 8D B0 A4			sta YJ
  8655 4FA8 C8				iny
  8656 4FA9 B1 84			lda (:bp2),y
  8657 4FAB 8D B1 A4			sta YJ+1
  8658
  8659 				; optimize OK (service.pas), line = 1494
  8660
  8661 4FAE AC 9D A4 84 84 AC + 	mwy X1 :bp2
  8662 4FB8 A0 00			ldy #$00
  8663 4FBA B1 84			lda (:bp2),y
  8664 4FBC 8D B2 A4			sta XH
  8665 4FBF C8				iny
  8666 4FC0 B1 84			lda (:bp2),y
  8667 4FC2 8D B3 A4			sta XH+1
  8668
  8669 				; optimize OK (service.pas), line = 1495
  8670
  8671 4FC5 AC 9F A4 84 84 AC + 	mwy Y1 :bp2
  8672 4FCF A0 00			ldy #$00
  8673 4FD1 B1 84			lda (:bp2),y
  8674 4FD3 8D B4 A4			sta YH
  8675 4FD6 C8				iny
  8676 4FD7 B1 84			lda (:bp2),y
  8677 4FD9 8D B5 A4			sta YH+1
  8678
  8679 				; optimize OK (service.pas), line = 1496
  8680
  8681 4FDC AC A1 A4 84 84 AC + 	mwy X2 :bp2
  8682 4FE6 A0 00			ldy #$00
  8683 4FE8 B1 84			lda (:bp2),y
  8684 4FEA 8D B6 A4			sta XN
  8685 4FED C8				iny
  8686 4FEE B1 84			lda (:bp2),y
  8687 4FF0 8D B7 A4			sta XN+1
  8688
  8689 				; optimize OK (service.pas), line = 1497
  8690
  8691 4FF3 AC A3 A4 84 84 AC + 	mwy Y2 :bp2
  8692 4FFD A0 00			ldy #$00
  8693 4FFF B1 84			lda (:bp2),y
  8694 5001 8D B8 A4			sta YN
  8695 5004 C8				iny
  8696 5005 B1 84			lda (:bp2),y
  8697 5007 8D B9 A4			sta YN+1
  8698
  8699 				; optimize OK (service.pas), line = 1504
  8700
  8701 500A AC 9D A4 84 84 AC + 	mwy X1 :bp2
  8702 5014 A0 00			ldy #$00
  8703 5016 B1 84			lda (:bp2),y
  8704 5018 85 9F			sta :STACKORIGIN+9
  8705 501A C8				iny
  8706 501B B1 84			lda (:bp2),y
  8707 501D 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  8708 501F AC A1 A4 84 84 AC + 	mwy X2 :bp2
  8709 5029 A0 00			ldy #$00
  8710 502B B1 84			lda (:bp2),y
  8711 502D 85 A0			sta :STACKORIGIN+10
  8712 502F C8				iny
  8713 5030 B1 84			lda (:bp2),y
  8714 5032 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  8715 5034 A0 00			ldy #$00
  8716 5036 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  8717 5038 10 01			spl
  8718 503A 88				dey
  8719 503B 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  8720 503D 84 BF			sty :STACKORIGIN+STACKWIDTH*2+9
  8721 503F 84 CF			sty :STACKORIGIN+STACKWIDTH*3+9
  8722 5041 A0 00			ldy #$00
  8723 5043 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
  8724 5045 10 01			spl
  8725 5047 88				dey
  8726 5048 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  8727 504A 84 C0			sty :STACKORIGIN+STACKWIDTH*2+10
  8728 504C 84 D0			sty :STACKORIGIN+STACKWIDTH*3+10
  8729 504E A5 9F			lda :STACKORIGIN+9
  8730 5050 38 E5 A0			sub :STACKORIGIN+10
  8731 5053 85 8A			sta SYSTEM.ABS.@010185000.X
  8732 5055 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  8733 5057 E5 B0			sbc :STACKORIGIN+STACKWIDTH+10
  8734 5059 85 8B			sta SYSTEM.ABS.@010185000.X+1
  8735 505B A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
  8736 505D E5 C0			sbc :STACKORIGIN+STACKWIDTH*2+10
  8737 505F 85 8C			sta SYSTEM.ABS.@010185000.X+2
  8738 5061 A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
  8739 5063 E5 D0			sbc :STACKORIGIN+STACKWIDTH*3+10
  8740 5065 85 8D			sta SYSTEM.ABS.@010185000.X+3
  8741 5067 20 B5 1B			jsr SYSTEM.ABS.@010185000
  8742 506A E8				inx
  8743 506B A0 01			ldy #1
  8744 506D				.LOCAL
  8745 506D A5 95			lda SYSTEM.ABS.@010185000.RESULT+3
  8746 506F 38 E9 00			sub #$00
  8747 5072 D0 1C			bne L4
  8748 5074 A5 94			lda SYSTEM.ABS.@010185000.RESULT+2
  8749 5076 C9 00			cmp #$00
  8750 5078 D0 0A			bne L1
  8751 507A A5 93			lda SYSTEM.ABS.@010185000.RESULT+1
  8752 507C C9 00			cmp #$00
  8753 507E D0 04			bne L1
  8754 5080 A5 92			lda SYSTEM.ABS.@010185000.RESULT
  8755 5082 C9 10			cmp #$10
  8756 5084 F0 10		L1	beq L5
  8757 5086 B0 04			bcs L3
  8758 5088 A9 FF			lda #$FF
  8759 508A D0 0A			bne L5
  8760 508C A9 01		L3	lda #$01
  8761 508E D0 06			bne L5
  8762 5090 50 04		L4	bvc L5
  8763 5092 49 FF			eor #$FF
  8764 5094 09 01			ora #$01
  8765 5096			L5
  8766 					.ENDL
  8767 5096 F0 02			seq
  8768 5098 10 01			bpl @+
  8769 509A 88				dey
  8770 				@
  8771 509B 94 96			sty :STACKORIGIN,x
  8772 509D AC A3 A4 84 84 AC + 	mwy Y2 :bp2
  8773 50A7 A0 00			ldy #$00
  8774 50A9 B1 84			lda (:bp2),y
  8775 50AB 85 9F			sta :STACKORIGIN+9
  8776 50AD C8				iny
  8777 50AE B1 84			lda (:bp2),y
  8778 50B0 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  8779 50B2 AC 9F A4 84 84 AC + 	mwy Y1 :bp2
  8780 50BC A0 00			ldy #$00
  8781 50BE B1 84			lda (:bp2),y
  8782 50C0 85 A0			sta :STACKORIGIN+10
  8783 50C2 C8				iny
  8784 50C3 B1 84			lda (:bp2),y
  8785 50C5 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  8786 50C7 A0 00			ldy #$00
  8787 50C9 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  8788 50CB 10 01			spl
  8789 50CD 88				dey
  8790 50CE 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  8791 50D0 84 BF			sty :STACKORIGIN+STACKWIDTH*2+9
  8792 50D2 84 CF			sty :STACKORIGIN+STACKWIDTH*3+9
  8793 50D4 A0 00			ldy #$00
  8794 50D6 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
  8795 50D8 10 01			spl
  8796 50DA 88				dey
  8797 50DB 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  8798 50DD 84 C0			sty :STACKORIGIN+STACKWIDTH*2+10
  8799 50DF 84 D0			sty :STACKORIGIN+STACKWIDTH*3+10
  8800 50E1 A5 9F			lda :STACKORIGIN+9
  8801 50E3 38 E5 A0			sub :STACKORIGIN+10
  8802 50E6 85 8A			sta SYSTEM.ABS.@010185000.X
  8803 50E8 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  8804 50EA E5 B0			sbc :STACKORIGIN+STACKWIDTH+10
  8805 50EC 85 8B			sta SYSTEM.ABS.@010185000.X+1
  8806 50EE A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
  8807 50F0 E5 C0			sbc :STACKORIGIN+STACKWIDTH*2+10
  8808 50F2 85 8C			sta SYSTEM.ABS.@010185000.X+2
  8809 50F4 A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
  8810 50F6 E5 D0			sbc :STACKORIGIN+STACKWIDTH*3+10
  8811 50F8 85 8D			sta SYSTEM.ABS.@010185000.X+3
  8812 50FA 20 B5 1B			jsr SYSTEM.ABS.@010185000
  8813 50FD CA				dex
  8814 50FE A0 01			ldy #1
  8815 5100				.LOCAL
  8816 5100 A5 95			lda SYSTEM.ABS.@010185000.RESULT+3
  8817 5102 38 E9 00			sub #$00
  8818 5105 D0 1C			bne L4
  8819 5107 A5 94			lda SYSTEM.ABS.@010185000.RESULT+2
  8820 5109 C9 00			cmp #$00
  8821 510B D0 0A			bne L1
  8822 510D A5 93			lda SYSTEM.ABS.@010185000.RESULT+1
  8823 510F C9 00			cmp #$00
  8824 5111 D0 04			bne L1
  8825 5113 A5 92			lda SYSTEM.ABS.@010185000.RESULT
  8826 5115 C9 08			cmp #$08
  8827 5117 F0 10		L1	beq L5
  8828 5119 B0 04			bcs L3
  8829 511B A9 FF			lda #$FF
  8830 511D D0 0A			bne L5
  8831 511F A9 01		L3	lda #$01
  8832 5121 D0 06			bne L5
  8833 5123 50 04		L4	bvc L5
  8834 5125 49 FF			eor #$FF
  8835 5127 09 01			ora #$01
  8836 5129			L5
  8837 					.ENDL
  8838 5129 F0 02			seq
  8839 512B 10 01			bpl @+
  8840 512D 88				dey
  8841 				@
  8842 512E 98				tya
  8843 512F 15 97			ora :STACKORIGIN+1,x
  8844 5131 F0 05			jeq l_159F
  8845
  8846 				; optimize OK (service.pas), line = 1505
  8847
  8848 5133 A9 01			lda #$01
  8849 5135 20 19 27			jsr FATAL_ERROR
  8850 5138			l_159F
  8851
  8852 				; optimize OK (service.pas), line = 1508
  8853
  8854 5138 AD BB A4			lda XP1+1
  8855 513B CD BF A4			cmp XP2+1
  8856 513E D0 06			bne @+
  8857 5140 AD BA A4			lda XP1
  8858 5143 CD BE A4			cmp XP2
  8859 				@
  8860 5146 D0 13			jne l_15C2x
  8861 5148 AD BD A4			lda YP1+1
  8862 514B CD C1 A4			cmp YP2+1
  8863 514E D0 06			bne @+
  8864 5150 AD BC A4			lda YP1
  8865 5153 CD C0 A4			cmp YP2
  8866 				@
  8867 5156 D0 03 4C BF 54		jeq l_15C2
  8868 515B			l_15C2x
  8869
  8870 				; optimize OK (service.pas), line = 1510
  8871
  8872 515B AD BD A4			lda YP1+1
  8873 515E CD C1 A4			cmp YP2+1
  8874 5161 D0 06			bne @+
  8875 5163 AD BC A4			lda YP1
  8876 5166 CD C0 A4			cmp YP2
  8877 				@
  8878 5169 D0 03 4C B7 52		jeq l_15D5
  8879
  8880 				; optimize OK (service.pas), line = 1512
  8881
  8882 516E AD C6 A4			lda COLLISION
  8883 5171 09 01			ora #$01
  8884 5173 8D C6 A4			sta COLLISION
  8885
  8886 				; --- WhileProlog
  8887 5176 4C 91 52			jmp l_15E2
  8888 5179			l_15E3
  8889
  8890 				; optimize OK (service.pas), line = 1516
  8891
  8892 5179 AD B2 A4			lda XH
  8893 517C 85 9F			sta :STACKORIGIN+9
  8894 517E A0 00			ldy #$00
  8895 5180 AD B3 A4			lda XH+1
  8896 5183 10 01			spl
  8897 5185 88				dey
  8898 5186 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  8899 5188 84 BF			sty :STACKORIGIN+STACKWIDTH*2+9
  8900 518A 84 CF			sty :STACKORIGIN+STACKWIDTH*3+9
  8901 518C AD B6 A4			lda XN
  8902 518F 85 A0			sta :STACKORIGIN+10
  8903 5191 A0 00			ldy #$00
  8904 5193 AD B7 A4			lda XN+1
  8905 5196 10 01			spl
  8906 5198 88				dey
  8907 5199 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  8908 519B 84 C0			sty :STACKORIGIN+STACKWIDTH*2+10
  8909 519D 84 D0			sty :STACKORIGIN+STACKWIDTH*3+10
  8910 519F A5 9F			lda :STACKORIGIN+9
  8911 51A1 18 65 A0			add :STACKORIGIN+10
  8912 51A4 85 9F			sta :STACKORIGIN+9
  8913 51A6 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  8914 51A8 65 B0			adc :STACKORIGIN+STACKWIDTH+10
  8915 51AA 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  8916 51AC A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
  8917 51AE 65 C0			adc :STACKORIGIN+STACKWIDTH*2+10
  8918 51B0 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
  8919 51B2 A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
  8920 51B4 65 D0			adc :STACKORIGIN+STACKWIDTH*3+10
  8921 51B6 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
  8922 51B8 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
  8923 51BA 66 AF			ror :STACKORIGIN+STACKWIDTH+9
  8924 51BC 66 9F			ror :STACKORIGIN+9
  8925 51BE A5 9F			lda :STACKORIGIN+9
  8926 51C0 8D A6 A4			sta X
  8927 51C3 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  8928 51C5 8D A7 A4			sta X+1
  8929
  8930 				; optimize OK (service.pas), line = 1517
  8931
  8932 51C8 AD B4 A4			lda YH
  8933 51CB 85 9F			sta :STACKORIGIN+9
  8934 51CD A0 00			ldy #$00
  8935 51CF AD B5 A4			lda YH+1
  8936 51D2 10 01			spl
  8937 51D4 88				dey
  8938 51D5 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  8939 51D7 84 BF			sty :STACKORIGIN+STACKWIDTH*2+9
  8940 51D9 84 CF			sty :STACKORIGIN+STACKWIDTH*3+9
  8941 51DB AD B8 A4			lda YN
  8942 51DE 85 A0			sta :STACKORIGIN+10
  8943 51E0 A0 00			ldy #$00
  8944 51E2 AD B9 A4			lda YN+1
  8945 51E5 10 01			spl
  8946 51E7 88				dey
  8947 51E8 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  8948 51EA 84 C0			sty :STACKORIGIN+STACKWIDTH*2+10
  8949 51EC 84 D0			sty :STACKORIGIN+STACKWIDTH*3+10
  8950 51EE A5 9F			lda :STACKORIGIN+9
  8951 51F0 18 65 A0			add :STACKORIGIN+10
  8952 51F3 85 9F			sta :STACKORIGIN+9
  8953 51F5 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  8954 51F7 65 B0			adc :STACKORIGIN+STACKWIDTH+10
  8955 51F9 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  8956 51FB A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
  8957 51FD 65 C0			adc :STACKORIGIN+STACKWIDTH*2+10
  8958 51FF 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
  8959 5201 A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
  8960 5203 65 D0			adc :STACKORIGIN+STACKWIDTH*3+10
  8961 5205 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
  8962 5207 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
  8963 5209 66 AF			ror :STACKORIGIN+STACKWIDTH+9
  8964 520B 66 9F			ror :STACKORIGIN+9
  8965 520D A5 9F			lda :STACKORIGIN+9
  8966 520F 8D A8 A4			sta Y
  8967 5212 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  8968 5214 8D A9 A4			sta Y+1
  8969
  8970 				; optimize OK (service.pas), line = 1519
  8971
  8972 5217 AD A8 A4			lda Y
  8973 521A 85 9F			sta :STACKORIGIN+9
  8974 521C A0 00			ldy #$00
  8975 521E AD A9 A4			lda Y+1
  8976 5221 10 01			spl
  8977 5223 88				dey
  8978 5224 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  8979 5226 84 BF			sty :STACKORIGIN+STACKWIDTH*2+9
  8980 5228 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
  8981 522A 66 AF			ror :STACKORIGIN+STACKWIDTH+9
  8982 522C 66 9F			ror :STACKORIGIN+9
  8983 522E 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
  8984 5230 66 AF			ror :STACKORIGIN+STACKWIDTH+9
  8985 5232 66 9F			ror :STACKORIGIN+9
  8986 5234 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
  8987 5236 66 AF			ror :STACKORIGIN+STACKWIDTH+9
  8988 5238 66 9F			ror :STACKORIGIN+9
  8989 523A A5 9F			lda :STACKORIGIN+9
  8990 523C 8D C4 A4			sta YP
  8991 523F A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  8992 5241 8D C5 A4			sta YP+1
  8993
  8994 				; optimize OK (service.pas), line = 1521
  8995
  8996 5244 CD BD A4			cmp YP1+1
  8997 5247 D0 06			bne @+
  8998 5249 AD C4 A4			lda YP
  8999 524C CD BC A4			cmp YP1
  9000 				@
  9001 524F D0 18			jne l_161A
  9002
  9003 				; optimize OK (service.pas), line = 1523
  9004
  9005 5251 AD A6 A4			lda X
  9006 5254 8D B2 A4			sta XH
  9007 5257 AD A7 A4			lda X+1
  9008 525A 8D B3 A4			sta XH+1
  9009
  9010 				; optimize OK (service.pas), line = 1524
  9011
  9012 525D AD A8 A4			lda Y
  9013 5260 8D B4 A4			sta YH
  9014 5263 AD A9 A4			lda Y+1
  9015 5266 8D B5 A4			sta YH+1
  9016 5269			l_161A
  9017
  9018 				; optimize OK (service.pas), line = 1527
  9019
  9020 5269 AD C5 A4			lda YP+1
  9021 526C CD C1 A4			cmp YP2+1
  9022 526F D0 06			bne @+
  9023 5271 AD C4 A4			lda YP
  9024 5274 CD C0 A4			cmp YP2
  9025 				@
  9026 5277 D0 18			jne l_1639
  9027
  9028 				; optimize OK (service.pas), line = 1529
  9029
  9030 5279 AD A6 A4			lda X
  9031 527C 8D B6 A4			sta XN
  9032 527F AD A7 A4			lda X+1
  9033 5282 8D B7 A4			sta XN+1
  9034
  9035 				; optimize OK (service.pas), line = 1530
  9036
  9037 5285 AD A8 A4			lda Y
  9038 5288 8D B8 A4			sta YN
  9039 528B AD A9 A4			lda Y+1
  9040 528E 8D B9 A4			sta YN+1
  9041 5291			l_1639
  9042 5291			l_15E2
  9043
  9044 				; optimize OK (service.pas), line = 1514
  9045
  9046 5291 AD B8 A4			lda YN
  9047 5294 29 07			and #$07
  9048 5296 85 9F			sta :STACKORIGIN+9
  9049 5298 A0 01			ldy #1
  9050 529A A9 00			lda #$00
  9051 529C 05 9F			ora :STACKORIGIN+9
  9052 529E D0 01			bne @+
  9053 52A0 88				dey
  9054 				@
  9055 52A1 84 9F			sty :STACKORIGIN+9
  9056 52A3 AD B8 A4			lda YN
  9057 52A6 A0 01			ldy #1
  9058 52A8 29 07			and #$07
  9059 52AA C9 07			cmp #$07
  9060 				@
  9061 52AC D0 01			bne @+
  9062 52AE 88				dey
  9063 				@
  9064 52AF 98				tya
  9065 52B0 25 9F			and :STACKORIGIN+9
  9066 52B2 F0 03 4C 79 51		jne l_15E3
  9067 52B7			l_15D5
  9068
  9069 				; optimize OK (service.pas), line = 1536
  9070
  9071 52B7 AD BB A4			lda XP1+1
  9072 52BA CD BF A4			cmp XP2+1
  9073 52BD D0 06			bne @+
  9074 52BF AD BA A4			lda XP1
  9075 52C2 CD BE A4			cmp XP2
  9076 				@
  9077 52C5 D0 03 4C 19 54		jeq l_1678
  9078
  9079 				; optimize OK (service.pas), line = 1538
  9080
  9081 52CA AD C6 A4			lda COLLISION
  9082 52CD 09 02			ora #$02
  9083 52CF 8D C6 A4			sta COLLISION
  9084
  9085 				; --- WhileProlog
  9086 52D2 4C F3 53			jmp l_1685
  9087 52D5			l_1686
  9088
  9089 				; optimize OK (service.pas), line = 1542
  9090
  9091 52D5 AD AA A4			lda XK
  9092 52D8 85 9F			sta :STACKORIGIN+9
  9093 52DA A0 00			ldy #$00
  9094 52DC AD AB A4			lda XK+1
  9095 52DF 10 01			spl
  9096 52E1 88				dey
  9097 52E2 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  9098 52E4 84 BF			sty :STACKORIGIN+STACKWIDTH*2+9
  9099 52E6 84 CF			sty :STACKORIGIN+STACKWIDTH*3+9
  9100 52E8 AD AE A4			lda XJ
  9101 52EB 85 A0			sta :STACKORIGIN+10
  9102 52ED A0 00			ldy #$00
  9103 52EF AD AF A4			lda XJ+1
  9104 52F2 10 01			spl
  9105 52F4 88				dey
  9106 52F5 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  9107 52F7 84 C0			sty :STACKORIGIN+STACKWIDTH*2+10
  9108 52F9 84 D0			sty :STACKORIGIN+STACKWIDTH*3+10
  9109 52FB A5 9F			lda :STACKORIGIN+9
  9110 52FD 18 65 A0			add :STACKORIGIN+10
  9111 5300 85 9F			sta :STACKORIGIN+9
  9112 5302 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  9113 5304 65 B0			adc :STACKORIGIN+STACKWIDTH+10
  9114 5306 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  9115 5308 A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
  9116 530A 65 C0			adc :STACKORIGIN+STACKWIDTH*2+10
  9117 530C 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
  9118 530E A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
  9119 5310 65 D0			adc :STACKORIGIN+STACKWIDTH*3+10
  9120 5312 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
  9121 5314 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
  9122 5316 66 AF			ror :STACKORIGIN+STACKWIDTH+9
  9123 5318 66 9F			ror :STACKORIGIN+9
  9124 531A A5 9F			lda :STACKORIGIN+9
  9125 531C 8D A6 A4			sta X
  9126 531F A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  9127 5321 8D A7 A4			sta X+1
  9128
  9129 				; optimize OK (service.pas), line = 1543
  9130
  9131 5324 AD AC A4			lda YK
  9132 5327 85 9F			sta :STACKORIGIN+9
  9133 5329 A0 00			ldy #$00
  9134 532B AD AD A4			lda YK+1
  9135 532E 10 01			spl
  9136 5330 88				dey
  9137 5331 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  9138 5333 84 BF			sty :STACKORIGIN+STACKWIDTH*2+9
  9139 5335 84 CF			sty :STACKORIGIN+STACKWIDTH*3+9
  9140 5337 AD B0 A4			lda YJ
  9141 533A 85 A0			sta :STACKORIGIN+10
  9142 533C A0 00			ldy #$00
  9143 533E AD B1 A4			lda YJ+1
  9144 5341 10 01			spl
  9145 5343 88				dey
  9146 5344 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  9147 5346 84 C0			sty :STACKORIGIN+STACKWIDTH*2+10
  9148 5348 84 D0			sty :STACKORIGIN+STACKWIDTH*3+10
  9149 534A A5 9F			lda :STACKORIGIN+9
  9150 534C 18 65 A0			add :STACKORIGIN+10
  9151 534F 85 9F			sta :STACKORIGIN+9
  9152 5351 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  9153 5353 65 B0			adc :STACKORIGIN+STACKWIDTH+10
  9154 5355 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  9155 5357 A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
  9156 5359 65 C0			adc :STACKORIGIN+STACKWIDTH*2+10
  9157 535B 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
  9158 535D A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
  9159 535F 65 D0			adc :STACKORIGIN+STACKWIDTH*3+10
  9160 5361 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
  9161 5363 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
  9162 5365 66 AF			ror :STACKORIGIN+STACKWIDTH+9
  9163 5367 66 9F			ror :STACKORIGIN+9
  9164 5369 A5 9F			lda :STACKORIGIN+9
  9165 536B 8D A8 A4			sta Y
  9166 536E A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  9167 5370 8D A9 A4			sta Y+1
  9168
  9169 				; optimize OK (service.pas), line = 1545
  9170
  9171 5373 AD A6 A4			lda X
  9172 5376 85 9F			sta :STACKORIGIN+9
  9173 5378 A0 00			ldy #$00
  9174 537A AD A7 A4			lda X+1
  9175 537D 10 01			spl
  9176 537F 88				dey
  9177 5380 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  9178 5382 84 BF			sty :STACKORIGIN+STACKWIDTH*2+9
  9179 5384 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
  9180 5386 66 AF			ror :STACKORIGIN+STACKWIDTH+9
  9181 5388 66 9F			ror :STACKORIGIN+9
  9182 538A 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
  9183 538C 66 AF			ror :STACKORIGIN+STACKWIDTH+9
  9184 538E 66 9F			ror :STACKORIGIN+9
  9185 5390 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
  9186 5392 66 AF			ror :STACKORIGIN+STACKWIDTH+9
  9187 5394 66 9F			ror :STACKORIGIN+9
  9188 5396 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
  9189 5398 66 AF			ror :STACKORIGIN+STACKWIDTH+9
  9190 539A 66 9F			ror :STACKORIGIN+9
  9191 539C A5 9F			lda :STACKORIGIN+9
  9192 539E 8D C2 A4			sta XP
  9193 53A1 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  9194 53A3 8D C3 A4			sta XP+1
  9195
  9196 				; optimize OK (service.pas), line = 1547
  9197
  9198 53A6 CD BB A4			cmp XP1+1
  9199 53A9 D0 06			bne @+
  9200 53AB AD C2 A4			lda XP
  9201 53AE CD BA A4			cmp XP1
  9202 				@
  9203 53B1 D0 18			jne l_16BD
  9204
  9205 				; optimize OK (service.pas), line = 1549
  9206
  9207 53B3 AD A6 A4			lda X
  9208 53B6 8D AA A4			sta XK
  9209 53B9 AD A7 A4			lda X+1
  9210 53BC 8D AB A4			sta XK+1
  9211
  9212 				; optimize OK (service.pas), line = 1550
  9213
  9214 53BF AD A8 A4			lda Y
  9215 53C2 8D AC A4			sta YK
  9216 53C5 AD A9 A4			lda Y+1
  9217 53C8 8D AD A4			sta YK+1
  9218 53CB			l_16BD
  9219
  9220 				; optimize OK (service.pas), line = 1553
  9221
  9222 53CB AD C3 A4			lda XP+1
  9223 53CE CD BF A4			cmp XP2+1
  9224 53D1 D0 06			bne @+
  9225 53D3 AD C2 A4			lda XP
  9226 53D6 CD BE A4			cmp XP2
  9227 				@
  9228 53D9 D0 18			jne l_16DC
  9229
  9230 				; optimize OK (service.pas), line = 1555
  9231
  9232 53DB AD A6 A4			lda X
  9233 53DE 8D AE A4			sta XJ
  9234 53E1 AD A7 A4			lda X+1
  9235 53E4 8D AF A4			sta XJ+1
  9236
  9237 				; optimize OK (service.pas), line = 1556
  9238
  9239 53E7 AD A8 A4			lda Y
  9240 53EA 8D B0 A4			sta YJ
  9241 53ED AD A9 A4			lda Y+1
  9242 53F0 8D B1 A4			sta YJ+1
  9243 53F3			l_16DC
  9244 53F3			l_1685
  9245
  9246 				; optimize OK (service.pas), line = 1540
  9247
  9248 53F3 AD AE A4			lda XJ
  9249 53F6 29 0F			and #$0F
  9250 53F8 85 9F			sta :STACKORIGIN+9
  9251 53FA A0 01			ldy #1
  9252 53FC A9 00			lda #$00
  9253 53FE 05 9F			ora :STACKORIGIN+9
  9254 5400 D0 01			bne @+
  9255 5402 88				dey
  9256 				@
  9257 5403 84 9F			sty :STACKORIGIN+9
  9258 5405 AD AE A4			lda XJ
  9259 5408 A0 01			ldy #1
  9260 540A 29 0F			and #$0F
  9261 540C C9 0F			cmp #$0F
  9262 				@
  9263 540E D0 01			bne @+
  9264 5410 88				dey
  9265 				@
  9266 5411 98				tya
  9267 5412 25 9F			and :STACKORIGIN+9
  9268 5414 F0 03 4C D5 52		jne l_1686
  9269 5419			l_1678
  9270
  9271 				; optimize OK (service.pas), line = 1567
  9272
  9273 5419 AD C6 A4			lda COLLISION
  9274 541C C9 01			cmp #$01
  9275 541E D0 03			jne l_171B
  9276 				; optimize OK (service.pas), line = 1569
  9277 				; optimize OK (service.pas), line = 1570
  9278 5420 4C 8E 54			jmp l_172F
  9279 5423			l_171B
  9280
  9281 				; optimize OK (service.pas), line = 1572
  9282
  9283 5423 AD C6 A4			lda COLLISION
  9284 5426 C9 02			cmp #$02
  9285 5428 D0 2F			jne l_1741
  9286
  9287 				; optimize OK (service.pas), line = 1574
  9288
  9289 542A AC A1 A4 84 84 AC + 	mwy X2 :bp2
  9290 5434 A0 00			ldy #$00
  9291 5436 AD AE A4			lda XJ
  9292 5439 91 84			sta (:bp2),y
  9293 543B C8				iny
  9294 543C AD AF A4			lda XJ+1
  9295 543F 91 84			sta (:bp2),y
  9296
  9297 				; optimize OK (service.pas), line = 1575
  9298
  9299 5441 AC A3 A4 84 84 AC + 	mwy Y2 :bp2
  9300 544B A0 00			ldy #$00
  9301 544D AD B0 A4			lda YJ
  9302 5450 91 84			sta (:bp2),y
  9303 5452 C8				iny
  9304 5453 AD B1 A4			lda YJ+1
  9305 5456 4C BA 54			jmp l_1755
  9306 5459			l_1741
  9307
  9308 				; optimize OK (service.pas), line = 1577
  9309
  9310 5459 AD C6 A4			lda COLLISION
  9311 545C C9 03			cmp #$03
  9312 545E D0 5C			jne l_1767
  9313
  9314 				; optimize OK (service.pas), line = 1579
  9315
  9316 5460 AC 9D A4 84 84 AC + 	mwy X1 :bp2
  9317 546A A0 00			ldy #$00
  9318 546C AD AE A4			lda XJ
  9319 546F 91 84			sta (:bp2),y
  9320 5471 C8				iny
  9321 5472 AD AF A4			lda XJ+1
  9322 5475 91 84			sta (:bp2),y
  9323
  9324 				; optimize OK (service.pas), line = 1580
  9325
  9326 5477 AC 9F A4 84 84 AC + 	mwy Y1 :bp2
  9327 5481 A0 00			ldy #$00
  9328 5483 AD B0 A4			lda YJ
  9329 5486 91 84			sta (:bp2),y
  9330 5488 C8				iny
  9331 5489 AD B1 A4			lda YJ+1
  9332 548C 91 84			sta (:bp2),y
  9333 548E			l_172F
  9334
  9335 				; optimize OK (service.pas), line = 1581
  9336
  9337 548E AC A1 A4 84 84 AC + 	mwy X2 :bp2
  9338 5498 A0 00			ldy #$00
  9339 549A AD B6 A4			lda XN
  9340 549D 91 84			sta (:bp2),y
  9341 549F C8				iny
  9342 54A0 AD B7 A4			lda XN+1
  9343 54A3 91 84			sta (:bp2),y
  9344
  9345 				; optimize OK (service.pas), line = 1582
  9346
  9347 54A5 AC A3 A4 84 84 AC + 	mwy Y2 :bp2
  9348 54AF A0 00			ldy #$00
  9349 54B1 AD B8 A4			lda YN
  9350 54B4 91 84			sta (:bp2),y
  9351 54B6 C8				iny
  9352 54B7 AD B9 A4			lda YN+1
  9353 54BA			l_1755
  9354 54BA 91 84			sta (:bp2),y
  9355 54BC			l_1767
  9356 54BC 4C C4 54			jmp l_1787
  9357 54BF			l_15C2
  9358
  9359 				; optimize OK (service.pas), line = 1587
  9360
  9361 54BF A9 02			lda #$02
  9362 54C1 20 19 27			jsr FATAL_ERROR
  9363 54C4			l_1787
  9364
  9365 				; optimize OK (service.pas), line = 1590
  9366
  9367 54C4 AC 9D A4 84 84 AC + 	mwy X1 :bp2
  9368 54CE A0 00			ldy #$00
  9369 54D0 B1 84			lda (:bp2),y
  9370 54D2 38 E9 10			sub #$10
  9371 54D5 91 84			sta (:bp2),y
  9372 54D7 C8				iny
  9373 54D8 B1 84			lda (:bp2),y
  9374 54DA E9 00			sbc #$00
  9375 54DC 91 84			sta (:bp2),y
  9376
  9377 				; optimize OK (service.pas), line = 1591
  9378
  9379 54DE AC 9F A4 84 84 AC + 	mwy Y1 :bp2
  9380 54E8 A0 00			ldy #$00
  9381 54EA B1 84			lda (:bp2),y
  9382 54EC 38 E9 18			sub #$18
  9383 54EF 91 84			sta (:bp2),y
  9384 54F1 C8				iny
  9385 54F2 B1 84			lda (:bp2),y
  9386 54F4 E9 00			sbc #$00
  9387 54F6 91 84			sta (:bp2),y
  9388
  9389 				; optimize OK (service.pas), line = 1592
  9390
  9391 54F8 AC A1 A4 84 84 AC + 	mwy X2 :bp2
  9392 5502 A0 00			ldy #$00
  9393 5504 B1 84			lda (:bp2),y
  9394 5506 38 E9 10			sub #$10
  9395 5509 91 84			sta (:bp2),y
  9396 550B C8				iny
  9397 550C B1 84			lda (:bp2),y
  9398 550E E9 00			sbc #$00
  9399 5510 91 84			sta (:bp2),y
  9400
  9401 				; optimize OK (service.pas), line = 1593
  9402
  9403 5512 AC A3 A4 84 84 AC + 	mwy Y2 :bp2
  9404 551C A0 00			ldy #$00
  9405 551E B1 84			lda (:bp2),y
  9406 5520 38 E9 18			sub #$18
  9407 5523 91 84			sta (:bp2),y
  9408 5525 C8				iny
  9409 5526 B1 84			lda (:bp2),y
  9410 5528 E9 00			sbc #$00
  9411 552A 91 84			sta (:bp2),y
  9412
  9413 				; optimize OK (service.pas), line = 1596
  9414
  9415 552C AC 9D A4 84 84 AC + 	mwy X1 :bp2
  9416 5536 A0 00			ldy #$00
  9417 5538 B1 84			lda (:bp2),y
  9418 553A 8D CE A3			sta MAX.B
  9419 553D C8				iny
  9420 553E B1 84			lda (:bp2),y
  9421 5540 8D CF A3			sta MAX.B+1
  9422 5543 A9 00			lda #$00
  9423 5545 8D CC A3			sta MAX.A
  9424 5548 8D CD A3			sta MAX.A+1
  9425 554B 20 C3 26			jsr MAX
  9426 554E A9 CF			lda #$CF
  9427 5550 8D D2 A3			sta MIN.A
  9428 5553 A9 00			lda #$00
  9429 5555 8D D3 A3			sta MIN.A+1
  9430 5558 AD D0 A3			lda MAX.RESULT
  9431 555B 8D D4 A3			sta MIN.B
  9432 555E AD D1 A3			lda MAX.RESULT+1
  9433 5561 8D D5 A3			sta MIN.B+1
  9434 5564 20 EE 26			jsr MIN
  9435 5567 AC 9D A4 84 84 AC + 	mwy X1 :bp2
  9436 5571 A0 00			ldy #$00
  9437 5573 AD D6 A3			lda MIN.RESULT
  9438 5576 91 84			sta (:bp2),y
  9439 5578 C8				iny
  9440 5579 AD D7 A3			lda MIN.RESULT+1
  9441 557C 91 84			sta (:bp2),y
  9442
  9443 				; optimize OK (service.pas), line = 1597
  9444
  9445 557E AC A1 A4 84 84 AC + 	mwy X2 :bp2
  9446 5588 A0 00			ldy #$00
  9447 558A B1 84			lda (:bp2),y
  9448 558C 8D CE A3			sta MAX.B
  9449 558F C8				iny
  9450 5590 B1 84			lda (:bp2),y
  9451 5592 8D CF A3			sta MAX.B+1
  9452 5595 A9 00			lda #$00
  9453 5597 8D CC A3			sta MAX.A
  9454 559A 8D CD A3			sta MAX.A+1
  9455 559D 20 C3 26			jsr MAX
  9456 55A0 A9 CF			lda #$CF
  9457 55A2 8D D2 A3			sta MIN.A
  9458 55A5 A9 00			lda #$00
  9459 55A7 8D D3 A3			sta MIN.A+1
  9460 55AA AD D0 A3			lda MAX.RESULT
  9461 55AD 8D D4 A3			sta MIN.B
  9462 55B0 AD D1 A3			lda MAX.RESULT+1
  9463 55B3 8D D5 A3			sta MIN.B+1
  9464 55B6 20 EE 26			jsr MIN
  9465 55B9 AC A1 A4 84 84 AC + 	mwy X2 :bp2
  9466 55C3 A0 00			ldy #$00
  9467 55C5 AD D6 A3			lda MIN.RESULT
  9468 55C8 91 84			sta (:bp2),y
  9469 55CA C8				iny
  9470 55CB AD D7 A3			lda MIN.RESULT+1
  9471 55CE 91 84			sta (:bp2),y
  9472
  9473 				; optimize OK (service.pas), line = 1604
  9474
  9475 55D0 AD C6 A4			lda COLLISION
  9476 55D3 8D A5 A4			sta RESULT
  9477 55D6			@exit
  9478
  9479 				; ------------------------------------------------------------
  9480
  9481 = A49D			X1	= DATAORIGIN+$0AC6
  9482 = A49F			Y1	= DATAORIGIN+$0AC8
  9483 = A4A1			X2	= DATAORIGIN+$0ACA
  9484 = A4A3			Y2	= DATAORIGIN+$0ACC
  9485 = A4A5			RESULT	= DATAORIGIN+$0ACE
  9486 = A4A6			X	= DATAORIGIN+$0ACF
  9487 = A4A8			Y	= DATAORIGIN+$0AD1
  9488 = A4AA			XK	= DATAORIGIN+$0AD3
  9489 = A4AC			YK	= DATAORIGIN+$0AD5
  9490 = A4AE			XJ	= DATAORIGIN+$0AD7
  9491 = A4B0			YJ	= DATAORIGIN+$0AD9
  9492 = A4B2			XH	= DATAORIGIN+$0ADB
  9493 = A4B4			YH	= DATAORIGIN+$0ADD
  9494 = A4B6			XN	= DATAORIGIN+$0ADF
  9495 = A4B8			YN	= DATAORIGIN+$0AE1
  9496 = A4BA			XP1	= DATAORIGIN+$0AE3
  9497 = A4BC			YP1	= DATAORIGIN+$0AE5
  9498 = A4BE			XP2	= DATAORIGIN+$0AE7
  9499 = A4C0			YP2	= DATAORIGIN+$0AE9
  9500 = A4C2			XP	= DATAORIGIN+$0AEB
  9501 = A4C4			YP	= DATAORIGIN+$0AED
  9502 = A4C6			COLLISION	= DATAORIGIN+$0AEF
  9503
  9504 = A49D			@VarData	= X1
  9505 = 0029			@VarDataSize	= 41
  9506
  9507 55D6 60				rts						; ret
  9508 				.endl
  9509
  9510 55D7			.local	SHOOT_BLOCK					; PROCEDURE
  9511
  9512 				; optimize OK (service.pas), line = 1615
  9513
  9514 55D7 AD C8 A4			lda XB+1
  9515 55DA 10 03 4C F0 57		jmi l_17DB
  9516 55DF AD C7 A4			lda XB
  9517 55E2 C9 0D			cmp #$0D
  9518 55E4 AD C8 A4			lda XB+1
  9519 55E7 E9 00			sbc #$00
  9520 55E9 50 02			svc
  9521 55EB 49 80			eor #$80
  9522 55ED 30 03 4C F0 57		jpl l_17DB
  9523 55F2 AD CA A4			lda YB+1
  9524 55F5 10 03 4C F0 57		jmi l_17DB
  9525 55FA AD C9 A4			lda YB
  9526 55FD C9 0F			cmp #$0F
  9527 55FF AD CA A4			lda YB+1
  9528 5602 E9 00			sbc #$00
  9529 5604 50 02			svc
  9530 5606 49 80			eor #$80
  9531 5608 30 03 4C F0 57		jpl l_17DB
  9532
  9533 				; optimize OK (service.pas), line = 1618
  9534
  9535 560D A9 00			lda #$00
  9536 560F 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  9537 5611 AD C9 A4			lda YB
  9538 5614 0A				asl @
  9539 5615 26 B0			rol :STACKORIGIN+STACKWIDTH+10
  9540 5617 0A				asl @
  9541 5618 26 B0			rol :STACKORIGIN+STACKWIDTH+10
  9542 561A 0A				asl @
  9543 561B 0A				asl @
  9544 561C 18 6D C7 A4			add XB
  9545 5620 8D CF A4			sta I
  9546
  9547 				; optimize OK (service.pas), line = 1620
  9548
  9549 5623 A8				tay
  9550 5624 B9 00 DB			lda adr.WALL,y
  9551 5627 D0 03 4C F0 57		jeq l_17FF
  9552
  9553 				; optimize OK (service.pas), line = 1622
  9554
  9555 562C C9 0A			cmp #$0A
  9556 562E 90 03 4C 66 57		jcs l_1815
  9557
  9558 				; optimize OK (service.pas), line = 1624
  9559
  9560 5633 AD C7 A4			lda XB
  9561 5636 8D 7B A4			sta REMOVE_BLOCK.XA
  9562 5639 AD C9 A4			lda YB
  9563 563C 8D 7C A4			sta REMOVE_BLOCK.YA
  9564 563F 20 EE 40			jsr REMOVE_BLOCK
  9565
  9566 				; optimize FAIL (0, service.pas), line = 1625
  9567
  9568 5642 CE 57 9B			dec REMAIN_BLK
  9569
  9570 				; optimize OK (service.pas), line = 1629
  9571
  9572 5645 AD 74 9B			lda CUR_PLAYER
  9573 5648 0A				asl @
  9574 5649 0A				asl @
  9575 564A 85 9F			sta :STACKORIGIN+9
  9576 564C AC CF A4			ldy I
  9577 564F B9 00 DB			lda adr.WALL,y
  9578 5652 0A				asl @
  9579 5653 A8				tay
  9580 5654 B9 87 10			lda adr.SCORE_WALL,y
  9581 5657 85 A0			sta :STACKORIGIN+10
  9582 5659 B9 88 10			lda adr.SCORE_WALL+1,y
  9583 565C 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  9584 565E A4 9F			ldy :STACKORIGIN+9
  9585 5660 B9 59 9B			lda adr.SCORE.PLAYER,y
  9586 5663 18 65 A0			add :STACKORIGIN+10
  9587 5666 99 59 9B			sta adr.SCORE.PLAYER,y
  9588 5669 B9 5A 9B			lda adr.SCORE.PLAYER+1,y
  9589 566C 65 B0			adc :STACKORIGIN+STACKWIDTH+10
  9590 566E 99 5A 9B			sta adr.SCORE.PLAYER+1,y
  9591 5671 B9 5B 9B			lda adr.SCORE.PLAYER+2,y
  9592 5674 69 00			adc #$00
  9593 5676 99 5B 9B			sta adr.SCORE.PLAYER+2,y
  9594 5679 B9 5C 9B			lda adr.SCORE.PLAYER+3,y
  9595 567C 69 00			adc #$00
  9596 567E 99 5C 9B			sta adr.SCORE.PLAYER+3,y
  9597
  9598 				; optimize OK (service.pas), line = 1631
  9599
  9600 5681 A9 2C			lda #$2C
  9601 5683 8D 1D 9A			sta SYSTEM.RANDOM.@010184000.RANGE
  9602 5686 A9 01			lda #$01
  9603 5688 8D 1E 9A			sta SYSTEM.RANDOM.@010184000.RANGE+1
  9604 568B 20 2F 24			jsr SYSTEM.RANDOM.@010184000
  9605 568E AD 84 9B			lda LETT.INCOMING
  9606 5691 18 6D 1F 9A			add SYSTEM.RANDOM.@010184000.RESULT
  9607 5695 8D 84 9B			sta LETT.INCOMING
  9608 5698 AD 85 9B			lda LETT.INCOMING+1
  9609 569B 6D 20 9A			adc SYSTEM.RANDOM.@010184000.RESULT+1
  9610 569E 8D 85 9B			sta LETT.INCOMING+1
  9611
  9612 				; optimize OK (service.pas), line = 1633
  9613
  9614 56A1 AD C7 A4			lda XB
  9615 56A4 85 9F			sta :STACKORIGIN+9
  9616 56A6 A0 00			ldy #$00
  9617 56A8 AD C8 A4			lda XB+1
  9618 56AB 10 01			spl
  9619 56AD 88				dey
  9620 56AE 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  9621 56B0 84 BF			sty :STACKORIGIN+STACKWIDTH*2+9
  9622 56B2 84 CF			sty :STACKORIGIN+STACKWIDTH*3+9
  9623 56B4 06 9F			asl :STACKORIGIN+9
  9624 56B6 26 AF			rol :STACKORIGIN+STACKWIDTH+9
  9625 56B8 26 BF			rol :STACKORIGIN+STACKWIDTH*2+9
  9626 56BA 26 CF			rol :STACKORIGIN+STACKWIDTH*3+9
  9627 56BC 06 9F			asl :STACKORIGIN+9
  9628 56BE 26 AF			rol :STACKORIGIN+STACKWIDTH+9
  9629 56C0 06 9F			asl :STACKORIGIN+9
  9630 56C2 26 AF			rol :STACKORIGIN+STACKWIDTH+9
  9631 56C4 06 9F			asl :STACKORIGIN+9
  9632 56C6 26 AF			rol :STACKORIGIN+STACKWIDTH+9
  9633 56C8 A5 9F			lda :STACKORIGIN+9
  9634 56CA 18 69 09			add #$09
  9635 56CD 8D 86 9B			sta LETT.NEXTX
  9636 56D0 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  9637 56D2 69 00			adc #$00
  9638 56D4 8D 87 9B			sta LETT.NEXTX+1
  9639
  9640 				; optimize OK (service.pas), line = 1634
  9641
  9642 56D7 AD C9 A4			lda YB
  9643 56DA 85 9F			sta :STACKORIGIN+9
  9644 56DC A0 00			ldy #$00
  9645 56DE AD CA A4			lda YB+1
  9646 56E1 10 01			spl
  9647 56E3 88				dey
  9648 56E4 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  9649 56E6 84 BF			sty :STACKORIGIN+STACKWIDTH*2+9
  9650 56E8 84 CF			sty :STACKORIGIN+STACKWIDTH*3+9
  9651 56EA A5 9F			lda :STACKORIGIN+9
  9652 56EC 18 69 01			add #$01
  9653 56EF 85 9F			sta :STACKORIGIN+9
  9654 56F1 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  9655 56F3 69 00			adc #$00
  9656 56F5 85 AF			sta :STACKORIGIN+STACKWIDTH+9
  9657 56F7 A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
  9658 56F9 69 00			adc #$00
  9659 56FB 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
  9660 56FD A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
  9661 56FF 69 00			adc #$00
  9662 5701 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
  9663 5703 06 9F			asl :STACKORIGIN+9
  9664 5705 26 AF			rol :STACKORIGIN+STACKWIDTH+9
  9665 5707 06 9F			asl :STACKORIGIN+9
  9666 5709 26 AF			rol :STACKORIGIN+STACKWIDTH+9
  9667 570B 06 9F			asl :STACKORIGIN+9
  9668 570D 26 AF			rol :STACKORIGIN+STACKWIDTH+9
  9669 570F A5 9F			lda :STACKORIGIN+9
  9670 5711 18 69 16			add #$16
  9671 5714 8D 88 9B			sta LETT.NEXTY
  9672 5717 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
  9673 5719 69 00			adc #$00
  9674 571B 8D 89 9B			sta LETT.NEXTY+1
  9675
  9676 				; optimize FAIL ('RANDOM_LETTER_DROP', service.pas), line = 1635
  9677
  9678 571E 20 70 29			jsr RANDOM_LETTER_DROP
  9679 5721 AD EC A3			lda RANDOM_LETTER_DROP.RESULT
  9680 5724 8D 8A 9B			sta LETT.NEXTTYPE
  9681 5727 AD ED A3			lda RANDOM_LETTER_DROP.RESULT+1
  9682 572A 8D 8B 9B			sta LETT.NEXTTYPE+1
  9683
  9684 				; optimize OK (service.pas), line = 1637
  9685
  9686 572D AC CF A4			ldy I
  9687 5730 A9 00			lda #$00
  9688 5732 99 00 DB			sta adr.WALL,y
  9689
  9690 				; optimize OK (service.pas), line = 1638
  9691
  9692 5735 A9 B8			lda #$B8
  9693 5737 8D 86 9A			sta BALL_BLOCK_SOUND.A
  9694 573A A9 01			lda #$01
  9695 573C 8D 87 9A			sta BALL_BLOCK_SOUND.A+1
  9696 573F A9 03			lda #$03
  9697 5741 8D 88 9A			sta BALL_BLOCK_SOUND.B
  9698 5744 A9 00			lda #$00
  9699 5746 8D 89 9A			sta BALL_BLOCK_SOUND.B+1
  9700 5749 20 CA 24			jsr BALL_BLOCK_SOUND
  9701
  9702 				; optimize OK (service.pas), line = 1639
  9703
  9704 574C AC CB A4 84 84 AC + 	mwy BALL :bp2
  9705 5756 A0 14			ldy #BALL.SBD-DATAORIGIN
  9706 5758 A9 00			lda #$00
  9707 575A 91 84			sta (:bp2),y
  9708 575C C8				iny
  9709 575D 91 84			sta (:bp2),y
  9710
  9711 				; optimize OK (service.pas), line = 1640
  9712
  9713 575F A0 16			ldy #BALL.BRWHIT-DATAORIGIN
  9714 5761 91 84			sta (:bp2),y
  9715 5763 4C F0 57			jmp l_1869
  9716 5766			l_1815
  9717
  9718 				; optimize OK (service.pas), line = 1645
  9719
  9720 5766 AC CF A4			ldy I
  9721 5769 B9 00 DB			lda adr.WALL,y
  9722 576C 29 0F			and #$0F
  9723 576E C9 09			cmp #$09
  9724 5770 D0 45			jne l_1882
  9725
  9726 				; optimize OK (service.pas), line = 1647
  9727
  9728 5772 AC CB A4 84 84 AC + 	mwy BALL :bp2
  9729 577C A0 16			ldy #BALL.BRWHIT-DATAORIGIN
  9730 577E A9 00			lda #$00
  9731 5780 91 84			sta (:bp2),y
  9732
  9733 				; optimize OK (service.pas), line = 1648
  9734
  9735 5782 AC CF A4			ldy I
  9736 5785 B9 00 DB			lda adr.WALL,y
  9737 5788 38 E9 10			sub #$10
  9738 578B 99 00 DB			sta adr.WALL,y
  9739
  9740 				; optimize OK (service.pas), line = 1650
  9741
  9742 578E A9 72			lda #$72
  9743 5790 8D 86 9A			sta BALL_BLOCK_SOUND.A
  9744 5793 A9 01			lda #$01
  9745 5795 8D 87 9A			sta BALL_BLOCK_SOUND.A+1
  9746 5798 A9 04			lda #$04
  9747 579A 8D 88 9A			sta BALL_BLOCK_SOUND.B
  9748 579D A9 00			lda #$00
  9749 579F 8D 89 9A			sta BALL_BLOCK_SOUND.B+1
  9750 57A2 20 CA 24			jsr BALL_BLOCK_SOUND
  9751
  9752 				; optimize OK (service.pas), line = 1651
  9753
  9754 57A5 AD C7 A4			lda XB
  9755 57A8 8D EA A3			sta SHINE.XB
  9756 57AB AD C9 A4			lda YB
  9757 57AE 8D EB A3			sta SHINE.YB
  9758 57B1 20 34 29			jsr SHINE
  9759 57B4 4C F0 57			jmp l_189C
  9760 57B7			l_1882
  9761
  9762 				; optimize OK (service.pas), line = 1655
  9763
  9764 57B7 AC CB A4 84 84 AC + 	mwy BALL :bp2
  9765 57C1 A0 16			ldy #BALL.BRWHIT-DATAORIGIN
  9766 57C3 B1 84			lda (:bp2),y
  9767 57C5 18 69 01			add #$01
  9768 57C8 91 84			sta (:bp2),y
  9769
  9770 				; optimize OK (service.pas), line = 1656
  9771
  9772 57CA AD C7 A4			lda XB
  9773 57CD 8D EA A3			sta SHINE.XB
  9774 57D0 AD C9 A4			lda YB
  9775 57D3 8D EB A3			sta SHINE.YB
  9776 57D6 20 34 29			jsr SHINE
  9777
  9778 				; optimize OK (service.pas), line = 1658
  9779
  9780 57D9 A9 C8			lda #$C8
  9781 57DB 8D 86 9A			sta BALL_BLOCK_SOUND.A
  9782 57DE A9 00			lda #$00
  9783 57E0 8D 87 9A			sta BALL_BLOCK_SOUND.A+1
  9784 57E3 A9 07			lda #$07
  9785 57E5 8D 88 9A			sta BALL_BLOCK_SOUND.B
  9786 57E8 A9 00			lda #$00
  9787 57EA 8D 89 9A			sta BALL_BLOCK_SOUND.B+1
  9788 57ED 20 CA 24			jsr BALL_BLOCK_SOUND
  9789 57F0			l_189C
  9790 57F0			l_1869
  9791 57F0			l_17FF
  9792 57F0			l_17DB
  9793
  9794 				; ------------------------------------------------------------
  9795
  9796 = A4C7			XB	= DATAORIGIN+$0AF0
  9797 = A4C9			YB	= DATAORIGIN+$0AF2
  9798 = A4CB			BALL	= DATAORIGIN+$0AF4
  9799 = 99D7			BALL.X	= DATAORIGIN+$0000
  9800 = 99D9			BALL.Y	= DATAORIGIN+$0002
  9801 = 99DB			BALL.FINEX	= DATAORIGIN+$0004
  9802 = 99DD			BALL.FINEY	= DATAORIGIN+$0006
  9803 = 99DF			BALL.OLDX	= DATAORIGIN+$0008
  9804 = 99E1			BALL.OLDY	= DATAORIGIN+$000A
  9805 = 99E3			BALL.SPEED	= DATAORIGIN+$000C
  9806 = 99E5			BALL.FINESPEED	= DATAORIGIN+$000E
  9807 = 99E7			BALL.SPEEDX	= DATAORIGIN+$0010
  9808 = 99E9			BALL.SPEEDY	= DATAORIGIN+$0012
  9809 = 99EB			BALL.SBD	= DATAORIGIN+$0014
  9810 = 99ED			BALL.BRWHIT	= DATAORIGIN+$0016
  9811 = 99EE			BALL.INPLAY	= DATAORIGIN+$0017
  9812 = 99EF			BALL.LAUNCH	= DATAORIGIN+$0018
  9813 = 99F0			BALL.ONVAUS	= DATAORIGIN+$0019
  9814 = 99F1			BALL.STM	= DATAORIGIN+$001A
  9815 = A4CF			I	= DATAORIGIN+$0AF8
  9816
  9817 = A4C7			@VarData	= XB
  9818 = 0007			@VarDataSize	= 7
  9819
  9820 57F0			@exit
  9821 					.ifdef @new
  9822 					lda <@VarData
  9823 					sta :ztmp
  9824 					lda >@VarData
  9825 					ldy #@VarDataSize-1
  9826 					jmp @FreeMem
  9827 					els
  9828 57F0 60				rts						; ret
  9829 					eif
  9830 				.endl
  9831
  9832 57F1			.local	SHOOT_BLOCK_WITH_FIRE				; PROCEDURE
  9833
  9834 				; optimize OK (service.pas), line = 1669
  9835
  9836 57F1 AD D1 A4			lda XB+1
  9837 57F4 10 03 4C 13 59		jmi l_18DF
  9838 57F9 AD D0 A4			lda XB
  9839 57FC C9 0D			cmp #$0D
  9840 57FE AD D1 A4			lda XB+1
  9841 5801 E9 00			sbc #$00
  9842 5803 50 02			svc
  9843 5805 49 80			eor #$80
  9844 5807 30 03 4C 13 59		jpl l_18DF
  9845 580C AD D3 A4			lda YB+1
  9846 580F 10 03 4C 13 59		jmi l_18DF
  9847 5814 AD D2 A4			lda YB
  9848 5817 C9 0F			cmp #$0F
  9849 5819 AD D3 A4			lda YB+1
  9850 581C E9 00			sbc #$00
  9851 581E 50 02			svc
  9852 5820 49 80			eor #$80
  9853 5822 30 03 4C 13 59		jpl l_18DF
  9854
  9855 				; optimize OK (service.pas), line = 1672
  9856
  9857 5827 A9 00			lda #$00
  9858 5829 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  9859 582B AD D2 A4			lda YB
  9860 582E 0A				asl @
  9861 582F 26 B0			rol :STACKORIGIN+STACKWIDTH+10
  9862 5831 0A				asl @
  9863 5832 26 B0			rol :STACKORIGIN+STACKWIDTH+10
  9864 5834 0A				asl @
  9865 5835 0A				asl @
  9866 5836 18 6D D0 A4			add XB
  9867 583A 8D D4 A4			sta I
  9868
  9869 				; optimize OK (service.pas), line = 1674
  9870
  9871 583D A8				tay
  9872 583E B9 00 DB			lda adr.WALL,y
  9873 5841 D0 03 4C 13 59		jeq l_1903
  9874
  9875 				; optimize OK (service.pas), line = 1676
  9876
  9877 5846 C9 0A			cmp #$0A
  9878 5848 B0 65			jcs l_1919
  9879
  9880 				; optimize OK (service.pas), line = 1678
  9881
  9882 584A AD D0 A4			lda XB
  9883 584D 8D 7B A4			sta REMOVE_BLOCK.XA
  9884 5850 AD D2 A4			lda YB
  9885 5853 8D 7C A4			sta REMOVE_BLOCK.YA
  9886 5856 20 EE 40			jsr REMOVE_BLOCK
  9887
  9888 				; optimize FAIL (0, service.pas), line = 1679
  9889
  9890 5859 CE 57 9B			dec REMAIN_BLK
  9891
  9892 				; optimize OK (service.pas), line = 1680
  9893
  9894 585C AD 74 9B			lda CUR_PLAYER
  9895 585F 0A				asl @
  9896 5860 0A				asl @
  9897 5861 85 9F			sta :STACKORIGIN+9
  9898 5863 AC D4 A4			ldy I
  9899 5866 B9 00 DB			lda adr.WALL,y
  9900 5869 0A				asl @
  9901 586A A8				tay
  9902 586B B9 87 10			lda adr.SCORE_WALL,y
  9903 586E 85 A0			sta :STACKORIGIN+10
  9904 5870 B9 88 10			lda adr.SCORE_WALL+1,y
  9905 5873 85 B0			sta :STACKORIGIN+STACKWIDTH+10
  9906 5875 A4 9F			ldy :STACKORIGIN+9
  9907 5877 B9 59 9B			lda adr.SCORE.PLAYER,y
  9908 587A 18 65 A0			add :STACKORIGIN+10
  9909 587D 99 59 9B			sta adr.SCORE.PLAYER,y
  9910 5880 B9 5A 9B			lda adr.SCORE.PLAYER+1,y
  9911 5883 65 B0			adc :STACKORIGIN+STACKWIDTH+10
  9912 5885 99 5A 9B			sta adr.SCORE.PLAYER+1,y
  9913 5888 B9 5B 9B			lda adr.SCORE.PLAYER+2,y
  9914 588B 69 00			adc #$00
  9915 588D 99 5B 9B			sta adr.SCORE.PLAYER+2,y
  9916 5890 B9 5C 9B			lda adr.SCORE.PLAYER+3,y
  9917 5893 69 00			adc #$00
  9918 5895 99 5C 9B			sta adr.SCORE.PLAYER+3,y
  9919
  9920 				; optimize OK (service.pas), line = 1681
  9921
  9922 5898 AC D4 A4			ldy I
  9923 589B A9 00			lda #$00
  9924 589D 99 00 DB			sta adr.WALL,y
  9925
  9926 				; optimize OK (service.pas), line = 1682
  9927
  9928 58A0 A9 B8			lda #$B8
  9929 58A2 8D 86 9A			sta BALL_BLOCK_SOUND.A
  9930 58A5 A9 01			lda #$01
  9931 58A7 8D 87 9A			sta BALL_BLOCK_SOUND.A+1
  9932 58AA A9 03			lda #$03
  9933 58AC 4C 08 59			jmp l_1941
  9934 58AF			l_1919
  9935
  9936 				; optimize OK (service.pas), line = 1687
  9937
  9938 58AF AC D4 A4			ldy I
  9939 58B2 B9 00 DB			lda adr.WALL,y
  9940 58B5 29 0F			and #$0F
  9941 58B7 C9 09			cmp #$09
  9942 58B9 D0 32			jne l_195A
  9943
  9944 				; optimize OK (service.pas), line = 1689
  9945
  9946 58BB B9 00 DB			lda adr.WALL,y
  9947 58BE 38 E9 10			sub #$10
  9948 58C1 99 00 DB			sta adr.WALL,y
  9949
  9950 				; optimize OK (service.pas), line = 1690
  9951
  9952 58C4 A9 72			lda #$72
  9953 58C6 8D 86 9A			sta BALL_BLOCK_SOUND.A
  9954 58C9 A9 01			lda #$01
  9955 58CB 8D 87 9A			sta BALL_BLOCK_SOUND.A+1
  9956 58CE A9 04			lda #$04
  9957 58D0 8D 88 9A			sta BALL_BLOCK_SOUND.B
  9958 58D3 A9 00			lda #$00
  9959 58D5 8D 89 9A			sta BALL_BLOCK_SOUND.B+1
  9960 58D8 20 CA 24			jsr BALL_BLOCK_SOUND
  9961
  9962 				; optimize OK (service.pas), line = 1691
  9963
  9964 58DB AD D0 A4			lda XB
  9965 58DE 8D EA A3			sta SHINE.XB
  9966 58E1 AD D2 A4			lda YB
  9967 58E4 8D EB A3			sta SHINE.YB
  9968 58E7 20 34 29			jsr SHINE
  9969 58EA 4C 13 59			jmp l_1970
  9970 58ED			l_195A
  9971
  9972 				; optimize OK (service.pas), line = 1695
  9973
  9974 58ED AD D0 A4			lda XB
  9975 58F0 8D EA A3			sta SHINE.XB
  9976 58F3 AD D2 A4			lda YB
  9977 58F6 8D EB A3			sta SHINE.YB
  9978 58F9 20 34 29			jsr SHINE
  9979
  9980 				; optimize OK (service.pas), line = 1696
  9981
  9982 58FC A9 C8			lda #$C8
  9983 58FE 8D 86 9A			sta BALL_BLOCK_SOUND.A
  9984 5901 A9 00			lda #$00
  9985 5903 8D 87 9A			sta BALL_BLOCK_SOUND.A+1
  9986 5906 A9 07			lda #$07
  9987 5908			l_1941
  9988 5908 8D 88 9A			sta BALL_BLOCK_SOUND.B
  9989 590B A9 00			lda #$00
  9990 590D 8D 89 9A			sta BALL_BLOCK_SOUND.B+1
  9991 5910 20 CA 24			jsr BALL_BLOCK_SOUND
  9992 5913			l_1970
  9993 5913			l_1903
  9994 5913			l_18DF
  9995
  9996 				; ------------------------------------------------------------
  9997
  9998 = A4D0			XB	= DATAORIGIN+$0AF9
  9999 = A4D2			YB	= DATAORIGIN+$0AFB
 10000 = A4D4			I	= DATAORIGIN+$0AFD
 10001
 10002 = A4D0			@VarData	= XB
 10003 = 0005			@VarDataSize	= 5
 10004
 10005 5913			@exit
 10006 					.ifdef @new
 10007 					lda <@VarData
 10008 					sta :ztmp
 10009 					lda >@VarData
 10010 					ldy #@VarDataSize-1
 10011 					jmp @FreeMem
 10012 					els
 10013 5913 60				rts						; ret
 10014 					eif
 10015 				.endl
 10016
 10017 5914			.local	BALL_HIT_BLOCK					; PROCEDURE
 10018
 10019 				; optimize OK (service.pas), line = 1728
 10020
 10021 5914 A9 FF			lda #$FF
 10022 5916 8D 01 A5			sta EMERGENCY
 10023
 10024 				; optimize OK (service.pas), line = 1730
 10025
 10026 5919 AC D5 A4 84 84 AC + 	mwy BALL :bp2
 10027 5923 A0 00			ldy #BALL.X-DATAORIGIN
 10028 5925 B1 84			lda (:bp2),y
 10029 5927 38 E9 09			sub #$09
 10030 592A 8D ED A4			sta NX
 10031 592D C8				iny
 10032 592E B1 84			lda (:bp2),y
 10033 5930 E9 00			sbc #$00
 10034 5932 8D EE A4			sta NX+1
 10035
 10036 				; optimize OK (service.pas), line = 1731
 10037
 10038 5935 A0 02			ldy #BALL.Y-DATAORIGIN
 10039 5937 B1 84			lda (:bp2),y
 10040 5939 38 E9 16			sub #$16
 10041 593C 8D EF A4			sta NY
 10042 593F C8				iny
 10043 5940 B1 84			lda (:bp2),y
 10044 5942 E9 00			sbc #$00
 10045 5944 8D F0 A4			sta NY+1
 10046
 10047 				; optimize OK (service.pas), line = 1734
 10048
 10049 5947 A0 08			ldy #BALL.OLDX-DATAORIGIN
 10050 5949 B1 84			lda (:bp2),y
 10051 594B 38 E9 09			sub #$09
 10052 594E 8D E1 A4			sta OX
 10053 5951 C8				iny
 10054 5952 B1 84			lda (:bp2),y
 10055 5954 E9 00			sbc #$00
 10056 5956 8D E2 A4			sta OX+1
 10057
 10058 				; optimize OK (service.pas), line = 1735
 10059
 10060 5959 A0 0A			ldy #BALL.OLDY-DATAORIGIN
 10061 595B B1 84			lda (:bp2),y
 10062 595D 38 E9 16			sub #$16
 10063 5960 8D E3 A4			sta OY
 10064 5963 C8				iny
 10065 5964 B1 84			lda (:bp2),y
 10066 5966 E9 00			sbc #$00
 10067 5968 8D E4 A4			sta OY+1
 10068
 10069 				; optimize OK (service.pas), line = 1737
 10070
 10071 596B AD ED A4			lda NX
 10072 596E 85 9F			sta :STACKORIGIN+9
 10073 5970 A0 00			ldy #$00
 10074 5972 AD EE A4			lda NX+1
 10075 5975 10 01			spl
 10076 5977 88				dey
 10077 5978 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 10078 597A 84 BF			sty :STACKORIGIN+STACKWIDTH*2+9
 10079 597C 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
 10080 597E 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 10081 5980 66 9F			ror :STACKORIGIN+9
 10082 5982 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
 10083 5984 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 10084 5986 66 9F			ror :STACKORIGIN+9
 10085 5988 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
 10086 598A 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 10087 598C 66 9F			ror :STACKORIGIN+9
 10088 598E 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
 10089 5990 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 10090 5992 66 9F			ror :STACKORIGIN+9
 10091 5994 A5 9F			lda :STACKORIGIN+9
 10092 5996 8D DD A4			sta XB
 10093 5999 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 10094 599B 8D DE A4			sta XB+1
 10095
 10096 				; optimize OK (service.pas), line = 1738
 10097
 10098 599E AD EF A4			lda NY
 10099 59A1 85 9F			sta :STACKORIGIN+9
 10100 59A3 A0 00			ldy #$00
 10101 59A5 AD F0 A4			lda NY+1
 10102 59A8 10 01			spl
 10103 59AA 88				dey
 10104 59AB 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 10105 59AD 84 BF			sty :STACKORIGIN+STACKWIDTH*2+9
 10106 59AF 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
 10107 59B1 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 10108 59B3 66 9F			ror :STACKORIGIN+9
 10109 59B5 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
 10110 59B7 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 10111 59B9 66 9F			ror :STACKORIGIN+9
 10112 59BB 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
 10113 59BD 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 10114 59BF 66 9F			ror :STACKORIGIN+9
 10115 59C1 A5 9F			lda :STACKORIGIN+9
 10116 59C3 8D DF A4			sta YB
 10117 59C6 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 10118 59C8 8D E0 A4			sta YB+1
 10119
 10120 				; optimize OK (service.pas), line = 1742
 10121
 10122 59CB AD DF A4			lda YB
 10123 59CE 0A				asl @
 10124 59CF 0A				asl @
 10125 59D0 0A				asl @
 10126 59D1 0A				asl @
 10127 59D2 18 6D DD A4			add XB
 10128 59D6 A8				tay
 10129 59D7 B9 00 DB			lda adr.WALL,y
 10130 59DA D0 03 4C D9 6A		jeq l_19D7
 10131
 10132 				; optimize OK (service.pas), line = 1744
 10133
 10134 59DF A9 E1			lda <OX
 10135 59E1 8D 9D A4			sta SPLIT_LINE.X1
 10136 59E4 A9 A4			lda >OX
 10137 59E6 8D 9E A4			sta SPLIT_LINE.X1+1
 10138 59E9 A9 E3			lda <OY
 10139 59EB 8D 9F A4			sta SPLIT_LINE.Y1
 10140 59EE A9 A4			lda >OY
 10141 59F0 8D A0 A4			sta SPLIT_LINE.Y1+1
 10142 59F3 A9 ED			lda <NX
 10143 59F5 8D A1 A4			sta SPLIT_LINE.X2
 10144 59F8 A9 A4			lda >NX
 10145 59FA 8D A2 A4			sta SPLIT_LINE.X2+1
 10146 59FD A9 EF			lda <NY
 10147 59FF 8D A3 A4			sta SPLIT_LINE.Y2
 10148 5A02 A9 A4			lda >NY
 10149 5A04 8D A4 A4			sta SPLIT_LINE.Y2+1
 10150 5A07 20 E9 4D			jsr SPLIT_LINE
 10151 5A0A AD A5 A4			lda SPLIT_LINE.RESULT
 10152 5A0D 8D 02 A5			sta COLLISION
 10153
 10154 				; optimize OK (service.pas), line = 1750
 10155
 10156 5A10 C9 03			cmp #$03
 10157 5A12 F0 03 4C 68 5E		jne l_19F2
 10158
 10159 				; optimize OK (service.pas), line = 1752
 10160
 10161 5A17 AC D5 A4 84 84 AC + 	mwy BALL :bp2
 10162 5A21 A0 08			ldy #BALL.OLDX-DATAORIGIN
 10163 5A23 B1 84			lda (:bp2),y
 10164 5A25 38 ED E1 A4			sub OX
 10165 5A29 85 9F			sta :STACKORIGIN+9
 10166 5A2B C8				iny
 10167 5A2C B1 84			lda (:bp2),y
 10168 5A2E ED E2 A4			sbc OX+1
 10169 5A31 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 10170 5A33 A5 9F			lda :STACKORIGIN+9
 10171 5A35 38 E9 09			sub #$09
 10172 5A38 8D E5 A4			sta LX
 10173 5A3B A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 10174 5A3D E9 00			sbc #$00
 10175 5A3F 8D E6 A4			sta LX+1
 10176
 10177 				; optimize OK (service.pas), line = 1753
 10178
 10179 5A42 A0 0A			ldy #BALL.OLDY-DATAORIGIN
 10180 5A44 B1 84			lda (:bp2),y
 10181 5A46 38 ED E3 A4			sub OY
 10182 5A4A 85 9F			sta :STACKORIGIN+9
 10183 5A4C C8				iny
 10184 5A4D B1 84			lda (:bp2),y
 10185 5A4F ED E4 A4			sbc OY+1
 10186 5A52 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 10187 5A54 A5 9F			lda :STACKORIGIN+9
 10188 5A56 38 E9 16			sub #$16
 10189 5A59 8D E7 A4			sta LY
 10190 5A5C A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 10191 5A5E E9 00			sbc #$00
 10192 5A60 8D E8 A4			sta LY+1
 10193
 10194 				; optimize OK (service.pas), line = 1755
 10195
 10196 5A63 A0 08			ldy #BALL.OLDX-DATAORIGIN
 10197 5A65 B1 84			lda (:bp2),y
 10198 5A67 38 ED ED A4			sub NX
 10199 5A6B 85 9F			sta :STACKORIGIN+9
 10200 5A6D C8				iny
 10201 5A6E B1 84			lda (:bp2),y
 10202 5A70 ED EE A4			sbc NX+1
 10203 5A73 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 10204 5A75 A5 9F			lda :STACKORIGIN+9
 10205 5A77 38 E9 09			sub #$09
 10206 5A7A 8D E9 A4			sta MX
 10207 5A7D A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 10208 5A7F E9 00			sbc #$00
 10209 5A81 8D EA A4			sta MX+1
 10210
 10211 				; optimize OK (service.pas), line = 1756
 10212
 10213 5A84 A0 0A			ldy #BALL.OLDY-DATAORIGIN
 10214 5A86 B1 84			lda (:bp2),y
 10215 5A88 38 ED EF A4			sub NY
 10216 5A8C 85 9F			sta :STACKORIGIN+9
 10217 5A8E C8				iny
 10218 5A8F B1 84			lda (:bp2),y
 10219 5A91 ED F0 A4			sbc NY+1
 10220 5A94 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 10221 5A96 A5 9F			lda :STACKORIGIN+9
 10222 5A98 38 E9 16			sub #$16
 10223 5A9B 8D EB A4			sta MY
 10224 5A9E A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 10225 5AA0 E9 00			sbc #$00
 10226 5AA2 8D EC A4			sta MY+1
 10227
 10228 				; optimize OK (service.pas), line = 1758
 10229
 10230 5AA5 AD E5 A4			lda LX
 10231 5AA8 85 8E			sta :ecx
 10232 5AAA 85 86			sta :eax
 10233 5AAC AD E6 A4			lda LX+1
 10234 5AAF 85 8F			sta :ecx+1
 10235 5AB1 85 87			sta :eax+1
 10236 					.ifdef fmulinit
 10237 					fmulu_16
 10238 					els
 10239 5AB3 20 2A 13			imulCX
 10240 					eif
 10241 5AB6 A5 86			lda :eax
 10242 5AB8 85 9F			sta :STACKORIGIN+9
 10243 5ABA A5 87			lda :eax+1
 10244 5ABC 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 10245 5ABE AD E7 A4			lda LY
 10246 5AC1 85 8E			sta :ecx
 10247 5AC3 85 86			sta :eax
 10248 5AC5 AD E8 A4			lda LY+1
 10249 5AC8 85 8F			sta :ecx+1
 10250 5ACA 85 87			sta :eax+1
 10251 					.ifdef fmulinit
 10252 					fmulu_16
 10253 					els
 10254 5ACC 20 2A 13			imulCX
 10255 					eif
 10256 5ACF A5 86			lda :eax
 10257 5AD1 18 65 9F			add :STACKORIGIN+9
 10258 5AD4 8D F1 A4			sta F1
 10259 5AD7 A5 87			lda :eax+1
 10260 5AD9 65 AF			adc :STACKORIGIN+STACKWIDTH+9
 10261 5ADB 8D F2 A4			sta F1+1
 10262
 10263 				; optimize OK (service.pas), line = 1759
 10264
 10265 5ADE AD E9 A4			lda MX
 10266 5AE1 85 8E			sta :ecx
 10267 5AE3 85 86			sta :eax
 10268 5AE5 AD EA A4			lda MX+1
 10269 5AE8 85 8F			sta :ecx+1
 10270 5AEA 85 87			sta :eax+1
 10271 					.ifdef fmulinit
 10272 					fmulu_16
 10273 					els
 10274 5AEC 20 2A 13			imulCX
 10275 					eif
 10276 5AEF A5 86			lda :eax
 10277 5AF1 85 9F			sta :STACKORIGIN+9
 10278 5AF3 A5 87			lda :eax+1
 10279 5AF5 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 10280 5AF7 AD EB A4			lda MY
 10281 5AFA 85 8E			sta :ecx
 10282 5AFC 85 86			sta :eax
 10283 5AFE AD EC A4			lda MY+1
 10284 5B01 85 8F			sta :ecx+1
 10285 5B03 85 87			sta :eax+1
 10286 					.ifdef fmulinit
 10287 					fmulu_16
 10288 					els
 10289 5B05 20 2A 13			imulCX
 10290 					eif
 10291 5B08 A5 86			lda :eax
 10292 5B0A 18 65 9F			add :STACKORIGIN+9
 10293 5B0D 8D F3 A4			sta F2
 10294 5B10 A5 87			lda :eax+1
 10295 5B12 65 AF			adc :STACKORIGIN+STACKWIDTH+9
 10296 5B14 8D F4 A4			sta F2+1
 10297
 10298 				; optimize OK (service.pas), line = 1761
 10299
 10300 5B17 AD F1 A4			lda F1
 10301 5B1A CD F3 A4			cmp F2
 10302 5B1D AD F2 A4			lda F1+1
 10303 5B20 ED F4 A4			sbc F2+1
 10304 5B23 50 02			svc
 10305 5B25 49 80			eor #$80
 10306 5B27 30 03 4C C8 5C		jpl l_1A65
 10307
 10308 				; optimize OK (service.pas), line = 1767
 10309
 10310 5B2C AD E1 A4			lda OX
 10311 5B2F 85 A0			sta :STACKORIGIN+10
 10312 5B31 A0 00			ldy #$00
 10313 5B33 AD E2 A4			lda OX+1
 10314 5B36 10 01			spl
 10315 5B38 88				dey
 10316 5B39 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 10317 5B3B 84 C0			sty :STACKORIGIN+STACKWIDTH*2+10
 10318 5B3D 46 C0			lsr :STACKORIGIN+STACKWIDTH*2+10
 10319 5B3F 66 B0			ror :STACKORIGIN+STACKWIDTH+10
 10320 5B41 66 A0			ror :STACKORIGIN+10
 10321 5B43 46 C0			lsr :STACKORIGIN+STACKWIDTH*2+10
 10322 5B45 66 B0			ror :STACKORIGIN+STACKWIDTH+10
 10323 5B47 66 A0			ror :STACKORIGIN+10
 10324 5B49 46 C0			lsr :STACKORIGIN+STACKWIDTH*2+10
 10325 5B4B 66 B0			ror :STACKORIGIN+STACKWIDTH+10
 10326 5B4D 66 A0			ror :STACKORIGIN+10
 10327 5B4F 46 C0			lsr :STACKORIGIN+STACKWIDTH*2+10
 10328 5B51 66 B0			ror :STACKORIGIN+STACKWIDTH+10
 10329 5B53 66 A0			ror :STACKORIGIN+10
 10330 5B55 A5 A0			lda :STACKORIGIN+10
 10331 5B57 8D CC A3			sta MAX.A
 10332 5B5A A5 B0			lda :STACKORIGIN+STACKWIDTH+10
 10333 5B5C 8D CD A3			sta MAX.A+1
 10334 5B5F A9 00			lda #$00
 10335 5B61 8D CE A3			sta MAX.B
 10336 5B64 8D CF A3			sta MAX.B+1
 10337 5B67 20 C3 26			jsr MAX
 10338 5B6A A9 0C			lda #$0C
 10339 5B6C 8D D2 A3			sta MIN.A
 10340 5B6F A9 00			lda #$00
 10341 5B71 8D D3 A3			sta MIN.A+1
 10342 5B74 AD D0 A3			lda MAX.RESULT
 10343 5B77 8D D4 A3			sta MIN.B
 10344 5B7A AD D1 A3			lda MAX.RESULT+1
 10345 5B7D 8D D5 A3			sta MIN.B+1
 10346 5B80 20 EE 26			jsr MIN
 10347 5B83 AD D6 A3			lda MIN.RESULT
 10348 5B86 8D DD A4			sta XB
 10349 5B89 AD D7 A3			lda MIN.RESULT+1
 10350 5B8C 8D DE A4			sta XB+1
 10351
 10352 				; optimize OK (service.pas), line = 1768
 10353
 10354 5B8F AD E3 A4			lda OY
 10355 5B92 85 9F			sta :STACKORIGIN+9
 10356 5B94 A0 00			ldy #$00
 10357 5B96 AD E4 A4			lda OY+1
 10358 5B99 10 01			spl
 10359 5B9B 88				dey
 10360 5B9C 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 10361 5B9E 84 BF			sty :STACKORIGIN+STACKWIDTH*2+9
 10362 5BA0 84 CF			sty :STACKORIGIN+STACKWIDTH*3+9
 10363 5BA2 A5 9F			lda :STACKORIGIN+9
 10364 5BA4 18 69 18			add #$18
 10365 5BA7 85 9F			sta :STACKORIGIN+9
 10366 5BA9 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 10367 5BAB 69 00			adc #$00
 10368 5BAD 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 10369 5BAF A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
 10370 5BB1 69 00			adc #$00
 10371 5BB3 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
 10372 5BB5 A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
 10373 5BB7 69 00			adc #$00
 10374 5BB9 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
 10375 5BBB 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
 10376 5BBD 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 10377 5BBF 66 9F			ror :STACKORIGIN+9
 10378 5BC1 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
 10379 5BC3 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 10380 5BC5 66 9F			ror :STACKORIGIN+9
 10381 5BC7 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
 10382 5BC9 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 10383 5BCB 66 9F			ror :STACKORIGIN+9
 10384 5BCD A5 9F			lda :STACKORIGIN+9
 10385 5BCF 38 E9 03			sub #$03
 10386 5BD2 8D DF A4			sta YB
 10387 5BD5 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 10388 5BD7 E9 00			sbc #$00
 10389 5BD9 8D E0 A4			sta YB+1
 10390
 10391 				; optimize OK (service.pas), line = 1771
 10392
 10393 5BDC AD DF A4			lda YB
 10394 5BDF 0A				asl @
 10395 5BE0 0A				asl @
 10396 5BE1 0A				asl @
 10397 5BE2 0A				asl @
 10398 5BE3 18 6D DD A4			add XB
 10399 5BE7 A8				tay
 10400 5BE8 B9 00 DB			lda adr.WALL,y
 10401 5BEB F0 03 4C AD 5C		jne l_1AA1
 10402
 10403 				; optimize OK (service.pas), line = 1773
 10404
 10405 5BF0 AD ED A4			lda NX
 10406 5BF3 85 9F			sta :STACKORIGIN+9
 10407 5BF5 A0 00			ldy #$00
 10408 5BF7 AD EE A4			lda NX+1
 10409 5BFA 10 01			spl
 10410 5BFC 88				dey
 10411 5BFD 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 10412 5BFF 84 BF			sty :STACKORIGIN+STACKWIDTH*2+9
 10413 5C01 84 CF			sty :STACKORIGIN+STACKWIDTH*3+9
 10414 5C03 46 CF			lsr :STACKORIGIN+STACKWIDTH*3+9
 10415 5C05 66 BF			ror :STACKORIGIN+STACKWIDTH*2+9
 10416 5C07 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 10417 5C09 66 9F			ror :STACKORIGIN+9
 10418 5C0B 46 CF			lsr :STACKORIGIN+STACKWIDTH*3+9
 10419 5C0D 66 BF			ror :STACKORIGIN+STACKWIDTH*2+9
 10420 5C0F 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 10421 5C11 66 9F			ror :STACKORIGIN+9
 10422 5C13 46 CF			lsr :STACKORIGIN+STACKWIDTH*3+9
 10423 5C15 66 BF			ror :STACKORIGIN+STACKWIDTH*2+9
 10424 5C17 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 10425 5C19 66 9F			ror :STACKORIGIN+9
 10426 5C1B 46 CF			lsr :STACKORIGIN+STACKWIDTH*3+9
 10427 5C1D 66 BF			ror :STACKORIGIN+STACKWIDTH*2+9
 10428 5C1F 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 10429 5C21 66 9F			ror :STACKORIGIN+9
 10430 5C23 A9 00			lda #$00
 10431 5C25 8D CC A3			sta MAX.A
 10432 5C28 8D CD A3			sta MAX.A+1
 10433 5C2B A5 9F			lda :STACKORIGIN+9
 10434 5C2D 8D CE A3			sta MAX.B
 10435 5C30 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 10436 5C32 8D CF A3			sta MAX.B+1
 10437 5C35 20 C3 26			jsr MAX
 10438 5C38 A9 0C			lda #$0C
 10439 5C3A 8D D2 A3			sta MIN.A
 10440 5C3D A9 00			lda #$00
 10441 5C3F 8D D3 A3			sta MIN.A+1
 10442 5C42 AD D0 A3			lda MAX.RESULT
 10443 5C45 8D D4 A3			sta MIN.B
 10444 5C48 AD D1 A3			lda MAX.RESULT+1
 10445 5C4B 8D D5 A3			sta MIN.B+1
 10446 5C4E 20 EE 26			jsr MIN
 10447 5C51 AD D6 A3			lda MIN.RESULT
 10448 5C54 8D DD A4			sta XB
 10449 5C57 AD D7 A3			lda MIN.RESULT+1
 10450 5C5A 8D DE A4			sta XB+1
 10451
 10452 				; optimize OK (service.pas), line = 1774
 10453
 10454 5C5D AD EF A4			lda NY
 10455 5C60 85 9F			sta :STACKORIGIN+9
 10456 5C62 A0 00			ldy #$00
 10457 5C64 AD F0 A4			lda NY+1
 10458 5C67 10 01			spl
 10459 5C69 88				dey
 10460 5C6A 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 10461 5C6C 84 BF			sty :STACKORIGIN+STACKWIDTH*2+9
 10462 5C6E 84 CF			sty :STACKORIGIN+STACKWIDTH*3+9
 10463 5C70 A5 9F			lda :STACKORIGIN+9
 10464 5C72 18 69 18			add #$18
 10465 5C75 85 9F			sta :STACKORIGIN+9
 10466 5C77 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 10467 5C79 69 00			adc #$00
 10468 5C7B 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 10469 5C7D A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
 10470 5C7F 69 00			adc #$00
 10471 5C81 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
 10472 5C83 A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
 10473 5C85 69 00			adc #$00
 10474 5C87 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
 10475 5C89 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
 10476 5C8B 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 10477 5C8D 66 9F			ror :STACKORIGIN+9
 10478 5C8F 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
 10479 5C91 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 10480 5C93 66 9F			ror :STACKORIGIN+9
 10481 5C95 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
 10482 5C97 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 10483 5C99 66 9F			ror :STACKORIGIN+9
 10484 5C9B A5 9F			lda :STACKORIGIN+9
 10485 5C9D 38 E9 03			sub #$03
 10486 5CA0 8D DF A4			sta YB
 10487 5CA3 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 10488 5CA5 E9 00			sbc #$00
 10489 5CA7 8D E0 A4			sta YB+1
 10490 5CAA 4C C5 5C			jmp l_1AC9
 10491 5CAD			l_1AA1
 10492
 10493 				; optimize OK (service.pas), line = 1778
 10494
 10495 5CAD AD E1 A4			lda OX
 10496 5CB0 8D ED A4			sta NX
 10497 5CB3 AD E2 A4			lda OX+1
 10498 5CB6 8D EE A4			sta NX+1
 10499
 10500 				; optimize OK (service.pas), line = 1779
 10501
 10502 5CB9 AD E3 A4			lda OY
 10503 5CBC 8D EF A4			sta NY
 10504 5CBF AD E4 A4			lda OY+1
 10505 5CC2 8D F0 A4			sta NY+1
 10506 5CC5			l_1AC9
 10507 5CC5 4C 68 5E			jmp l_1ADC
 10508 5CC8			l_1A65
 10509
 10510 				; optimize OK (service.pas), line = 1789
 10511
 10512 5CC8 AD ED A4			lda NX
 10513 5CCB 85 9F			sta :STACKORIGIN+9
 10514 5CCD A0 00			ldy #$00
 10515 5CCF AD EE A4			lda NX+1
 10516 5CD2 10 01			spl
 10517 5CD4 88				dey
 10518 5CD5 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 10519 5CD7 84 BF			sty :STACKORIGIN+STACKWIDTH*2+9
 10520 5CD9 84 CF			sty :STACKORIGIN+STACKWIDTH*3+9
 10521 5CDB 46 CF			lsr :STACKORIGIN+STACKWIDTH*3+9
 10522 5CDD 66 BF			ror :STACKORIGIN+STACKWIDTH*2+9
 10523 5CDF 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 10524 5CE1 66 9F			ror :STACKORIGIN+9
 10525 5CE3 46 CF			lsr :STACKORIGIN+STACKWIDTH*3+9
 10526 5CE5 66 BF			ror :STACKORIGIN+STACKWIDTH*2+9
 10527 5CE7 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 10528 5CE9 66 9F			ror :STACKORIGIN+9
 10529 5CEB 46 CF			lsr :STACKORIGIN+STACKWIDTH*3+9
 10530 5CED 66 BF			ror :STACKORIGIN+STACKWIDTH*2+9
 10531 5CEF 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 10532 5CF1 66 9F			ror :STACKORIGIN+9
 10533 5CF3 46 CF			lsr :STACKORIGIN+STACKWIDTH*3+9
 10534 5CF5 66 BF			ror :STACKORIGIN+STACKWIDTH*2+9
 10535 5CF7 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 10536 5CF9 66 9F			ror :STACKORIGIN+9
 10537 5CFB A9 00			lda #$00
 10538 5CFD 8D CC A3			sta MAX.A
 10539 5D00 8D CD A3			sta MAX.A+1
 10540 5D03 A5 9F			lda :STACKORIGIN+9
 10541 5D05 8D CE A3			sta MAX.B
 10542 5D08 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 10543 5D0A 8D CF A3			sta MAX.B+1
 10544 5D0D 20 C3 26			jsr MAX
 10545 5D10 A9 0C			lda #$0C
 10546 5D12 8D D2 A3			sta MIN.A
 10547 5D15 A9 00			lda #$00
 10548 5D17 8D D3 A3			sta MIN.A+1
 10549 5D1A AD D0 A3			lda MAX.RESULT
 10550 5D1D 8D D4 A3			sta MIN.B
 10551 5D20 AD D1 A3			lda MAX.RESULT+1
 10552 5D23 8D D5 A3			sta MIN.B+1
 10553 5D26 20 EE 26			jsr MIN
 10554 5D29 AD D6 A3			lda MIN.RESULT
 10555 5D2C 8D DD A4			sta XB
 10556 5D2F AD D7 A3			lda MIN.RESULT+1
 10557 5D32 8D DE A4			sta XB+1
 10558
 10559 				; optimize OK (service.pas), line = 1790
 10560
 10561 5D35 AD EF A4			lda NY
 10562 5D38 85 9F			sta :STACKORIGIN+9
 10563 5D3A A0 00			ldy #$00
 10564 5D3C AD F0 A4			lda NY+1
 10565 5D3F 10 01			spl
 10566 5D41 88				dey
 10567 5D42 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 10568 5D44 84 BF			sty :STACKORIGIN+STACKWIDTH*2+9
 10569 5D46 84 CF			sty :STACKORIGIN+STACKWIDTH*3+9
 10570 5D48 A5 9F			lda :STACKORIGIN+9
 10571 5D4A 18 69 18			add #$18
 10572 5D4D 85 9F			sta :STACKORIGIN+9
 10573 5D4F A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 10574 5D51 69 00			adc #$00
 10575 5D53 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 10576 5D55 A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
 10577 5D57 69 00			adc #$00
 10578 5D59 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
 10579 5D5B A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
 10580 5D5D 69 00			adc #$00
 10581 5D5F 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
 10582 5D61 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
 10583 5D63 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 10584 5D65 66 9F			ror :STACKORIGIN+9
 10585 5D67 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
 10586 5D69 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 10587 5D6B 66 9F			ror :STACKORIGIN+9
 10588 5D6D 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
 10589 5D6F 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 10590 5D71 66 9F			ror :STACKORIGIN+9
 10591 5D73 A5 9F			lda :STACKORIGIN+9
 10592 5D75 38 E9 03			sub #$03
 10593 5D78 8D DF A4			sta YB
 10594 5D7B A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 10595 5D7D E9 00			sbc #$00
 10596 5D7F 8D E0 A4			sta YB+1
 10597
 10598 				; optimize OK (service.pas), line = 1792
 10599
 10600 5D82 AD DF A4			lda YB
 10601 5D85 0A				asl @
 10602 5D86 0A				asl @
 10603 5D87 0A				asl @
 10604 5D88 0A				asl @
 10605 5D89 18 6D DD A4			add XB
 10606 5D8D A8				tay
 10607 5D8E B9 00 DB			lda adr.WALL,y
 10608 5D91 F0 03 4C 68 5E		jne l_1B17
 10609
 10610 				; optimize OK (service.pas), line = 1794
 10611
 10612 5D96 AD E1 A4			lda OX
 10613 5D99 8D ED A4			sta NX
 10614 5D9C AD E2 A4			lda OX+1
 10615 5D9F 8D EE A4			sta NX+1
 10616
 10617 				; optimize OK (service.pas), line = 1795
 10618
 10619 5DA2 AD E3 A4			lda OY
 10620 5DA5 8D EF A4			sta NY
 10621 5DA8 AD E4 A4			lda OY+1
 10622 5DAB 8D F0 A4			sta NY+1
 10623
 10624 				; optimize OK (service.pas), line = 1797
 10625
 10626 5DAE AD ED A4			lda NX
 10627 5DB1 85 9F			sta :STACKORIGIN+9
 10628 5DB3 A0 00			ldy #$00
 10629 5DB5 AD EE A4			lda NX+1
 10630 5DB8 10 01			spl
 10631 5DBA 88				dey
 10632 5DBB 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 10633 5DBD 84 BF			sty :STACKORIGIN+STACKWIDTH*2+9
 10634 5DBF 84 CF			sty :STACKORIGIN+STACKWIDTH*3+9
 10635 5DC1 46 CF			lsr :STACKORIGIN+STACKWIDTH*3+9
 10636 5DC3 66 BF			ror :STACKORIGIN+STACKWIDTH*2+9
 10637 5DC5 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 10638 5DC7 66 9F			ror :STACKORIGIN+9
 10639 5DC9 46 CF			lsr :STACKORIGIN+STACKWIDTH*3+9
 10640 5DCB 66 BF			ror :STACKORIGIN+STACKWIDTH*2+9
 10641 5DCD 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 10642 5DCF 66 9F			ror :STACKORIGIN+9
 10643 5DD1 46 CF			lsr :STACKORIGIN+STACKWIDTH*3+9
 10644 5DD3 66 BF			ror :STACKORIGIN+STACKWIDTH*2+9
 10645 5DD5 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 10646 5DD7 66 9F			ror :STACKORIGIN+9
 10647 5DD9 46 CF			lsr :STACKORIGIN+STACKWIDTH*3+9
 10648 5DDB 66 BF			ror :STACKORIGIN+STACKWIDTH*2+9
 10649 5DDD 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 10650 5DDF 66 9F			ror :STACKORIGIN+9
 10651 5DE1 A9 00			lda #$00
 10652 5DE3 8D CC A3			sta MAX.A
 10653 5DE6 8D CD A3			sta MAX.A+1
 10654 5DE9 A5 9F			lda :STACKORIGIN+9
 10655 5DEB 8D CE A3			sta MAX.B
 10656 5DEE A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 10657 5DF0 8D CF A3			sta MAX.B+1
 10658 5DF3 20 C3 26			jsr MAX
 10659 5DF6 A9 0C			lda #$0C
 10660 5DF8 8D D2 A3			sta MIN.A
 10661 5DFB A9 00			lda #$00
 10662 5DFD 8D D3 A3			sta MIN.A+1
 10663 5E00 AD D0 A3			lda MAX.RESULT
 10664 5E03 8D D4 A3			sta MIN.B
 10665 5E06 AD D1 A3			lda MAX.RESULT+1
 10666 5E09 8D D5 A3			sta MIN.B+1
 10667 5E0C 20 EE 26			jsr MIN
 10668 5E0F AD D6 A3			lda MIN.RESULT
 10669 5E12 8D DD A4			sta XB
 10670 5E15 AD D7 A3			lda MIN.RESULT+1
 10671 5E18 8D DE A4			sta XB+1
 10672
 10673 				; optimize OK (service.pas), line = 1798
 10674
 10675 5E1B AD EF A4			lda NY
 10676 5E1E 85 9F			sta :STACKORIGIN+9
 10677 5E20 A0 00			ldy #$00
 10678 5E22 AD F0 A4			lda NY+1
 10679 5E25 10 01			spl
 10680 5E27 88				dey
 10681 5E28 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 10682 5E2A 84 BF			sty :STACKORIGIN+STACKWIDTH*2+9
 10683 5E2C 84 CF			sty :STACKORIGIN+STACKWIDTH*3+9
 10684 5E2E A5 9F			lda :STACKORIGIN+9
 10685 5E30 18 69 18			add #$18
 10686 5E33 85 9F			sta :STACKORIGIN+9
 10687 5E35 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 10688 5E37 69 00			adc #$00
 10689 5E39 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 10690 5E3B A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
 10691 5E3D 69 00			adc #$00
 10692 5E3F 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
 10693 5E41 A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
 10694 5E43 69 00			adc #$00
 10695 5E45 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
 10696 5E47 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
 10697 5E49 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 10698 5E4B 66 9F			ror :STACKORIGIN+9
 10699 5E4D 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
 10700 5E4F 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 10701 5E51 66 9F			ror :STACKORIGIN+9
 10702 5E53 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
 10703 5E55 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 10704 5E57 66 9F			ror :STACKORIGIN+9
 10705 5E59 A5 9F			lda :STACKORIGIN+9
 10706 5E5B 38 E9 03			sub #$03
 10707 5E5E 8D DF A4			sta YB
 10708 5E61 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 10709 5E63 E9 00			sbc #$00
 10710 5E65 8D E0 A4			sta YB+1
 10711 5E68			l_1B17
 10712 5E68			l_1ADC
 10713 5E68			l_19F2
 10714
 10715 				; optimize OK (service.pas), line = 1804
 10716
 10717 5E68 AC D5 A4 84 84 AC + 	mwy BALL :bp2
 10718 5E72 A0 00			ldy #BALL.X-DATAORIGIN
 10719 5E74 AD ED A4			lda NX
 10720 5E77 18 69 09			add #$09
 10721 5E7A 91 84			sta (:bp2),y
 10722 5E7C C8				iny
 10723 5E7D AD EE A4			lda NX+1
 10724 5E80 69 00			adc #$00
 10725 5E82 91 84			sta (:bp2),y
 10726
 10727 				; optimize OK (service.pas), line = 1805
 10728
 10729 5E84 A0 02			ldy #BALL.Y-DATAORIGIN
 10730 5E86 AD EF A4			lda NY
 10731 5E89 18 69 16			add #$16
 10732 5E8C 91 84			sta (:bp2),y
 10733 5E8E C8				iny
 10734 5E8F AD F0 A4			lda NY+1
 10735 5E92 69 00			adc #$00
 10736 5E94 91 84			sta (:bp2),y
 10737
 10738 				; optimize OK (service.pas), line = 1809
 10739
 10740 5E96 AD DD A4			lda XB
 10741 5E99 8D C7 A4			sta SHOOT_BLOCK.XB
 10742 5E9C AD DE A4			lda XB+1
 10743 5E9F 8D C8 A4			sta SHOOT_BLOCK.XB+1
 10744 5EA2 AD DF A4			lda YB
 10745 5EA5 8D C9 A4			sta SHOOT_BLOCK.YB
 10746 5EA8 AD E0 A4			lda YB+1
 10747 5EAB 8D CA A4			sta SHOOT_BLOCK.YB+1
 10748 5EAE AD D5 A4			lda BALL
 10749 5EB1 8D CB A4			sta SHOOT_BLOCK.BALL
 10750 5EB4 AD D6 A4			lda BALL+1
 10751 5EB7 8D CC A4			sta SHOOT_BLOCK.BALL+1
 10752 5EBA 20 D7 55			jsr SHOOT_BLOCK
 10753
 10754 				; optimize OK (service.pas), line = 1811
 10755
 10756 5EBD AD ED A4			lda NX
 10757 5EC0 29 0F			and #$0F
 10758 5EC2 85 9F			sta :STACKORIGIN+9
 10759 5EC4 A9 00			lda #$00
 10760 5EC6 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 10761 5EC8 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
 10762 5ECA 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
 10763 5ECC 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 10764 5ECE 66 9F			ror :STACKORIGIN+9
 10765 5ED0 A5 9F			lda :STACKORIGIN+9
 10766 5ED2 8D D9 A4			sta X
 10767 5ED5 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 10768 5ED7 8D DA A4			sta X+1
 10769
 10770 				; optimize OK (service.pas), line = 1812
 10771
 10772 5EDA AD EF A4			lda NY
 10773 5EDD 29 07			and #$07
 10774 5EDF 8D DB A4			sta Y
 10775 5EE2 A9 00			lda #$00
 10776 5EE4 8D DC A4			sta Y+1
 10777
 10778 				; optimize OK (service.pas), line = 1824
 10779
 10780 5EE7 AD DA A4			lda X+1
 10781 5EEA 0D D9 A4			ora X
 10782 5EED F0 25			jeq l_1BA5
 10783 5EEF AD DA A4			lda X+1
 10784 5EF2 D0 05			bne @+
 10785 5EF4 AD D9 A4			lda X
 10786 5EF7 C9 07			cmp #$07
 10787 				@
 10788 5EF9 F0 19			jeq l_1BA5
 10789 5EFB AD DC A4			lda Y+1
 10790 5EFE 0D DB A4			ora Y
 10791 5F01 F0 11			jeq l_1BA5
 10792 				@
 10793 5F03 AD DC A4			lda Y+1
 10794 5F06 D0 05			bne @+
 10795 5F08 AD DB A4			lda Y
 10796 5F0B C9 07			cmp #$07
 10797 				@
 10798 5F0D F0 05			jeq l_1BA5
 10799
 10800 				; optimize OK (service.pas), line = 1825
 10801
 10802 5F0F A9 03			lda #$03
 10803 5F11 20 19 27			jsr FATAL_ERROR
 10804 5F14			l_1BA5
 10805
 10806 				; optimize OK (service.pas), line = 1840
 10807
 10808 5F14 AD DB A4			lda Y
 10809 5F17 CD D9 A4			cmp X
 10810 5F1A AD DC A4			lda Y+1
 10811 5F1D ED DA A4			sbc X+1
 10812 5F20 50 02			svc
 10813 5F22 49 80			eor #$80
 10814 5F24 30 03 4C BD 5F		jpl l_1BCC
 10815 5F29 AD DB A4			lda Y
 10816 5F2C 85 A2			sta :STACKORIGIN+12
 10817 5F2E A0 00			ldy #$00
 10818 5F30 AD DC A4			lda Y+1
 10819 5F33 10 01			spl
 10820 5F35 88				dey
 10821 5F36 85 B2			sta :STACKORIGIN+STACKWIDTH+12
 10822 5F38 84 C2			sty :STACKORIGIN+STACKWIDTH*2+12
 10823 5F3A 84 D2			sty :STACKORIGIN+STACKWIDTH*3+12
 10824 5F3C A9 07			lda #$07
 10825 5F3E 38 E5 A2			sub :STACKORIGIN+12
 10826 5F41 85 A1			sta :STACKORIGIN+11
 10827 5F43 A9 00			lda #$00
 10828 5F45 E5 B2			sbc :STACKORIGIN+STACKWIDTH+12
 10829 5F47 85 B1			sta :STACKORIGIN+STACKWIDTH+11
 10830 5F49 A9 00			lda #$00
 10831 5F4B E5 C2			sbc :STACKORIGIN+STACKWIDTH*2+12
 10832 5F4D 85 C1			sta :STACKORIGIN+STACKWIDTH*2+11
 10833 5F4F A9 00			lda #$00
 10834 5F51 E5 D2			sbc :STACKORIGIN+STACKWIDTH*3+12
 10835 5F53 85 D1			sta :STACKORIGIN+STACKWIDTH*3+11
 10836 5F55 AD D9 A4			lda X
 10837 5F58 85 A0			sta :STACKORIGIN+10
 10838 5F5A A0 00			ldy #$00
 10839 5F5C AD DA A4			lda X+1
 10840 5F5F 10 01			spl
 10841 5F61 88				dey
 10842 5F62 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 10843 5F64 84 C0			sty :STACKORIGIN+STACKWIDTH*2+10
 10844 5F66 84 D0			sty :STACKORIGIN+STACKWIDTH*3+10
 10845 5F68				.LOCAL
 10846 5F68 A5 D0			lda :STACKORIGIN+STACKWIDTH*3+10
 10847 5F6A 38 E5 D1			sub :STACKORIGIN+STACKWIDTH*3+11
 10848 5F6D D0 1C			bne L4
 10849 5F6F A5 C0			lda :STACKORIGIN+STACKWIDTH*2+10
 10850 5F71 C5 C1			cmp :STACKORIGIN+STACKWIDTH*2+11
 10851 5F73 D0 0A			bne L1
 10852 5F75 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
 10853 5F77 C5 B1			cmp :STACKORIGIN+STACKWIDTH+11
 10854 5F79 D0 04			bne L1
 10855 5F7B A5 A0			lda :STACKORIGIN+10
 10856 5F7D C5 A1			cmp :STACKORIGIN+11
 10857 5F7F F0 10		L1	beq L5
 10858 5F81 B0 04			bcs L3
 10859 5F83 A9 FF			lda #$FF
 10860 5F85 D0 0A			bne L5
 10861 5F87 A9 01		L3	lda #$01
 10862 5F89 D0 06			bne L5
 10863 5F8B 50 04		L4	bvc L5
 10864 5F8D 49 FF			eor #$FF
 10865 5F8F 09 01			ora #$01
 10866 5F91			L5
 10867 					.ENDL
 10868 5F91 10 2A			jpl l_1BCC
 10869
 10870 				; optimize OK (service.pas), line = 1842
 10871
 10872 5F93 AC D5 A4 84 84 AC + 	mwy BALL :bp2
 10873 5F9D A0 12			ldy #BALL.SPEEDY-DATAORIGIN
 10874 5F9F A9 00			lda #$00
 10875 5FA1 38 F1 84			sub (:bp2),y
 10876 5FA4 85 9F			sta :STACKORIGIN+9
 10877 5FA6 C8				iny
 10878 5FA7 A9 00			lda #$00
 10879 5FA9 F1 84			sbc (:bp2),y
 10880 5FAB 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 10881 5FAD A0 12			ldy #BALL.SPEEDY-DATAORIGIN
 10882 5FAF A5 9F			lda :STACKORIGIN+9
 10883 5FB1 91 84			sta (:bp2),y
 10884 5FB3 C8				iny
 10885 5FB4 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 10886 5FB6 91 84			sta (:bp2),y
 10887
 10888 				; optimize OK (service.pas), line = 1843
 10889
 10890 5FB8 A9 01			lda #$01
 10891 5FBA 8D 01 A5			sta EMERGENCY
 10892 5FBD			l_1BCC
 10893
 10894 				; optimize OK (service.pas), line = 1847
 10895
 10896 5FBD AD DB A4			lda Y
 10897 5FC0 85 A0			sta :STACKORIGIN+10
 10898 5FC2 A0 00			ldy #$00
 10899 5FC4 AD DC A4			lda Y+1
 10900 5FC7 10 01			spl
 10901 5FC9 88				dey
 10902 5FCA 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 10903 5FCC 84 C0			sty :STACKORIGIN+STACKWIDTH*2+10
 10904 5FCE 84 D0			sty :STACKORIGIN+STACKWIDTH*3+10
 10905 5FD0 A9 07			lda #$07
 10906 5FD2 38 E5 A0			sub :STACKORIGIN+10
 10907 5FD5 85 9F			sta :STACKORIGIN+9
 10908 5FD7 A9 00			lda #$00
 10909 5FD9 E5 B0			sbc :STACKORIGIN+STACKWIDTH+10
 10910 5FDB 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 10911 5FDD A9 00			lda #$00
 10912 5FDF E5 C0			sbc :STACKORIGIN+STACKWIDTH*2+10
 10913 5FE1 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
 10914 5FE3 A9 00			lda #$00
 10915 5FE5 E5 D0			sbc :STACKORIGIN+STACKWIDTH*3+10
 10916 5FE7 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
 10917 5FE9 AD D9 A4			lda X
 10918 5FEC 85 A0			sta :STACKORIGIN+10
 10919 5FEE A0 00			ldy #$00
 10920 5FF0 AD DA A4			lda X+1
 10921 5FF3 10 01			spl
 10922 5FF5 88				dey
 10923 5FF6 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 10924 5FF8 84 C0			sty :STACKORIGIN+STACKWIDTH*2+10
 10925 5FFA 84 D0			sty :STACKORIGIN+STACKWIDTH*3+10
 10926 5FFC				.LOCAL
 10927 5FFC A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
 10928 5FFE 38 E5 D0			sub :STACKORIGIN+STACKWIDTH*3+10
 10929 6001 D0 1C			bne L4
 10930 6003 A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
 10931 6005 C5 C0			cmp :STACKORIGIN+STACKWIDTH*2+10
 10932 6007 D0 0A			bne L1
 10933 6009 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 10934 600B C5 B0			cmp :STACKORIGIN+STACKWIDTH+10
 10935 600D D0 04			bne L1
 10936 600F A5 9F			lda :STACKORIGIN+9
 10937 6011 C5 A0			cmp :STACKORIGIN+10
 10938 6013 F0 10		L1	beq L5
 10939 6015 B0 04			bcs L3
 10940 6017 A9 FF			lda #$FF
 10941 6019 D0 0A			bne L5
 10942 601B A9 01		L3	lda #$01
 10943 601D D0 06			bne L5
 10944 601F 50 04		L4	bvc L5
 10945 6021 49 FF			eor #$FF
 10946 6023 09 01			ora #$01
 10947 6025			L5
 10948 					.ENDL
 10949 6025 10 3C			jpl l_1BFD
 10950 6027 AD D9 A4			lda X
 10951 602A CD DB A4			cmp Y
 10952 602D AD DA A4			lda X+1
 10953 6030 ED DC A4			sbc Y+1
 10954 6033 50 02			svc
 10955 6035 49 80			eor #$80
 10956 6037 10 2A			jpl l_1BFD
 10957
 10958 				; optimize OK (service.pas), line = 1849
 10959
 10960 6039 AC D5 A4 84 84 AC + 	mwy BALL :bp2
 10961 6043 A0 12			ldy #BALL.SPEEDY-DATAORIGIN
 10962 6045 A9 00			lda #$00
 10963 6047 38 F1 84			sub (:bp2),y
 10964 604A 85 9F			sta :STACKORIGIN+9
 10965 604C C8				iny
 10966 604D A9 00			lda #$00
 10967 604F F1 84			sbc (:bp2),y
 10968 6051 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 10969 6053 A0 12			ldy #BALL.SPEEDY-DATAORIGIN
 10970 6055 A5 9F			lda :STACKORIGIN+9
 10971 6057 91 84			sta (:bp2),y
 10972 6059 C8				iny
 10973 605A A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 10974 605C 91 84			sta (:bp2),y
 10975
 10976 				; optimize OK (service.pas), line = 1850
 10977
 10978 605E A9 03			lda #$03
 10979 6060 8D 01 A5			sta EMERGENCY
 10980 6063			l_1BFD
 10981
 10982 				; optimize OK (service.pas), line = 1854
 10983
 10984 6063 AD D9 A4			lda X
 10985 6066 CD DB A4			cmp Y
 10986 6069 AD DA A4			lda X+1
 10987 606C ED DC A4			sbc Y+1
 10988 606F 50 02			svc
 10989 6071 49 80			eor #$80
 10990 6073 30 03 4C 0C 61		jpl l_1C2E
 10991 6078 AD D9 A4			lda X
 10992 607B 85 A2			sta :STACKORIGIN+12
 10993 607D A0 00			ldy #$00
 10994 607F AD DA A4			lda X+1
 10995 6082 10 01			spl
 10996 6084 88				dey
 10997 6085 85 B2			sta :STACKORIGIN+STACKWIDTH+12
 10998 6087 84 C2			sty :STACKORIGIN+STACKWIDTH*2+12
 10999 6089 84 D2			sty :STACKORIGIN+STACKWIDTH*3+12
 11000 608B A9 07			lda #$07
 11001 608D 38 E5 A2			sub :STACKORIGIN+12
 11002 6090 85 A1			sta :STACKORIGIN+11
 11003 6092 A9 00			lda #$00
 11004 6094 E5 B2			sbc :STACKORIGIN+STACKWIDTH+12
 11005 6096 85 B1			sta :STACKORIGIN+STACKWIDTH+11
 11006 6098 A9 00			lda #$00
 11007 609A E5 C2			sbc :STACKORIGIN+STACKWIDTH*2+12
 11008 609C 85 C1			sta :STACKORIGIN+STACKWIDTH*2+11
 11009 609E A9 00			lda #$00
 11010 60A0 E5 D2			sbc :STACKORIGIN+STACKWIDTH*3+12
 11011 60A2 85 D1			sta :STACKORIGIN+STACKWIDTH*3+11
 11012 60A4 AD DB A4			lda Y
 11013 60A7 85 A0			sta :STACKORIGIN+10
 11014 60A9 A0 00			ldy #$00
 11015 60AB AD DC A4			lda Y+1
 11016 60AE 10 01			spl
 11017 60B0 88				dey
 11018 60B1 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 11019 60B3 84 C0			sty :STACKORIGIN+STACKWIDTH*2+10
 11020 60B5 84 D0			sty :STACKORIGIN+STACKWIDTH*3+10
 11021 60B7				.LOCAL
 11022 60B7 A5 D0			lda :STACKORIGIN+STACKWIDTH*3+10
 11023 60B9 38 E5 D1			sub :STACKORIGIN+STACKWIDTH*3+11
 11024 60BC D0 1C			bne L4
 11025 60BE A5 C0			lda :STACKORIGIN+STACKWIDTH*2+10
 11026 60C0 C5 C1			cmp :STACKORIGIN+STACKWIDTH*2+11
 11027 60C2 D0 0A			bne L1
 11028 60C4 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
 11029 60C6 C5 B1			cmp :STACKORIGIN+STACKWIDTH+11
 11030 60C8 D0 04			bne L1
 11031 60CA A5 A0			lda :STACKORIGIN+10
 11032 60CC C5 A1			cmp :STACKORIGIN+11
 11033 60CE F0 10		L1	beq L5
 11034 60D0 B0 04			bcs L3
 11035 60D2 A9 FF			lda #$FF
 11036 60D4 D0 0A			bne L5
 11037 60D6 A9 01		L3	lda #$01
 11038 60D8 D0 06			bne L5
 11039 60DA 50 04		L4	bvc L5
 11040 60DC 49 FF			eor #$FF
 11041 60DE 09 01			ora #$01
 11042 60E0			L5
 11043 					.ENDL
 11044 60E0 10 2A			jpl l_1C2E
 11045
 11046 				; optimize OK (service.pas), line = 1856
 11047
 11048 60E2 AC D5 A4 84 84 AC + 	mwy BALL :bp2
 11049 60EC A0 10			ldy #BALL.SPEEDX-DATAORIGIN
 11050 60EE A9 00			lda #$00
 11051 60F0 38 F1 84			sub (:bp2),y
 11052 60F3 85 9F			sta :STACKORIGIN+9
 11053 60F5 C8				iny
 11054 60F6 A9 00			lda #$00
 11055 60F8 F1 84			sbc (:bp2),y
 11056 60FA 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 11057 60FC A0 10			ldy #BALL.SPEEDX-DATAORIGIN
 11058 60FE A5 9F			lda :STACKORIGIN+9
 11059 6100 91 84			sta (:bp2),y
 11060 6102 C8				iny
 11061 6103 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 11062 6105 91 84			sta (:bp2),y
 11063
 11064 				; optimize OK (service.pas), line = 1857
 11065
 11066 6107 A9 02			lda #$02
 11067 6109 8D 01 A5			sta EMERGENCY
 11068 610C			l_1C2E
 11069
 11070 				; optimize OK (service.pas), line = 1861
 11071
 11072 610C AD D9 A4			lda X
 11073 610F 85 A0			sta :STACKORIGIN+10
 11074 6111 A0 00			ldy #$00
 11075 6113 AD DA A4			lda X+1
 11076 6116 10 01			spl
 11077 6118 88				dey
 11078 6119 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 11079 611B 84 C0			sty :STACKORIGIN+STACKWIDTH*2+10
 11080 611D 84 D0			sty :STACKORIGIN+STACKWIDTH*3+10
 11081 611F A9 07			lda #$07
 11082 6121 38 E5 A0			sub :STACKORIGIN+10
 11083 6124 85 9F			sta :STACKORIGIN+9
 11084 6126 A9 00			lda #$00
 11085 6128 E5 B0			sbc :STACKORIGIN+STACKWIDTH+10
 11086 612A 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 11087 612C A9 00			lda #$00
 11088 612E E5 C0			sbc :STACKORIGIN+STACKWIDTH*2+10
 11089 6130 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
 11090 6132 A9 00			lda #$00
 11091 6134 E5 D0			sbc :STACKORIGIN+STACKWIDTH*3+10
 11092 6136 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
 11093 6138 AD DB A4			lda Y
 11094 613B 85 A0			sta :STACKORIGIN+10
 11095 613D A0 00			ldy #$00
 11096 613F AD DC A4			lda Y+1
 11097 6142 10 01			spl
 11098 6144 88				dey
 11099 6145 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 11100 6147 84 C0			sty :STACKORIGIN+STACKWIDTH*2+10
 11101 6149 84 D0			sty :STACKORIGIN+STACKWIDTH*3+10
 11102 614B				.LOCAL
 11103 614B A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
 11104 614D 38 E5 D0			sub :STACKORIGIN+STACKWIDTH*3+10
 11105 6150 D0 1C			bne L4
 11106 6152 A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
 11107 6154 C5 C0			cmp :STACKORIGIN+STACKWIDTH*2+10
 11108 6156 D0 0A			bne L1
 11109 6158 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 11110 615A C5 B0			cmp :STACKORIGIN+STACKWIDTH+10
 11111 615C D0 04			bne L1
 11112 615E A5 9F			lda :STACKORIGIN+9
 11113 6160 C5 A0			cmp :STACKORIGIN+10
 11114 6162 F0 10		L1	beq L5
 11115 6164 B0 04			bcs L3
 11116 6166 A9 FF			lda #$FF
 11117 6168 D0 0A			bne L5
 11118 616A A9 01		L3	lda #$01
 11119 616C D0 06			bne L5
 11120 616E 50 04		L4	bvc L5
 11121 6170 49 FF			eor #$FF
 11122 6172 09 01			ora #$01
 11123 6174			L5
 11124 					.ENDL
 11125 6174 10 3C			jpl l_1C5F
 11126 6176 AD DB A4			lda Y
 11127 6179 CD D9 A4			cmp X
 11128 617C AD DC A4			lda Y+1
 11129 617F ED DA A4			sbc X+1
 11130 6182 50 02			svc
 11131 6184 49 80			eor #$80
 11132 6186 10 2A			jpl l_1C5F
 11133
 11134 				; optimize OK (service.pas), line = 1863
 11135
 11136 6188 AC D5 A4 84 84 AC + 	mwy BALL :bp2
 11137 6192 A0 10			ldy #BALL.SPEEDX-DATAORIGIN
 11138 6194 A9 00			lda #$00
 11139 6196 38 F1 84			sub (:bp2),y
 11140 6199 85 9F			sta :STACKORIGIN+9
 11141 619B C8				iny
 11142 619C A9 00			lda #$00
 11143 619E F1 84			sbc (:bp2),y
 11144 61A0 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 11145 61A2 A0 10			ldy #BALL.SPEEDX-DATAORIGIN
 11146 61A4 A5 9F			lda :STACKORIGIN+9
 11147 61A6 91 84			sta (:bp2),y
 11148 61A8 C8				iny
 11149 61A9 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 11150 61AB 91 84			sta (:bp2),y
 11151
 11152 				; optimize OK (service.pas), line = 1864
 11153
 11154 61AD A9 04			lda #$04
 11155 61AF 8D 01 A5			sta EMERGENCY
 11156 61B2			l_1C5F
 11157
 11158 				; optimize OK (service.pas), line = 1868
 11159
 11160 61B2 AD DA A4			lda X+1
 11161 61B5 CD DC A4			cmp Y+1
 11162 61B8 D0 06			bne @+
 11163 61BA AD D9 A4			lda X
 11164 61BD CD DB A4			cmp Y
 11165 				@
 11166 61C0 F0 5A			jeq l_1C90x
 11167 61C2 AD DB A4			lda Y
 11168 61C5 85 A2			sta :STACKORIGIN+12
 11169 61C7 A0 00			ldy #$00
 11170 61C9 AD DC A4			lda Y+1
 11171 61CC 10 01			spl
 11172 61CE 88				dey
 11173 61CF 85 B2			sta :STACKORIGIN+STACKWIDTH+12
 11174 61D1 84 C2			sty :STACKORIGIN+STACKWIDTH*2+12
 11175 61D3 84 D2			sty :STACKORIGIN+STACKWIDTH*3+12
 11176 61D5 A9 07			lda #$07
 11177 61D7 38 E5 A2			sub :STACKORIGIN+12
 11178 61DA 85 A1			sta :STACKORIGIN+11
 11179 61DC A9 00			lda #$00
 11180 61DE E5 B2			sbc :STACKORIGIN+STACKWIDTH+12
 11181 61E0 85 B1			sta :STACKORIGIN+STACKWIDTH+11
 11182 61E2 A9 00			lda #$00
 11183 61E4 E5 C2			sbc :STACKORIGIN+STACKWIDTH*2+12
 11184 61E6 85 C1			sta :STACKORIGIN+STACKWIDTH*2+11
 11185 61E8 A9 00			lda #$00
 11186 61EA E5 D2			sbc :STACKORIGIN+STACKWIDTH*3+12
 11187 61EC 85 D1			sta :STACKORIGIN+STACKWIDTH*3+11
 11188 61EE AD D9 A4			lda X
 11189 61F1 85 A0			sta :STACKORIGIN+10
 11190 61F3 A0 00			ldy #$00
 11191 61F5 AD DA A4			lda X+1
 11192 61F8 10 01			spl
 11193 61FA 88				dey
 11194 61FB 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 11195 61FD 84 C0			sty :STACKORIGIN+STACKWIDTH*2+10
 11196 61FF 84 D0			sty :STACKORIGIN+STACKWIDTH*3+10
 11197 6201 A5 D0			lda :STACKORIGIN+STACKWIDTH*3+10
 11198 6203 C5 D1			cmp :STACKORIGIN+STACKWIDTH*3+11
 11199 6205 D0 10			bne @+
 11200 6207 A5 C0			lda :STACKORIGIN+STACKWIDTH*2+10
 11201 6209 C5 C1			cmp :STACKORIGIN+STACKWIDTH*2+11
 11202 620B D0 0A			bne @+
 11203 620D A5 B0			lda :STACKORIGIN+STACKWIDTH+10
 11204 620F C5 B1			cmp :STACKORIGIN+STACKWIDTH+11
 11205 6211 D0 04			bne @+
 11206 6213 A5 A0			lda :STACKORIGIN+10
 11207 6215 C5 A1			cmp :STACKORIGIN+11
 11208 				@
 11209 6217 F0 03 4C D9 6A		jne l_1C90
 11210 621C			l_1C90x
 11211
 11212 				; optimize OK (service.pas), line = 1870
 11213
 11214 621C A9 00			lda #$00
 11215 621E 8D F5 A4			sta DEFLECT
 11216 6221 8D F6 A4			sta DEFLECT+1
 11217
 11218 				; optimize OK (service.pas), line = 1871
 11219
 11220 6224 8D 03 A5			sta TOUCH
 11221
 11222 				; optimize OK (service.pas), line = 1879
 11223
 11224 6227 AD D9 A4			lda X
 11225 622A C9 05			cmp #$05
 11226 622C AD DA A4			lda X+1
 11227 622F E9 00			sbc #$00
 11228 6231 50 02			svc
 11229 6233 49 80			eor #$80
 11230 6235 30 08			jmi l_1CAA
 11231 6237 AD 03 A5			lda TOUCH
 11232 623A 09 01			ora #$01
 11233 623C 8D 03 A5			sta TOUCH
 11234 623F			l_1CAA
 11235
 11236 				; optimize OK (service.pas), line = 1880
 11237
 11238 623F AD DB A4			lda Y
 11239 6242 C9 05			cmp #$05
 11240 6244 AD DC A4			lda Y+1
 11241 6247 E9 00			sbc #$00
 11242 6249 50 02			svc
 11243 624B 49 80			eor #$80
 11244 624D 30 08			jmi l_1CC8
 11245 624F AD 03 A5			lda TOUCH
 11246 6252 09 02			ora #$02
 11247 6254 8D 03 A5			sta TOUCH
 11248 6257			l_1CC8
 11249
 11250 				; optimize OK (service.pas), line = 1890
 11251
 11252 6257 A9 FF			lda #$FF
 11253 6259 8D E5 A4			sta LX
 11254 625C 8D E6 A4			sta LX+1
 11255
 11256 625F			l_1CDE
 11257 				; --- ForToDoCondition
 11258 625F AD E5 A4			lda LX
 11259 6262 C9 02			cmp #$02
 11260 6264 AD E6 A4			lda LX+1
 11261 6267 E9 00			sbc #$00
 11262 6269 50 02			svc
 11263 626B 49 80			eor #$80
 11264 626D 0A				asl @
 11265 626E B0 03 4C E6 64		jcc l_1CEA
 11266
 11267 				; optimize OK (service.pas), line = 1891
 11268
 11269 6273 A9 FF			lda #$FF
 11270 6275 8D E7 A4			sta LY
 11271 6278 8D E8 A4			sta LY+1
 11272
 11273 627B			l_1CF3
 11274 				; --- ForToDoCondition
 11275 627B AD E7 A4			lda LY
 11276 627E C9 02			cmp #$02
 11277 6280 AD E8 A4			lda LY+1
 11278 6283 E9 00			sbc #$00
 11279 6285 50 02			svc
 11280 6287 49 80			eor #$80
 11281 6289 0A				asl @
 11282 628A B0 03 4C D8 64		jcc l_1CFF
 11283
 11284 				; optimize FAIL (1, service.pas), line = 1893
 11285
 11286 628F E8				inx
 11287 6290 A9 00 95 96			mva #$00 :STACKORIGIN,x
 11288 6294 95 A6			sta :STACKORIGIN+STACKWIDTH,x
 11289 6296 E8				inx
 11290 6297 A9 0C 95 96			mva #$0C :STACKORIGIN,x
 11291 629B A9 00 95 A6			mva #$00 :STACKORIGIN+STACKWIDTH,x
 11292 629F AD DD A4			lda XB
 11293 62A2 18 6D E5 A4			add LX
 11294 62A6 8D D2 A3			sta MIN.A
 11295 62A9 AD DE A4			lda XB+1
 11296 62AC 6D E6 A4			adc LX+1
 11297 62AF 8D D3 A3			sta MIN.A+1
 11298 62B2 B5 96			lda :STACKORIGIN,x
 11299 62B4 8D D4 A3			sta MIN.B
 11300 62B7 B5 A6			lda :STACKORIGIN+STACKWIDTH,x
 11301 62B9 8D D5 A3			sta MIN.B+1
 11302 62BC CA				dex
 11303 62BD 20 EE 26			jsr MIN
 11304 62C0 AD D6 A3			lda MIN.RESULT
 11305 62C3 8D CC A3			sta MAX.A
 11306 62C6 AD D7 A3			lda MIN.RESULT+1
 11307 62C9 8D CD A3			sta MAX.A+1
 11308 62CC B5 96			lda :STACKORIGIN,x
 11309 62CE 8D CE A3			sta MAX.B
 11310 62D1 B5 A6			lda :STACKORIGIN+STACKWIDTH,x
 11311 62D3 8D CF A3			sta MAX.B+1
 11312 62D6 CA				dex
 11313 62D7 20 C3 26			jsr MAX
 11314 62DA AD D0 A3			lda MAX.RESULT
 11315 62DD 8D E9 A4			sta MX
 11316 62E0 AD D1 A3			lda MAX.RESULT+1
 11317 62E3 8D EA A4			sta MX+1
 11318
 11319 				; optimize OK (service.pas), line = 1894
 11320
 11321 62E6 AD DF A4			lda YB
 11322 62E9 18 6D E7 A4			add LY
 11323 62ED 8D EB A4			sta MY
 11324 62F0 AD E0 A4			lda YB+1
 11325 62F3 6D E8 A4			adc LY+1
 11326 62F6 8D EC A4			sta MY+1
 11327
 11328 				; optimize OK (service.pas), line = 1898
 11329
 11330 62F9 AD DD A4			lda XB
 11331 62FC 85 9F			sta :STACKORIGIN+9
 11332 62FE A0 00			ldy #$00
 11333 6300 AD DE A4			lda XB+1
 11334 6303 10 01			spl
 11335 6305 88				dey
 11336 6306 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 11337 6308 84 BF			sty :STACKORIGIN+STACKWIDTH*2+9
 11338 630A 84 CF			sty :STACKORIGIN+STACKWIDTH*3+9
 11339 630C AD E5 A4			lda LX
 11340 630F 85 A0			sta :STACKORIGIN+10
 11341 6311 A0 00			ldy #$00
 11342 6313 AD E6 A4			lda LX+1
 11343 6316 10 01			spl
 11344 6318 88				dey
 11345 6319 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 11346 631B 84 C0			sty :STACKORIGIN+STACKWIDTH*2+10
 11347 631D 84 D0			sty :STACKORIGIN+STACKWIDTH*3+10
 11348 631F A5 9F			lda :STACKORIGIN+9
 11349 6321 18 65 A0			add :STACKORIGIN+10
 11350 6324 F0 03 4C 32 64		jne l_1D54x
 11351 6329 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 11352 632B 65 B0			adc :STACKORIGIN+STACKWIDTH+10
 11353 632D 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 11354 632F A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
 11355 6331 65 C0			adc :STACKORIGIN+STACKWIDTH*2+10
 11356 6333 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
 11357 6335 A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
 11358 6337 65 D0			adc :STACKORIGIN+STACKWIDTH*3+10
 11359 6339 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
 11360 633B 10 03 4C 32 64		jmi l_1D54x
 11361 6340 AD DD A4			lda XB
 11362 6343 85 A0			sta :STACKORIGIN+10
 11363 6345 A0 00			ldy #$00
 11364 6347 AD DE A4			lda XB+1
 11365 634A 10 01			spl
 11366 634C 88				dey
 11367 634D 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 11368 634F 84 C0			sty :STACKORIGIN+STACKWIDTH*2+10
 11369 6351 84 D0			sty :STACKORIGIN+STACKWIDTH*3+10
 11370 6353 AD E5 A4			lda LX
 11371 6356 85 A1			sta :STACKORIGIN+11
 11372 6358 A0 00			ldy #$00
 11373 635A AD E6 A4			lda LX+1
 11374 635D 10 01			spl
 11375 635F 88				dey
 11376 6360 85 B1			sta :STACKORIGIN+STACKWIDTH+11
 11377 6362 84 C1			sty :STACKORIGIN+STACKWIDTH*2+11
 11378 6364 84 D1			sty :STACKORIGIN+STACKWIDTH*3+11
 11379 6366 A5 A0			lda :STACKORIGIN+10
 11380 6368 18 65 A1			add :STACKORIGIN+11
 11381 636B 85 A0			sta :STACKORIGIN+10
 11382 636D A5 B0			lda :STACKORIGIN+STACKWIDTH+10
 11383 636F 65 B1			adc :STACKORIGIN+STACKWIDTH+11
 11384 6371 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 11385 6373 A5 C0			lda :STACKORIGIN+STACKWIDTH*2+10
 11386 6375 65 C1			adc :STACKORIGIN+STACKWIDTH*2+11
 11387 6377 85 C0			sta :STACKORIGIN+STACKWIDTH*2+10
 11388 6379 A5 D0			lda :STACKORIGIN+STACKWIDTH*3+10
 11389 637B 65 D1			adc :STACKORIGIN+STACKWIDTH*3+11
 11390 637D 85 D0			sta :STACKORIGIN+STACKWIDTH*3+10
 11391 637F				.LOCAL
 11392 637F A5 D0			lda :STACKORIGIN+STACKWIDTH*3+10
 11393 6381 38 E9 00			sub #$00
 11394 6384 D0 1C			bne L4
 11395 6386 A5 C0			lda :STACKORIGIN+STACKWIDTH*2+10
 11396 6388 C9 00			cmp #$00
 11397 638A D0 0A			bne L1
 11398 638C A5 B0			lda :STACKORIGIN+STACKWIDTH+10
 11399 638E C9 00			cmp #$00
 11400 6390 D0 04			bne L1
 11401 6392 A5 A0			lda :STACKORIGIN+10
 11402 6394 C9 0C			cmp #$0C
 11403 6396 F0 10		L1	beq L5
 11404 6398 B0 04			bcs L3
 11405 639A A9 FF			lda #$FF
 11406 639C D0 0A			bne L5
 11407 639E A9 01		L3	lda #$01
 11408 63A0 D0 06			bne L5
 11409 63A2 50 04		L4	bvc L5
 11410 63A4 49 FF			eor #$FF
 11411 63A6 09 01			ora #$01
 11412 63A8			L5
 11413 					.ENDL
 11414 63A8 F0 02			seq
 11415 63AA 10 03			bpl @+
 11416 63AC 4C B2 63			jmp *+6
 11417 63AF 4C 32 64		@	jmp l_1D54x
 11418 63B2 A9 10			lda #$10
 11419 63B4 85 8E			sta :ecx
 11420 63B6 85 92			sta :ztmp8
 11421 63B8 A9 00			lda #$00
 11422 63BA 85 8F			sta :ecx+1
 11423 63BC 85 93			sta :ztmp9
 11424 63BE AD EB A4			lda MY
 11425 63C1 85 86			sta :eax
 11426 63C3 85 94			sta :ztmp10
 11427 63C5 AD EC A4			lda MY+1
 11428 63C8 85 87			sta :eax+1
 11429 63CA 85 95			sta :ztmp11
 11430 					.ifdef fmulinit
 11431 					fmulu_16
 11432 					els
 11433 63CC 20 2A 13			imulCX
 11434 					eif
 11435 63CF A5 95			lda :ztmp11
 11436 63D1 10 0D			bpl @+
 11437 63D3 A5 88			lda :eax+2
 11438 63D5 38 E5 92			sub :ztmp8
 11439 63D8 85 88			sta :eax+2
 11440 63DA A5 89			lda :eax+3
 11441 63DC E5 93			sbc :ztmp9
 11442 63DE 85 89			sta :eax+3
 11443 				@
 11444 63E0 A5 93			lda :ztmp9
 11445 63E2 10 0D			bpl @+
 11446 63E4 A5 88			lda :eax+2
 11447 63E6 38 E5 94			sub :ztmp10
 11448 63E9 85 88			sta :eax+2
 11449 63EB A5 89			lda :eax+3
 11450 63ED E5 95			sbc :ztmp11
 11451 63EF 85 89			sta :eax+3
 11452 				@
 11453 63F1 A5 86			lda :eax
 11454 63F3 85 A1			sta :STACKORIGIN+11
 11455 63F5 A5 87			lda :eax+1
 11456 63F7 85 B1			sta :STACKORIGIN+STACKWIDTH+11
 11457 63F9 A5 88			lda :eax+2
 11458 63FB 85 C1			sta :STACKORIGIN+STACKWIDTH*2+11
 11459 63FD A5 89			lda :eax+3
 11460 63FF 85 D1			sta :STACKORIGIN+STACKWIDTH*3+11
 11461 6401 AD E9 A4			lda MX
 11462 6404 85 A0			sta :STACKORIGIN+10
 11463 6406 A0 00			ldy #$00
 11464 6408 AD EA A4			lda MX+1
 11465 640B 10 01			spl
 11466 640D 88				dey
 11467 640E 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 11468 6410 84 C0			sty :STACKORIGIN+STACKWIDTH*2+10
 11469 6412 84 D0			sty :STACKORIGIN+STACKWIDTH*3+10
 11470 6414 A5 A0			lda :STACKORIGIN+10
 11471 6416 18 65 A1			add :STACKORIGIN+11
 11472 6419 85 A0			sta :STACKORIGIN+10
 11473 641B A5 B0			lda :STACKORIGIN+STACKWIDTH+10
 11474 641D 65 B1			adc :STACKORIGIN+STACKWIDTH+11
 11475 641F 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 11476 6421 A5 A0			lda :STACKORIGIN+10
 11477 6423 18 69 00			add #$00
 11478 6426 A8				tay
 11479 6427 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
 11480 6429 69 00			adc #$00
 11481 642B 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 11482 642D B9 00 DB			lda adr.WALL,y
 11483 6430 F0 4D			jeq l_1D54
 11484 				@
 11485 6432			l_1D54x
 11486
 11487 				; optimize OK (service.pas), line = 1901
 11488
 11489 6432 AD E5 A4			lda LX
 11490 6435 18 69 01			add #$01
 11491 6438 85 86			sta :eax
 11492 643A AD E6 A4			lda LX+1
 11493 643D 69 00			adc #$00
 11494 643F 85 87			sta :eax+1
 11495 6441 A9 06			lda #$06
 11496 6443 85 8E			sta :ecx
 11497 6445 A9 00			lda #$00
 11498 6447 85 8F			sta :ecx+1
 11499 					.ifdef fmulinit
 11500 					fmulu_16
 11501 					els
 11502 6449 20 2A 13			imulCX
 11503 					eif
 11504 644C AD E7 A4			lda LY
 11505 644F 18 69 01			add #$01
 11506 6452 85 A0			sta :STACKORIGIN+10
 11507 6454 AD E8 A4			lda LY+1
 11508 6457 69 00			adc #$00
 11509 6459 06 A0			asl :STACKORIGIN+10
 11510 645B 2A				rol @
 11511 645C 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 11512 645E A5 86			lda :eax
 11513 6460 18 65 A0			add :STACKORIGIN+10
 11514 6463 85 9F			sta :STACKORIGIN+9
 11515 6465 A5 87			lda :eax+1
 11516 6467 65 B0			adc :STACKORIGIN+STACKWIDTH+10
 11517 6469 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 11518 646B A5 9F			lda :STACKORIGIN+9
 11519 646D 18 69 00			add #$00
 11520 6470 A8				tay
 11521 6471 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 11522 6473 69 00			adc #$00
 11523 6475 A9 01			lda #$01
 11524 6477 99 04 A5			sta adr.ADJW,y
 11525 647A A9 00			lda #$00
 11526 647C 4C C7 64			jmp l_1D75
 11527 647F			l_1D54
 11528
 11529 				; optimize OK (service.pas), line = 1903
 11530
 11531 647F AD E5 A4			lda LX
 11532 6482 18 69 01			add #$01
 11533 6485 85 86			sta :eax
 11534 6487 AD E6 A4			lda LX+1
 11535 648A 69 00			adc #$00
 11536 648C 85 87			sta :eax+1
 11537 648E A9 06			lda #$06
 11538 6490 85 8E			sta :ecx
 11539 6492 A9 00			lda #$00
 11540 6494 85 8F			sta :ecx+1
 11541 					.ifdef fmulinit
 11542 					fmulu_16
 11543 					els
 11544 6496 20 2A 13			imulCX
 11545 					eif
 11546 6499 AD E7 A4			lda LY
 11547 649C 18 69 01			add #$01
 11548 649F 85 A0			sta :STACKORIGIN+10
 11549 64A1 AD E8 A4			lda LY+1
 11550 64A4 69 00			adc #$00
 11551 64A6 06 A0			asl :STACKORIGIN+10
 11552 64A8 2A				rol @
 11553 64A9 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 11554 64AB A5 86			lda :eax
 11555 64AD 18 65 A0			add :STACKORIGIN+10
 11556 64B0 85 9F			sta :STACKORIGIN+9
 11557 64B2 A5 87			lda :eax+1
 11558 64B4 65 B0			adc :STACKORIGIN+STACKWIDTH+10
 11559 64B6 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 11560 64B8 A5 9F			lda :STACKORIGIN+9
 11561 64BA 18 69 00			add #$00
 11562 64BD A8				tay
 11563 64BE A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 11564 64C0 69 00			adc #$00
 11565 64C2 A9 00			lda #$00
 11566 64C4 99 04 A5			sta adr.ADJW,y
 11567 64C7			l_1D75
 11568 64C7 99 05 A5			sta adr.ADJW+1,y
 11569
 11570 				; --- ForToDoEpilog
 11571 64CA EE E7 A4			inc LY
 11572 64CD F0 03 4C 7B 62		jne l_1CF3
 11573 64D2 EE E8 A4			inc LY+1
 11574 64D5 4C 7B 62			jmp l_1CF3
 11575 64D8			l_1CFF
 11576
 11577 				; --- ForToDoEpilog
 11578 64D8 EE E5 A4			inc LX
 11579 64DB F0 03 4C 5F 62		jne l_1CDE
 11580 64E0 EE E6 A4			inc LX+1
 11581 64E3 4C 5F 62			jmp l_1CDE
 11582 64E6			l_1CEA
 11583
 11584 				; optimize OK (service.pas), line = 1922
 11585
 11586 64E6 AD 04 A5			lda adr.ADJW
 11587 64E9 85 9F			sta :STACKORIGIN+9
 11588 64EB AD 05 A5			lda adr.ADJW+1
 11589 64EE 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 11590 64F0 AD 0A A5			lda adr.ADJW+$06
 11591 64F3 85 A0			sta :STACKORIGIN+10
 11592 64F5 AD 0B A5			lda adr.ADJW+1+$06
 11593 64F8 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 11594 64FA 06 A0			asl :STACKORIGIN+10
 11595 64FC 26 B0			rol :STACKORIGIN+STACKWIDTH+10
 11596 64FE A5 9F			lda :STACKORIGIN+9
 11597 6500 18 65 A0			add :STACKORIGIN+10
 11598 6503 85 9F			sta :STACKORIGIN+9
 11599 6505 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 11600 6507 65 B0			adc :STACKORIGIN+STACKWIDTH+10
 11601 6509 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 11602 650B AD 10 A5			lda adr.ADJW+$0C
 11603 650E 85 A0			sta :STACKORIGIN+10
 11604 6510 AD 11 A5			lda adr.ADJW+1+$0C
 11605 6513 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 11606 6515 06 A0			asl :STACKORIGIN+10
 11607 6517 26 B0			rol :STACKORIGIN+STACKWIDTH+10
 11608 6519 06 A0			asl :STACKORIGIN+10
 11609 651B 26 B0			rol :STACKORIGIN+STACKWIDTH+10
 11610 651D A5 9F			lda :STACKORIGIN+9
 11611 651F 18 65 A0			add :STACKORIGIN+10
 11612 6522 85 9F			sta :STACKORIGIN+9
 11613 6524 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 11614 6526 65 B0			adc :STACKORIGIN+STACKWIDTH+10
 11615 6528 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 11616 652A AD 12 A5			lda adr.ADJW+$0E
 11617 652D 85 A0			sta :STACKORIGIN+10
 11618 652F AD 13 A5			lda adr.ADJW+1+$0E
 11619 6532 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 11620 6534 06 A0			asl :STACKORIGIN+10
 11621 6536 26 B0			rol :STACKORIGIN+STACKWIDTH+10
 11622 6538 06 A0			asl :STACKORIGIN+10
 11623 653A 26 B0			rol :STACKORIGIN+STACKWIDTH+10
 11624 653C 06 A0			asl :STACKORIGIN+10
 11625 653E 26 B0			rol :STACKORIGIN+STACKWIDTH+10
 11626 6540 A5 9F			lda :STACKORIGIN+9
 11627 6542 18 65 A0			add :STACKORIGIN+10
 11628 6545 85 9F			sta :STACKORIGIN+9
 11629 6547 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 11630 6549 65 B0			adc :STACKORIGIN+STACKWIDTH+10
 11631 654B 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 11632 654D AD 14 A5			lda adr.ADJW+$10
 11633 6550 85 A0			sta :STACKORIGIN+10
 11634 6552 AD 15 A5			lda adr.ADJW+1+$10
 11635 6555 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 11636 6557 06 A0			asl :STACKORIGIN+10
 11637 6559 26 B0			rol :STACKORIGIN+STACKWIDTH+10
 11638 655B 06 A0			asl :STACKORIGIN+10
 11639 655D 26 B0			rol :STACKORIGIN+STACKWIDTH+10
 11640 655F 06 A0			asl :STACKORIGIN+10
 11641 6561 26 B0			rol :STACKORIGIN+STACKWIDTH+10
 11642 6563 06 A0			asl :STACKORIGIN+10
 11643 6565 26 B0			rol :STACKORIGIN+STACKWIDTH+10
 11644 6567 A5 9F			lda :STACKORIGIN+9
 11645 6569 18 65 A0			add :STACKORIGIN+10
 11646 656C 85 9F			sta :STACKORIGIN+9
 11647 656E A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 11648 6570 65 B0			adc :STACKORIGIN+STACKWIDTH+10
 11649 6572 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 11650 6574 AD 0E A5			lda adr.ADJW+$0A
 11651 6577 85 A0			sta :STACKORIGIN+10
 11652 6579 AD 0F A5			lda adr.ADJW+1+$0A
 11653 657C 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 11654 657E 06 A0			asl :STACKORIGIN+10
 11655 6580 26 B0			rol :STACKORIGIN+STACKWIDTH+10
 11656 6582 06 A0			asl :STACKORIGIN+10
 11657 6584 26 B0			rol :STACKORIGIN+STACKWIDTH+10
 11658 6586 06 A0			asl :STACKORIGIN+10
 11659 6588 26 B0			rol :STACKORIGIN+STACKWIDTH+10
 11660 658A 06 A0			asl :STACKORIGIN+10
 11661 658C 26 B0			rol :STACKORIGIN+STACKWIDTH+10
 11662 658E 06 A0			asl :STACKORIGIN+10
 11663 6590 26 B0			rol :STACKORIGIN+STACKWIDTH+10
 11664 6592 A5 9F			lda :STACKORIGIN+9
 11665 6594 18 65 A0			add :STACKORIGIN+10
 11666 6597 85 9F			sta :STACKORIGIN+9
 11667 6599 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 11668 659B 65 B0			adc :STACKORIGIN+STACKWIDTH+10
 11669 659D 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 11670 659F AD 08 A5			lda adr.ADJW+$04
 11671 65A2 85 A0			sta :STACKORIGIN+10
 11672 65A4 AD 09 A5			lda adr.ADJW+1+$04
 11673 65A7 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 11674 65A9 06 A0			asl :STACKORIGIN+10
 11675 65AB 26 B0			rol :STACKORIGIN+STACKWIDTH+10
 11676 65AD 06 A0			asl :STACKORIGIN+10
 11677 65AF 26 B0			rol :STACKORIGIN+STACKWIDTH+10
 11678 65B1 06 A0			asl :STACKORIGIN+10
 11679 65B3 26 B0			rol :STACKORIGIN+STACKWIDTH+10
 11680 65B5 06 A0			asl :STACKORIGIN+10
 11681 65B7 26 B0			rol :STACKORIGIN+STACKWIDTH+10
 11682 65B9 06 A0			asl :STACKORIGIN+10
 11683 65BB 26 B0			rol :STACKORIGIN+STACKWIDTH+10
 11684 65BD 06 A0			asl :STACKORIGIN+10
 11685 65BF 26 B0			rol :STACKORIGIN+STACKWIDTH+10
 11686 65C1 A5 9F			lda :STACKORIGIN+9
 11687 65C3 18 65 A0			add :STACKORIGIN+10
 11688 65C6 85 9F			sta :STACKORIGIN+9
 11689 65C8 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 11690 65CA 65 B0			adc :STACKORIGIN+STACKWIDTH+10
 11691 65CC 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 11692 65CE AD 06 A5			lda adr.ADJW+$02
 11693 65D1 85 A0			sta :STACKORIGIN+10
 11694 65D3 AD 07 A5			lda adr.ADJW+1+$02
 11695 65D6 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 11696 65D8 06 A0			asl :STACKORIGIN+10
 11697 65DA 26 B0			rol :STACKORIGIN+STACKWIDTH+10
 11698 65DC 06 A0			asl :STACKORIGIN+10
 11699 65DE 26 B0			rol :STACKORIGIN+STACKWIDTH+10
 11700 65E0 06 A0			asl :STACKORIGIN+10
 11701 65E2 26 B0			rol :STACKORIGIN+STACKWIDTH+10
 11702 65E4 06 A0			asl :STACKORIGIN+10
 11703 65E6 26 B0			rol :STACKORIGIN+STACKWIDTH+10
 11704 65E8 06 A0			asl :STACKORIGIN+10
 11705 65EA 26 B0			rol :STACKORIGIN+STACKWIDTH+10
 11706 65EC 06 A0			asl :STACKORIGIN+10
 11707 65EE 26 B0			rol :STACKORIGIN+STACKWIDTH+10
 11708 65F0 06 A0			asl :STACKORIGIN+10
 11709 65F2 26 B0			rol :STACKORIGIN+STACKWIDTH+10
 11710 65F4 A5 9F			lda :STACKORIGIN+9
 11711 65F6 18 65 A0			add :STACKORIGIN+10
 11712 65F9 8D F7 A4			sta AROUND
 11713 65FC A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 11714 65FE 65 B0			adc :STACKORIGIN+STACKWIDTH+10
 11715 6600 8D F8 A4			sta AROUND+1
 11716
 11717 				; optimize OK (service.pas), line = 1953
 11718
 11719 6603 AD 03 A5			lda TOUCH
 11720 6606 F0 03 4C C4 66		jne l_1E14
 11721
 11722 				; optimize OK (service.pas), line = 1955
 11723
 11724 660B AD F7 A4			lda AROUND
 11725 660E 29 83			and #$83
 11726 6610 D0 0A			jne l_1E2A
 11727 6612 A9 11			lda #$11
 11728 6614 8D F5 A4			sta DEFLECT
 11729 6617 A9 00			lda #$00
 11730 6619 8D F6 A4			sta DEFLECT+1
 11731 661C			l_1E2A
 11732
 11733 				; optimize OK (service.pas), line = 1956
 11734
 11735 661C AD F7 A4			lda AROUND
 11736 661F 29 83			and #$83
 11737 6621 C9 01			cmp #$01
 11738 6623 D0 0A			jne l_1E46
 11739 6625 A9 33			lda #$33
 11740 6627 8D F5 A4			sta DEFLECT
 11741 662A A9 00			lda #$00
 11742 662C 8D F6 A4			sta DEFLECT+1
 11743 662F			l_1E46
 11744
 11745 				; optimize OK (service.pas), line = 1957
 11746
 11747 662F AD F7 A4			lda AROUND
 11748 6632 29 83			and #$83
 11749 6634 C9 02			cmp #$02
 11750 6636 D0 0A			jne l_1E62
 11751 6638 A9 10			lda #$10
 11752 663A 8D F5 A4			sta DEFLECT
 11753 663D A9 00			lda #$00
 11754 663F 8D F6 A4			sta DEFLECT+1
 11755 6642			l_1E62
 11756
 11757 				; optimize OK (service.pas), line = 1958
 11758
 11759 6642 AD F7 A4			lda AROUND
 11760 6645 29 83			and #$83
 11761 6647 C9 03			cmp #$03
 11762 6649 D0 0A			jne l_1E7E
 11763 664B A9 12			lda #$12
 11764 664D 8D F5 A4			sta DEFLECT
 11765 6650 A9 00			lda #$00
 11766 6652 8D F6 A4			sta DEFLECT+1
 11767 6655			l_1E7E
 11768
 11769 				; optimize OK (service.pas), line = 1959
 11770
 11771 6655 AD F7 A4			lda AROUND
 11772 6658 29 83			and #$83
 11773 665A C9 80			cmp #$80
 11774 665C D0 0A			jne l_1E9A
 11775 665E A9 01			lda #$01
 11776 6660 8D F5 A4			sta DEFLECT
 11777 6663 A9 00			lda #$00
 11778 6665 8D F6 A4			sta DEFLECT+1
 11779 6668			l_1E9A
 11780
 11781 				; optimize OK (service.pas), line = 1960
 11782
 11783 6668 AD F7 A4			lda AROUND
 11784 666B 29 83			and #$83
 11785 666D C9 81			cmp #$81
 11786 666F D0 0A			jne l_1EB6
 11787 6671 A9 21			lda #$21
 11788 6673 8D F5 A4			sta DEFLECT
 11789 6676 A9 00			lda #$00
 11790 6678 8D F6 A4			sta DEFLECT+1
 11791 667B			l_1EB6
 11792
 11793 				; optimize OK (service.pas), line = 1961
 11794
 11795 667B AD F7 A4			lda AROUND
 11796 667E 29 83			and #$83
 11797 6680 C9 82			cmp #$82
 11798 6682 D0 0A			jne l_1ED2
 11799 6684 A9 11			lda #$11
 11800 6686 8D F5 A4			sta DEFLECT
 11801 6689 A9 00			lda #$00
 11802 668B 8D F6 A4			sta DEFLECT+1
 11803 668E			l_1ED2
 11804
 11805 				; optimize OK (service.pas), line = 1963
 11806
 11807 668E A9 05			lda #$05
 11808 6690 8D 01 A5			sta EMERGENCY
 11809
 11810 				; optimize OK (service.pas), line = 1964
 11811
 11812 6693 AD DF A4			lda YB
 11813 6696 38 E9 01			sub #$01
 11814 6699 8D C9 A4			sta SHOOT_BLOCK.YB
 11815 669C AD E0 A4			lda YB+1
 11816 669F E9 00			sbc #$00
 11817 66A1 8D CA A4			sta SHOOT_BLOCK.YB+1
 11818 66A4 AD DD A4			lda XB
 11819 66A7 38 E9 01			sub #$01
 11820 66AA 8D C7 A4			sta SHOOT_BLOCK.XB
 11821 66AD AD DE A4			lda XB+1
 11822 66B0 E9 00			sbc #$00
 11823 66B2 8D C8 A4			sta SHOOT_BLOCK.XB+1
 11824 66B5 AD D5 A4			lda BALL
 11825 66B8 8D CB A4			sta SHOOT_BLOCK.BALL
 11826 66BB AD D6 A4			lda BALL+1
 11827 66BE 8D CC A4			sta SHOOT_BLOCK.BALL+1
 11828 66C1 20 D7 55			jsr SHOOT_BLOCK
 11829 66C4			l_1E14
 11830
 11831 				; optimize OK (service.pas), line = 1969
 11832
 11833 66C4 AD 03 A5			lda TOUCH
 11834 66C7 C9 01			cmp #$01
 11835 66C9 F0 03 4C 87 67		jne l_1F00
 11836
 11837 				; optimize OK (service.pas), line = 1971
 11838
 11839 66CE AD F7 A4			lda AROUND
 11840 66D1 29 0E			and #$0E
 11841 66D3 D0 0A			jne l_1F16
 11842 66D5 A9 21			lda #$21
 11843 66D7 8D F5 A4			sta DEFLECT
 11844 66DA A9 00			lda #$00
 11845 66DC 8D F6 A4			sta DEFLECT+1
 11846 66DF			l_1F16
 11847
 11848 				; optimize OK (service.pas), line = 1972
 11849
 11850 66DF AD F7 A4			lda AROUND
 11851 66E2 29 0E			and #$0E
 11852 66E4 C9 02			cmp #$02
 11853 66E6 D0 0A			jne l_1F32
 11854 66E8 A9 20			lda #$20
 11855 66EA 8D F5 A4			sta DEFLECT
 11856 66ED A9 00			lda #$00
 11857 66EF 8D F6 A4			sta DEFLECT+1
 11858 66F2			l_1F32
 11859
 11860 				; optimize OK (service.pas), line = 1973
 11861
 11862 66F2 AD F7 A4			lda AROUND
 11863 66F5 29 0E			and #$0E
 11864 66F7 C9 04			cmp #$04
 11865 66F9 D0 0A			jne l_1F4E
 11866 66FB A9 33			lda #$33
 11867 66FD 8D F5 A4			sta DEFLECT
 11868 6700 A9 00			lda #$00
 11869 6702 8D F6 A4			sta DEFLECT+1
 11870 6705			l_1F4E
 11871
 11872 				; optimize OK (service.pas), line = 1974
 11873
 11874 6705 AD F7 A4			lda AROUND
 11875 6708 29 0E			and #$0E
 11876 670A C9 06			cmp #$06
 11877 670C D0 0A			jne l_1F6A
 11878 670E A9 22			lda #$22
 11879 6710 8D F5 A4			sta DEFLECT
 11880 6713 A9 00			lda #$00
 11881 6715 8D F6 A4			sta DEFLECT+1
 11882 6718			l_1F6A
 11883
 11884 				; optimize OK (service.pas), line = 1975
 11885
 11886 6718 AD F7 A4			lda AROUND
 11887 671B 29 0E			and #$0E
 11888 671D C9 08			cmp #$08
 11889 671F D0 0A			jne l_1F86
 11890 6721 A9 01			lda #$01
 11891 6723 8D F5 A4			sta DEFLECT
 11892 6726 A9 00			lda #$00
 11893 6728 8D F6 A4			sta DEFLECT+1
 11894 672B			l_1F86
 11895
 11896 				; optimize OK (service.pas), line = 1976
 11897
 11898 672B AD F7 A4			lda AROUND
 11899 672E 29 0E			and #$0E
 11900 6730 C9 0A			cmp #$0A
 11901 6732 D0 0A			jne l_1FA2
 11902 6734 A9 21			lda #$21
 11903 6736 8D F5 A4			sta DEFLECT
 11904 6739 A9 00			lda #$00
 11905 673B 8D F6 A4			sta DEFLECT+1
 11906 673E			l_1FA2
 11907
 11908 				; optimize OK (service.pas), line = 1977
 11909
 11910 673E AD F7 A4			lda AROUND
 11911 6741 29 0E			and #$0E
 11912 6743 C9 0C			cmp #$0C
 11913 6745 D0 0A			jne l_1FBE
 11914 6747 A9 11			lda #$11
 11915 6749 8D F5 A4			sta DEFLECT
 11916 674C A9 00			lda #$00
 11917 674E 8D F6 A4			sta DEFLECT+1
 11918 6751			l_1FBE
 11919
 11920 				; optimize OK (service.pas), line = 1979
 11921
 11922 6751 A9 08			lda #$08
 11923 6753 8D 01 A5			sta EMERGENCY
 11924
 11925 				; optimize OK (service.pas), line = 1980
 11926
 11927 6756 AD DF A4			lda YB
 11928 6759 38 E9 01			sub #$01
 11929 675C 8D C9 A4			sta SHOOT_BLOCK.YB
 11930 675F AD E0 A4			lda YB+1
 11931 6762 E9 00			sbc #$00
 11932 6764 8D CA A4			sta SHOOT_BLOCK.YB+1
 11933 6767 AD DD A4			lda XB
 11934 676A 18 69 01			add #$01
 11935 676D 8D C7 A4			sta SHOOT_BLOCK.XB
 11936 6770 AD DE A4			lda XB+1
 11937 6773 69 00			adc #$00
 11938 6775 8D C8 A4			sta SHOOT_BLOCK.XB+1
 11939 6778 AD D5 A4			lda BALL
 11940 677B 8D CB A4			sta SHOOT_BLOCK.BALL
 11941 677E AD D6 A4			lda BALL+1
 11942 6781 8D CC A4			sta SHOOT_BLOCK.BALL+1
 11943 6784 20 D7 55			jsr SHOOT_BLOCK
 11944 6787			l_1F00
 11945
 11946 				; optimize OK (service.pas), line = 1983
 11947
 11948 6787 AD 03 A5			lda TOUCH
 11949 678A C9 02			cmp #$02
 11950 678C F0 03 4C 4A 68		jne l_1FEC
 11951
 11952 				; optimize OK (service.pas), line = 1985
 11953
 11954 6791 AD F7 A4			lda AROUND
 11955 6794 29 E0			and #$E0
 11956 6796 D0 0A			jne l_2002
 11957 6798 A9 12			lda #$12
 11958 679A 8D F5 A4			sta DEFLECT
 11959 679D A9 00			lda #$00
 11960 679F 8D F6 A4			sta DEFLECT+1
 11961 67A2			l_2002
 11962
 11963 				; optimize OK (service.pas), line = 1986
 11964
 11965 67A2 AD F7 A4			lda AROUND
 11966 67A5 29 E0			and #$E0
 11967 67A7 C9 20			cmp #$20
 11968 67A9 D0 0A			jne l_201E
 11969 67AB A9 10			lda #$10
 11970 67AD 8D F5 A4			sta DEFLECT
 11971 67B0 A9 00			lda #$00
 11972 67B2 8D F6 A4			sta DEFLECT+1
 11973 67B5			l_201E
 11974
 11975 				; optimize OK (service.pas), line = 1987
 11976
 11977 67B5 AD F7 A4			lda AROUND
 11978 67B8 29 E0			and #$E0
 11979 67BA C9 40			cmp #$40
 11980 67BC D0 0A			jne l_203A
 11981 67BE A9 33			lda #$33
 11982 67C0 8D F5 A4			sta DEFLECT
 11983 67C3 A9 00			lda #$00
 11984 67C5 8D F6 A4			sta DEFLECT+1
 11985 67C8			l_203A
 11986
 11987 				; optimize OK (service.pas), line = 1988
 11988
 11989 67C8 AD F7 A4			lda AROUND
 11990 67CB 29 E0			and #$E0
 11991 67CD C9 60			cmp #$60
 11992 67CF D0 0A			jne l_2056
 11993 67D1 A9 11			lda #$11
 11994 67D3 8D F5 A4			sta DEFLECT
 11995 67D6 A9 00			lda #$00
 11996 67D8 8D F6 A4			sta DEFLECT+1
 11997 67DB			l_2056
 11998
 11999 				; optimize OK (service.pas), line = 1989
 12000
 12001 67DB AD F7 A4			lda AROUND
 12002 67DE 29 E0			and #$E0
 12003 67E0 C9 80			cmp #$80
 12004 67E2 D0 0A			jne l_2072
 12005 67E4 A9 02			lda #$02
 12006 67E6 8D F5 A4			sta DEFLECT
 12007 67E9 A9 00			lda #$00
 12008 67EB 8D F6 A4			sta DEFLECT+1
 12009 67EE			l_2072
 12010
 12011 				; optimize OK (service.pas), line = 1990
 12012
 12013 67EE AD F7 A4			lda AROUND
 12014 67F1 29 E0			and #$E0
 12015 67F3 C9 A0			cmp #$A0
 12016 67F5 D0 0A			jne l_208E
 12017 67F7 A9 12			lda #$12
 12018 67F9 8D F5 A4			sta DEFLECT
 12019 67FC A9 00			lda #$00
 12020 67FE 8D F6 A4			sta DEFLECT+1
 12021 6801			l_208E
 12022
 12023 				; optimize OK (service.pas), line = 1991
 12024
 12025 6801 AD F7 A4			lda AROUND
 12026 6804 29 E0			and #$E0
 12027 6806 C9 C0			cmp #$C0
 12028 6808 D0 0A			jne l_20AA
 12029 680A A9 22			lda #$22
 12030 680C 8D F5 A4			sta DEFLECT
 12031 680F A9 00			lda #$00
 12032 6811 8D F6 A4			sta DEFLECT+1
 12033 6814			l_20AA
 12034
 12035 				; optimize OK (service.pas), line = 1993
 12036
 12037 6814 A9 06			lda #$06
 12038 6816 8D 01 A5			sta EMERGENCY
 12039
 12040 				; optimize OK (service.pas), line = 1994
 12041
 12042 6819 AD DF A4			lda YB
 12043 681C 18 69 01			add #$01
 12044 681F 8D C9 A4			sta SHOOT_BLOCK.YB
 12045 6822 AD E0 A4			lda YB+1
 12046 6825 69 00			adc #$00
 12047 6827 8D CA A4			sta SHOOT_BLOCK.YB+1
 12048 682A AD DD A4			lda XB
 12049 682D 38 E9 01			sub #$01
 12050 6830 8D C7 A4			sta SHOOT_BLOCK.XB
 12051 6833 AD DE A4			lda XB+1
 12052 6836 E9 00			sbc #$00
 12053 6838 8D C8 A4			sta SHOOT_BLOCK.XB+1
 12054 683B AD D5 A4			lda BALL
 12055 683E 8D CB A4			sta SHOOT_BLOCK.BALL
 12056 6841 AD D6 A4			lda BALL+1
 12057 6844 8D CC A4			sta SHOOT_BLOCK.BALL+1
 12058 6847 20 D7 55			jsr SHOOT_BLOCK
 12059 684A			l_1FEC
 12060
 12061 				; optimize OK (service.pas), line = 1997
 12062
 12063 684A AD 03 A5			lda TOUCH
 12064 684D C9 03			cmp #$03
 12065 684F F0 03 4C 0D 69		jne l_20D8
 12066
 12067 				; optimize OK (service.pas), line = 1999
 12068
 12069 6854 AD F7 A4			lda AROUND
 12070 6857 29 38			and #$38
 12071 6859 D0 0A			jne l_20EE
 12072 685B A9 22			lda #$22
 12073 685D 8D F5 A4			sta DEFLECT
 12074 6860 A9 00			lda #$00
 12075 6862 8D F6 A4			sta DEFLECT+1
 12076 6865			l_20EE
 12077
 12078 				; optimize OK (service.pas), line = 2000
 12079
 12080 6865 AD F7 A4			lda AROUND
 12081 6868 29 38			and #$38
 12082 686A C9 08			cmp #$08
 12083 686C D0 0A			jne l_210A
 12084 686E A9 02			lda #$02
 12085 6870 8D F5 A4			sta DEFLECT
 12086 6873 A9 00			lda #$00
 12087 6875 8D F6 A4			sta DEFLECT+1
 12088 6878			l_210A
 12089
 12090 				; optimize OK (service.pas), line = 2001
 12091
 12092 6878 AD F7 A4			lda AROUND
 12093 687B 29 38			and #$38
 12094 687D C9 10			cmp #$10
 12095 687F D0 0A			jne l_2126
 12096 6881 A9 33			lda #$33
 12097 6883 8D F5 A4			sta DEFLECT
 12098 6886 A9 00			lda #$00
 12099 6888 8D F6 A4			sta DEFLECT+1
 12100 688B			l_2126
 12101
 12102 				; optimize OK (service.pas), line = 2002
 12103
 12104 688B AD F7 A4			lda AROUND
 12105 688E 29 38			and #$38
 12106 6890 C9 18			cmp #$18
 12107 6892 D0 0A			jne l_2142
 12108 6894 A9 12			lda #$12
 12109 6896 8D F5 A4			sta DEFLECT
 12110 6899 A9 00			lda #$00
 12111 689B 8D F6 A4			sta DEFLECT+1
 12112 689E			l_2142
 12113
 12114 				; optimize OK (service.pas), line = 2003
 12115
 12116 689E AD F7 A4			lda AROUND
 12117 68A1 29 38			and #$38
 12118 68A3 C9 20			cmp #$20
 12119 68A5 D0 0A			jne l_215E
 12120 68A7 A9 20			lda #$20
 12121 68A9 8D F5 A4			sta DEFLECT
 12122 68AC A9 00			lda #$00
 12123 68AE 8D F6 A4			sta DEFLECT+1
 12124 68B1			l_215E
 12125
 12126 				; optimize OK (service.pas), line = 2004
 12127
 12128 68B1 AD F7 A4			lda AROUND
 12129 68B4 29 38			and #$38
 12130 68B6 C9 28			cmp #$28
 12131 68B8 D0 0A			jne l_217A
 12132 68BA A9 22			lda #$22
 12133 68BC 8D F5 A4			sta DEFLECT
 12134 68BF A9 00			lda #$00
 12135 68C1 8D F6 A4			sta DEFLECT+1
 12136 68C4			l_217A
 12137
 12138 				; optimize OK (service.pas), line = 2005
 12139
 12140 68C4 AD F7 A4			lda AROUND
 12141 68C7 29 38			and #$38
 12142 68C9 C9 30			cmp #$30
 12143 68CB D0 0A			jne l_2196
 12144 68CD A9 21			lda #$21
 12145 68CF 8D F5 A4			sta DEFLECT
 12146 68D2 A9 00			lda #$00
 12147 68D4 8D F6 A4			sta DEFLECT+1
 12148 68D7			l_2196
 12149
 12150 				; optimize OK (service.pas), line = 2007
 12151
 12152 68D7 A9 07			lda #$07
 12153 68D9 8D 01 A5			sta EMERGENCY
 12154
 12155 				; optimize OK (service.pas), line = 2008
 12156
 12157 68DC AD DF A4			lda YB
 12158 68DF 18 69 01			add #$01
 12159 68E2 8D C9 A4			sta SHOOT_BLOCK.YB
 12160 68E5 AD E0 A4			lda YB+1
 12161 68E8 69 00			adc #$00
 12162 68EA 8D CA A4			sta SHOOT_BLOCK.YB+1
 12163 68ED AD DD A4			lda XB
 12164 68F0 18 69 01			add #$01
 12165 68F3 8D C7 A4			sta SHOOT_BLOCK.XB
 12166 68F6 AD DE A4			lda XB+1
 12167 68F9 69 00			adc #$00
 12168 68FB 8D C8 A4			sta SHOOT_BLOCK.XB+1
 12169 68FE AD D5 A4			lda BALL
 12170 6901 8D CB A4			sta SHOOT_BLOCK.BALL
 12171 6904 AD D6 A4			lda BALL+1
 12172 6907 8D CC A4			sta SHOOT_BLOCK.BALL+1
 12173 690A 20 D7 55			jsr SHOOT_BLOCK
 12174 690D			l_20D8
 12175
 12176 				; optimize OK (service.pas), line = 2014
 12177
 12178 690D AD F5 A4			lda DEFLECT
 12179 6910 85 9F			sta :STACKORIGIN+9
 12180 6912 A0 00			ldy #$00
 12181 6914 AD F6 A4			lda DEFLECT+1
 12182 6917 10 01			spl
 12183 6919 88				dey
 12184 691A 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 12185 691C 84 BF			sty :STACKORIGIN+STACKWIDTH*2+9
 12186 691E 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
 12187 6920 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 12188 6922 66 9F			ror :STACKORIGIN+9
 12189 6924 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
 12190 6926 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 12191 6928 66 9F			ror :STACKORIGIN+9
 12192 692A 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
 12193 692C 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 12194 692E 66 9F			ror :STACKORIGIN+9
 12195 6930 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
 12196 6932 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 12197 6934 66 9F			ror :STACKORIGIN+9
 12198 6936 A5 9F			lda :STACKORIGIN+9
 12199 6938 8D FD A4			sta MYX
 12200 693B A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 12201 693D 8D FE A4			sta MYX+1
 12202
 12203 				; optimize OK (service.pas), line = 2015
 12204
 12205 6940 AD F5 A4			lda DEFLECT
 12206 6943 29 0F			and #$0F
 12207 6945 8D FF A4			sta MYY
 12208 6948 A9 00			lda #$00
 12209 694A 8D 00 A5			sta MYY+1
 12210
 12211 				; optimize OK (service.pas), line = 2017
 12212
 12213 694D AD FE A4			lda MYX+1
 12214 6950 D0 05			bne @+
 12215 6952 AD FD A4			lda MYX
 12216 6955 C9 01			cmp #$01
 12217 				@
 12218 6957 D0 50			jne l_21D5
 12219 6959 AC D5 A4 84 84 AC + 	mwy BALL :bp2
 12220 6963 A0 10			ldy #BALL.SPEEDX-DATAORIGIN
 12221 6965 B1 84			lda (:bp2),y
 12222 6967 85 8A			sta SYSTEM.ABS.@010184000.X
 12223 6969 C8				iny
 12224 696A B1 84			lda (:bp2),y
 12225 696C 85 8B			sta SYSTEM.ABS.@010184000.X+1
 12226 696E 20 9D 1B			jsr SYSTEM.ABS.@010184000
 12227 6971 E8				inx
 12228 6972 A5 92 95 96			mva SYSTEM.ABS.@010184000.RESULT :STACKORIGIN,x
 12229 6976 A5 93 95 A6			mva SYSTEM.ABS.@010184000.RESULT+1 :STACKORIGIN+STACKWIDTH,x
 12230 697A A9 00			lda #$00
 12231 697C 38 F5 96			sub :STACKORIGIN,x
 12232 697F 95 96			sta :STACKORIGIN,x
 12233 6981 A9 00			lda #$00
 12234 6983 F5 A6			sbc :STACKORIGIN+STACKWIDTH,x
 12235 6985 95 A6			sta :STACKORIGIN+STACKWIDTH,x
 12236 6987 A9 00			lda #$00
 12237 6989 E9 00			sbc #$00
 12238 698B 95 B6			sta :STACKORIGIN+STACKWIDTH*2,x
 12239 698D A9 00			lda #$00
 12240 698F E9 00			sbc #$00
 12241 6991 95 C6			sta :STACKORIGIN+STACKWIDTH*3,x
 12242 6993 AC D5 A4 84 84 AC + 	mwy BALL :bp2
 12243 699D A0 10			ldy #BALL.SPEEDX-DATAORIGIN
 12244 699F B5 96			lda :STACKORIGIN,x
 12245 69A1 91 84			sta (:bp2),y
 12246 69A3 C8				iny
 12247 69A4 B5 A6			lda :STACKORIGIN+STACKWIDTH,x
 12248 69A6 91 84			sta (:bp2),y
 12249 69A8 CA				dex
 12250 69A9			l_21D5
 12251
 12252 				; optimize OK (service.pas), line = 2018
 12253
 12254 69A9 AD FE A4			lda MYX+1
 12255 69AC D0 05			bne @+
 12256 69AE AD FD A4			lda MYX
 12257 69B1 C9 02			cmp #$02
 12258 				@
 12259 69B3 D0 2D			jne l_21F2
 12260 69B5 AC D5 A4 84 84 AC + 	mwy BALL :bp2
 12261 69BF A0 10			ldy #BALL.SPEEDX-DATAORIGIN
 12262 69C1 B1 84			lda (:bp2),y
 12263 69C3 85 8A			sta SYSTEM.ABS.@010184000.X
 12264 69C5 C8				iny
 12265 69C6 B1 84			lda (:bp2),y
 12266 69C8 85 8B			sta SYSTEM.ABS.@010184000.X+1
 12267 69CA 20 9D 1B			jsr SYSTEM.ABS.@010184000
 12268 69CD AC D5 A4 84 84 AC + 	mwy BALL :bp2
 12269 69D7 A0 10			ldy #BALL.SPEEDX-DATAORIGIN
 12270 69D9 A5 92			lda SYSTEM.ABS.@010184000.RESULT
 12271 69DB 91 84			sta (:bp2),y
 12272 69DD C8				iny
 12273 69DE A5 93			lda SYSTEM.ABS.@010184000.RESULT+1
 12274 69E0 91 84			sta (:bp2),y
 12275 69E2			l_21F2
 12276
 12277 				; optimize OK (service.pas), line = 2019
 12278
 12279 69E2 AD FE A4			lda MYX+1
 12280 69E5 D0 05			bne @+
 12281 69E7 AD FD A4			lda MYX
 12282 69EA C9 03			cmp #$03
 12283 				@
 12284 69EC D0 25			jne l_220C
 12285 69EE AC D5 A4 84 84 AC + 	mwy BALL :bp2
 12286 69F8 A0 10			ldy #BALL.SPEEDX-DATAORIGIN
 12287 69FA A9 00			lda #$00
 12288 69FC 38 F1 84			sub (:bp2),y
 12289 69FF 85 9F			sta :STACKORIGIN+9
 12290 6A01 C8				iny
 12291 6A02 A9 00			lda #$00
 12292 6A04 F1 84			sbc (:bp2),y
 12293 6A06 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 12294 6A08 A0 10			ldy #BALL.SPEEDX-DATAORIGIN
 12295 6A0A A5 9F			lda :STACKORIGIN+9
 12296 6A0C 91 84			sta (:bp2),y
 12297 6A0E C8				iny
 12298 6A0F A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 12299 6A11 91 84			sta (:bp2),y
 12300 6A13			l_220C
 12301
 12302 				; optimize OK (service.pas), line = 2021
 12303
 12304 6A13 AD 00 A5			lda MYY+1
 12305 6A16 D0 05			bne @+
 12306 6A18 AD FF A4			lda MYY
 12307 6A1B C9 01			cmp #$01
 12308 				@
 12309 6A1D D0 50			jne l_2228
 12310 6A1F AC D5 A4 84 84 AC + 	mwy BALL :bp2
 12311 6A29 A0 12			ldy #BALL.SPEEDY-DATAORIGIN
 12312 6A2B B1 84			lda (:bp2),y
 12313 6A2D 85 8A			sta SYSTEM.ABS.@010184000.X
 12314 6A2F C8				iny
 12315 6A30 B1 84			lda (:bp2),y
 12316 6A32 85 8B			sta SYSTEM.ABS.@010184000.X+1
 12317 6A34 20 9D 1B			jsr SYSTEM.ABS.@010184000
 12318 6A37 E8				inx
 12319 6A38 A5 92 95 96			mva SYSTEM.ABS.@010184000.RESULT :STACKORIGIN,x
 12320 6A3C A5 93 95 A6			mva SYSTEM.ABS.@010184000.RESULT+1 :STACKORIGIN+STACKWIDTH,x
 12321 6A40 A9 00			lda #$00
 12322 6A42 38 F5 96			sub :STACKORIGIN,x
 12323 6A45 95 96			sta :STACKORIGIN,x
 12324 6A47 A9 00			lda #$00
 12325 6A49 F5 A6			sbc :STACKORIGIN+STACKWIDTH,x
 12326 6A4B 95 A6			sta :STACKORIGIN+STACKWIDTH,x
 12327 6A4D A9 00			lda #$00
 12328 6A4F E9 00			sbc #$00
 12329 6A51 95 B6			sta :STACKORIGIN+STACKWIDTH*2,x
 12330 6A53 A9 00			lda #$00
 12331 6A55 E9 00			sbc #$00
 12332 6A57 95 C6			sta :STACKORIGIN+STACKWIDTH*3,x
 12333 6A59 AC D5 A4 84 84 AC + 	mwy BALL :bp2
 12334 6A63 A0 12			ldy #BALL.SPEEDY-DATAORIGIN
 12335 6A65 B5 96			lda :STACKORIGIN,x
 12336 6A67 91 84			sta (:bp2),y
 12337 6A69 C8				iny
 12338 6A6A B5 A6			lda :STACKORIGIN+STACKWIDTH,x
 12339 6A6C 91 84			sta (:bp2),y
 12340 6A6E CA				dex
 12341 6A6F			l_2228
 12342
 12343 				; optimize OK (service.pas), line = 2022
 12344
 12345 6A6F AD 00 A5			lda MYY+1
 12346 6A72 D0 05			bne @+
 12347 6A74 AD FF A4			lda MYY
 12348 6A77 C9 02			cmp #$02
 12349 				@
 12350 6A79 D0 2D			jne l_2245
 12351 6A7B AC D5 A4 84 84 AC + 	mwy BALL :bp2
 12352 6A85 A0 12			ldy #BALL.SPEEDY-DATAORIGIN
 12353 6A87 B1 84			lda (:bp2),y
 12354 6A89 85 8A			sta SYSTEM.ABS.@010184000.X
 12355 6A8B C8				iny
 12356 6A8C B1 84			lda (:bp2),y
 12357 6A8E 85 8B			sta SYSTEM.ABS.@010184000.X+1
 12358 6A90 20 9D 1B			jsr SYSTEM.ABS.@010184000
 12359 6A93 AC D5 A4 84 84 AC + 	mwy BALL :bp2
 12360 6A9D A0 12			ldy #BALL.SPEEDY-DATAORIGIN
 12361 6A9F A5 92			lda SYSTEM.ABS.@010184000.RESULT
 12362 6AA1 91 84			sta (:bp2),y
 12363 6AA3 C8				iny
 12364 6AA4 A5 93			lda SYSTEM.ABS.@010184000.RESULT+1
 12365 6AA6 91 84			sta (:bp2),y
 12366 6AA8			l_2245
 12367
 12368 				; optimize OK (service.pas), line = 2023
 12369
 12370 6AA8 AD 00 A5			lda MYY+1
 12371 6AAB D0 05			bne @+
 12372 6AAD AD FF A4			lda MYY
 12373 6AB0 C9 03			cmp #$03
 12374 				@
 12375 6AB2 D0 25			jne l_225F
 12376 6AB4 AC D5 A4 84 84 AC + 	mwy BALL :bp2
 12377 6ABE A0 12			ldy #BALL.SPEEDY-DATAORIGIN
 12378 6AC0 A9 00			lda #$00
 12379 6AC2 38 F1 84			sub (:bp2),y
 12380 6AC5 85 9F			sta :STACKORIGIN+9
 12381 6AC7 C8				iny
 12382 6AC8 A9 00			lda #$00
 12383 6ACA F1 84			sbc (:bp2),y
 12384 6ACC 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 12385 6ACE A0 12			ldy #BALL.SPEEDY-DATAORIGIN
 12386 6AD0 A5 9F			lda :STACKORIGIN+9
 12387 6AD2 91 84			sta (:bp2),y
 12388 6AD4 C8				iny
 12389 6AD5 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 12390 6AD7 91 84			sta (:bp2),y
 12391 6AD9			l_225F
 12392 6AD9			l_1C90
 12393 6AD9			l_19D7
 12394
 12395 				; optimize OK (service.pas), line = 2033
 12396
 12397 6AD9 AC D5 A4 84 84 AC + 	mwy BALL :bp2
 12398 6AE3 A0 16			ldy #BALL.BRWHIT-DATAORIGIN
 12399 6AE5 B1 84			lda (:bp2),y
 12400 6AE7 C9 65			cmp #$65
 12401 6AE9 B0 03 4C 0D 6D		jcc l_2280
 12402
 12403 				; optimize OK (service.pas), line = 2036
 12404
 12405 6AEE AD 01 A5			lda EMERGENCY
 12406 6AF1 C9 FF			cmp #$FF
 12407 6AF3 D0 05			jne l_2293
 12408 6AF5 A9 04			lda #$04
 12409 6AF7 20 19 27			jsr FATAL_ERROR
 12410 6AFA			l_2293
 12411
 12412 				; optimize OK (service.pas), line = 2038
 12413
 12414 6AFA AC 01 A5			ldy EMERGENCY
 12415 6AFD B9 9D 10			lda adr.EMERG_DEV,y
 12416 6B00 8D F9 A4			sta MIMAX
 12417 6B03 A9 00			lda #$00
 12418 6B05 8D FA A4			sta MIMAX+1
 12419
 12420 				; optimize OK (service.pas), line = 2064
 12421
 12422 6B08 AD 01 A5			lda EMERGENCY
 12423 6B0B 8D 16 A5			sta @CASETMP_0008
 12424 6B0E C9 05			cmp #$05
 12425 6B10 D0 2F			jne l_22AC
 12426 				@
 12427
 12428 				; optimize OK (service.pas), line = 2067
 12429
 12430 6B12 AD 0A A5			lda adr.ADJW+$06
 12431 6B15 0D 0B A5			ora adr.ADJW+1+$06
 12432 6B18 D0 0D			jne l_22C2
 12433 6B1A AD F9 A4			lda MIMAX
 12434 6B1D 29 0F			and #$0F
 12435 6B1F 8D F9 A4			sta MIMAX
 12436 6B22 A9 00			lda #$00
 12437 6B24 8D FA A4			sta MIMAX+1
 12438 6B27			l_22C2
 12439
 12440 				; optimize OK (service.pas), line = 2068
 12441
 12442 6B27 AD 06 A5			lda adr.ADJW+$02
 12443 6B2A 0D 07 A5			ora adr.ADJW+1+$02
 12444 6B2D D0 0F			jne l_22E8
 12445 6B2F AD F9 A4			lda MIMAX
 12446 6B32 29 F0			and #$F0
 12447 6B34 09 03			ora #$03
 12448 6B36 8D F9 A4			sta MIMAX
 12449 6B39 A9 00			lda #$00
 12450 6B3B 8D FA A4			sta MIMAX+1
 12451 6B3E			l_22E8
 12452 6B3E 4C DD 6B			jmp a_0008
 12453 6B41			l_22AC
 12454 6B41 C9 06			cmp #$06
 12455 6B43 D0 31			jne l_22FF
 12456
 12457 				; optimize OK (service.pas), line = 2072
 12458
 12459 6B45 AD 06 A5			lda adr.ADJW+$02
 12460 6B48 0D 07 A5			ora adr.ADJW+1+$02
 12461 6B4B D0 0F			jne l_2315
 12462 6B4D AD F9 A4			lda MIMAX
 12463 6B50 29 0F			and #$0F
 12464 6B52 09 10			ora #$10
 12465 6B54 8D F9 A4			sta MIMAX
 12466 6B57 A9 00			lda #$00
 12467 6B59 8D FA A4			sta MIMAX+1
 12468 6B5C			l_2315
 12469
 12470 				; optimize OK (service.pas), line = 2073
 12471
 12472 6B5C AD 0E A5			lda adr.ADJW+$0A
 12473 6B5F 0D 0F A5			ora adr.ADJW+1+$0A
 12474 6B62 D0 0F			jne l_233B
 12475 6B64 AD F9 A4			lda MIMAX
 12476 6B67 29 F0			and #$F0
 12477 6B69 09 04			ora #$04
 12478 6B6B 8D F9 A4			sta MIMAX
 12479 6B6E A9 00			lda #$00
 12480 6B70 8D FA A4			sta MIMAX+1
 12481 6B73			l_233B
 12482 6B73 4C DD 6B			jmp a_0008
 12483 6B76			l_22FF
 12484 6B76 C9 07			cmp #$07
 12485 6B78 D0 31			jne l_2352
 12486
 12487 				; optimize OK (service.pas), line = 2077
 12488
 12489 6B7A AD 0E A5			lda adr.ADJW+$0A
 12490 6B7D 0D 0F A5			ora adr.ADJW+1+$0A
 12491 6B80 D0 0F			jne l_2368
 12492 6B82 AD F9 A4			lda MIMAX
 12493 6B85 29 0F			and #$0F
 12494 6B87 09 20			ora #$20
 12495 6B89 8D F9 A4			sta MIMAX
 12496 6B8C A9 00			lda #$00
 12497 6B8E 8D FA A4			sta MIMAX+1
 12498 6B91			l_2368
 12499
 12500 				; optimize OK (service.pas), line = 2078
 12501
 12502 6B91 AD 12 A5			lda adr.ADJW+$0E
 12503 6B94 0D 13 A5			ora adr.ADJW+1+$0E
 12504 6B97 D0 0F			jne l_238E
 12505 6B99 AD F9 A4			lda MIMAX
 12506 6B9C 29 F0			and #$F0
 12507 6B9E 09 05			ora #$05
 12508 6BA0 8D F9 A4			sta MIMAX
 12509 6BA3 A9 00			lda #$00
 12510 6BA5 8D FA A4			sta MIMAX+1
 12511 6BA8			l_238E
 12512 6BA8 4C DD 6B			jmp a_0008
 12513 6BAB			l_2352
 12514 6BAB C9 08			cmp #$08
 12515 6BAD D0 2E			jne l_23A5
 12516
 12517 				; optimize OK (service.pas), line = 2082
 12518
 12519 6BAF AD 12 A5			lda adr.ADJW+$0E
 12520 6BB2 0D 13 A5			ora adr.ADJW+1+$0E
 12521 6BB5 D0 0F			jne l_23BB
 12522 6BB7 AD F9 A4			lda MIMAX
 12523 6BBA 29 0F			and #$0F
 12524 6BBC 09 30			ora #$30
 12525 6BBE 8D F9 A4			sta MIMAX
 12526 6BC1 A9 00			lda #$00
 12527 6BC3 8D FA A4			sta MIMAX+1
 12528 6BC6			l_23BB
 12529
 12530 				; optimize OK (service.pas), line = 2083
 12531
 12532 6BC6 AD 0A A5			lda adr.ADJW+$06
 12533 6BC9 0D 0B A5			ora adr.ADJW+1+$06
 12534 6BCC D0 0F			jne l_23E1
 12535 6BCE AD F9 A4			lda MIMAX
 12536 6BD1 29 F0			and #$F0
 12537 6BD3 09 06			ora #$06
 12538 6BD5 8D F9 A4			sta MIMAX
 12539 6BD8 A9 00			lda #$00
 12540 6BDA 8D FA A4			sta MIMAX+1
 12541 6BDD			l_23E1
 12542 6BDD			l_23A5
 12543 6BDD			a_0008
 12544
 12545 				; --- RepeatUntilProlog
 12546 6BDD			l_23F8
 12547
 12548 				; optimize OK (service.pas), line = 2090
 12549
 12550 6BDD AD F9 A4			lda MIMAX
 12551 6BE0 85 A0			sta :STACKORIGIN+10
 12552 6BE2 AD FA A4			lda MIMAX+1
 12553 6BE5 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 12554 6BE7 46 B0			lsr :STACKORIGIN+STACKWIDTH+10
 12555 6BE9 66 A0			ror :STACKORIGIN+10
 12556 6BEB 46 B0			lsr :STACKORIGIN+STACKWIDTH+10
 12557 6BED 66 A0			ror :STACKORIGIN+10
 12558 6BEF 46 B0			lsr :STACKORIGIN+STACKWIDTH+10
 12559 6BF1 66 A0			ror :STACKORIGIN+10
 12560 6BF3 46 B0			lsr :STACKORIGIN+STACKWIDTH+10
 12561 6BF5 66 A0			ror :STACKORIGIN+10
 12562 6BF7 A9 5A			lda #$5A
 12563 6BF9 85 8E			sta :ecx
 12564 6BFB A9 00			lda #$00
 12565 6BFD 85 8F			sta :ecx+1
 12566 6BFF A5 A0			lda :STACKORIGIN+10
 12567 6C01 85 86			sta :eax
 12568 6C03 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
 12569 6C05 85 87			sta :eax+1
 12570 					.ifdef fmulinit
 12571 					fmulu_16
 12572 					els
 12573 6C07 20 2A 13			imulCX
 12574 					eif
 12575 6C0A A5 86			lda :eax
 12576 6C0C 8D E5 A4			sta LX
 12577 6C0F A5 87			lda :eax+1
 12578 6C11 8D E6 A4			sta LX+1
 12579
 12580 				; optimize OK (service.pas), line = 2091
 12581
 12582 6C14 AD F9 A4			lda MIMAX
 12583 6C17 29 0F			and #$0F
 12584 6C19 85 86			sta :eax
 12585 6C1B A9 00			lda #$00
 12586 6C1D 85 87			sta :eax+1
 12587 6C1F A9 5A			lda #$5A
 12588 6C21 85 8E			sta :ecx
 12589 6C23 A9 00			lda #$00
 12590 6C25 85 8F			sta :ecx+1
 12591 					.ifdef fmulinit
 12592 					fmulu_16
 12593 					els
 12594 6C27 20 6E 13			imulCX_AL
 12595 					eif
 12596 6C2A A5 86			lda :eax
 12597 6C2C 8D E9 A4			sta MX
 12598 6C2F A5 87			lda :eax+1
 12599 6C31 8D EA A4			sta MX+1
 12600
 12601 				; optimize OK (service.pas), line = 2092
 12602
 12603 6C34 AD E9 A4			lda MX
 12604 6C37 38 ED E5 A4			sub LX
 12605 6C3B 8D 1D 9A			sta SYSTEM.RANDOM.@010184000.RANGE
 12606 6C3E AD EA A4			lda MX+1
 12607 6C41 ED E6 A4			sbc LX+1
 12608 6C44 8D 1E 9A			sta SYSTEM.RANDOM.@010184000.RANGE+1
 12609 6C47 20 2F 24			jsr SYSTEM.RANDOM.@010184000
 12610 6C4A AD 1F 9A			lda SYSTEM.RANDOM.@010184000.RESULT
 12611 6C4D 18 6D E5 A4			add LX
 12612 6C51 8D FB A4			sta ANGLE
 12613 6C54 AD 20 9A			lda SYSTEM.RANDOM.@010184000.RESULT+1
 12614 6C57 6D E6 A4			adc LX+1
 12615 6C5A 8D FC A4			sta ANGLE+1
 12616
 12617 				; optimize OK (service.pas), line = 2095
 12618
 12619 6C5D A9 5A			lda #$5A
 12620 6C5F 85 8E			sta @SMALLINT.MOD.B
 12621 6C61 A9 00			lda #$00
 12622 6C63 85 8F			sta @SMALLINT.MOD.B+1
 12623 6C65 AD FB A4			lda ANGLE
 12624 6C68 85 86			sta @SMALLINT.MOD.A
 12625 6C6A AD FC A4			lda ANGLE+1
 12626 6C6D 85 87			sta @SMALLINT.MOD.A+1
 12627 6C6F 20 6F 12			jsr @SMALLINT.MOD
 12628 6C72 A5 92			lda @SMALLINT.MOD.RESULT
 12629 6C74 C9 1F			cmp #$1F
 12630 6C76 A5 93			lda @SMALLINT.MOD.RESULT+1
 12631 6C78 E9 00			sbc #$00
 12632 6C7A 50 02			svc
 12633 6C7C 49 80			eor #$80
 12634 6C7E 10 03 4C DD 6B		jmi l_23F8
 12635 6C83 A9 5A			lda #$5A
 12636 6C85 85 8E			sta @SMALLINT.MOD.B
 12637 6C87 A9 00			lda #$00
 12638 6C89 85 8F			sta @SMALLINT.MOD.B+1
 12639 6C8B AD FB A4			lda ANGLE
 12640 6C8E 85 86			sta @SMALLINT.MOD.A
 12641 6C90 AD FC A4			lda ANGLE+1
 12642 6C93 85 87			sta @SMALLINT.MOD.A+1
 12643 6C95 20 6F 12			jsr @SMALLINT.MOD
 12644 6C98 A5 92			lda @SMALLINT.MOD.RESULT
 12645 6C9A C9 3C			cmp #$3C
 12646 6C9C A5 93			lda @SMALLINT.MOD.RESULT+1
 12647 6C9E E9 00			sbc #$00
 12648 6CA0 50 02			svc
 12649 6CA2 49 80			eor #$80
 12650 6CA4 30 03 4C DD 6B		jpl l_23F8
 12651
 12652 				; optimize OK (service.pas), line = 2099
 12653
 12654 6CA9 A9 68			lda #$68
 12655 6CAB 85 8E			sta @SMALLINT.MOD.B
 12656 6CAD A9 01			lda #$01
 12657 6CAF 85 8F			sta @SMALLINT.MOD.B+1
 12658 6CB1 AD FB A4			lda ANGLE
 12659 6CB4 85 86			sta @SMALLINT.MOD.A
 12660 6CB6 AD FC A4			lda ANGLE+1
 12661 6CB9 85 87			sta @SMALLINT.MOD.A+1
 12662 6CBB 20 6F 12			jsr @SMALLINT.MOD
 12663 6CBE A5 92			lda @SMALLINT.MOD.RESULT
 12664 6CC0 8D 38 A4			sta SET_BALL_DIRECTION.ANGLE
 12665 6CC3 A5 93			lda @SMALLINT.MOD.RESULT+1
 12666 6CC5 8D 39 A4			sta SET_BALL_DIRECTION.ANGLE+1
 12667 6CC8 AD D5 A4			lda BALL
 12668 6CCB 8D 34 A4			sta SET_BALL_DIRECTION.BALL
 12669 6CCE AD D6 A4			lda BALL+1
 12670 6CD1 8D 35 A4			sta SET_BALL_DIRECTION.BALL+1
 12671 6CD4 20 03 32			jsr SET_BALL_DIRECTION
 12672
 12673 				; optimize OK (service.pas), line = 2100
 12674
 12675 6CD7 AC D5 A4 84 84 AC + 	mwy BALL :bp2
 12676 6CE1 A0 0C			ldy #BALL.SPEED-DATAORIGIN
 12677 6CE3 B1 84			lda (:bp2),y
 12678 6CE5 8D 2A A4			sta SET_BALL_SPEED.SPEED
 12679 6CE8 C8				iny
 12680 6CE9 B1 84			lda (:bp2),y
 12681 6CEB 8D 2B A4			sta SET_BALL_SPEED.SPEED+1
 12682 6CEE AD D5 A4			lda BALL
 12683 6CF1 8D 26 A4			sta SET_BALL_SPEED.BALL
 12684 6CF4 AD D6 A4			lda BALL+1
 12685 6CF7 8D 27 A4			sta SET_BALL_SPEED.BALL+1
 12686 6CFA 20 F3 2F			jsr SET_BALL_SPEED
 12687
 12688 				; optimize OK (service.pas), line = 2102
 12689
 12690 6CFD AC D5 A4 84 84 AC + 	mwy BALL :bp2
 12691 6D07 A0 16			ldy #BALL.BRWHIT-DATAORIGIN
 12692 6D09 A9 00			lda #$00
 12693 6D0B 91 84			sta (:bp2),y
 12694 6D0D			l_2280
 12695
 12696 				; ------------------------------------------------------------
 12697
 12698 = A4D5			BALL	= DATAORIGIN+$0AFE
 12699 = 99D7			BALL.X	= DATAORIGIN+$0000
 12700 = 99D9			BALL.Y	= DATAORIGIN+$0002
 12701 = 99DB			BALL.FINEX	= DATAORIGIN+$0004
 12702 = 99DD			BALL.FINEY	= DATAORIGIN+$0006
 12703 = 99DF			BALL.OLDX	= DATAORIGIN+$0008
 12704 = 99E1			BALL.OLDY	= DATAORIGIN+$000A
 12705 = 99E3			BALL.SPEED	= DATAORIGIN+$000C
 12706 = 99E5			BALL.FINESPEED	= DATAORIGIN+$000E
 12707 = 99E7			BALL.SPEEDX	= DATAORIGIN+$0010
 12708 = 99E9			BALL.SPEEDY	= DATAORIGIN+$0012
 12709 = 99EB			BALL.SBD	= DATAORIGIN+$0014
 12710 = 99ED			BALL.BRWHIT	= DATAORIGIN+$0016
 12711 = 99EE			BALL.INPLAY	= DATAORIGIN+$0017
 12712 = 99EF			BALL.LAUNCH	= DATAORIGIN+$0018
 12713 = 99F0			BALL.ONVAUS	= DATAORIGIN+$0019
 12714 = 99F1			BALL.STM	= DATAORIGIN+$001A
 12715 = A4D9			X	= DATAORIGIN+$0B02
 12716 = A4DB			Y	= DATAORIGIN+$0B04
 12717 = A4DD			XB	= DATAORIGIN+$0B06
 12718 = A4DF			YB	= DATAORIGIN+$0B08
 12719 = A4E1			OX	= DATAORIGIN+$0B0A
 12720 = A4E3			OY	= DATAORIGIN+$0B0C
 12721 = A4E5			LX	= DATAORIGIN+$0B0E
 12722 = A4E7			LY	= DATAORIGIN+$0B10
 12723 = A4E9			MX	= DATAORIGIN+$0B12
 12724 = A4EB			MY	= DATAORIGIN+$0B14
 12725 = A4ED			NX	= DATAORIGIN+$0B16
 12726 = A4EF			NY	= DATAORIGIN+$0B18
 12727 = A4F1			F1	= DATAORIGIN+$0B1A
 12728 = A4F3			F2	= DATAORIGIN+$0B1C
 12729 = A4F5			DEFLECT	= DATAORIGIN+$0B1E
 12730 = A4F7			AROUND	= DATAORIGIN+$0B20
 12731 = A4F9			MIMAX	= DATAORIGIN+$0B22
 12732 = A4FB			ANGLE	= DATAORIGIN+$0B24
 12733 = A4FD			MYX	= DATAORIGIN+$0B26
 12734 = A4FF			MYY	= DATAORIGIN+$0B28
 12735 = A501			EMERGENCY	= DATAORIGIN+$0B2A
 12736 = A502			COLLISION	= DATAORIGIN+$0B2B
 12737 = A503			TOUCH	= DATAORIGIN+$0B2C
 12738 = A504			adr.ADJW	= [DATAORIGIN+$0B2D] .array [3] [3] .word
 12739 6D0D			.var ADJW	= adr.ADJW .word
 12740 = A516			@CASETMP_0008	= DATAORIGIN+$0B3F
 12741
 12742 = A4D5			@VarData	= BALL
 12743 = 0034			@VarDataSize	= 52
 12744
 12745 6D0D			@exit
 12746 					.ifdef @new
 12747 					lda <@VarData
 12748 					sta :ztmp
 12749 					lda >@VarData
 12750 					ldy #@VarDataSize-1
 12751 					jmp @FreeMem
 12752 					els
 12753 6D0D 60				rts						; ret
 12754 					eif
 12755 = 6D0E 04 A5		ADJW
 12755 				.endl
 12756
 12757 6D10			.local	FILL_PICTURE_WITH_PATTERN			; PROCEDURE
 12758
 12759 				; optimize OK (service.pas), line = 2117
 12760
 12761 6D10 A9 00			lda #$00
 12762 6D12 8D 1D A5			sta K
 12763 6D15 8D 1E A5			sta K+1
 12764
 12765 6D18			l_2462
 12766 				; --- ForToDoCondition
 12767 6D18 AD 1E A5			lda K+1
 12768 6D1B C9 01			cmp #$01
 12769 6D1D 90 0B			bcc @+
 12770 6D1F D0 49			jne l_246E
 12771 6D21 AD 1D A5			lda K
 12772 6D24 C9 3F			cmp #$3F
 12773 6D26 90 02			bcc @+
 12774 6D28 D0 40			jne l_246E
 12775 				@
 12776
 12777 				; optimize OK (service.pas), line = 2118
 12778
 12779 6D2A AC 17 A5 84 84 AC + 	mwy PATT :bp2
 12780 6D34 A0 00			ldy #PATT.WIDTH-DATAORIGIN
 12781 6D36 B1 84			lda (:bp2),y
 12782 6D38 85 8E			sta @WORD.MOD.B
 12783 6D3A C8				iny
 12784 6D3B B1 84			lda (:bp2),y
 12785 6D3D 85 8F			sta @WORD.MOD.B+1
 12786 6D3F AD 1D A5			lda K
 12787 6D42 85 86			sta @WORD.MOD.A
 12788 6D44 AD 1E A5			lda K+1
 12789 6D47 85 87			sta @WORD.MOD.A+1
 12790 6D49 20 BF 13			jsr @WORD.MOD
 12791 6D4C AD DC 98			lda MODX
 12792 6D4F 18 6D 1D A5			add K
 12793 6D53 A8				tay
 12794 6D54 AD DD 98			lda MODX+1
 12795 6D57 6D 1E A5			adc K+1
 12796 6D5A 85 83			sta :bp+1
 12797 6D5C A5 92			lda @WORD.MOD.RESULT
 12798 6D5E 91 82			sta (:bp),y
 12799
 12800 				; --- ForToDoEpilog
 12801 6D60 EE 1D A5			inc K
 12802 6D63 D0 B3			jne l_2462
 12803 6D65 EE 1E A5			inc K+1
 12804 6D68 D0 AE			jne l_2462
 12805 6D6A			l_246E
 12806
 12807 				; optimize OK (service.pas), line = 2122
 12808
 12809 6D6A A9 00			lda #$00
 12810 6D6C 8D 20 A5			sta Y
 12811
 12812 6D6F			l_2488
 12813 				; --- ForToDoCondition
 12814 6D6F AD 20 A5			lda Y
 12815 6D72 C9 C8			cmp #$C8
 12816 6D74 B0 2E			jcs l_2496
 12817
 12818 				; optimize OK (service.pas), line = 2123
 12819
 12820 6D76 AC 17 A5 84 84 AC + 	mwy PATT :bp2
 12821 6D80 A0 02			ldy #PATT.HEIGHT-DATAORIGIN
 12822 6D82 B1 84			lda (:bp2),y
 12823 6D84 85 8E			sta @WORD.MOD.B
 12824 6D86 C8				iny
 12825 6D87 B1 84			lda (:bp2),y
 12826 6D89 85 8F			sta @WORD.MOD.B+1
 12827 6D8B AD 20 A5			lda Y
 12828 6D8E 85 86			sta @WORD.MOD.A
 12829 6D90 A9 00			lda #$00
 12830 6D92 85 87			sta @WORD.MOD.A+1
 12831 6D94 20 BF 13			jsr @WORD.MOD
 12832 6D97 A5 92			lda @WORD.MOD.RESULT
 12833 6D99 AC 20 A5			ldy Y
 12834 6D9C 99 CD A2			sta adr.MODY,y
 12835
 12836 				; --- ForToDoEpilog
 12837 6D9F EE 20 A5			inc Y
 12838 6DA2 D0 CB			jne l_2488
 12839 6DA4			l_2496
 12840
 12841 				; optimize OK (service.pas), line = 2128
 12842
 12843 6DA4 A9 0A			lda #$0A
 12844 6DA6 8D 20 A5			sta Y
 12845
 12846 6DA9			l_24B2
 12847 				; --- ForToDoCondition
 12848 6DA9 AC 20 A5			ldy Y
 12849 6DAC C0 C7			cpy #$C7
 12850 6DAE 90 03 4C EF 6E		jcs l_24C0
 12851
 12852 				; optimize OK (service.pas), line = 2130
 12853
 12854 6DB3 B9 CD A2			lda adr.MODY,y
 12855 6DB6 85 86			sta :eax
 12856 6DB8 AC 17 A5 84 84 AC + 	mwy PATT :bp2
 12857 6DC2 A0 00			ldy #PATT.WIDTH-DATAORIGIN
 12858 6DC4 B1 84			lda (:bp2),y
 12859 6DC6 85 8E			sta :ecx
 12860 6DC8 C8				iny
 12861 6DC9 B1 84			lda (:bp2),y
 12862 6DCB 85 8F			sta :ecx+1
 12863 6DCD A9 00			lda #$00
 12864 6DCF 85 87			sta :eax+1
 12865 					.ifdef fmulinit
 12866 					fmulu_16
 12867 					els
 12868 6DD1 20 2A 13			imulCX
 12869 					eif
 12870 6DD4 A5 86			lda :eax
 12871 6DD6 8D 1B A5			sta YB
 12872 6DD9 A5 87			lda :eax+1
 12873 6DDB 8D 1C A5			sta YB+1
 12874
 12875 				; optimize OK (service.pas), line = 2131
 12876
 12877 6DDE A9 00			lda #$00
 12878 6DE0 8D 1D A5			sta K
 12879 6DE3 8D 1E A5			sta K+1
 12880
 12881 				; optimize OK (service.pas), line = 2132
 12882
 12883 6DE6 A9 09			lda #$09
 12884 6DE8 8D 1F A5			sta X
 12885
 12886 6DEB			l_24DB
 12887 				; --- ForToDoCondition
 12888 6DEB AD 1F A5			lda X
 12889 6DEE C9 D8			cmp #$D8
 12890 6DF0 90 03 4C 98 6E		jcs l_24E9
 12891
 12892 				; optimize OK (service.pas), line = 2135
 12893
 12894 6DF5 AC 17 A5 84 84 AC + 	mwy PATT :bp2
 12895 6DFF A0 04			ldy #PATT.OFS-DATAORIGIN
 12896 6E01 B1 84			lda (:bp2),y
 12897 6E03 85 9F			sta :STACKORIGIN+9
 12898 6E05 C8				iny
 12899 6E06 B1 84			lda (:bp2),y
 12900 6E08 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 12901 6E0A C8				iny
 12902 6E0B B1 84			lda (:bp2),y
 12903 6E0D 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
 12904 6E0F C8				iny
 12905 6E10 B1 84			lda (:bp2),y
 12906 6E12 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
 12907 6E14 AC DC 98 84 84 AC + 	mwy MODX :bp2
 12908 6E1E AC 1F A5			ldy X
 12909 6E21 A5 9F			lda :STACKORIGIN+9
 12910 6E23 18 71 84			add (:bp2),y
 12911 6E26 85 9F			sta :STACKORIGIN+9
 12912 6E28 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 12913 6E2A 69 00			adc #$00
 12914 6E2C 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 12915 6E2E A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
 12916 6E30 69 00			adc #$00
 12917 6E32 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
 12918 6E34 A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
 12919 6E36 69 00			adc #$00
 12920 6E38 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
 12921 6E3A A5 9F			lda :STACKORIGIN+9
 12922 6E3C 18 6D 1B A5			add YB
 12923 6E40 8D C5 A3			sta GETBYTE.SRC
 12924 6E43 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 12925 6E45 6D 1C A5			adc YB+1
 12926 6E48 8D C6 A3			sta GETBYTE.SRC+1
 12927 6E4B A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
 12928 6E4D 69 00			adc #$00
 12929 6E4F 8D C7 A3			sta GETBYTE.SRC+2
 12930 6E52 A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
 12931 6E54 69 00			adc #$00
 12932 6E56 8D C8 A3			sta GETBYTE.SRC+3
 12933 6E59 20 AB 26			jsr GETBYTE
 12934 6E5C AD C9 A3			lda GETBYTE.RESULT
 12935 6E5F 8D 21 A5			sta CL
 12936
 12937 				; optimize OK (service.pas), line = 2137
 12938
 12939 6E62 A9 80			lda #$80
 12940 6E64 8D 22 A5			sta SHADOW
 12941
 12942 				; optimize OK (service.pas), line = 2142
 12943
 12944 6E67 AD 20 A5			lda Y
 12945 6E6A C9 10			cmp #$10
 12946 6E6C 90 07			jcc l_251Ex
 12947 6E6E AD 1F A5			lda X
 12948 6E71 C9 12			cmp #$12
 12949 6E73 B0 05			jcs l_251E
 12950 6E75			l_251Ex
 12951 6E75 A9 00			lda #$00
 12952 6E77 8D 22 A5			sta SHADOW
 12953 6E7A			l_251E
 12954
 12955 				; optimize OK (service.pas), line = 2147
 12956
 12957 6E7A AD 21 A5			lda CL
 12958 6E7D 29 7F			and #$7F
 12959 6E7F 0D 22 A5			ora SHADOW
 12960 6E82 AC 1D A5			ldy K
 12961 6E85 99 97 9E			sta adr.TMP,y
 12962
 12963 				; optimize FAIL (0, service.pas), line = 2148
 12964
 12965 6E88 EE 1D A5			inc K
 12966 6E8B D0 03			sne
 12967 6E8D EE 1E A5			inc K+1
 12968
 12969 				; --- ForToDoEpilog
 12970 6E90 EE 1F A5			inc X
 12971 6E93 F0 03 4C EB 6D		jne l_24DB
 12972 6E98			l_24E9
 12973
 12974 				; optimize OK (service.pas), line = 2151
 12975
 12976 6E98 AD A4 9A			lda PLAYSCREEN.OFS
 12977 6E9B 18 69 09			add #$09
 12978 6E9E 85 A0			sta :STACKORIGIN+10
 12979 6EA0 AD A5 9A			lda PLAYSCREEN.OFS+1
 12980 6EA3 69 00			adc #$00
 12981 6EA5 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 12982 6EA7 AD A6 9A			lda PLAYSCREEN.OFS+2
 12983 6EAA 69 00			adc #$00
 12984 6EAC 85 C0			sta :STACKORIGIN+STACKWIDTH*2+10
 12985 6EAE AD A7 9A			lda PLAYSCREEN.OFS+3
 12986 6EB1 69 00			adc #$00
 12987 6EB3 85 D0			sta :STACKORIGIN+STACKWIDTH*3+10
 12988 6EB5 AD 20 A5			lda Y
 12989 6EB8 85 86			sta :eax
 12990 6EBA A9 00			lda #$00
 12991 6EBC 85 87			sta :eax+1
 12992 6EBE 20 58 19			jsr @mul320
 12993 6EC1 A5 A0			lda :STACKORIGIN+10
 12994 6EC3 18 65 86			add :eax
 12995 6EC6 8D A3 A3			sta BLITTMP.DST
 12996 6EC9 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
 12997 6ECB 65 87			adc :eax+1
 12998 6ECD 8D A4 A3			sta BLITTMP.DST+1
 12999 6ED0 A5 C0			lda :STACKORIGIN+STACKWIDTH*2+10
 13000 6ED2 65 88			adc :eax+2
 13001 6ED4 8D A5 A3			sta BLITTMP.DST+2
 13002 6ED7 A5 D0			lda :STACKORIGIN+STACKWIDTH*3+10
 13003 6ED9 65 89			adc :eax+3
 13004 6EDB 8D A6 A3			sta BLITTMP.DST+3
 13005 6EDE AD 1D A5			lda K
 13006 6EE1 8D A7 A3			sta BLITTMP.SIZE
 13007 6EE4 20 B1 25			jsr BLITTMP
 13008
 13009 				; --- ForToDoEpilog
 13010 6EE7 EE 20 A5			inc Y
 13011 6EEA F0 03 4C A9 6D		jne l_24B2
 13012 6EEF			l_24C0
 13013
 13014 				; ------------------------------------------------------------
 13015
 13016 = A517			PATT	= DATAORIGIN+$0B40
 13017 = 99D7			PATT.WIDTH	= DATAORIGIN+$0000
 13018 = 99D9			PATT.HEIGHT	= DATAORIGIN+$0002
 13019 = 99DB			PATT.OFS	= DATAORIGIN+$0004
 13020 = A51B			YB	= DATAORIGIN+$0B44
 13021 = A51D			K	= DATAORIGIN+$0B46
 13022 = A51F			X	= DATAORIGIN+$0B48
 13023 = A520			Y	= DATAORIGIN+$0B49
 13024 = A521			CL	= DATAORIGIN+$0B4A
 13025 = A522			SHADOW	= DATAORIGIN+$0B4B
 13026
 13027 = A517			@VarData	= PATT
 13028 = 000A			@VarDataSize	= 10
 13029
 13030 6EEF			@exit
 13031 					.ifdef @new
 13032 					lda <@VarData
 13033 					sta :ztmp
 13034 					lda >@VarData
 13035 					ldy #@VarDataSize-1
 13036 					jmp @FreeMem
 13037 					els
 13038 6EEF 60				rts						; ret
 13039 					eif
 13040 				.endl
 13041
 13042 6EF0			.local	WRITE_ROUND_LEVEL				; PROCEDURE
 13043
 13044 				; ------------------------------------------------------------
 13045
 13046 = A523			X	= DATAORIGIN+$0B4C
 13047 = A525			Y	= DATAORIGIN+$0B4E
 13048
 13049 = A523			@VarData	= X
 13050 = 0004			@VarDataSize	= 4
 13051
 13052 6EF0			@exit
 13053 					.ifdef @new
 13054 					lda <@VarData
 13055 					sta :ztmp
 13056 					lda >@VarData
 13057 					ldy #@VarDataSize-1
 13058 					jmp @FreeMem
 13059 					els
 13060 6EF0 60				rts						; ret
 13061 					eif
 13062 				.endl
 13063
 13064 6EF1			.local	REMOVE_ROUND_LEVEL				; PROCEDURE
 13065
 13066 				; optimize OK (service.pas), line = 2266
 13067
 13068 6EF1 A9 81			lda #$81
 13069 6EF3 8D 27 A5			sta Y
 13070
 13071 6EF6			l_256C
 13072 				; --- ForToDoCondition
 13073 6EF6 AD 27 A5			lda Y
 13074 6EF9 C9 A1			cmp #$A1
 13075 6EFB 90 03 4C A0 6F		jcs l_257A
 13076
 13077 				; optimize OK (service.pas), line = 2269
 13078
 13079 6F00 A9 00			lda #$00
 13080 6F02 85 B1			sta :STACKORIGIN+STACKWIDTH+11
 13081 6F04 AD 27 A5			lda Y
 13082 6F07 0A				asl @
 13083 6F08 26 B1			rol :STACKORIGIN+STACKWIDTH+11
 13084 6F0A 18 6D DA 98			add ROW
 13085 6F0E 85 84			sta :bp2
 13086 6F10 AD DB 98			lda ROW+1
 13087 6F13 65 B1			adc :STACKORIGIN+STACKWIDTH+11
 13088 6F15 85 85			sta :bp2+1
 13089 6F17 A0 00			ldy #$00
 13090 6F19 A9 48			lda #$48
 13091 6F1B 18 71 84			add (:bp2),y
 13092 6F1E 8D AE A3			sta BLITROW.DST
 13093 6F21 C8				iny
 13094 6F22 A9 00			lda #$00
 13095 6F24 71 84			adc (:bp2),y
 13096 6F26 8D AF A3			sta BLITROW.DST+1
 13097 6F29 A9 00			lda #$00
 13098 6F2B 69 00			adc #$00
 13099 6F2D 8D B0 A3			sta BLITROW.DST+2
 13100 6F30 A9 00			lda #$00
 13101 6F32 69 00			adc #$00
 13102 6F34 8D B1 A3			sta BLITROW.DST+3
 13103 6F37 AD A4 9A			lda PLAYSCREEN.OFS
 13104 6F3A 18 69 48			add #$48
 13105 6F3D 85 A1			sta :STACKORIGIN+11
 13106 6F3F AD A5 9A			lda PLAYSCREEN.OFS+1
 13107 6F42 69 00			adc #$00
 13108 6F44 85 B1			sta :STACKORIGIN+STACKWIDTH+11
 13109 6F46 AD A6 9A			lda PLAYSCREEN.OFS+2
 13110 6F49 69 00			adc #$00
 13111 6F4B 85 C1			sta :STACKORIGIN+STACKWIDTH*2+11
 13112 6F4D AD A7 9A			lda PLAYSCREEN.OFS+3
 13113 6F50 69 00			adc #$00
 13114 6F52 85 D1			sta :STACKORIGIN+STACKWIDTH*3+11
 13115 6F54 A9 00			lda #$00
 13116 6F56 85 B2			sta :STACKORIGIN+STACKWIDTH+12
 13117 6F58 AD 27 A5			lda Y
 13118 6F5B 0A				asl @
 13119 6F5C 26 B2			rol :STACKORIGIN+STACKWIDTH+12
 13120 6F5E 18 6D DA 98			add ROW
 13121 6F62 85 84			sta :bp2
 13122 6F64 AD DB 98			lda ROW+1
 13123 6F67 65 B2			adc :STACKORIGIN+STACKWIDTH+12
 13124 6F69 85 85			sta :bp2+1
 13125 6F6B A0 00			ldy #$00
 13126 6F6D A5 A1			lda :STACKORIGIN+11
 13127 6F6F 18 71 84			add (:bp2),y
 13128 6F72 8D AA A3			sta BLITROW.SRC
 13129 6F75 C8				iny
 13130 6F76 A5 B1			lda :STACKORIGIN+STACKWIDTH+11
 13131 6F78 71 84			adc (:bp2),y
 13132 6F7A 8D AB A3			sta BLITROW.SRC+1
 13133 6F7D A5 C1			lda :STACKORIGIN+STACKWIDTH*2+11
 13134 6F7F 69 00			adc #$00
 13135 6F81 8D AC A3			sta BLITROW.SRC+2
 13136 6F84 A5 D1			lda :STACKORIGIN+STACKWIDTH*3+11
 13137 6F86 69 00			adc #$00
 13138 6F88 8D AD A3			sta BLITROW.SRC+3
 13139 6F8B A9 58			lda #$58
 13140 6F8D 8D B2 A3			sta BLITROW.SIZE
 13141 6F90 A9 00			lda #$00
 13142 6F92 8D B3 A3			sta BLITROW.SIZE+1
 13143 6F95 20 F4 25			jsr BLITROW
 13144
 13145 				; --- ForToDoEpilog
 13146 6F98 EE 27 A5			inc Y
 13147 6F9B F0 03 4C F6 6E		jne l_256C
 13148 6FA0			l_257A
 13149
 13150 				; ------------------------------------------------------------
 13151
 13152 = A527			Y	= DATAORIGIN+$0B50
 13153
 13154 = A527			@VarData	= Y
 13155 = 0001			@VarDataSize	= 1
 13156
 13157 6FA0			@exit
 13158 					.ifdef @new
 13159 					lda <@VarData
 13160 					sta :ztmp
 13161 					lda >@VarData
 13162 					ldy #@VarDataSize-1
 13163 					jmp @FreeMem
 13164 					els
 13165 6FA0 60				rts						; ret
 13166 					eif
 13167 				.endl
 13168
 13169 6FA1			.local	GAME_OVER					; PROCEDURE
 13170
 13171 				; ------------------------------------------------------------
 13172
 13173 = A528			X	= DATAORIGIN+$0B51
 13174 = A52A			Y	= DATAORIGIN+$0B53
 13175 = A52C			adr.SC	= [DATAORIGIN+$0B55] .array [21]
 13176 6FA1			.var SC	= adr.SC .word
 13177
 13178 = A528			@VarData	= X
 13179 = 0019			@VarDataSize	= 25
 13180
 13181 6FA1			@exit
 13182 					.ifdef @new
 13183 					lda <@VarData
 13184 					sta :ztmp
 13185 					lda >@VarData
 13186 					ldy #@VarDataSize-1
 13187 					jmp @FreeMem
 13188 					els
 13189 6FA1 60				rts						; ret
 13190 					eif
 13191 = 6FA2 2C A5		SC
 13191 				.endl
 13192
 13193 6FA4			.local	DESTROY_VAUS					; PROCEDURE
 13194
 13195 				; optimize OK (service.pas), line = 2313
 13196
 13197 6FA4 AD B0 9A 8D A8 9A + 	:8 mva adr.NORMAL+# adr.PLAYVAUS+#
 13198
 13199 				; optimize FAIL ('MODIFY_VAUS', service.pas), line = 2314
 13200
 13201 6FD4 20 A2 3C			jsr MODIFY_VAUS
 13202
 13203 				; optimize OK (service.pas), line = 2316
 13204
 13205 6FD7 AD 18 9B			lda VAUS.X
 13206 6FDA 8D 77 A4			sta MOVE_VAUS.X
 13207 6FDD A9 00			lda #$00
 13208 6FDF 8D 78 A4			sta MOVE_VAUS.X+1
 13209 6FE2 AD 19 9B			lda VAUS.Y
 13210 6FE5 8D 79 A4			sta MOVE_VAUS.Y
 13211 6FE8 A9 00			lda #$00
 13212 6FEA 8D 7A A4			sta MOVE_VAUS.Y+1
 13213 6FED 20 14 40			jsr MOVE_VAUS
 13214
 13215 				; optimize OK (service.pas), line = 2318
 13216
 13217 6FF0 AD 18 9B			lda VAUS.X
 13218 6FF3 38 E9 04			sub #$04
 13219 6FF6 8D 43 A5			sta A
 13220 6FF9 A9 00			lda #$00
 13221 6FFB E9 00			sbc #$00
 13222 6FFD 8D 44 A5			sta A+1
 13223
 13224 				; optimize OK (service.pas), line = 2319
 13225
 13226 7000 AD 19 9B			lda VAUS.Y
 13227 7003 38 E9 05			sub #$05
 13228 7006 8D 45 A5			sta B
 13229 7009 A9 00			lda #$00
 13230 700B E9 00			sbc #$00
 13231 700D 8D 46 A5			sta B+1
 13232
 13233 				; optimize OK (service.pas), line = 2322
 13234
 13235 7010 A9 00			lda #$00
 13236 7012 8D 47 A5			sta W
 13237
 13238 7015			l_25CA
 13239 				; --- ForToDoCondition
 13240 7015 AD 47 A5			lda W
 13241 7018 C9 07			cmp #$07
 13242 701A 90 03 4C 83 72		jcs l_25D8
 13243
 13244 				; optimize OK (service.pas), line = 2324
 13245
 13246 701F A9 00			lda #$00
 13247 7021 8D 49 A5			sta Y
 13248
 13249 7024			l_25E1
 13250 				; --- ForToDoCondition
 13251 7024 AD 49 A5			lda Y
 13252 7027 C9 10			cmp #$10
 13253 7029 90 03 4C 6D 72		jcs l_25EF
 13254
 13255 				; optimize OK (service.pas), line = 2326
 13256
 13257 702E AD C8 9A			lda EXPLOSION.WIDTH
 13258 7031 85 8E			sta :ecx
 13259 7033 AD C9 9A			lda EXPLOSION.WIDTH+1
 13260 7036 85 8F			sta :ecx+1
 13261 7038 AD 49 A5			lda Y
 13262 703B 85 86			sta :eax
 13263 703D A9 00			lda #$00
 13264 703F 85 87			sta :eax+1
 13265 					.ifdef fmulinit
 13266 					fmulu_16
 13267 					els
 13268 7041 20 6E 13			imulCX_AL
 13269 					eif
 13270 7044 A5 86			lda :eax
 13271 7046 85 9F			sta :STACKORIGIN+9
 13272 7048 A5 87			lda :eax+1
 13273 704A 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 13274 704C AD C8 9A			lda EXPLOSION.WIDTH
 13275 704F 85 A1			sta :STACKORIGIN+11
 13276 7051 AD C9 9A			lda EXPLOSION.WIDTH+1
 13277 7054 06 A1			asl :STACKORIGIN+11
 13278 7056 2A				rol @
 13279 7057 06 A1			asl :STACKORIGIN+11
 13280 7059 2A				rol @
 13281 705A 06 A1			asl :STACKORIGIN+11
 13282 705C 2A				rol @
 13283 705D 06 A1			asl :STACKORIGIN+11
 13284 705F 2A				rol @
 13285 7060 85 8F			sta :ecx+1
 13286 7062 A5 A1			lda :STACKORIGIN+11
 13287 7064 85 8E			sta :ecx
 13288 7066 AD 47 A5			lda W
 13289 7069 85 86			sta :eax
 13290 706B A9 00			lda #$00
 13291 706D 85 87			sta :eax+1
 13292 					.ifdef fmulinit
 13293 					fmulu_16
 13294 					els
 13295 706F 20 2A 13			imulCX
 13296 					eif
 13297 7072 A5 86			lda :eax
 13298 7074 18 65 9F			add :STACKORIGIN+9
 13299 7077 8D 41 A5			sta Z
 13300 707A A5 87			lda :eax+1
 13301 707C 65 AF			adc :STACKORIGIN+STACKWIDTH+9
 13302 707E 8D 42 A5			sta Z+1
 13303
 13304 				; optimize OK (service.pas), line = 2327
 13305
 13306 7081 A9 00			lda #$00
 13307 7083 8D 48 A5			sta X
 13308 7086 AC C8 9A			ldy EXPLOSION.WIDTH
 13309 7089 88				dey
 13310 708A 8C 8E 70			sty @FORTMP_2614_0
 13311
 13312 708D			l_2617
 13313 				; --- ForToDoCondition
 13314 708D A9 00			lda @FORTMP_2614_0::#$00
 13315 708F CD 48 A5			cmp X
 13316 7092 B0 03 4C 65 72		jcc l_2625
 13317
 13318 				; optimize FAIL (1, service.pas), line = 2331
 13319
 13320 7097 E8				inx
 13321 7098 A0 01			ldy #1
 13322 709A AD 47 A5			lda W
 13323 709D C9 06			cmp #$06
 13324 709F F0 01			beq @+
 13325 70A1 88				dey
 13326 				@
 13327 70A2 94 96			sty :STACKORIGIN,x
 13328 70A4 AD CC 9A			lda EXPLOSION.OFS
 13329 70A7 18 6D 48 A5			add X
 13330 70AB 85 9F			sta :STACKORIGIN+9
 13331 70AD AD CD 9A			lda EXPLOSION.OFS+1
 13332 70B0 69 00			adc #$00
 13333 70B2 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 13334 70B4 AD CE 9A			lda EXPLOSION.OFS+2
 13335 70B7 69 00			adc #$00
 13336 70B9 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
 13337 70BB AD CF 9A			lda EXPLOSION.OFS+3
 13338 70BE 69 00			adc #$00
 13339 70C0 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
 13340 70C2 A5 9F			lda :STACKORIGIN+9
 13341 70C4 18 6D 41 A5			add Z
 13342 70C8 8D C5 A3			sta GETBYTE.SRC
 13343 70CB A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 13344 70CD 6D 42 A5			adc Z+1
 13345 70D0 8D C6 A3			sta GETBYTE.SRC+1
 13346 70D3 A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
 13347 70D5 69 00			adc #$00
 13348 70D7 8D C7 A3			sta GETBYTE.SRC+2
 13349 70DA A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
 13350 70DC 69 00			adc #$00
 13351 70DE 8D C8 A3			sta GETBYTE.SRC+3
 13352 70E1 20 AB 26			jsr GETBYTE
 13353 70E4 CA				dex
 13354 70E5 A0 01			ldy #1
 13355 70E7 AD C9 A3			lda GETBYTE.RESULT
 13356 70EA F0 01			beq @+
 13357 70EC 88				dey
 13358 				@
 13359 70ED 98				tya
 13360 70EE 15 97			ora :STACKORIGIN+1,x
 13361 70F0 D0 03 4C BF 71		jeq l_264D
 13362
 13363 				; optimize OK (service.pas), line = 2333
 13364
 13365 70F5 AD 48 A5			lda X
 13366 70F8 18 6D 43 A5			add A
 13367 70FC 85 9F			sta :STACKORIGIN+9
 13368 70FE A9 00			lda #$00
 13369 7100 6D 44 A5			adc A+1
 13370 7103 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 13371 7105 A9 00			lda #$00
 13372 7107 69 00			adc #$00
 13373 7109 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
 13374 710B A9 00			lda #$00
 13375 710D 69 00			adc #$00
 13376 710F 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
 13377 7111 AD 49 A5			lda Y
 13378 7114 18 6D 45 A5			add B
 13379 7118 85 A0			sta :STACKORIGIN+10
 13380 711A A9 00			lda #$00
 13381 711C 6D 46 A5			adc B+1
 13382 711F 06 A0			asl :STACKORIGIN+10
 13383 7121 2A				rol @
 13384 7122 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 13385 7124 AD DA 98			lda ROW
 13386 7127 18 65 A0			add :STACKORIGIN+10
 13387 712A 85 84			sta :bp2
 13388 712C AD DB 98			lda ROW+1
 13389 712F 65 B0			adc :STACKORIGIN+STACKWIDTH+10
 13390 7131 85 85			sta :bp2+1
 13391 7133 A0 00			ldy #$00
 13392 7135 A5 9F			lda :STACKORIGIN+9
 13393 7137 18 71 84			add (:bp2),y
 13394 713A 8D BC A3			sta BLITBYTE.DST
 13395 713D C8				iny
 13396 713E A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 13397 7140 71 84			adc (:bp2),y
 13398 7142 8D BD A3			sta BLITBYTE.DST+1
 13399 7145 A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
 13400 7147 69 00			adc #$00
 13401 7149 8D BE A3			sta BLITBYTE.DST+2
 13402 714C A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
 13403 714E 69 00			adc #$00
 13404 7150 8D BF A3			sta BLITBYTE.DST+3
 13405 7153 AD A4 9A			lda PLAYSCREEN.OFS
 13406 7156 18 6D 48 A5			add X
 13407 715A 85 A0			sta :STACKORIGIN+10
 13408 715C AD A5 9A			lda PLAYSCREEN.OFS+1
 13409 715F 69 00			adc #$00
 13410 7161 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 13411 7163 AD A6 9A			lda PLAYSCREEN.OFS+2
 13412 7166 69 00			adc #$00
 13413 7168 85 C0			sta :STACKORIGIN+STACKWIDTH*2+10
 13414 716A AD A7 9A			lda PLAYSCREEN.OFS+3
 13415 716D 69 00			adc #$00
 13416 716F 85 D0			sta :STACKORIGIN+STACKWIDTH*3+10
 13417 7171 A5 A0			lda :STACKORIGIN+10
 13418 7173 18 6D 43 A5			add A
 13419 7177 85 A0			sta :STACKORIGIN+10
 13420 7179 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
 13421 717B 6D 44 A5			adc A+1
 13422 717E 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 13423 7180 A5 C0			lda :STACKORIGIN+STACKWIDTH*2+10
 13424 7182 69 00			adc #$00
 13425 7184 85 C0			sta :STACKORIGIN+STACKWIDTH*2+10
 13426 7186 A5 D0			lda :STACKORIGIN+STACKWIDTH*3+10
 13427 7188 69 00			adc #$00
 13428 718A 85 D0			sta :STACKORIGIN+STACKWIDTH*3+10
 13429 718C AD 49 A5			lda Y
 13430 718F 18 6D 45 A5			add B
 13431 7193 85 A1			sta :STACKORIGIN+11
 13432 7195 A9 00			lda #$00
 13433 7197 6D 46 A5			adc B+1
 13434 719A 06 A1			asl :STACKORIGIN+11
 13435 719C 2A				rol @
 13436 719D 85 B1			sta :STACKORIGIN+STACKWIDTH+11
 13437 719F AD DA 98			lda ROW
 13438 71A2 18 65 A1			add :STACKORIGIN+11
 13439 71A5 85 84			sta :bp2
 13440 71A7 AD DB 98			lda ROW+1
 13441 71AA 65 B1			adc :STACKORIGIN+STACKWIDTH+11
 13442 71AC 85 85			sta :bp2+1
 13443 71AE 88				dey
 13444 71AF A5 A0			lda :STACKORIGIN+10
 13445 71B1 18 71 84			add (:bp2),y
 13446 71B4 8D B8 A3			sta BLITBYTE.SRC
 13447 71B7 C8				iny
 13448 71B8 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
 13449 71BA 71 84			adc (:bp2),y
 13450 71BC 4C 49 72			jmp l_268A
 13451 71BF			l_264D
 13452
 13453 				; optimize OK (service.pas), line = 2336
 13454
 13455 71BF AD 48 A5			lda X
 13456 71C2 18 6D 43 A5			add A
 13457 71C6 85 9F			sta :STACKORIGIN+9
 13458 71C8 A9 00			lda #$00
 13459 71CA 6D 44 A5			adc A+1
 13460 71CD 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 13461 71CF A9 00			lda #$00
 13462 71D1 69 00			adc #$00
 13463 71D3 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
 13464 71D5 A9 00			lda #$00
 13465 71D7 69 00			adc #$00
 13466 71D9 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
 13467 71DB AD 49 A5			lda Y
 13468 71DE 18 6D 45 A5			add B
 13469 71E2 85 A0			sta :STACKORIGIN+10
 13470 71E4 A9 00			lda #$00
 13471 71E6 6D 46 A5			adc B+1
 13472 71E9 06 A0			asl :STACKORIGIN+10
 13473 71EB 2A				rol @
 13474 71EC 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 13475 71EE AD DA 98			lda ROW
 13476 71F1 18 65 A0			add :STACKORIGIN+10
 13477 71F4 85 84			sta :bp2
 13478 71F6 AD DB 98			lda ROW+1
 13479 71F9 65 B0			adc :STACKORIGIN+STACKWIDTH+10
 13480 71FB 85 85			sta :bp2+1
 13481 71FD A0 00			ldy #$00
 13482 71FF A5 9F			lda :STACKORIGIN+9
 13483 7201 18 71 84			add (:bp2),y
 13484 7204 8D BC A3			sta BLITBYTE.DST
 13485 7207 C8				iny
 13486 7208 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 13487 720A 71 84			adc (:bp2),y
 13488 720C 8D BD A3			sta BLITBYTE.DST+1
 13489 720F A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
 13490 7211 69 00			adc #$00
 13491 7213 8D BE A3			sta BLITBYTE.DST+2
 13492 7216 A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
 13493 7218 69 00			adc #$00
 13494 721A 8D BF A3			sta BLITBYTE.DST+3
 13495 721D AD CC 9A			lda EXPLOSION.OFS
 13496 7220 18 6D 48 A5			add X
 13497 7224 85 A0			sta :STACKORIGIN+10
 13498 7226 AD CD 9A			lda EXPLOSION.OFS+1
 13499 7229 69 00			adc #$00
 13500 722B 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 13501 722D AD CE 9A			lda EXPLOSION.OFS+2
 13502 7230 69 00			adc #$00
 13503 7232 85 C0			sta :STACKORIGIN+STACKWIDTH*2+10
 13504 7234 AD CF 9A			lda EXPLOSION.OFS+3
 13505 7237 69 00			adc #$00
 13506 7239 85 D0			sta :STACKORIGIN+STACKWIDTH*3+10
 13507 723B A5 A0			lda :STACKORIGIN+10
 13508 723D 18 6D 41 A5			add Z
 13509 7241 8D B8 A3			sta BLITBYTE.SRC
 13510 7244 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
 13511 7246 6D 42 A5			adc Z+1
 13512 7249			l_268A
 13513 7249 8D B9 A3			sta BLITBYTE.SRC+1
 13514 724C A5 C0			lda :STACKORIGIN+STACKWIDTH*2+10
 13515 724E 69 00			adc #$00
 13516 7250 8D BA A3			sta BLITBYTE.SRC+2
 13517 7253 A5 D0			lda :STACKORIGIN+STACKWIDTH*3+10
 13518 7255 69 00			adc #$00
 13519 7257 8D BB A3			sta BLITBYTE.SRC+3
 13520 725A 20 6C 26			jsr BLITBYTE
 13521
 13522 				; --- ForToDoEpilog
 13523 725D EE 48 A5			inc X
 13524 7260 F0 03 4C 8D 70		jne l_2617
 13525 7265			l_2625
 13526
 13527 				; --- ForToDoEpilog
 13528 7265 EE 49 A5			inc Y
 13529 7268 F0 03 4C 24 70		jne l_25E1
 13530 726D			l_25EF
 13531
 13532 				; optimize OK (service.pas), line = 2340
 13533
 13534 726D AD 47 A5			lda W
 13535 7270 8D 84 9A			sta DEATH_SOUND.A
 13536 7273 A9 00			lda #$00
 13537 7275 8D 85 9A			sta DEATH_SOUND.A+1
 13538 7278 20 C9 24			jsr DEATH_SOUND
 13539
 13540 				; --- ForToDoEpilog
 13541 727B EE 47 A5			inc W
 13542 727E F0 03 4C 15 70		jne l_25CA
 13543 7283			l_25D8
 13544
 13545 				; optimize OK (service.pas), line = 2344
 13546
 13547 7283 A9 07			lda #$07
 13548 7285 8D 84 9A			sta DEATH_SOUND.A
 13549 7288 A9 00			lda #$00
 13550 728A 8D 85 9A			sta DEATH_SOUND.A+1
 13551 728D 20 C9 24			jsr DEATH_SOUND
 13552
 13553 				; optimize OK (service.pas), line = 2345
 13554
 13555 7290 A9 96			lda #$96
 13556 7292 8D CA A3			sta MYDELAY.A
 13557 7295 A9 00			lda #$00
 13558 7297 8D CB A3			sta MYDELAY.A+1
 13559 729A 20 C2 26			jsr MYDELAY
 13560
 13561 				; optimize FAIL ('DISABLE_LETTER', service.pas), line = 2346
 13562
 13563 729D 20 AD 2B			jsr DISABLE_LETTER
 13564
 13565 				; ------------------------------------------------------------
 13566
 13567 = A541			Z	= DATAORIGIN+$0B6A
 13568 = A543			A	= DATAORIGIN+$0B6C
 13569 = A545			B	= DATAORIGIN+$0B6E
 13570 = A547			W	= DATAORIGIN+$0B70
 13571 = A548			X	= DATAORIGIN+$0B71
 13572 = A549			Y	= DATAORIGIN+$0B72
 13573
 13574 = A541			@VarData	= Z
 13575 = 0009			@VarDataSize	= 9
 13576
 13577 72A0			@exit
 13578 					.ifdef @new
 13579 					lda <@VarData
 13580 					sta :ztmp
 13581 					lda >@VarData
 13582 					ldy #@VarDataSize-1
 13583 					jmp @FreeMem
 13584 					els
 13585 72A0 60				rts						; ret
 13586 					eif
 13587 				.endl
 13588
 13589 72A1			.local	CREATE_VAUS					; PROCEDURE
 13590
 13591 				; optimize FAIL ('NOSOUND', service.pas), line = 2357
 13592
 13593 72A1 20 C1 26			jsr NOSOUND
 13594
 13595 				; optimize OK (service.pas), line = 2358
 13596
 13597 72A4 A9 5B			lda #$5B
 13598 72A6 8D 50 A5			sta A
 13599 72A9 A9 00			lda #$00
 13600 72AB 8D 51 A5			sta A+1
 13601
 13602 				; optimize OK (service.pas), line = 2359
 13603
 13604 72AE A9 B3			lda #$B3
 13605 72B0 8D 52 A5			sta B
 13606 72B3 A9 00			lda #$00
 13607 72B5 8D 53 A5			sta B+1
 13608
 13609 				; optimize OK (service.pas), line = 2361
 13610
 13611 72B8 A9 0B			lda #$0B
 13612 72BA 8D 4D A5			sta W
 13613
 13614 72BD			l_26DE
 13615 				; --- ForToDoCondition
 13616 72BD A9 00			lda #$00
 13617 72BF 8D 4C A5			sta Y
 13618
 13619 72C2			l_26F5
 13620 				; --- ForToDoCondition
 13621 72C2 AD 4C A5			lda Y
 13622 72C5 C9 10			cmp #$10
 13623 72C7 90 03 4C F8 74		jcs l_2703
 13624
 13625 				; optimize OK (service.pas), line = 2365
 13626
 13627 72CC AD D0 9A			lda NEWVAUS.WIDTH
 13628 72CF 85 8E			sta :ecx
 13629 72D1 AD D1 9A			lda NEWVAUS.WIDTH+1
 13630 72D4 85 8F			sta :ecx+1
 13631 72D6 AD 4C A5			lda Y
 13632 72D9 85 86			sta :eax
 13633 72DB A9 00			lda #$00
 13634 72DD 85 87			sta :eax+1
 13635 					.ifdef fmulinit
 13636 					fmulu_16
 13637 					els
 13638 72DF 20 6E 13			imulCX_AL
 13639 					eif
 13640 72E2 A5 86			lda :eax
 13641 72E4 85 9F			sta :STACKORIGIN+9
 13642 72E6 A5 87			lda :eax+1
 13643 72E8 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 13644 72EA A9 10			lda #$10
 13645 72EC 85 8E			sta :ecx
 13646 72EE A9 00			lda #$00
 13647 72F0 85 8F			sta :ecx+1
 13648 72F2 AD D0 9A			lda NEWVAUS.WIDTH
 13649 72F5 85 86			sta :eax
 13650 72F7 AD D1 9A			lda NEWVAUS.WIDTH+1
 13651 72FA 85 87			sta :eax+1
 13652 					.ifdef fmulinit
 13653 					fmulu_16
 13654 					els
 13655 72FC 20 2A 13			imulCX
 13656 					eif
 13657 72FF A5 86			lda :eax
 13658 7301 85 8E			sta :ecx
 13659 7303 A5 87			lda :eax+1
 13660 7305 85 8F			sta :ecx+1
 13661 7307 AD 4D A5			lda W
 13662 730A 85 86			sta :eax
 13663 730C A9 00			lda #$00
 13664 730E 85 87			sta :eax+1
 13665 					.ifdef fmulinit
 13666 					fmulu_16
 13667 					els
 13668 7310 20 6E 13			imulCX_AL
 13669 					eif
 13670 7313 A5 86			lda :eax
 13671 7315 18 65 9F			add :STACKORIGIN+9
 13672 7318 8D 4E A5			sta Z
 13673 731B A5 87			lda :eax+1
 13674 731D 65 AF			adc :STACKORIGIN+STACKWIDTH+9
 13675 731F 8D 4F A5			sta Z+1
 13676
 13677 				; optimize OK (service.pas), line = 2366
 13678
 13679 7322 A9 00			lda #$00
 13680 7324 8D 4B A5			sta X
 13681 7327 AC D0 9A			ldy NEWVAUS.WIDTH
 13682 732A 88				dey
 13683 732B 8C 2F 73			sty @FORTMP_2728_0
 13684
 13685 732E			l_272B
 13686 				; --- ForToDoCondition
 13687 732E A9 00			lda @FORTMP_2728_0::#$00
 13688 7330 CD 4B A5			cmp X
 13689 7333 B0 03 4C F0 74		jcc l_2739
 13690
 13691 				; optimize OK (service.pas), line = 2368
 13692
 13693 7338 AD D4 9A			lda NEWVAUS.OFS
 13694 733B 18 6D 4B A5			add X
 13695 733F 85 9F			sta :STACKORIGIN+9
 13696 7341 AD D5 9A			lda NEWVAUS.OFS+1
 13697 7344 69 00			adc #$00
 13698 7346 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 13699 7348 AD D6 9A			lda NEWVAUS.OFS+2
 13700 734B 69 00			adc #$00
 13701 734D 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
 13702 734F AD D7 9A			lda NEWVAUS.OFS+3
 13703 7352 69 00			adc #$00
 13704 7354 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
 13705 7356 A5 9F			lda :STACKORIGIN+9
 13706 7358 18 6D 4E A5			add Z
 13707 735C 8D C5 A3			sta GETBYTE.SRC
 13708 735F A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 13709 7361 6D 4F A5			adc Z+1
 13710 7364 8D C6 A3			sta GETBYTE.SRC+1
 13711 7367 A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
 13712 7369 69 00			adc #$00
 13713 736B 8D C7 A3			sta GETBYTE.SRC+2
 13714 736E A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
 13715 7370 69 00			adc #$00
 13716 7372 8D C8 A3			sta GETBYTE.SRC+3
 13717 7375 20 AB 26			jsr GETBYTE
 13718 7378 AD C9 A3			lda GETBYTE.RESULT
 13719 737B F0 03 4C 4A 74		jne l_2755
 13720
 13721 				; optimize OK (service.pas), line = 2370
 13722
 13723 7380 AD 4B A5			lda X
 13724 7383 18 6D 50 A5			add A
 13725 7387 85 9F			sta :STACKORIGIN+9
 13726 7389 A9 00			lda #$00
 13727 738B 6D 51 A5			adc A+1
 13728 738E 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 13729 7390 A9 00			lda #$00
 13730 7392 69 00			adc #$00
 13731 7394 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
 13732 7396 A9 00			lda #$00
 13733 7398 69 00			adc #$00
 13734 739A 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
 13735 739C AD 4C A5			lda Y
 13736 739F 18 6D 52 A5			add B
 13737 73A3 85 A0			sta :STACKORIGIN+10
 13738 73A5 A9 00			lda #$00
 13739 73A7 6D 53 A5			adc B+1
 13740 73AA 06 A0			asl :STACKORIGIN+10
 13741 73AC 2A				rol @
 13742 73AD 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 13743 73AF AD DA 98			lda ROW
 13744 73B2 18 65 A0			add :STACKORIGIN+10
 13745 73B5 85 84			sta :bp2
 13746 73B7 AD DB 98			lda ROW+1
 13747 73BA 65 B0			adc :STACKORIGIN+STACKWIDTH+10
 13748 73BC 85 85			sta :bp2+1
 13749 73BE A0 00			ldy #$00
 13750 73C0 A5 9F			lda :STACKORIGIN+9
 13751 73C2 18 71 84			add (:bp2),y
 13752 73C5 8D BC A3			sta BLITBYTE.DST
 13753 73C8 C8				iny
 13754 73C9 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 13755 73CB 71 84			adc (:bp2),y
 13756 73CD 8D BD A3			sta BLITBYTE.DST+1
 13757 73D0 A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
 13758 73D2 69 00			adc #$00
 13759 73D4 8D BE A3			sta BLITBYTE.DST+2
 13760 73D7 A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
 13761 73D9 69 00			adc #$00
 13762 73DB 8D BF A3			sta BLITBYTE.DST+3
 13763 73DE AD A4 9A			lda PLAYSCREEN.OFS
 13764 73E1 18 6D 4B A5			add X
 13765 73E5 85 A0			sta :STACKORIGIN+10
 13766 73E7 AD A5 9A			lda PLAYSCREEN.OFS+1
 13767 73EA 69 00			adc #$00
 13768 73EC 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 13769 73EE AD A6 9A			lda PLAYSCREEN.OFS+2
 13770 73F1 69 00			adc #$00
 13771 73F3 85 C0			sta :STACKORIGIN+STACKWIDTH*2+10
 13772 73F5 AD A7 9A			lda PLAYSCREEN.OFS+3
 13773 73F8 69 00			adc #$00
 13774 73FA 85 D0			sta :STACKORIGIN+STACKWIDTH*3+10
 13775 73FC A5 A0			lda :STACKORIGIN+10
 13776 73FE 18 6D 50 A5			add A
 13777 7402 85 A0			sta :STACKORIGIN+10
 13778 7404 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
 13779 7406 6D 51 A5			adc A+1
 13780 7409 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 13781 740B A5 C0			lda :STACKORIGIN+STACKWIDTH*2+10
 13782 740D 69 00			adc #$00
 13783 740F 85 C0			sta :STACKORIGIN+STACKWIDTH*2+10
 13784 7411 A5 D0			lda :STACKORIGIN+STACKWIDTH*3+10
 13785 7413 69 00			adc #$00
 13786 7415 85 D0			sta :STACKORIGIN+STACKWIDTH*3+10
 13787 7417 AD 4C A5			lda Y
 13788 741A 18 6D 52 A5			add B
 13789 741E 85 A1			sta :STACKORIGIN+11
 13790 7420 A9 00			lda #$00
 13791 7422 6D 53 A5			adc B+1
 13792 7425 06 A1			asl :STACKORIGIN+11
 13793 7427 2A				rol @
 13794 7428 85 B1			sta :STACKORIGIN+STACKWIDTH+11
 13795 742A AD DA 98			lda ROW
 13796 742D 18 65 A1			add :STACKORIGIN+11
 13797 7430 85 84			sta :bp2
 13798 7432 AD DB 98			lda ROW+1
 13799 7435 65 B1			adc :STACKORIGIN+STACKWIDTH+11
 13800 7437 85 85			sta :bp2+1
 13801 7439 88				dey
 13802 743A A5 A0			lda :STACKORIGIN+10
 13803 743C 18 71 84			add (:bp2),y
 13804 743F 8D B8 A3			sta BLITBYTE.SRC
 13805 7442 C8				iny
 13806 7443 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
 13807 7445 71 84			adc (:bp2),y
 13808 7447 4C D4 74			jmp l_2792
 13809 744A			l_2755
 13810
 13811 				; optimize OK (service.pas), line = 2373
 13812
 13813 744A AD 4B A5			lda X
 13814 744D 18 6D 50 A5			add A
 13815 7451 85 9F			sta :STACKORIGIN+9
 13816 7453 A9 00			lda #$00
 13817 7455 6D 51 A5			adc A+1
 13818 7458 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 13819 745A A9 00			lda #$00
 13820 745C 69 00			adc #$00
 13821 745E 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
 13822 7460 A9 00			lda #$00
 13823 7462 69 00			adc #$00
 13824 7464 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
 13825 7466 AD 4C A5			lda Y
 13826 7469 18 6D 52 A5			add B
 13827 746D 85 A0			sta :STACKORIGIN+10
 13828 746F A9 00			lda #$00
 13829 7471 6D 53 A5			adc B+1
 13830 7474 06 A0			asl :STACKORIGIN+10
 13831 7476 2A				rol @
 13832 7477 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 13833 7479 AD DA 98			lda ROW
 13834 747C 18 65 A0			add :STACKORIGIN+10
 13835 747F 85 84			sta :bp2
 13836 7481 AD DB 98			lda ROW+1
 13837 7484 65 B0			adc :STACKORIGIN+STACKWIDTH+10
 13838 7486 85 85			sta :bp2+1
 13839 7488 A0 00			ldy #$00
 13840 748A A5 9F			lda :STACKORIGIN+9
 13841 748C 18 71 84			add (:bp2),y
 13842 748F 8D BC A3			sta BLITBYTE.DST
 13843 7492 C8				iny
 13844 7493 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 13845 7495 71 84			adc (:bp2),y
 13846 7497 8D BD A3			sta BLITBYTE.DST+1
 13847 749A A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
 13848 749C 69 00			adc #$00
 13849 749E 8D BE A3			sta BLITBYTE.DST+2
 13850 74A1 A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
 13851 74A3 69 00			adc #$00
 13852 74A5 8D BF A3			sta BLITBYTE.DST+3
 13853 74A8 AD D4 9A			lda NEWVAUS.OFS
 13854 74AB 18 6D 4B A5			add X
 13855 74AF 85 A0			sta :STACKORIGIN+10
 13856 74B1 AD D5 9A			lda NEWVAUS.OFS+1
 13857 74B4 69 00			adc #$00
 13858 74B6 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 13859 74B8 AD D6 9A			lda NEWVAUS.OFS+2
 13860 74BB 69 00			adc #$00
 13861 74BD 85 C0			sta :STACKORIGIN+STACKWIDTH*2+10
 13862 74BF AD D7 9A			lda NEWVAUS.OFS+3
 13863 74C2 69 00			adc #$00
 13864 74C4 85 D0			sta :STACKORIGIN+STACKWIDTH*3+10
 13865 74C6 A5 A0			lda :STACKORIGIN+10
 13866 74C8 18 6D 4E A5			add Z
 13867 74CC 8D B8 A3			sta BLITBYTE.SRC
 13868 74CF A5 B0			lda :STACKORIGIN+STACKWIDTH+10
 13869 74D1 6D 4F A5			adc Z+1
 13870 74D4			l_2792
 13871 74D4 8D B9 A3			sta BLITBYTE.SRC+1
 13872 74D7 A5 C0			lda :STACKORIGIN+STACKWIDTH*2+10
 13873 74D9 69 00			adc #$00
 13874 74DB 8D BA A3			sta BLITBYTE.SRC+2
 13875 74DE A5 D0			lda :STACKORIGIN+STACKWIDTH*3+10
 13876 74E0 69 00			adc #$00
 13877 74E2 8D BB A3			sta BLITBYTE.SRC+3
 13878 74E5 20 6C 26			jsr BLITBYTE
 13879
 13880 				; --- ForToDoEpilog
 13881 74E8 EE 4B A5			inc X
 13882 74EB F0 03 4C 2E 73		jne l_272B
 13883 74F0			l_2739
 13884
 13885 				; --- ForToDoEpilog
 13886 74F0 EE 4C A5			inc Y
 13887 74F3 F0 03 4C C2 72		jne l_26F5
 13888 74F8			l_2703
 13889
 13890 				; optimize OK (service.pas), line = 2377
 13891
 13892 74F8 A9 01			lda #$01
 13893 74FA 8D CA A3			sta MYDELAY.A
 13894 74FD A9 00			lda #$00
 13895 74FF 8D CB A3			sta MYDELAY.A+1
 13896 7502 20 C2 26			jsr MYDELAY
 13897
 13898 				; --- ForToDoEpilog
 13899 7505 CE 4D A5			dec W
 13900 7508 30 03 4C BD 72		jpl l_26DE
 13901 750D			l_26EC
 13902
 13903 				; ------------------------------------------------------------
 13904
 13905 = A54B			X	= DATAORIGIN+$0B74
 13906 = A54C			Y	= DATAORIGIN+$0B75
 13907 = A54D			W	= DATAORIGIN+$0B76
 13908 = A54E			Z	= DATAORIGIN+$0B77
 13909 = A550			A	= DATAORIGIN+$0B79
 13910 = A552			B	= DATAORIGIN+$0B7B
 13911
 13912 = A54B			@VarData	= X
 13913 = 0009			@VarDataSize	= 9
 13914
 13915 750D			@exit
 13916 					.ifdef @new
 13917 					lda <@VarData
 13918 					sta :ztmp
 13919 					lda >@VarData
 13920 					ldy #@VarDataSize-1
 13921 					jmp @FreeMem
 13922 					els
 13923 750D 60				rts						; ret
 13924 					eif
 13925 				.endl
 13926
 13927 750E			.local	PUT_DIGIT					; PROCEDURE
 13928
 13929 				; optimize OK (service.pas), line = 2387
 13930
 13931 750E A9 DE			lda #$DE
 13932 7510 8D 5D A5			sta A
 13933
 13934 				; optimize OK (service.pas), line = 2411
 13935
 13936 7513 AC 59 A5			ldy NUM
 13937 7516 B9 B4 10			lda adr.DIGITS,y
 13938 7519 29 01			and #$01
 13939 751B C9 01			cmp #$01
 13940 751D D0 05			jne l_27E9
 13941 751F A9 DF			lda #$DF
 13942 7521 8D 5D A5			sta A
 13943 7524			l_27E9
 13944
 13945 				; optimize OK (service.pas), line = 2412
 13946
 13947 7524 A9 01			lda #$01
 13948 7526 8D 5B A5			sta X
 13949
 13950 7529			l_27F9
 13951 				; --- ForToDoCondition
 13952 7529 AD 5B A5			lda X
 13953 752C C9 05			cmp #$05
 13954 752E B0 4F			jcs l_2807
 13955
 13956 				; optimize OK (service.pas), line = 2413
 13957
 13958 7530 AD 55 A5			lda PX
 13959 7533 6D 5B A5			adc X
 13960 7536 85 9F			sta :STACKORIGIN+9
 13961 7538 AD 56 A5			lda PX+1
 13962 753B 69 00			adc #$00
 13963 753D 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 13964 753F AD 58 A5			lda PY+1
 13965 7542 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 13966 7544 AD 57 A5			lda PY
 13967 7547 0A				asl @
 13968 7548 26 B0			rol :STACKORIGIN+STACKWIDTH+10
 13969 754A 18 6D DA 98			add ROW
 13970 754E 85 84			sta :bp2
 13971 7550 AD DB 98			lda ROW+1
 13972 7553 65 B0			adc :STACKORIGIN+STACKWIDTH+10
 13973 7555 85 85			sta :bp2+1
 13974 7557 A0 00			ldy #$00
 13975 7559 A5 9F			lda :STACKORIGIN+9
 13976 755B 18 71 84			add (:bp2),y
 13977 755E 85 9F			sta :STACKORIGIN+9
 13978 7560 C8				iny
 13979 7561 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 13980 7563 71 84			adc (:bp2),y
 13981 7565 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 13982 7567 AD E0 98			lda SCREEN
 13983 756A 18 65 9F			add :STACKORIGIN+9
 13984 756D A8				tay
 13985 756E AD E1 98			lda SCREEN+1
 13986 7571 65 AF			adc :STACKORIGIN+STACKWIDTH+9
 13987 7573 85 83			sta :bp+1
 13988 7575 AD 5D A5			lda A
 13989 7578 91 82			sta (:bp),y
 13990
 13991 				; --- ForToDoEpilog
 13992 757A EE 5B A5			inc X
 13993 757D D0 AA			jne l_27F9
 13994 757F			l_2807
 13995
 13996 				; optimize OK (service.pas), line = 2417
 13997
 13998 757F A9 DE			lda #$DE
 13999 7581 8D 5D A5			sta A
 14000
 14001 				; optimize OK (service.pas), line = 2418
 14002
 14003 7584 AC 59 A5			ldy NUM
 14004 7587 B9 B4 10			lda adr.DIGITS,y
 14005 758A 29 02			and #$02
 14006 758C C9 02			cmp #$02
 14007 758E D0 05			jne l_283D
 14008 7590 A9 DF			lda #$DF
 14009 7592 8D 5D A5			sta A
 14010 7595			l_283D
 14011
 14012 				; optimize OK (service.pas), line = 2419
 14013
 14014 7595 A9 01			lda #$01
 14015 7597 8D 5B A5			sta X
 14016
 14017 759A			l_284D
 14018 				; --- ForToDoCondition
 14019 759A AD 5B A5			lda X
 14020 759D C9 05			cmp #$05
 14021 759F B0 4F			jcs l_285B
 14022
 14023 				; optimize OK (service.pas), line = 2420
 14024
 14025 75A1 AD 55 A5			lda PX
 14026 75A4 6D 5B A5			adc X
 14027 75A7 85 9F			sta :STACKORIGIN+9
 14028 75A9 AD 56 A5			lda PX+1
 14029 75AC 69 00			adc #$00
 14030 75AE 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 14031 75B0 AD 58 A5			lda PY+1
 14032 75B3 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 14033 75B5 AD 57 A5			lda PY
 14034 75B8 0A				asl @
 14035 75B9 26 B0			rol :STACKORIGIN+STACKWIDTH+10
 14036 75BB 18 6D DA 98			add ROW
 14037 75BF 85 84			sta :bp2
 14038 75C1 AD DB 98			lda ROW+1
 14039 75C4 65 B0			adc :STACKORIGIN+STACKWIDTH+10
 14040 75C6 85 85			sta :bp2+1
 14041 75C8 A0 0A			ldy #$0A
 14042 75CA A5 9F			lda :STACKORIGIN+9
 14043 75CC 18 71 84			add (:bp2),y
 14044 75CF 85 9F			sta :STACKORIGIN+9
 14045 75D1 C8				iny
 14046 75D2 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 14047 75D4 71 84			adc (:bp2),y
 14048 75D6 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 14049 75D8 AD E0 98			lda SCREEN
 14050 75DB 18 65 9F			add :STACKORIGIN+9
 14051 75DE A8				tay
 14052 75DF AD E1 98			lda SCREEN+1
 14053 75E2 65 AF			adc :STACKORIGIN+STACKWIDTH+9
 14054 75E4 85 83			sta :bp+1
 14055 75E6 AD 5D A5			lda A
 14056 75E9 91 82			sta (:bp),y
 14057
 14058 				; --- ForToDoEpilog
 14059 75EB EE 5B A5			inc X
 14060 75EE D0 AA			jne l_284D
 14061 75F0			l_285B
 14062
 14063 				; optimize OK (service.pas), line = 2424
 14064
 14065 75F0 A9 DE			lda #$DE
 14066 75F2 8D 5D A5			sta A
 14067
 14068 				; optimize OK (service.pas), line = 2425
 14069
 14070 75F5 AC 59 A5			ldy NUM
 14071 75F8 B9 B4 10			lda adr.DIGITS,y
 14072 75FB 29 04			and #$04
 14073 75FD C9 04			cmp #$04
 14074 75FF D0 05			jne l_2895
 14075 7601 A9 DF			lda #$DF
 14076 7603 8D 5D A5			sta A
 14077 7606			l_2895
 14078
 14079 				; optimize OK (service.pas), line = 2426
 14080
 14081 7606 A9 01			lda #$01
 14082 7608 8D 5B A5			sta X
 14083
 14084 760B			l_28A5
 14085 				; --- ForToDoCondition
 14086 760B AD 5B A5			lda X
 14087 760E C9 05			cmp #$05
 14088 7610 B0 4F			jcs l_28B3
 14089
 14090 				; optimize OK (service.pas), line = 2427
 14091
 14092 7612 AD 55 A5			lda PX
 14093 7615 6D 5B A5			adc X
 14094 7618 85 9F			sta :STACKORIGIN+9
 14095 761A AD 56 A5			lda PX+1
 14096 761D 69 00			adc #$00
 14097 761F 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 14098 7621 AD 58 A5			lda PY+1
 14099 7624 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 14100 7626 AD 57 A5			lda PY
 14101 7629 0A				asl @
 14102 762A 26 B0			rol :STACKORIGIN+STACKWIDTH+10
 14103 762C 18 6D DA 98			add ROW
 14104 7630 85 84			sta :bp2
 14105 7632 AD DB 98			lda ROW+1
 14106 7635 65 B0			adc :STACKORIGIN+STACKWIDTH+10
 14107 7637 85 85			sta :bp2+1
 14108 7639 A0 14			ldy #$14
 14109 763B A5 9F			lda :STACKORIGIN+9
 14110 763D 18 71 84			add (:bp2),y
 14111 7640 85 9F			sta :STACKORIGIN+9
 14112 7642 C8				iny
 14113 7643 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 14114 7645 71 84			adc (:bp2),y
 14115 7647 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 14116 7649 AD E0 98			lda SCREEN
 14117 764C 18 65 9F			add :STACKORIGIN+9
 14118 764F A8				tay
 14119 7650 AD E1 98			lda SCREEN+1
 14120 7653 65 AF			adc :STACKORIGIN+STACKWIDTH+9
 14121 7655 85 83			sta :bp+1
 14122 7657 AD 5D A5			lda A
 14123 765A 91 82			sta (:bp),y
 14124
 14125 				; --- ForToDoEpilog
 14126 765C EE 5B A5			inc X
 14127 765F D0 AA			jne l_28A5
 14128 7661			l_28B3
 14129
 14130 				; optimize OK (service.pas), line = 2430
 14131
 14132 7661 A9 DE			lda #$DE
 14133 7663 8D 5D A5			sta A
 14134
 14135 				; optimize OK (service.pas), line = 2431
 14136
 14137 7666 AC 59 A5			ldy NUM
 14138 7669 B9 B4 10			lda adr.DIGITS,y
 14139 766C 29 08			and #$08
 14140 766E C9 08			cmp #$08
 14141 7670 D0 05			jne l_28ED
 14142 7672 A9 DF			lda #$DF
 14143 7674 8D 5D A5			sta A
 14144 7677			l_28ED
 14145
 14146 				; optimize OK (service.pas), line = 2432
 14147
 14148 7677 A9 01			lda #$01
 14149 7679 8D 5C A5			sta Y
 14150
 14151 767C			l_28FD
 14152 				; --- ForToDoCondition
 14153 767C AD 5C A5			lda Y
 14154 767F C9 05			cmp #$05
 14155 7681 B0 4B			jcs l_290B
 14156
 14157 				; optimize OK (service.pas), line = 2433
 14158
 14159 7683 AD 57 A5			lda PY
 14160 7686 6D 5C A5			adc Y
 14161 7689 85 A0			sta :STACKORIGIN+10
 14162 768B AD 58 A5			lda PY+1
 14163 768E 69 00			adc #$00
 14164 7690 06 A0			asl :STACKORIGIN+10
 14165 7692 2A				rol @
 14166 7693 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 14167 7695 AD DA 98			lda ROW
 14168 7698 18 65 A0			add :STACKORIGIN+10
 14169 769B 85 84			sta :bp2
 14170 769D AD DB 98			lda ROW+1
 14171 76A0 65 B0			adc :STACKORIGIN+STACKWIDTH+10
 14172 76A2 85 85			sta :bp2+1
 14173 76A4 A0 00			ldy #$00
 14174 76A6 AD 55 A5			lda PX
 14175 76A9 18 71 84			add (:bp2),y
 14176 76AC 85 9F			sta :STACKORIGIN+9
 14177 76AE C8				iny
 14178 76AF AD 56 A5			lda PX+1
 14179 76B2 71 84			adc (:bp2),y
 14180 76B4 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 14181 76B6 AD E0 98			lda SCREEN
 14182 76B9 18 65 9F			add :STACKORIGIN+9
 14183 76BC A8				tay
 14184 76BD AD E1 98			lda SCREEN+1
 14185 76C0 65 AF			adc :STACKORIGIN+STACKWIDTH+9
 14186 76C2 85 83			sta :bp+1
 14187 76C4 AD 5D A5			lda A
 14188 76C7 91 82			sta (:bp),y
 14189
 14190 				; --- ForToDoEpilog
 14191 76C9 EE 5C A5			inc Y
 14192 76CC D0 AE			jne l_28FD
 14193 76CE			l_290B
 14194
 14195 				; optimize OK (service.pas), line = 2436
 14196
 14197 76CE A9 DE			lda #$DE
 14198 76D0 8D 5D A5			sta A
 14199
 14200 				; optimize OK (service.pas), line = 2437
 14201
 14202 76D3 AC 59 A5			ldy NUM
 14203 76D6 B9 B4 10			lda adr.DIGITS,y
 14204 76D9 29 10			and #$10
 14205 76DB C9 10			cmp #$10
 14206 76DD D0 05			jne l_2941
 14207 76DF A9 DF			lda #$DF
 14208 76E1 8D 5D A5			sta A
 14209 76E4			l_2941
 14210
 14211 				; optimize OK (service.pas), line = 2438
 14212
 14213 76E4 A9 01			lda #$01
 14214 76E6 8D 5C A5			sta Y
 14215
 14216 76E9			l_2951
 14217 				; --- ForToDoCondition
 14218 76E9 AD 5C A5			lda Y
 14219 76EC C9 05			cmp #$05
 14220 76EE B0 58			jcs l_295F
 14221
 14222 				; optimize OK (service.pas), line = 2439
 14223
 14224 76F0 AD 57 A5			lda PY
 14225 76F3 6D 5C A5			adc Y
 14226 76F6 85 A0			sta :STACKORIGIN+10
 14227 76F8 AD 58 A5			lda PY+1
 14228 76FB 69 00			adc #$00
 14229 76FD 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 14230 76FF A5 A0			lda :STACKORIGIN+10
 14231 7701 18 69 05			add #$05
 14232 7704 85 A0			sta :STACKORIGIN+10
 14233 7706 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
 14234 7708 69 00			adc #$00
 14235 770A 06 A0			asl :STACKORIGIN+10
 14236 770C 2A				rol @
 14237 770D 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 14238 770F AD DA 98			lda ROW
 14239 7712 18 65 A0			add :STACKORIGIN+10
 14240 7715 85 84			sta :bp2
 14241 7717 AD DB 98			lda ROW+1
 14242 771A 65 B0			adc :STACKORIGIN+STACKWIDTH+10
 14243 771C 85 85			sta :bp2+1
 14244 771E A0 00			ldy #$00
 14245 7720 AD 55 A5			lda PX
 14246 7723 18 71 84			add (:bp2),y
 14247 7726 85 9F			sta :STACKORIGIN+9
 14248 7728 C8				iny
 14249 7729 AD 56 A5			lda PX+1
 14250 772C 71 84			adc (:bp2),y
 14251 772E 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 14252 7730 AD E0 98			lda SCREEN
 14253 7733 18 65 9F			add :STACKORIGIN+9
 14254 7736 A8				tay
 14255 7737 AD E1 98			lda SCREEN+1
 14256 773A 65 AF			adc :STACKORIGIN+STACKWIDTH+9
 14257 773C 85 83			sta :bp+1
 14258 773E AD 5D A5			lda A
 14259 7741 91 82			sta (:bp),y
 14260
 14261 				; --- ForToDoEpilog
 14262 7743 EE 5C A5			inc Y
 14263 7746 D0 A1			jne l_2951
 14264 7748			l_295F
 14265
 14266 				; optimize OK (service.pas), line = 2442
 14267
 14268 7748 A9 DE			lda #$DE
 14269 774A 8D 5D A5			sta A
 14270
 14271 				; optimize OK (service.pas), line = 2443
 14272
 14273 774D AC 59 A5			ldy NUM
 14274 7750 B9 B4 10			lda adr.DIGITS,y
 14275 7753 29 20			and #$20
 14276 7755 C9 20			cmp #$20
 14277 7757 D0 05			jne l_2999
 14278 7759 A9 DF			lda #$DF
 14279 775B 8D 5D A5			sta A
 14280 775E			l_2999
 14281
 14282 				; optimize OK (service.pas), line = 2444
 14283
 14284 775E A9 01			lda #$01
 14285 7760 8D 5C A5			sta Y
 14286
 14287 7763			l_29A9
 14288 				; --- ForToDoCondition
 14289 7763 AD 5C A5			lda Y
 14290 7766 C9 05			cmp #$05
 14291 7768 B0 58			jcs l_29B7
 14292
 14293 				; optimize OK (service.pas), line = 2445
 14294
 14295 776A AD 55 A5			lda PX
 14296 776D 69 05			adc #$05
 14297 776F 85 9F			sta :STACKORIGIN+9
 14298 7771 AD 56 A5			lda PX+1
 14299 7774 69 00			adc #$00
 14300 7776 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 14301 7778 AD 57 A5			lda PY
 14302 777B 18 6D 5C A5			add Y
 14303 777F 85 A0			sta :STACKORIGIN+10
 14304 7781 AD 58 A5			lda PY+1
 14305 7784 69 00			adc #$00
 14306 7786 06 A0			asl :STACKORIGIN+10
 14307 7788 2A				rol @
 14308 7789 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 14309 778B AD DA 98			lda ROW
 14310 778E 18 65 A0			add :STACKORIGIN+10
 14311 7791 85 84			sta :bp2
 14312 7793 AD DB 98			lda ROW+1
 14313 7796 65 B0			adc :STACKORIGIN+STACKWIDTH+10
 14314 7798 85 85			sta :bp2+1
 14315 779A A0 00			ldy #$00
 14316 779C A5 9F			lda :STACKORIGIN+9
 14317 779E 18 71 84			add (:bp2),y
 14318 77A1 85 9F			sta :STACKORIGIN+9
 14319 77A3 C8				iny
 14320 77A4 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 14321 77A6 71 84			adc (:bp2),y
 14322 77A8 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 14323 77AA AD E0 98			lda SCREEN
 14324 77AD 18 65 9F			add :STACKORIGIN+9
 14325 77B0 A8				tay
 14326 77B1 AD E1 98			lda SCREEN+1
 14327 77B4 65 AF			adc :STACKORIGIN+STACKWIDTH+9
 14328 77B6 85 83			sta :bp+1
 14329 77B8 AD 5D A5			lda A
 14330 77BB 91 82			sta (:bp),y
 14331
 14332 				; --- ForToDoEpilog
 14333 77BD EE 5C A5			inc Y
 14334 77C0 D0 A1			jne l_29A9
 14335 77C2			l_29B7
 14336
 14337 				; optimize OK (service.pas), line = 2448
 14338
 14339 77C2 A9 DE			lda #$DE
 14340 77C4 8D 5D A5			sta A
 14341
 14342 				; optimize OK (service.pas), line = 2449
 14343
 14344 77C7 AC 59 A5			ldy NUM
 14345 77CA B9 B4 10			lda adr.DIGITS,y
 14346 77CD 29 40			and #$40
 14347 77CF C9 40			cmp #$40
 14348 77D1 D0 05			jne l_29F1
 14349 77D3 A9 DF			lda #$DF
 14350 77D5 8D 5D A5			sta A
 14351 77D8			l_29F1
 14352
 14353 				; optimize OK (service.pas), line = 2450
 14354
 14355 77D8 A9 01			lda #$01
 14356 77DA 8D 5C A5			sta Y
 14357
 14358 77DD			l_2A01
 14359 				; --- ForToDoCondition
 14360 77DD AD 5C A5			lda Y
 14361 77E0 C9 05			cmp #$05
 14362 77E2 B0 65			jcs l_2A0F
 14363
 14364 				; optimize OK (service.pas), line = 2451
 14365
 14366 77E4 AD 55 A5			lda PX
 14367 77E7 69 05			adc #$05
 14368 77E9 85 9F			sta :STACKORIGIN+9
 14369 77EB AD 56 A5			lda PX+1
 14370 77EE 69 00			adc #$00
 14371 77F0 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 14372 77F2 AD 57 A5			lda PY
 14373 77F5 18 6D 5C A5			add Y
 14374 77F9 85 A0			sta :STACKORIGIN+10
 14375 77FB AD 58 A5			lda PY+1
 14376 77FE 69 00			adc #$00
 14377 7800 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 14378 7802 A5 A0			lda :STACKORIGIN+10
 14379 7804 18 69 05			add #$05
 14380 7807 85 A0			sta :STACKORIGIN+10
 14381 7809 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
 14382 780B 69 00			adc #$00
 14383 780D 06 A0			asl :STACKORIGIN+10
 14384 780F 2A				rol @
 14385 7810 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 14386 7812 AD DA 98			lda ROW
 14387 7815 18 65 A0			add :STACKORIGIN+10
 14388 7818 85 84			sta :bp2
 14389 781A AD DB 98			lda ROW+1
 14390 781D 65 B0			adc :STACKORIGIN+STACKWIDTH+10
 14391 781F 85 85			sta :bp2+1
 14392 7821 A0 00			ldy #$00
 14393 7823 A5 9F			lda :STACKORIGIN+9
 14394 7825 18 71 84			add (:bp2),y
 14395 7828 85 9F			sta :STACKORIGIN+9
 14396 782A C8				iny
 14397 782B A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 14398 782D 71 84			adc (:bp2),y
 14399 782F 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 14400 7831 AD E0 98			lda SCREEN
 14401 7834 18 65 9F			add :STACKORIGIN+9
 14402 7837 A8				tay
 14403 7838 AD E1 98			lda SCREEN+1
 14404 783B 65 AF			adc :STACKORIGIN+STACKWIDTH+9
 14405 783D 85 83			sta :bp+1
 14406 783F AD 5D A5			lda A
 14407 7842 91 82			sta (:bp),y
 14408
 14409 				; --- ForToDoEpilog
 14410 7844 EE 5C A5			inc Y
 14411 7847 D0 94			jne l_2A01
 14412 7849			l_2A0F
 14413
 14414 				; ------------------------------------------------------------
 14415
 14416 = A555			PX	= DATAORIGIN+$0B7E
 14417 = A557			PY	= DATAORIGIN+$0B80
 14418 = A559			NUM	= DATAORIGIN+$0B82
 14419 = A55B			X	= DATAORIGIN+$0B84
 14420 = A55C			Y	= DATAORIGIN+$0B85
 14421 = A55D			A	= DATAORIGIN+$0B86
 14422
 14423 = A555			@VarData	= PX
 14424 = 0009			@VarDataSize	= 9
 14425
 14426 7849			@exit
 14427 					.ifdef @new
 14428 					lda <@VarData
 14429 					sta :ztmp
 14430 					lda >@VarData
 14431 					ldy #@VarDataSize-1
 14432 					jmp @FreeMem
 14433 					els
 14434 7849 60				rts						; ret
 14435 					eif
 14436 				.endl
 14437
 14438 784A			.local	WRITE_SCORE					; PROCEDURE
 14439
 14440 				; optimize OK (service.pas), line = 2462
 14441
 14442 784A A9 00			lda #$00
 14443 784C 8D 6A A5			sta F
 14444
 14445 				; optimize OK (service.pas), line = 2467
 14446
 14447 784F A9 A0			lda #$A0
 14448 7851 85 8E			sta @INTEGER.DIV.B
 14449 7853 A9 86			lda #$86
 14450 7855 85 8F			sta @INTEGER.DIV.B+1
 14451 7857 A9 01			lda #$01
 14452 7859 85 90			sta @INTEGER.DIV.B+2
 14453 785B A9 00			lda #$00
 14454 785D 85 91			sta @INTEGER.DIV.B+3
 14455 785F AD 62 A5			lda SC
 14456 7862 85 86			sta @INTEGER.DIV.A
 14457 7864 AD 63 A5			lda SC+1
 14458 7867 85 87			sta @INTEGER.DIV.A+1
 14459 7869 AD 64 A5			lda SC+2
 14460 786C 85 88			sta @INTEGER.DIV.A+2
 14461 786E AD 65 A5			lda SC+3
 14462 7871 85 89			sta @INTEGER.DIV.A+3
 14463 7873 20 92 12			jsr @INTEGER.DIV
 14464 7876 A9 0A			lda #$0A
 14465 7878 85 8E			sta @INTEGER.MOD.B
 14466 787A A9 00			lda #$00
 14467 787C 85 8F			sta @INTEGER.MOD.B+1
 14468 787E 85 90			sta @INTEGER.MOD.B+2
 14469 7880 85 91			sta @INTEGER.MOD.B+3
 14470 7882 20 AF 12			jsr @INTEGER.MOD
 14471 7885 A5 8A			lda @INTEGER.MOD.RESULT
 14472 7887 8D 66 A5			sta N1
 14473 788A A5 8B			lda @INTEGER.MOD.RESULT+1
 14474 788C 8D 67 A5			sta N1+1
 14475 788F A5 8C			lda @INTEGER.MOD.RESULT+2
 14476 7891 8D 68 A5			sta N1+2
 14477 7894 A5 8D			lda @INTEGER.MOD.RESULT+3
 14478 7896 8D 69 A5			sta N1+3
 14479
 14480 				; optimize OK (service.pas), line = 2468
 14481
 14482 7899 30 10			jmi l_2A55
 14483 789B 0D 68 A5			ora N1+2
 14484 789E 0D 67 A5			ora N1+1
 14485 78A1 0D 66 A5			ora N1
 14486 78A4 F0 05			jeq l_2A55
 14487 78A6 A9 01			lda #$01
 14488 78A8 8D 6A A5			sta F
 14489 78AB			l_2A55
 14490
 14491 				; optimize OK (service.pas), line = 2469
 14492
 14493 78AB AD 6A A5			lda F
 14494 78AE F0 24			jeq l_2A68
 14495 78B0 AD 5E A5			lda PX
 14496 78B3 8D 55 A5			sta PUT_DIGIT.PX
 14497 78B6 AD 5F A5			lda PX+1
 14498 78B9 8D 56 A5			sta PUT_DIGIT.PX+1
 14499 78BC AD 60 A5			lda PY
 14500 78BF 8D 57 A5			sta PUT_DIGIT.PY
 14501 78C2 AD 61 A5			lda PY+1
 14502 78C5 8D 58 A5			sta PUT_DIGIT.PY+1
 14503 78C8 AD 66 A5			lda N1
 14504 78CB 8D 59 A5			sta PUT_DIGIT.NUM
 14505 78CE AD 67 A5			lda N1+1
 14506 78D1 4C F3 78			jmp l_2A78
 14507 78D4			l_2A68
 14508
 14509 				; optimize OK (service.pas), line = 2470
 14510
 14511 78D4 AD 5E A5			lda PX
 14512 78D7 8D 55 A5			sta PUT_DIGIT.PX
 14513 78DA AD 5F A5			lda PX+1
 14514 78DD 8D 56 A5			sta PUT_DIGIT.PX+1
 14515 78E0 AD 60 A5			lda PY
 14516 78E3 8D 57 A5			sta PUT_DIGIT.PY
 14517 78E6 AD 61 A5			lda PY+1
 14518 78E9 8D 58 A5			sta PUT_DIGIT.PY+1
 14519 78EC A9 0A			lda #$0A
 14520 78EE 8D 59 A5			sta PUT_DIGIT.NUM
 14521 78F1 A9 00			lda #$00
 14522 78F3			l_2A78
 14523 78F3 8D 5A A5			sta PUT_DIGIT.NUM+1
 14524 78F6 20 0E 75			jsr PUT_DIGIT
 14525
 14526 				; optimize OK (service.pas), line = 2473
 14527
 14528 78F9 A9 10			lda #$10
 14529 78FB 85 8E			sta @INTEGER.DIV.B
 14530 78FD A9 27			lda #$27
 14531 78FF 85 8F			sta @INTEGER.DIV.B+1
 14532 7901 A9 00			lda #$00
 14533 7903 85 90			sta @INTEGER.DIV.B+2
 14534 7905 85 91			sta @INTEGER.DIV.B+3
 14535 7907 AD 62 A5			lda SC
 14536 790A 85 86			sta @INTEGER.DIV.A
 14537 790C AD 63 A5			lda SC+1
 14538 790F 85 87			sta @INTEGER.DIV.A+1
 14539 7911 AD 64 A5			lda SC+2
 14540 7914 85 88			sta @INTEGER.DIV.A+2
 14541 7916 AD 65 A5			lda SC+3
 14542 7919 85 89			sta @INTEGER.DIV.A+3
 14543 791B 20 92 12			jsr @INTEGER.DIV
 14544 791E A9 0A			lda #$0A
 14545 7920 85 8E			sta @INTEGER.MOD.B
 14546 7922 A9 00			lda #$00
 14547 7924 85 8F			sta @INTEGER.MOD.B+1
 14548 7926 85 90			sta @INTEGER.MOD.B+2
 14549 7928 85 91			sta @INTEGER.MOD.B+3
 14550 792A 20 AF 12			jsr @INTEGER.MOD
 14551 792D A5 8A			lda @INTEGER.MOD.RESULT
 14552 792F 8D 66 A5			sta N1
 14553 7932 A5 8B			lda @INTEGER.MOD.RESULT+1
 14554 7934 8D 67 A5			sta N1+1
 14555 7937 A5 8C			lda @INTEGER.MOD.RESULT+2
 14556 7939 8D 68 A5			sta N1+2
 14557 793C A5 8D			lda @INTEGER.MOD.RESULT+3
 14558 793E 8D 69 A5			sta N1+3
 14559
 14560 				; optimize OK (service.pas), line = 2474
 14561
 14562 7941 30 10			jmi l_2A9A
 14563 7943 0D 68 A5			ora N1+2
 14564 7946 0D 67 A5			ora N1+1
 14565 7949 0D 66 A5			ora N1
 14566 794C F0 05			jeq l_2A9A
 14567 794E A9 01			lda #$01
 14568 7950 8D 6A A5			sta F
 14569 7953			l_2A9A
 14570
 14571 				; optimize OK (service.pas), line = 2475
 14572
 14573 7953 AD 6A A5			lda F
 14574 7956 F0 29			jeq l_2AAD
 14575 7958 AD 5E A5			lda PX
 14576 795B 18 69 07			add #$07
 14577 795E 8D 55 A5			sta PUT_DIGIT.PX
 14578 7961 AD 5F A5			lda PX+1
 14579 7964 69 00			adc #$00
 14580 7966 8D 56 A5			sta PUT_DIGIT.PX+1
 14581 7969 AD 60 A5			lda PY
 14582 796C 8D 57 A5			sta PUT_DIGIT.PY
 14583 796F AD 61 A5			lda PY+1
 14584 7972 8D 58 A5			sta PUT_DIGIT.PY+1
 14585 7975 AD 66 A5			lda N1
 14586 7978 8D 59 A5			sta PUT_DIGIT.NUM
 14587 797B AD 67 A5			lda N1+1
 14588 797E 4C A5 79			jmp l_2AC1
 14589 7981			l_2AAD
 14590
 14591 				; optimize OK (service.pas), line = 2476
 14592
 14593 7981 AD 5E A5			lda PX
 14594 7984 18 69 07			add #$07
 14595 7987 8D 55 A5			sta PUT_DIGIT.PX
 14596 798A AD 5F A5			lda PX+1
 14597 798D 69 00			adc #$00
 14598 798F 8D 56 A5			sta PUT_DIGIT.PX+1
 14599 7992 AD 60 A5			lda PY
 14600 7995 8D 57 A5			sta PUT_DIGIT.PY
 14601 7998 AD 61 A5			lda PY+1
 14602 799B 8D 58 A5			sta PUT_DIGIT.PY+1
 14603 799E A9 0A			lda #$0A
 14604 79A0 8D 59 A5			sta PUT_DIGIT.NUM
 14605 79A3 A9 00			lda #$00
 14606 79A5			l_2AC1
 14607 79A5 8D 5A A5			sta PUT_DIGIT.NUM+1
 14608 79A8 20 0E 75			jsr PUT_DIGIT
 14609
 14610 				; optimize OK (service.pas), line = 2479
 14611
 14612 79AB A9 E8			lda #$E8
 14613 79AD 85 8E			sta @INTEGER.DIV.B
 14614 79AF A9 03			lda #$03
 14615 79B1 85 8F			sta @INTEGER.DIV.B+1
 14616 79B3 A9 00			lda #$00
 14617 79B5 85 90			sta @INTEGER.DIV.B+2
 14618 79B7 85 91			sta @INTEGER.DIV.B+3
 14619 79B9 AD 62 A5			lda SC
 14620 79BC 85 86			sta @INTEGER.DIV.A
 14621 79BE AD 63 A5			lda SC+1
 14622 79C1 85 87			sta @INTEGER.DIV.A+1
 14623 79C3 AD 64 A5			lda SC+2
 14624 79C6 85 88			sta @INTEGER.DIV.A+2
 14625 79C8 AD 65 A5			lda SC+3
 14626 79CB 85 89			sta @INTEGER.DIV.A+3
 14627 79CD 20 92 12			jsr @INTEGER.DIV
 14628 79D0 A9 0A			lda #$0A
 14629 79D2 85 8E			sta @INTEGER.MOD.B
 14630 79D4 A9 00			lda #$00
 14631 79D6 85 8F			sta @INTEGER.MOD.B+1
 14632 79D8 85 90			sta @INTEGER.MOD.B+2
 14633 79DA 85 91			sta @INTEGER.MOD.B+3
 14634 79DC 20 AF 12			jsr @INTEGER.MOD
 14635 79DF A5 8A			lda @INTEGER.MOD.RESULT
 14636 79E1 8D 66 A5			sta N1
 14637 79E4 A5 8B			lda @INTEGER.MOD.RESULT+1
 14638 79E6 8D 67 A5			sta N1+1
 14639 79E9 A5 8C			lda @INTEGER.MOD.RESULT+2
 14640 79EB 8D 68 A5			sta N1+2
 14641 79EE A5 8D			lda @INTEGER.MOD.RESULT+3
 14642 79F0 8D 69 A5			sta N1+3
 14643
 14644 				; optimize OK (service.pas), line = 2480
 14645
 14646 79F3 30 10			jmi l_2AE7
 14647 79F5 0D 68 A5			ora N1+2
 14648 79F8 0D 67 A5			ora N1+1
 14649 79FB 0D 66 A5			ora N1
 14650 79FE F0 05			jeq l_2AE7
 14651 7A00 A9 01			lda #$01
 14652 7A02 8D 6A A5			sta F
 14653 7A05			l_2AE7
 14654
 14655 				; optimize OK (service.pas), line = 2481
 14656
 14657 7A05 AD 6A A5			lda F
 14658 7A08 F0 29			jeq l_2AFA
 14659 7A0A AD 5E A5			lda PX
 14660 7A0D 18 69 0E			add #$0E
 14661 7A10 8D 55 A5			sta PUT_DIGIT.PX
 14662 7A13 AD 5F A5			lda PX+1
 14663 7A16 69 00			adc #$00
 14664 7A18 8D 56 A5			sta PUT_DIGIT.PX+1
 14665 7A1B AD 60 A5			lda PY
 14666 7A1E 8D 57 A5			sta PUT_DIGIT.PY
 14667 7A21 AD 61 A5			lda PY+1
 14668 7A24 8D 58 A5			sta PUT_DIGIT.PY+1
 14669 7A27 AD 66 A5			lda N1
 14670 7A2A 8D 59 A5			sta PUT_DIGIT.NUM
 14671 7A2D AD 67 A5			lda N1+1
 14672 7A30 4C 57 7A			jmp l_2B0E
 14673 7A33			l_2AFA
 14674
 14675 				; optimize OK (service.pas), line = 2482
 14676
 14677 7A33 AD 5E A5			lda PX
 14678 7A36 18 69 0E			add #$0E
 14679 7A39 8D 55 A5			sta PUT_DIGIT.PX
 14680 7A3C AD 5F A5			lda PX+1
 14681 7A3F 69 00			adc #$00
 14682 7A41 8D 56 A5			sta PUT_DIGIT.PX+1
 14683 7A44 AD 60 A5			lda PY
 14684 7A47 8D 57 A5			sta PUT_DIGIT.PY
 14685 7A4A AD 61 A5			lda PY+1
 14686 7A4D 8D 58 A5			sta PUT_DIGIT.PY+1
 14687 7A50 A9 0A			lda #$0A
 14688 7A52 8D 59 A5			sta PUT_DIGIT.NUM
 14689 7A55 A9 00			lda #$00
 14690 7A57			l_2B0E
 14691 7A57 8D 5A A5			sta PUT_DIGIT.NUM+1
 14692 7A5A 20 0E 75			jsr PUT_DIGIT
 14693
 14694 				; optimize OK (service.pas), line = 2485
 14695
 14696 7A5D A9 64			lda #$64
 14697 7A5F 85 8E			sta @INTEGER.DIV.B
 14698 7A61 A9 00			lda #$00
 14699 7A63 85 8F			sta @INTEGER.DIV.B+1
 14700 7A65 85 90			sta @INTEGER.DIV.B+2
 14701 7A67 85 91			sta @INTEGER.DIV.B+3
 14702 7A69 AD 62 A5			lda SC
 14703 7A6C 85 86			sta @INTEGER.DIV.A
 14704 7A6E AD 63 A5			lda SC+1
 14705 7A71 85 87			sta @INTEGER.DIV.A+1
 14706 7A73 AD 64 A5			lda SC+2
 14707 7A76 85 88			sta @INTEGER.DIV.A+2
 14708 7A78 AD 65 A5			lda SC+3
 14709 7A7B 85 89			sta @INTEGER.DIV.A+3
 14710 7A7D 20 92 12			jsr @INTEGER.DIV
 14711 7A80 A9 0A			lda #$0A
 14712 7A82 85 8E			sta @INTEGER.MOD.B
 14713 7A84 A9 00			lda #$00
 14714 7A86 85 8F			sta @INTEGER.MOD.B+1
 14715 7A88 85 90			sta @INTEGER.MOD.B+2
 14716 7A8A 85 91			sta @INTEGER.MOD.B+3
 14717 7A8C 20 AF 12			jsr @INTEGER.MOD
 14718 7A8F A5 8A			lda @INTEGER.MOD.RESULT
 14719 7A91 8D 66 A5			sta N1
 14720 7A94 A5 8B			lda @INTEGER.MOD.RESULT+1
 14721 7A96 8D 67 A5			sta N1+1
 14722 7A99 A5 8C			lda @INTEGER.MOD.RESULT+2
 14723 7A9B 8D 68 A5			sta N1+2
 14724 7A9E A5 8D			lda @INTEGER.MOD.RESULT+3
 14725 7AA0 8D 69 A5			sta N1+3
 14726
 14727 				; optimize OK (service.pas), line = 2486
 14728
 14729 7AA3 30 10			jmi l_2B34
 14730 7AA5 0D 68 A5			ora N1+2
 14731 7AA8 0D 67 A5			ora N1+1
 14732 7AAB 0D 66 A5			ora N1
 14733 7AAE F0 05			jeq l_2B34
 14734 7AB0 A9 01			lda #$01
 14735 7AB2 8D 6A A5			sta F
 14736 7AB5			l_2B34
 14737
 14738 				; optimize OK (service.pas), line = 2487
 14739
 14740 7AB5 AD 6A A5			lda F
 14741 7AB8 F0 29			jeq l_2B47
 14742 7ABA AD 5E A5			lda PX
 14743 7ABD 18 69 15			add #$15
 14744 7AC0 8D 55 A5			sta PUT_DIGIT.PX
 14745 7AC3 AD 5F A5			lda PX+1
 14746 7AC6 69 00			adc #$00
 14747 7AC8 8D 56 A5			sta PUT_DIGIT.PX+1
 14748 7ACB AD 60 A5			lda PY
 14749 7ACE 8D 57 A5			sta PUT_DIGIT.PY
 14750 7AD1 AD 61 A5			lda PY+1
 14751 7AD4 8D 58 A5			sta PUT_DIGIT.PY+1
 14752 7AD7 AD 66 A5			lda N1
 14753 7ADA 8D 59 A5			sta PUT_DIGIT.NUM
 14754 7ADD AD 67 A5			lda N1+1
 14755 7AE0 4C 07 7B			jmp l_2B5B
 14756 7AE3			l_2B47
 14757
 14758 				; optimize OK (service.pas), line = 2488
 14759
 14760 7AE3 AD 5E A5			lda PX
 14761 7AE6 18 69 15			add #$15
 14762 7AE9 8D 55 A5			sta PUT_DIGIT.PX
 14763 7AEC AD 5F A5			lda PX+1
 14764 7AEF 69 00			adc #$00
 14765 7AF1 8D 56 A5			sta PUT_DIGIT.PX+1
 14766 7AF4 AD 60 A5			lda PY
 14767 7AF7 8D 57 A5			sta PUT_DIGIT.PY
 14768 7AFA AD 61 A5			lda PY+1
 14769 7AFD 8D 58 A5			sta PUT_DIGIT.PY+1
 14770 7B00 A9 0A			lda #$0A
 14771 7B02 8D 59 A5			sta PUT_DIGIT.NUM
 14772 7B05 A9 00			lda #$00
 14773 7B07			l_2B5B
 14774 7B07 8D 5A A5			sta PUT_DIGIT.NUM+1
 14775 7B0A 20 0E 75			jsr PUT_DIGIT
 14776
 14777 				; optimize OK (service.pas), line = 2491
 14778
 14779 7B0D A9 0A			lda #$0A
 14780 7B0F 85 8E			sta @INTEGER.DIV.B
 14781 7B11 A9 00			lda #$00
 14782 7B13 85 8F			sta @INTEGER.DIV.B+1
 14783 7B15 85 90			sta @INTEGER.DIV.B+2
 14784 7B17 85 91			sta @INTEGER.DIV.B+3
 14785 7B19 AD 62 A5			lda SC
 14786 7B1C 85 86			sta @INTEGER.DIV.A
 14787 7B1E AD 63 A5			lda SC+1
 14788 7B21 85 87			sta @INTEGER.DIV.A+1
 14789 7B23 AD 64 A5			lda SC+2
 14790 7B26 85 88			sta @INTEGER.DIV.A+2
 14791 7B28 AD 65 A5			lda SC+3
 14792 7B2B 85 89			sta @INTEGER.DIV.A+3
 14793 7B2D 20 92 12			jsr @INTEGER.DIV
 14794 7B30 A9 0A			lda #$0A
 14795 7B32 85 8E			sta @INTEGER.MOD.B
 14796 7B34 A9 00			lda #$00
 14797 7B36 85 8F			sta @INTEGER.MOD.B+1
 14798 7B38 85 90			sta @INTEGER.MOD.B+2
 14799 7B3A 85 91			sta @INTEGER.MOD.B+3
 14800 7B3C 20 AF 12			jsr @INTEGER.MOD
 14801 7B3F A5 8A			lda @INTEGER.MOD.RESULT
 14802 7B41 8D 66 A5			sta N1
 14803 7B44 A5 8B			lda @INTEGER.MOD.RESULT+1
 14804 7B46 8D 67 A5			sta N1+1
 14805 7B49 A5 8C			lda @INTEGER.MOD.RESULT+2
 14806 7B4B 8D 68 A5			sta N1+2
 14807 7B4E A5 8D			lda @INTEGER.MOD.RESULT+3
 14808 7B50 8D 69 A5			sta N1+3
 14809
 14810 				; optimize OK (service.pas), line = 2492
 14811
 14812 7B53 AD 5E A5			lda PX
 14813 7B56 18 69 1C			add #$1C
 14814 7B59 8D 55 A5			sta PUT_DIGIT.PX
 14815 7B5C AD 5F A5			lda PX+1
 14816 7B5F 69 00			adc #$00
 14817 7B61 8D 56 A5			sta PUT_DIGIT.PX+1
 14818 7B64 AD 60 A5			lda PY
 14819 7B67 8D 57 A5			sta PUT_DIGIT.PY
 14820 7B6A AD 61 A5			lda PY+1
 14821 7B6D 8D 58 A5			sta PUT_DIGIT.PY+1
 14822 7B70 AD 66 A5			lda N1
 14823 7B73 8D 59 A5			sta PUT_DIGIT.NUM
 14824 7B76 AD 67 A5			lda N1+1
 14825 7B79 8D 5A A5			sta PUT_DIGIT.NUM+1
 14826 7B7C 20 0E 75			jsr PUT_DIGIT
 14827
 14828 				; optimize OK (service.pas), line = 2496
 14829
 14830 7B7F AD 5E A5			lda PX
 14831 7B82 18 69 23			add #$23
 14832 7B85 8D 55 A5			sta PUT_DIGIT.PX
 14833 7B88 AD 5F A5			lda PX+1
 14834 7B8B 69 00			adc #$00
 14835 7B8D 8D 56 A5			sta PUT_DIGIT.PX+1
 14836 7B90 AD 60 A5			lda PY
 14837 7B93 8D 57 A5			sta PUT_DIGIT.PY
 14838 7B96 AD 61 A5			lda PY+1
 14839 7B99 8D 58 A5			sta PUT_DIGIT.PY+1
 14840 7B9C A9 00			lda #$00
 14841 7B9E 8D 59 A5			sta PUT_DIGIT.NUM
 14842 7BA1 8D 5A A5			sta PUT_DIGIT.NUM+1
 14843 7BA4 20 0E 75			jsr PUT_DIGIT
 14844
 14845 				; ------------------------------------------------------------
 14846
 14847 = A55E			PX	= DATAORIGIN+$0B87
 14848 = A560			PY	= DATAORIGIN+$0B89
 14849 = A562			SC	= DATAORIGIN+$0B8B
 14850 = A566			N1	= DATAORIGIN+$0B8F
 14851 = A56A			F	= DATAORIGIN+$0B93
 14852
 14853 = A55E			@VarData	= PX
 14854 = 000D			@VarDataSize	= 13
 14855
 14856 7BA7			@exit
 14857 					.ifdef @new
 14858 					lda <@VarData
 14859 					sta :ztmp
 14860 					lda >@VarData
 14861 					ldy #@VarDataSize-1
 14862 					jmp @FreeMem
 14863 					els
 14864 7BA7 60				rts						; ret
 14865 					eif
 14866 				.endl
 14867
 14868 7BA8			.local	PLOT_LIVES					; PROCEDURE
 14869
 14870 				; optimize FAIL (0, service.pas), line = 2542
 14871
 14872 7BA8 AD 6B A5			lda LIVES
 14873 7BAB D0 03			bne @+
 14874 7BAD CE 6C A5			dec LIVES+1
 14875 				@
 14876 7BB0 CE 6B A5			dec LIVES
 14877
 14878 				; optimize OK (service.pas), line = 2545
 14879
 14880 7BB3 A9 00			lda #$00
 14881 7BB5 8D 6F A5			sta CN
 14882
 14883 7BB8			l_2B9A
 14884 				; --- ForToDoCondition
 14885 7BB8 AD 6F A5			lda CN
 14886 7BBB C9 08			cmp #$08
 14887 7BBD 90 03 4C AF 7E		jcs l_2BA8
 14888
 14889 				; optimize OK (service.pas), line = 2546
 14890
 14891 7BC2 A9 00			lda #$00
 14892 7BC4 8D 6E A5			sta Y
 14893 7BC7 AC F2 9A			ldy MINIVAUS.HEIGHT
 14894 7BCA 88				dey
 14895 7BCB 8C CF 7B			sty @FORTMP_2BB3_0
 14896
 14897 7BCE			l_2BB6
 14898 				; --- ForToDoCondition
 14899 7BCE A9 00			lda @FORTMP_2BB3_0::#$00
 14900 7BD0 CD 6E A5			cmp Y
 14901 7BD3 B0 03 4C A7 7E		jcc l_2BC4
 14902
 14903 				; optimize OK (service.pas), line = 2547
 14904
 14905 7BD8 A9 00			lda #$00
 14906 7BDA 8D 6D A5			sta X
 14907 7BDD AC F0 9A			ldy MINIVAUS.WIDTH
 14908 7BE0 88				dey
 14909 7BE1 8C E5 7B			sty @FORTMP_2BCF_0
 14910
 14911 7BE4			l_2BD2
 14912 				; --- ForToDoCondition
 14913 7BE4 A9 00			lda @FORTMP_2BCF_0::#$00
 14914 7BE6 CD 6D A5			cmp X
 14915 7BE9 B0 03 4C 9F 7E		jcc l_2BE0
 14916
 14917 				; optimize OK (service.pas), line = 2549
 14918
 14919 7BEE AD 6D A5			lda X
 14920 7BF1 18 69 0B			add #$0B
 14921 7BF4 85 9F			sta :STACKORIGIN+9
 14922 7BF6 A9 00			lda #$00
 14923 7BF8 69 00			adc #$00
 14924 7BFA 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 14925 7BFC AD F0 9A			lda MINIVAUS.WIDTH
 14926 7BFF 85 8E			sta :ecx
 14927 7C01 AD F1 9A			lda MINIVAUS.WIDTH+1
 14928 7C04 85 8F			sta :ecx+1
 14929 7C06 AD 6F A5			lda CN
 14930 7C09 85 86			sta :eax
 14931 7C0B A9 00			lda #$00
 14932 7C0D 85 87			sta :eax+1
 14933 					.ifdef fmulinit
 14934 					fmulu_16
 14935 					els
 14936 7C0F 20 6E 13			imulCX_AL
 14937 					eif
 14938 7C12 A5 86			lda :eax
 14939 7C14 18 65 9F			add :STACKORIGIN+9
 14940 7C17 8D 74 A5			sta XL
 14941 7C1A A5 87			lda :eax+1
 14942 7C1C 65 AF			adc :STACKORIGIN+STACKWIDTH+9
 14943 7C1E 8D 75 A5			sta XL+1
 14944
 14945 				; optimize OK (service.pas), line = 2550
 14946
 14947 7C21 AD 6E A5			lda Y
 14948 7C24 18 69 C0			add #$C0
 14949 7C27 8D 76 A5			sta YL
 14950 7C2A A9 00			lda #$00
 14951 7C2C 69 00			adc #$00
 14952 7C2E 8D 77 A5			sta YL+1
 14953
 14954 				; optimize OK (service.pas), line = 2552
 14955
 14956 7C31 AD DC 98			lda MODX
 14957 7C34 18 6D 74 A5			add XL
 14958 7C38 A8				tay
 14959 7C39 AD DD 98			lda MODX+1
 14960 7C3C 6D 75 A5			adc XL+1
 14961 7C3F 85 83			sta :bp+1
 14962 7C41 B1 82			lda (:bp),y
 14963 7C43 8D 70 A5			sta XP
 14964 7C46 A9 00			lda #$00
 14965 7C48 8D 71 A5			sta XP+1
 14966
 14967 				; optimize OK (service.pas), line = 2553
 14968
 14969 7C4B AC 76 A5			ldy YL
 14970 7C4E B9 CD A2			lda adr.MODY,y
 14971 7C51 85 86			sta :eax
 14972 7C53 A9 00			lda #$00
 14973 7C55 85 87			sta :eax+1
 14974 7C57 AD 25 9B			lda PATTERN.WIDTH
 14975 7C5A 85 8E			sta :ecx
 14976 7C5C AD 26 9B			lda PATTERN.WIDTH+1
 14977 7C5F 85 8F			sta :ecx+1
 14978 					.ifdef fmulinit
 14979 					fmulu_16
 14980 					els
 14981 7C61 20 6E 13			imulCX_AL
 14982 					eif
 14983 7C64 A5 86			lda :eax
 14984 7C66 8D 72 A5			sta YP
 14985 7C69 A5 87			lda :eax+1
 14986 7C6B 8D 73 A5			sta YP+1
 14987
 14988 				; optimize FAIL (1, service.pas), line = 2557
 14989
 14990 7C6E E8				inx
 14991 7C6F A0 01			ldy #1
 14992 7C71 AD 6F A5			lda CN
 14993 7C74 CD 6B A5			cmp LIVES
 14994 7C77 A9 00			lda #$00
 14995 7C79 ED 6C A5			sbc LIVES+1
 14996 7C7C 50 02			svc
 14997 7C7E 49 80			eor #$80
 14998 7C80 30 01			bmi @+
 14999 7C82 88				dey
 15000 				@
 15001 7C83 94 96			sty :STACKORIGIN,x
 15002 7C85 AD F4 9A			lda MINIVAUS.OFS
 15003 7C88 18 6D 6D A5			add X
 15004 7C8C 85 9F			sta :STACKORIGIN+9
 15005 7C8E AD F5 9A			lda MINIVAUS.OFS+1
 15006 7C91 69 00			adc #$00
 15007 7C93 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 15008 7C95 AD F6 9A			lda MINIVAUS.OFS+2
 15009 7C98 69 00			adc #$00
 15010 7C9A 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
 15011 7C9C AD F7 9A			lda MINIVAUS.OFS+3
 15012 7C9F 69 00			adc #$00
 15013 7CA1 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
 15014 7CA3 AD F0 9A			lda MINIVAUS.WIDTH
 15015 7CA6 85 8E			sta :ecx
 15016 7CA8 AD F1 9A			lda MINIVAUS.WIDTH+1
 15017 7CAB 85 8F			sta :ecx+1
 15018 7CAD AD 6E A5			lda Y
 15019 7CB0 85 86			sta :eax
 15020 7CB2 A9 00			lda #$00
 15021 7CB4 85 87			sta :eax+1
 15022 					.ifdef fmulinit
 15023 					fmulu_16
 15024 					els
 15025 7CB6 20 6E 13			imulCX_AL
 15026 					eif
 15027 7CB9 A5 9F			lda :STACKORIGIN+9
 15028 7CBB 18 65 86			add :eax
 15029 7CBE 8D C5 A3			sta GETBYTE.SRC
 15030 7CC1 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 15031 7CC3 65 87			adc :eax+1
 15032 7CC5 8D C6 A3			sta GETBYTE.SRC+1
 15033 7CC8 A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
 15034 7CCA 65 88			adc :eax+2
 15035 7CCC 8D C7 A3			sta GETBYTE.SRC+2
 15036 7CCF A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
 15037 7CD1 65 89			adc :eax+3
 15038 7CD3 8D C8 A3			sta GETBYTE.SRC+3
 15039 7CD6 20 AB 26			jsr GETBYTE
 15040 7CD9 CA				dex
 15041 7CDA A0 01			ldy #1
 15042 7CDC AD C9 A3			lda GETBYTE.RESULT
 15043 7CDF D0 01			bne @+
 15044 7CE1 88				dey
 15045 				@
 15046 7CE2 98				tya
 15047 7CE3 35 97			and :STACKORIGIN+1,x
 15048 7CE5 F0 5D			jeq l_2C43
 15049
 15050 				; optimize OK (service.pas), line = 2560
 15051
 15052 7CE7 AD F4 9A			lda MINIVAUS.OFS
 15053 7CEA 18 6D 6D A5			add X
 15054 7CEE 85 9F			sta :STACKORIGIN+9
 15055 7CF0 AD F5 9A			lda MINIVAUS.OFS+1
 15056 7CF3 69 00			adc #$00
 15057 7CF5 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 15058 7CF7 AD F6 9A			lda MINIVAUS.OFS+2
 15059 7CFA 69 00			adc #$00
 15060 7CFC 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
 15061 7CFE AD F7 9A			lda MINIVAUS.OFS+3
 15062 7D01 69 00			adc #$00
 15063 7D03 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
 15064 7D05 AD F0 9A			lda MINIVAUS.WIDTH
 15065 7D08 85 8E			sta :ecx
 15066 7D0A AD F1 9A			lda MINIVAUS.WIDTH+1
 15067 7D0D 85 8F			sta :ecx+1
 15068 7D0F AD 6E A5			lda Y
 15069 7D12 85 86			sta :eax
 15070 7D14 A9 00			lda #$00
 15071 7D16 85 87			sta :eax+1
 15072 					.ifdef fmulinit
 15073 					fmulu_16
 15074 					els
 15075 7D18 20 6E 13			imulCX_AL
 15076 					eif
 15077 7D1B A5 9F			lda :STACKORIGIN+9
 15078 7D1D 18 65 86			add :eax
 15079 7D20 8D C5 A3			sta GETBYTE.SRC
 15080 7D23 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 15081 7D25 65 87			adc :eax+1
 15082 7D27 8D C6 A3			sta GETBYTE.SRC+1
 15083 7D2A A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
 15084 7D2C 65 88			adc :eax+2
 15085 7D2E 8D C7 A3			sta GETBYTE.SRC+2
 15086 7D31 A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
 15087 7D33 65 89			adc :eax+3
 15088 7D35 8D C8 A3			sta GETBYTE.SRC+3
 15089 7D38 20 AB 26			jsr GETBYTE
 15090 7D3B AD C9 A3			lda GETBYTE.RESULT
 15091 7D3E 8D 79 A5			sta CL
 15092 				; optimize OK (service.pas), line = 2563
 15093 				; optimize OK (service.pas), line = 2566
 15094 7D41 4C F4 7D			jmp l_2C85
 15095 7D44			l_2C43
 15096
 15097 				; optimize OK (service.pas), line = 2575
 15098
 15099 7D44 AD A4 9A			lda PLAYSCREEN.OFS
 15100 7D47 18 6D 74 A5			add XL
 15101 7D4B 85 9F			sta :STACKORIGIN+9
 15102 7D4D AD A5 9A			lda PLAYSCREEN.OFS+1
 15103 7D50 6D 75 A5			adc XL+1
 15104 7D53 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 15105 7D55 AD A6 9A			lda PLAYSCREEN.OFS+2
 15106 7D58 69 00			adc #$00
 15107 7D5A 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
 15108 7D5C AD A7 9A			lda PLAYSCREEN.OFS+3
 15109 7D5F 69 00			adc #$00
 15110 7D61 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
 15111 7D63 AD 77 A5			lda YL+1
 15112 7D66 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 15113 7D68 AD 76 A5			lda YL
 15114 7D6B 0A				asl @
 15115 7D6C 26 B0			rol :STACKORIGIN+STACKWIDTH+10
 15116 7D6E 18 6D DA 98			add ROW
 15117 7D72 85 84			sta :bp2
 15118 7D74 AD DB 98			lda ROW+1
 15119 7D77 65 B0			adc :STACKORIGIN+STACKWIDTH+10
 15120 7D79 85 85			sta :bp2+1
 15121 7D7B A0 00			ldy #$00
 15122 7D7D A5 9F			lda :STACKORIGIN+9
 15123 7D7F 18 71 84			add (:bp2),y
 15124 7D82 8D C5 A3			sta GETBYTE.SRC
 15125 7D85 C8				iny
 15126 7D86 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 15127 7D88 71 84			adc (:bp2),y
 15128 7D8A 8D C6 A3			sta GETBYTE.SRC+1
 15129 7D8D A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
 15130 7D8F 69 00			adc #$00
 15131 7D91 8D C7 A3			sta GETBYTE.SRC+2
 15132 7D94 A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
 15133 7D96 69 00			adc #$00
 15134 7D98 8D C8 A3			sta GETBYTE.SRC+3
 15135 7D9B 20 AB 26			jsr GETBYTE
 15136 7D9E AD C9 A3			lda GETBYTE.RESULT
 15137 7DA1 29 80			and #$80
 15138 7DA3 8D 78 A5			sta SHADOW
 15139
 15140 				; optimize OK (service.pas), line = 2578
 15141
 15142 7DA6 AD 29 9B			lda PATTERN.OFS
 15143 7DA9 18 6D 70 A5			add XP
 15144 7DAD 85 9F			sta :STACKORIGIN+9
 15145 7DAF AD 2A 9B			lda PATTERN.OFS+1
 15146 7DB2 6D 71 A5			adc XP+1
 15147 7DB5 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 15148 7DB7 AD 2B 9B			lda PATTERN.OFS+2
 15149 7DBA 69 00			adc #$00
 15150 7DBC 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
 15151 7DBE AD 2C 9B			lda PATTERN.OFS+3
 15152 7DC1 69 00			adc #$00
 15153 7DC3 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
 15154 7DC5 A5 9F			lda :STACKORIGIN+9
 15155 7DC7 18 6D 72 A5			add YP
 15156 7DCB 8D C5 A3			sta GETBYTE.SRC
 15157 7DCE A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 15158 7DD0 6D 73 A5			adc YP+1
 15159 7DD3 8D C6 A3			sta GETBYTE.SRC+1
 15160 7DD6 A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
 15161 7DD8 69 00			adc #$00
 15162 7DDA 8D C7 A3			sta GETBYTE.SRC+2
 15163 7DDD A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
 15164 7DDF 69 00			adc #$00
 15165 7DE1 8D C8 A3			sta GETBYTE.SRC+3
 15166 7DE4 20 AB 26			jsr GETBYTE
 15167 7DE7 E8				inx
 15168 7DE8 AD C9 A3			lda GETBYTE.RESULT
 15169 7DEB 29 7F			and #$7F
 15170 7DED 0D 78 A5			ora SHADOW
 15171 7DF0 8D 79 A5			sta CL
 15172 7DF3 CA				dex
 15173 7DF4			l_2C85
 15174
 15175 				; optimize OK (service.pas), line = 2581
 15176
 15177 7DF4 AD 77 A5			lda YL+1
 15178 7DF7 85 B1			sta :STACKORIGIN+STACKWIDTH+11
 15179 7DF9 AD 76 A5			lda YL
 15180 7DFC 0A				asl @
 15181 7DFD 26 B1			rol :STACKORIGIN+STACKWIDTH+11
 15182 7DFF 18 6D DA 98			add ROW
 15183 7E03 85 84			sta :bp2
 15184 7E05 AD DB 98			lda ROW+1
 15185 7E08 65 B1			adc :STACKORIGIN+STACKWIDTH+11
 15186 7E0A 85 85			sta :bp2+1
 15187 7E0C A0 00			ldy #$00
 15188 7E0E AD 74 A5			lda XL
 15189 7E11 18 71 84			add (:bp2),y
 15190 7E14 8D C0 A3			sta PUTBYTE.DST
 15191 7E17 C8				iny
 15192 7E18 AD 75 A5			lda XL+1
 15193 7E1B 71 84			adc (:bp2),y
 15194 7E1D 8D C1 A3			sta PUTBYTE.DST+1
 15195 7E20 A9 00			lda #$00
 15196 7E22 69 00			adc #$00
 15197 7E24 8D C2 A3			sta PUTBYTE.DST+2
 15198 7E27 A9 00			lda #$00
 15199 7E29 69 00			adc #$00
 15200 7E2B 8D C3 A3			sta PUTBYTE.DST+3
 15201 7E2E AD 79 A5			lda CL
 15202 7E31 8D C4 A3			sta PUTBYTE.V
 15203 7E34 20 95 26			jsr PUTBYTE
 15204
 15205 				; optimize OK (service.pas), line = 2584
 15206
 15207 7E37 AD A4 9A			lda PLAYSCREEN.OFS
 15208 7E3A 18 6D 74 A5			add XL
 15209 7E3E 85 A0			sta :STACKORIGIN+10
 15210 7E40 AD A5 9A			lda PLAYSCREEN.OFS+1
 15211 7E43 6D 75 A5			adc XL+1
 15212 7E46 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 15213 7E48 AD A6 9A			lda PLAYSCREEN.OFS+2
 15214 7E4B 69 00			adc #$00
 15215 7E4D 85 C0			sta :STACKORIGIN+STACKWIDTH*2+10
 15216 7E4F AD A7 9A			lda PLAYSCREEN.OFS+3
 15217 7E52 69 00			adc #$00
 15218 7E54 85 D0			sta :STACKORIGIN+STACKWIDTH*3+10
 15219 7E56 AD 77 A5			lda YL+1
 15220 7E59 85 B1			sta :STACKORIGIN+STACKWIDTH+11
 15221 7E5B AD 76 A5			lda YL
 15222 7E5E 0A				asl @
 15223 7E5F 26 B1			rol :STACKORIGIN+STACKWIDTH+11
 15224 7E61 18 6D DA 98			add ROW
 15225 7E65 85 84			sta :bp2
 15226 7E67 AD DB 98			lda ROW+1
 15227 7E6A 65 B1			adc :STACKORIGIN+STACKWIDTH+11
 15228 7E6C 85 85			sta :bp2+1
 15229 7E6E A0 00			ldy #$00
 15230 7E70 A5 A0			lda :STACKORIGIN+10
 15231 7E72 18 71 84			add (:bp2),y
 15232 7E75 8D C0 A3			sta PUTBYTE.DST
 15233 7E78 C8				iny
 15234 7E79 A5 B0			lda :STACKORIGIN+STACKWIDTH+10
 15235 7E7B 71 84			adc (:bp2),y
 15236 7E7D 8D C1 A3			sta PUTBYTE.DST+1
 15237 7E80 A5 C0			lda :STACKORIGIN+STACKWIDTH*2+10
 15238 7E82 69 00			adc #$00
 15239 7E84 8D C2 A3			sta PUTBYTE.DST+2
 15240 7E87 A5 D0			lda :STACKORIGIN+STACKWIDTH*3+10
 15241 7E89 69 00			adc #$00
 15242 7E8B 8D C3 A3			sta PUTBYTE.DST+3
 15243 7E8E AD 79 A5			lda CL
 15244 7E91 8D C4 A3			sta PUTBYTE.V
 15245 7E94 20 95 26			jsr PUTBYTE
 15246
 15247 				; --- ForToDoEpilog
 15248 7E97 EE 6D A5			inc X
 15249 7E9A F0 03 4C E4 7B		jne l_2BD2
 15250 7E9F			l_2BE0
 15251
 15252 				; --- ForToDoEpilog
 15253 7E9F EE 6E A5			inc Y
 15254 7EA2 F0 03 4C CE 7B		jne l_2BB6
 15255 7EA7			l_2BC4
 15256
 15257 				; --- ForToDoEpilog
 15258 7EA7 EE 6F A5			inc CN
 15259 7EAA F0 03 4C B8 7B		jne l_2B9A
 15260 7EAF			l_2BA8
 15261
 15262 				; ------------------------------------------------------------
 15263
 15264 = A56B			LIVES	= DATAORIGIN+$0B94
 15265 = 000B			XLIVES	= $0B
 15266 = 00C0			YLIVES	= $C0
 15267 = A56D			X	= DATAORIGIN+$0B96
 15268 = A56E			Y	= DATAORIGIN+$0B97
 15269 = A56F			CN	= DATAORIGIN+$0B98
 15270 = A570			XP	= DATAORIGIN+$0B99
 15271 = A572			YP	= DATAORIGIN+$0B9B
 15272 = A574			XL	= DATAORIGIN+$0B9D
 15273 = A576			YL	= DATAORIGIN+$0B9F
 15274 = A578			SHADOW	= DATAORIGIN+$0BA1
 15275 = A579			CL	= DATAORIGIN+$0BA2
 15276
 15277 = A56B			@VarData	= LIVES
 15278 = 000F			@VarDataSize	= 15
 15279
 15280 7EAF			@exit
 15281 					.ifdef @new
 15282 					lda <@VarData
 15283 					sta :ztmp
 15284 					lda >@VarData
 15285 					ldy #@VarDataSize-1
 15286 					jmp @FreeMem
 15287 					els
 15288 7EAF 60				rts						; ret
 15289 					eif
 15290 				.endl
 15291
 15292 7EB0			.local	PLACE_FIRE					; PROCEDURE
 15293
 15294 				; optimize OK (service.pas), line = 2593
 15295
 15296 7EB0 A9 00			lda #$00
 15297 7EB2 8D 7E A5			sta Y
 15298 7EB5 AC 0A 9B			ldy SHOOTS.HEIGHT
 15299 7EB8 88				dey
 15300 7EB9 8C BD 7E			sty @FORTMP_2CF3_0
 15301
 15302 7EBC			l_2CF6
 15303 				; --- ForToDoCondition
 15304 7EBC A9 00			lda @FORTMP_2CF3_0::#$00
 15305 7EBE CD 7E A5			cmp Y
 15306 7EC1 B0 03 4C 62 7F		jcc l_2D04
 15307
 15308 				; optimize OK (service.pas), line = 2595
 15309
 15310 7EC6 AD 7E A5			lda Y
 15311 7EC9 85 86			sta :eax
 15312 7ECB A9 00			lda #$00
 15313 7ECD 85 87			sta :eax+1
 15314 7ECF AD 08 9B			lda SHOOTS.WIDTH
 15315 7ED2 85 8E			sta :ecx
 15316 7ED4 AD 09 9B			lda SHOOTS.WIDTH+1
 15317 7ED7 85 8F			sta :ecx+1
 15318 					.ifdef fmulinit
 15319 					fmulu_16
 15320 					els
 15321 7ED9 20 6E 13			imulCX_AL
 15322 					eif
 15323 7EDC A5 86			lda :eax
 15324 7EDE 8D 7C A5			sta FW
 15325 7EE1 A5 87			lda :eax+1
 15326 7EE3 8D 7D A5			sta FW+1
 15327
 15328 				; optimize OK (service.pas), line = 2597
 15329
 15330 7EE6 AD 7E A5			lda Y
 15331 7EE9 18 6D 8F 9B			add FIRE.Y
 15332 7EED 85 A1			sta :STACKORIGIN+11
 15333 7EEF A9 00			lda #$00
 15334 7EF1 69 00			adc #$00
 15335 7EF3 06 A1			asl :STACKORIGIN+11
 15336 7EF5 2A				rol @
 15337 7EF6 85 B1			sta :STACKORIGIN+STACKWIDTH+11
 15338 7EF8 AD DA 98			lda ROW
 15339 7EFB 18 65 A1			add :STACKORIGIN+11
 15340 7EFE 85 84			sta :bp2
 15341 7F00 AD DB 98			lda ROW+1
 15342 7F03 65 B1			adc :STACKORIGIN+STACKWIDTH+11
 15343 7F05 85 85			sta :bp2+1
 15344 7F07 A0 00			ldy #$00
 15345 7F09 AD 8E 9B			lda FIRE.X
 15346 7F0C 18 71 84			add (:bp2),y
 15347 7F0F 8D 99 A3			sta BLITZERO.DST
 15348 7F12 C8				iny
 15349 7F13 A9 00			lda #$00
 15350 7F15 71 84			adc (:bp2),y
 15351 7F17 8D 9A A3			sta BLITZERO.DST+1
 15352 7F1A A9 00			lda #$00
 15353 7F1C 69 00			adc #$00
 15354 7F1E 8D 9B A3			sta BLITZERO.DST+2
 15355 7F21 A9 00			lda #$00
 15356 7F23 69 00			adc #$00
 15357 7F25 8D 9C A3			sta BLITZERO.DST+3
 15358 7F28 AD 0C 9B			lda SHOOTS.OFS
 15359 7F2B 18 6D 7C A5			add FW
 15360 7F2F 8D 95 A3			sta BLITZERO.SRC
 15361 7F32 AD 0D 9B			lda SHOOTS.OFS+1
 15362 7F35 6D 7D A5			adc FW+1
 15363 7F38 8D 96 A3			sta BLITZERO.SRC+1
 15364 7F3B AD 0E 9B			lda SHOOTS.OFS+2
 15365 7F3E 69 00			adc #$00
 15366 7F40 8D 97 A3			sta BLITZERO.SRC+2
 15367 7F43 AD 0F 9B			lda SHOOTS.OFS+3
 15368 7F46 69 00			adc #$00
 15369 7F48 8D 98 A3			sta BLITZERO.SRC+3
 15370 7F4B AD 08 9B			lda SHOOTS.WIDTH
 15371 7F4E 8D 9D A3			sta BLITZERO.SIZE
 15372 7F51 AD 09 9B			lda SHOOTS.WIDTH+1
 15373 7F54 8D 9E A3			sta BLITZERO.SIZE+1
 15374 7F57 20 13 25			jsr BLITZERO
 15375
 15376 				; --- ForToDoEpilog
 15377 7F5A EE 7E A5			inc Y
 15378 7F5D F0 03 4C BC 7E		jne l_2CF6
 15379 7F62			l_2D04
 15380
 15381 				; ------------------------------------------------------------
 15382
 15383 = A57C			FW	= DATAORIGIN+$0BA5
 15384 = A57E			Y	= DATAORIGIN+$0BA7
 15385
 15386 = A57C			@VarData	= FW
 15387 = 0003			@VarDataSize	= 3
 15388
 15389 7F62			@exit
 15390 					.ifdef @new
 15391 					lda <@VarData
 15392 					sta :ztmp
 15393 					lda >@VarData
 15394 					ldy #@VarDataSize-1
 15395 					jmp @FreeMem
 15396 					els
 15397 7F62 60				rts						; ret
 15398 					eif
 15399 				.endl
 15400
 15401 7F63			.local	REMOVE_FIRE					; PROCEDURE
 15402
 15403 				; optimize OK (service.pas), line = 2605
 15404
 15405 7F63 A9 00			lda #$00
 15406 7F65 8D 80 A5			sta Y
 15407 7F68 AC 0A 9B			ldy SHOOTS.HEIGHT
 15408 7F6B 88				dey
 15409 7F6C 8C 70 7F			sty @FORTMP_2D41_0
 15410
 15411 7F6F			l_2D44
 15412 				; --- ForToDoCondition
 15413 7F6F A9 00			lda @FORTMP_2D41_0::#$00
 15414 7F71 CD 80 A5			cmp Y
 15415 7F74 B0 03 4C 30 80		jcc l_2D52
 15416
 15417 				; optimize OK (service.pas), line = 2609
 15418
 15419 7F79 AD 80 A5			lda Y
 15420 7F7C 18 6D 8F 9B			add FIRE.Y
 15421 7F80 85 A1			sta :STACKORIGIN+11
 15422 7F82 A9 00			lda #$00
 15423 7F84 69 00			adc #$00
 15424 7F86 06 A1			asl :STACKORIGIN+11
 15425 7F88 2A				rol @
 15426 7F89 85 B1			sta :STACKORIGIN+STACKWIDTH+11
 15427 7F8B AD DA 98			lda ROW
 15428 7F8E 18 65 A1			add :STACKORIGIN+11
 15429 7F91 85 84			sta :bp2
 15430 7F93 AD DB 98			lda ROW+1
 15431 7F96 65 B1			adc :STACKORIGIN+STACKWIDTH+11
 15432 7F98 85 85			sta :bp2+1
 15433 7F9A A0 00			ldy #$00
 15434 7F9C AD 8E 9B			lda FIRE.X
 15435 7F9F 18 71 84			add (:bp2),y
 15436 7FA2 8D AE A3			sta BLITROW.DST
 15437 7FA5 C8				iny
 15438 7FA6 A9 00			lda #$00
 15439 7FA8 71 84			adc (:bp2),y
 15440 7FAA 8D AF A3			sta BLITROW.DST+1
 15441 7FAD A9 00			lda #$00
 15442 7FAF 69 00			adc #$00
 15443 7FB1 8D B0 A3			sta BLITROW.DST+2
 15444 7FB4 A9 00			lda #$00
 15445 7FB6 69 00			adc #$00
 15446 7FB8 8D B1 A3			sta BLITROW.DST+3
 15447 7FBB AD A4 9A			lda PLAYSCREEN.OFS
 15448 7FBE 18 6D 8E 9B			add FIRE.X
 15449 7FC2 85 A1			sta :STACKORIGIN+11
 15450 7FC4 AD A5 9A			lda PLAYSCREEN.OFS+1
 15451 7FC7 69 00			adc #$00
 15452 7FC9 85 B1			sta :STACKORIGIN+STACKWIDTH+11
 15453 7FCB AD A6 9A			lda PLAYSCREEN.OFS+2
 15454 7FCE 69 00			adc #$00
 15455 7FD0 85 C1			sta :STACKORIGIN+STACKWIDTH*2+11
 15456 7FD2 AD A7 9A			lda PLAYSCREEN.OFS+3
 15457 7FD5 69 00			adc #$00
 15458 7FD7 85 D1			sta :STACKORIGIN+STACKWIDTH*3+11
 15459 7FD9 AD 80 A5			lda Y
 15460 7FDC 18 6D 8F 9B			add FIRE.Y
 15461 7FE0 85 A2			sta :STACKORIGIN+12
 15462 7FE2 A9 00			lda #$00
 15463 7FE4 69 00			adc #$00
 15464 7FE6 06 A2			asl :STACKORIGIN+12
 15465 7FE8 2A				rol @
 15466 7FE9 85 B2			sta :STACKORIGIN+STACKWIDTH+12
 15467 7FEB AD DA 98			lda ROW
 15468 7FEE 18 65 A2			add :STACKORIGIN+12
 15469 7FF1 85 84			sta :bp2
 15470 7FF3 AD DB 98			lda ROW+1
 15471 7FF6 65 B2			adc :STACKORIGIN+STACKWIDTH+12
 15472 7FF8 85 85			sta :bp2+1
 15473 7FFA 88				dey
 15474 7FFB A5 A1			lda :STACKORIGIN+11
 15475 7FFD 18 71 84			add (:bp2),y
 15476 8000 8D AA A3			sta BLITROW.SRC
 15477 8003 C8				iny
 15478 8004 A5 B1			lda :STACKORIGIN+STACKWIDTH+11
 15479 8006 71 84			adc (:bp2),y
 15480 8008 8D AB A3			sta BLITROW.SRC+1
 15481 800B A5 C1			lda :STACKORIGIN+STACKWIDTH*2+11
 15482 800D 69 00			adc #$00
 15483 800F 8D AC A3			sta BLITROW.SRC+2
 15484 8012 A5 D1			lda :STACKORIGIN+STACKWIDTH*3+11
 15485 8014 69 00			adc #$00
 15486 8016 8D AD A3			sta BLITROW.SRC+3
 15487 8019 AD 08 9B			lda SHOOTS.WIDTH
 15488 801C 8D B2 A3			sta BLITROW.SIZE
 15489 801F AD 09 9B			lda SHOOTS.WIDTH+1
 15490 8022 8D B3 A3			sta BLITROW.SIZE+1
 15491 8025 20 F4 25			jsr BLITROW
 15492
 15493 				; --- ForToDoEpilog
 15494 8028 EE 80 A5			inc Y
 15495 802B F0 03 4C 6F 7F		jne l_2D44
 15496 8030			l_2D52
 15497
 15498 				; ------------------------------------------------------------
 15499
 15500 = A580			Y	= DATAORIGIN+$0BA9
 15501
 15502 = A580			@VarData	= Y
 15503 = 0001			@VarDataSize	= 1
 15504
 15505 8030			@exit
 15506 					.ifdef @new
 15507 					lda <@VarData
 15508 					sta :ztmp
 15509 					lda >@VarData
 15510 					ldy #@VarDataSize-1
 15511 					jmp @FreeMem
 15512 					els
 15513 8030 60				rts						; ret
 15514 					eif
 15515 				.endl
 15516
 15517 8031			.local	CHECK_FIRE					; PROCEDURE
 15518
 15519 				; optimize OK (service.pas), line = 2616
 15520
 15521 8031 AD 91 9B			lda FIRE.AVL
 15522 8034 D0 03 4C 3B 82		jeq l_2D94
 15523
 15524 				; optimize FAIL ('MOUSECLICK', service.pas), line = 2618
 15525
 15526 8039 20 CC 24			jsr MOUSECLICK
 15527 803C E8				inx
 15528 803D E8				inx
 15529 803E A0 01			ldy #1
 15530 8040 AD 8B 9A			lda MOUSECLICK.RESULT+1
 15531 8043 C9 00			cmp #$00
 15532 8045 D0 05			bne @+
 15533 8047 AD 8A 9A			lda MOUSECLICK.RESULT
 15534 804A C9 01			cmp #$01
 15535 				@
 15536 804C F0 01			beq @+
 15537 804E 88				dey
 15538 				@
 15539 804F 98				tya
 15540 8050 2D 91 9B			and FIRE.AVL
 15541 8053 95 95			sta :STACKORIGIN-1,x
 15542 8055 CA				dex
 15543 8056 CA				dex
 15544 8057 A0 01			ldy #1
 15545 8059 AD 90 9B			lda FIRE.SHOT
 15546 805C F0 01			beq @+
 15547 805E 88				dey
 15548 				@
 15549 805F 98				tya
 15550 8060 35 97			and :STACKORIGIN+1,x
 15551 8062 F0 48			jeq l_2DB4
 15552
 15553 				; optimize OK (service.pas), line = 2620
 15554
 15555 8064 AD 20 9B			lda VAUS.WIDTH
 15556 8067 38 ED 08 9B			sub SHOOTS.WIDTH
 15557 806B 85 A0			sta :STACKORIGIN+10
 15558 806D A9 00			lda #$00
 15559 806F ED 09 9B			sbc SHOOTS.WIDTH+1
 15560 8072 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 15561 8074 46 B0			lsr :STACKORIGIN+STACKWIDTH+10
 15562 8076 66 A0			ror :STACKORIGIN+10
 15563 8078 AD 18 9B			lda VAUS.X
 15564 807B 18 65 A0			add :STACKORIGIN+10
 15565 807E 8D 8E 9B			sta FIRE.X
 15566
 15567 				; optimize OK (service.pas), line = 2621
 15568
 15569 8081 AD 19 9B			lda VAUS.Y
 15570 8084 38 ED 0A 9B			sub SHOOTS.HEIGHT
 15571 8088 8D 8F 9B			sta FIRE.Y
 15572
 15573 				; optimize OK (service.pas), line = 2622
 15574
 15575 808B A9 01			lda #$01
 15576 808D 8D 90 9B			sta FIRE.SHOT
 15577
 15578 				; optimize OK (service.pas), line = 2623
 15579
 15580 8090 A9 00			lda #$00
 15581 8092 8D 92 9B			sta FIRE.NW
 15582
 15583 				; optimize OK (service.pas), line = 2624
 15584
 15585 8095 A9 BC			lda #$BC
 15586 8097 8D 86 9A			sta BALL_BLOCK_SOUND.A
 15587 809A A9 02			lda #$02
 15588 809C 8D 87 9A			sta BALL_BLOCK_SOUND.A+1
 15589 809F A9 05			lda #$05
 15590 80A1 8D 88 9A			sta BALL_BLOCK_SOUND.B
 15591 80A4 A9 00			lda #$00
 15592 80A6 8D 89 9A			sta BALL_BLOCK_SOUND.B+1
 15593 80A9 20 CA 24			jsr BALL_BLOCK_SOUND
 15594 80AC			l_2DB4
 15595
 15596 				; optimize OK (service.pas), line = 2627
 15597
 15598 80AC AD 90 9B			lda FIRE.SHOT
 15599 80AF D0 03 4C 3B 82		jeq l_2DEE
 15600
 15601 				; optimize OK (service.pas), line = 2629
 15602
 15603 80B4 AD 92 9B			lda FIRE.NW
 15604 80B7 F0 03			jeq l_2DFB
 15605 80B9 20 63 7F			jsr REMOVE_FIRE
 15606 80BC			l_2DFB
 15607
 15608 				; optimize OK (service.pas), line = 2630
 15609
 15610 80BC A9 01			lda #$01
 15611 80BE 8D 92 9B			sta FIRE.NW
 15612
 15613 				; optimize OK (service.pas), line = 2632
 15614
 15615 80C1 AD 8F 9B			lda FIRE.Y
 15616 80C4 38 E9 04			sub #$04
 15617 80C7 8D 8F 9B			sta FIRE.Y
 15618
 15619 				; optimize OK (service.pas), line = 2633
 15620
 15621 80CA C9 16			cmp #$16
 15622 80CC B0 08			jcs l_2E16
 15623 80CE A9 00			lda #$00
 15624 80D0 8D 90 9B			sta FIRE.SHOT
 15625 80D3 4C 3B 82			jmp l_2E24
 15626 80D6			l_2E16
 15627
 15628 				; optimize FAIL ('PLACE_FIRE', service.pas), line = 2636
 15629
 15630 80D6 20 B0 7E			jsr PLACE_FIRE
 15631
 15632 				; optimize OK (service.pas), line = 2638
 15633
 15634 80D9 AD 8F 9B			lda FIRE.Y
 15635 80DC 38 E9 16			sub #$16
 15636 80DF D0 03 4C 3B 82		jeq l_2E4B
 15637 80E4 10 03			bpl @+
 15638 80E6 4C 3B 82			jmp l_2E4B
 15639 				@
 15640 80E9 AD 8F 9B			lda FIRE.Y
 15641 80EC 38 E9 16			sub #$16
 15642 80EF 85 A0			sta :STACKORIGIN+10
 15643 80F1 A9 00			lda #$00
 15644 80F3 E9 00			sbc #$00
 15645 80F5 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 15646 80F7 A5 A0			lda :STACKORIGIN+10
 15647 80F9 C9 78			cmp #$78
 15648 80FB A5 B0			lda :STACKORIGIN+STACKWIDTH+10
 15649 80FD E9 00			sbc #$00
 15650 80FF 50 02			svc
 15651 8101 49 80			eor #$80
 15652 8103 30 03 4C 3B 82		jpl l_2E4B
 15653 				@
 15654
 15655 				; optimize OK (service.pas), line = 2640
 15656
 15657 8108 AD 8E 9B			lda FIRE.X
 15658 810B 38 E9 09			sub #$09
 15659 810E 85 9F			sta :STACKORIGIN+9
 15660 8110 A9 00			lda #$00
 15661 8112 E9 00			sbc #$00
 15662 8114 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 15663 8116 A0 00			ldy #$00
 15664 8118 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 15665 811A 10 01			spl
 15666 811C 88				dey
 15667 811D 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 15668 811F 84 BF			sty :STACKORIGIN+STACKWIDTH*2+9
 15669 8121 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
 15670 8123 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 15671 8125 66 9F			ror :STACKORIGIN+9
 15672 8127 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
 15673 8129 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 15674 812B 66 9F			ror :STACKORIGIN+9
 15675 812D 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
 15676 812F 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 15677 8131 66 9F			ror :STACKORIGIN+9
 15678 8133 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
 15679 8135 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 15680 8137 66 9F			ror :STACKORIGIN+9
 15681 8139 A5 9F			lda :STACKORIGIN+9
 15682 813B 8D 82 A5			sta X1
 15683 813E A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 15684 8140 8D 83 A5			sta X1+1
 15685
 15686 				; optimize OK (service.pas), line = 2641
 15687
 15688 8143 AD 8F 9B			lda FIRE.Y
 15689 8146 38 E9 16			sub #$16
 15690 8149 85 9F			sta :STACKORIGIN+9
 15691 814B A9 00			lda #$00
 15692 814D E9 00			sbc #$00
 15693 814F 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 15694 8151 A0 00			ldy #$00
 15695 8153 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 15696 8155 10 01			spl
 15697 8157 88				dey
 15698 8158 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 15699 815A 84 BF			sty :STACKORIGIN+STACKWIDTH*2+9
 15700 815C 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
 15701 815E 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 15702 8160 66 9F			ror :STACKORIGIN+9
 15703 8162 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
 15704 8164 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 15705 8166 66 9F			ror :STACKORIGIN+9
 15706 8168 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
 15707 816A 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 15708 816C 66 9F			ror :STACKORIGIN+9
 15709 816E A5 9F			lda :STACKORIGIN+9
 15710 8170 8D 86 A5			sta Y1
 15711 8173 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 15712 8175 8D 87 A5			sta Y1+1
 15713
 15714 				; optimize OK (service.pas), line = 2643
 15715
 15716 8178 AD 8E 9B			lda FIRE.X
 15717 817B 18 6D 08 9B			add SHOOTS.WIDTH
 15718 817F 85 9F			sta :STACKORIGIN+9
 15719 8181 A9 00			lda #$00
 15720 8183 6D 09 9B			adc SHOOTS.WIDTH+1
 15721 8186 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 15722 8188 A9 00			lda #$00
 15723 818A 69 00			adc #$00
 15724 818C 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
 15725 818E A9 00			lda #$00
 15726 8190 69 00			adc #$00
 15727 8192 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
 15728 8194 A5 9F			lda :STACKORIGIN+9
 15729 8196 38 E9 09			sub #$09
 15730 8199 85 9F			sta :STACKORIGIN+9
 15731 819B A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 15732 819D E9 00			sbc #$00
 15733 819F 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 15734 81A1 A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
 15735 81A3 E9 00			sbc #$00
 15736 81A5 85 BF			sta :STACKORIGIN+STACKWIDTH*2+9
 15737 81A7 A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
 15738 81A9 E9 00			sbc #$00
 15739 81AB 85 CF			sta :STACKORIGIN+STACKWIDTH*3+9
 15740 81AD 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
 15741 81AF 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 15742 81B1 66 9F			ror :STACKORIGIN+9
 15743 81B3 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
 15744 81B5 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 15745 81B7 66 9F			ror :STACKORIGIN+9
 15746 81B9 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
 15747 81BB 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 15748 81BD 66 9F			ror :STACKORIGIN+9
 15749 81BF 46 BF			lsr :STACKORIGIN+STACKWIDTH*2+9
 15750 81C1 66 AF			ror :STACKORIGIN+STACKWIDTH+9
 15751 81C3 66 9F			ror :STACKORIGIN+9
 15752 81C5 A5 9F			lda :STACKORIGIN+9
 15753 81C7 8D 84 A5			sta X2
 15754 81CA A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 15755 81CC 8D 85 A5			sta X2+1
 15756
 15757 				; optimize OK (service.pas), line = 2644
 15758
 15759 81CF AD 86 A5			lda Y1
 15760 81D2 8D 88 A5			sta Y2
 15761 81D5 AD 87 A5			lda Y1+1
 15762 81D8 8D 89 A5			sta Y2+1
 15763
 15764 				; optimize OK (service.pas), line = 2646
 15765
 15766 81DB AD 86 A5			lda Y1
 15767 81DE 0A				asl @
 15768 81DF 0A				asl @
 15769 81E0 0A				asl @
 15770 81E1 0A				asl @
 15771 81E2 18 6D 82 A5			add X1
 15772 81E6 A8				tay
 15773 81E7 B9 00 DB			lda adr.WALL,y
 15774 81EA D0 11			jne l_2EB4x
 15775 81EC AD 88 A5			lda Y2
 15776 81EF 0A				asl @
 15777 81F0 0A				asl @
 15778 81F1 0A				asl @
 15779 81F2 0A				asl @
 15780 81F3 18 6D 84 A5			add X2
 15781 81F7 A8				tay
 15782 81F8 B9 00 DB			lda adr.WALL,y
 15783 81FB F0 3E			jeq l_2EB4
 15784 81FD			l_2EB4x
 15785
 15786 				; optimize FAIL ('REMOVE_FIRE', service.pas), line = 2648
 15787
 15788 81FD 20 63 7F			jsr REMOVE_FIRE
 15789
 15790 				; optimize OK (service.pas), line = 2649
 15791
 15792 8200 A9 00			lda #$00
 15793 8202 8D 90 9B			sta FIRE.SHOT
 15794
 15795 				; optimize OK (service.pas), line = 2651
 15796
 15797 8205 AD 82 A5			lda X1
 15798 8208 8D D0 A4			sta SHOOT_BLOCK_WITH_FIRE.XB
 15799 820B AD 83 A5			lda X1+1
 15800 820E 8D D1 A4			sta SHOOT_BLOCK_WITH_FIRE.XB+1
 15801 8211 AD 86 A5			lda Y1
 15802 8214 8D D2 A4			sta SHOOT_BLOCK_WITH_FIRE.YB
 15803 8217 AD 87 A5			lda Y1+1
 15804 821A 8D D3 A4			sta SHOOT_BLOCK_WITH_FIRE.YB+1
 15805 821D 20 F1 57			jsr SHOOT_BLOCK_WITH_FIRE
 15806
 15807 				; optimize OK (service.pas), line = 2652
 15808
 15809 8220 AD 84 A5			lda X2
 15810 8223 8D D0 A4			sta SHOOT_BLOCK_WITH_FIRE.XB
 15811 8226 AD 85 A5			lda X2+1
 15812 8229 8D D1 A4			sta SHOOT_BLOCK_WITH_FIRE.XB+1
 15813 822C AD 88 A5			lda Y2
 15814 822F 8D D2 A4			sta SHOOT_BLOCK_WITH_FIRE.YB
 15815 8232 AD 89 A5			lda Y2+1
 15816 8235 8D D3 A4			sta SHOOT_BLOCK_WITH_FIRE.YB+1
 15817 8238 20 F1 57			jsr SHOOT_BLOCK_WITH_FIRE
 15818 823B			l_2E24
 15819 823B			l_2EB4
 15820 823B			l_2E4B
 15821 823B			l_2DEE
 15822 823B			l_2D94
 15823
 15824 				; ------------------------------------------------------------
 15825
 15826 = A582			X1	= DATAORIGIN+$0BAB
 15827 = A584			X2	= DATAORIGIN+$0BAD
 15828 = A586			Y1	= DATAORIGIN+$0BAF
 15829 = A588			Y2	= DATAORIGIN+$0BB1
 15830
 15831 = A582			@VarData	= X1
 15832 = 0008			@VarDataSize	= 8
 15833
 15834 823B			@exit
 15835 					.ifdef @new
 15836 					lda <@VarData
 15837 					sta :ztmp
 15838 					lda >@VarData
 15839 					ldy #@VarDataSize-1
 15840 					jmp @FreeMem
 15841 					els
 15842 823B 60				rts						; ret
 15843 					eif
 15844 				.endl
 15845
 15846 823C			.local	REMOVE_FLUX					; PROCEDURE
 15847
 15848 				; optimize OK (service.pas), line = 2664
 15849
 15850 823C A9 00			lda #$00
 15851 823E 8D 8A A5			sta Y
 15852
 15853 8241			l_2ED9
 15854 				; --- ForToDoCondition
 15855 8241 AD 8A A5			lda Y
 15856 8244 C9 14			cmp #$14
 15857 8246 90 03 4C F9 82		jcs l_2EE7
 15858
 15859 				; optimize OK (service.pas), line = 2666
 15860
 15861 824B 69 B0			adc #$B0
 15862 824D 85 A1			sta :STACKORIGIN+11
 15863 824F A9 00			lda #$00
 15864 8251 69 00			adc #$00
 15865 8253 06 A1			asl :STACKORIGIN+11
 15866 8255 2A				rol @
 15867 8256 85 B1			sta :STACKORIGIN+STACKWIDTH+11
 15868 8258 AD DA 98			lda ROW
 15869 825B 18 65 A1			add :STACKORIGIN+11
 15870 825E 85 84			sta :bp2
 15871 8260 AD DB 98			lda ROW+1
 15872 8263 65 B1			adc :STACKORIGIN+STACKWIDTH+11
 15873 8265 85 85			sta :bp2+1
 15874 8267 A0 00			ldy #$00
 15875 8269 A9 D9			lda #$D9
 15876 826B 18 71 84			add (:bp2),y
 15877 826E 8D AE A3			sta BLITROW.DST
 15878 8271 C8				iny
 15879 8272 A9 00			lda #$00
 15880 8274 71 84			adc (:bp2),y
 15881 8276 8D AF A3			sta BLITROW.DST+1
 15882 8279 A9 00			lda #$00
 15883 827B 69 00			adc #$00
 15884 827D 8D B0 A3			sta BLITROW.DST+2
 15885 8280 A9 00			lda #$00
 15886 8282 69 00			adc #$00
 15887 8284 8D B1 A3			sta BLITROW.DST+3
 15888 8287 AD A4 9A			lda PLAYSCREEN.OFS
 15889 828A 18 69 D9			add #$D9
 15890 828D 85 A1			sta :STACKORIGIN+11
 15891 828F AD A5 9A			lda PLAYSCREEN.OFS+1
 15892 8292 69 00			adc #$00
 15893 8294 85 B1			sta :STACKORIGIN+STACKWIDTH+11
 15894 8296 AD A6 9A			lda PLAYSCREEN.OFS+2
 15895 8299 69 00			adc #$00
 15896 829B 85 C1			sta :STACKORIGIN+STACKWIDTH*2+11
 15897 829D AD A7 9A			lda PLAYSCREEN.OFS+3
 15898 82A0 69 00			adc #$00
 15899 82A2 85 D1			sta :STACKORIGIN+STACKWIDTH*3+11
 15900 82A4 AD 8A A5			lda Y
 15901 82A7 18 69 B0			add #$B0
 15902 82AA 85 A2			sta :STACKORIGIN+12
 15903 82AC A9 00			lda #$00
 15904 82AE 69 00			adc #$00
 15905 82B0 06 A2			asl :STACKORIGIN+12
 15906 82B2 2A				rol @
 15907 82B3 85 B2			sta :STACKORIGIN+STACKWIDTH+12
 15908 82B5 AD DA 98			lda ROW
 15909 82B8 18 65 A2			add :STACKORIGIN+12
 15910 82BB 85 84			sta :bp2
 15911 82BD AD DB 98			lda ROW+1
 15912 82C0 65 B2			adc :STACKORIGIN+STACKWIDTH+12
 15913 82C2 85 85			sta :bp2+1
 15914 82C4 A0 00			ldy #$00
 15915 82C6 A5 A1			lda :STACKORIGIN+11
 15916 82C8 18 71 84			add (:bp2),y
 15917 82CB 8D AA A3			sta BLITROW.SRC
 15918 82CE C8				iny
 15919 82CF A5 B1			lda :STACKORIGIN+STACKWIDTH+11
 15920 82D1 71 84			adc (:bp2),y
 15921 82D3 8D AB A3			sta BLITROW.SRC+1
 15922 82D6 A5 C1			lda :STACKORIGIN+STACKWIDTH*2+11
 15923 82D8 69 00			adc #$00
 15924 82DA 8D AC A3			sta BLITROW.SRC+2
 15925 82DD A5 D1			lda :STACKORIGIN+STACKWIDTH*3+11
 15926 82DF 69 00			adc #$00
 15927 82E1 8D AD A3			sta BLITROW.SRC+3
 15928 82E4 A9 08			lda #$08
 15929 82E6 8D B2 A3			sta BLITROW.SIZE
 15930 82E9 A9 00			lda #$00
 15931 82EB 8D B3 A3			sta BLITROW.SIZE+1
 15932 82EE 20 F4 25			jsr BLITROW
 15933
 15934 				; --- ForToDoEpilog
 15935 82F1 EE 8A A5			inc Y
 15936 82F4 F0 03 4C 41 82		jne l_2ED9
 15937 82F9			l_2EE7
 15938
 15939 				; ------------------------------------------------------------
 15940
 15941 = A58A			Y	= DATAORIGIN+$0BB3
 15942
 15943 = A58A			@VarData	= Y
 15944 = 0001			@VarDataSize	= 1
 15945
 15946 82F9			@exit
 15947 					.ifdef @new
 15948 					lda <@VarData
 15949 					sta :ztmp
 15950 					lda >@VarData
 15951 					ldy #@VarDataSize-1
 15952 					jmp @FreeMem
 15953 					els
 15954 82F9 60				rts						; ret
 15955 					eif
 15956 				.endl
 15957
 15958 82FA			.local	CHECK_FLUX					; PROCEDURE
 15959
 15960 				; optimize OK (service.pas), line = 2674
 15961
 15962 82FA AD 95 9B			lda SCRFLUXCNT
 15963 82FD 8D 8C A5			sta FX
 15964
 15965 				; optimize OK (service.pas), line = 2675
 15966
 15967 8300 AD 94 9B			lda SCRFLUX
 15968 8303 D0 03 4C BA 83		jeq l_2F26
 15969
 15970 				; optimize OK (service.pas), line = 2677
 15971
 15972 8308 A9 00			lda #$00
 15973 830A 8D 8B A5			sta Y
 15974
 15975 830D			l_2F30
 15976 				; --- ForToDoCondition
 15977 830D AD 8B A5			lda Y
 15978 8310 C9 14			cmp #$14
 15979 8312 90 03 4C AB 83		jcs l_2F3E
 15980
 15981 				; optimize OK (service.pas), line = 2679
 15982
 15983 8317 69 B0			adc #$B0
 15984 8319 85 A1			sta :STACKORIGIN+11
 15985 831B A9 00			lda #$00
 15986 831D 69 00			adc #$00
 15987 831F 06 A1			asl :STACKORIGIN+11
 15988 8321 2A				rol @
 15989 8322 85 B1			sta :STACKORIGIN+STACKWIDTH+11
 15990 8324 AD DA 98			lda ROW
 15991 8327 18 65 A1			add :STACKORIGIN+11
 15992 832A 85 84			sta :bp2
 15993 832C AD DB 98			lda ROW+1
 15994 832F 65 B1			adc :STACKORIGIN+STACKWIDTH+11
 15995 8331 85 85			sta :bp2+1
 15996 8333 A0 00			ldy #$00
 15997 8335 A9 D9			lda #$D9
 15998 8337 18 71 84			add (:bp2),y
 15999 833A 8D AE A3			sta BLITROW.DST
 16000 833D C8				iny
 16001 833E A9 00			lda #$00
 16002 8340 71 84			adc (:bp2),y
 16003 8342 8D AF A3			sta BLITROW.DST+1
 16004 8345 A9 00			lda #$00
 16005 8347 69 00			adc #$00
 16006 8349 8D B0 A3			sta BLITROW.DST+2
 16007 834C A9 00			lda #$00
 16008 834E 69 00			adc #$00
 16009 8350 8D B1 A3			sta BLITROW.DST+3
 16010 8353 AD 8B A5			lda Y
 16011 8356 18 6D 8C A5			add FX
 16012 835A 85 A2			sta :STACKORIGIN+12
 16013 835C A9 00			lda #$00
 16014 835E 69 00			adc #$00
 16015 8360 85 B2			sta :STACKORIGIN+STACKWIDTH+12
 16016 8362 A9 00			lda #$00
 16017 8364 06 A2			asl :STACKORIGIN+12
 16018 8366 26 B2			rol :STACKORIGIN+STACKWIDTH+12
 16019 8368 2A				rol @
 16020 8369 06 A2			asl :STACKORIGIN+12
 16021 836B 26 B2			rol :STACKORIGIN+STACKWIDTH+12
 16022 836D 2A				rol @
 16023 836E 06 A2			asl :STACKORIGIN+12
 16024 8370 26 B2			rol :STACKORIGIN+STACKWIDTH+12
 16025 8372 2A				rol @
 16026 8373 85 C2			sta :STACKORIGIN+STACKWIDTH*2+12
 16027 8375 AD 14 9B			lda FLUX.OFS
 16028 8378 18 65 A2			add :STACKORIGIN+12
 16029 837B 8D AA A3			sta BLITROW.SRC
 16030 837E AD 15 9B			lda FLUX.OFS+1
 16031 8381 65 B2			adc :STACKORIGIN+STACKWIDTH+12
 16032 8383 8D AB A3			sta BLITROW.SRC+1
 16033 8386 AD 16 9B			lda FLUX.OFS+2
 16034 8389 65 C2			adc :STACKORIGIN+STACKWIDTH*2+12
 16035 838B 8D AC A3			sta BLITROW.SRC+2
 16036 838E AD 17 9B			lda FLUX.OFS+3
 16037 8391 69 00			adc #$00
 16038 8393 8D AD A3			sta BLITROW.SRC+3
 16039 8396 A9 08			lda #$08
 16040 8398 8D B2 A3			sta BLITROW.SIZE
 16041 839B A9 00			lda #$00
 16042 839D 8D B3 A3			sta BLITROW.SIZE+1
 16043 83A0 20 F4 25			jsr BLITROW
 16044
 16045 				; --- ForToDoEpilog
 16046 83A3 EE 8B A5			inc Y
 16047 83A6 F0 03 4C 0D 83		jne l_2F30
 16048 83AB			l_2F3E
 16049
 16050 				; optimize FAIL (0, service.pas), line = 2681
 16051
 16052 83AB EE 95 9B			inc SCRFLUXCNT
 16053
 16054 				; optimize OK (service.pas), line = 2682
 16055
 16056 83AE AD 95 9B			lda SCRFLUXCNT
 16057 83B1 C9 15			cmp #$15
 16058 83B3 90 05			jcc l_2F7D
 16059 83B5 A9 00			lda #$00
 16060 83B7 8D 95 9B			sta SCRFLUXCNT
 16061 83BA			l_2F7D
 16062 83BA			l_2F26
 16063
 16064 				; ------------------------------------------------------------
 16065
 16066 = A58B			Y	= DATAORIGIN+$0BB4
 16067 = A58C			FX	= DATAORIGIN+$0BB5
 16068
 16069 = A58B			@VarData	= Y
 16070 = 0002			@VarDataSize	= 2
 16071
 16072 83BA			@exit
 16073 					.ifdef @new
 16074 					lda <@VarData
 16075 					sta :ztmp
 16076 					lda >@VarData
 16077 					ldy #@VarDataSize-1
 16078 					jmp @FreeMem
 16079 					els
 16080 83BA 60				rts						; ret
 16081 					eif
 16082 				.endl
 16083
 16084 83BB			.local	VAUS_OUT					; PROCEDURE
 16085
 16086 				; optimize FAIL ('NOSOUND', service.pas), line = 2690
 16087
 16088 83BB 20 C1 26			jsr NOSOUND
 16089
 16090 				; optimize OK (service.pas), line = 2692
 16091
 16092 83BE AD 74 9B			lda CUR_PLAYER
 16093 83C1 0A				asl @
 16094 83C2 0A				asl @
 16095 83C3 A8				tay
 16096 83C4 B9 59 9B			lda adr.SCORE.PLAYER,y
 16097 83C7 18 69 10			add #$10
 16098 83CA 99 59 9B			sta adr.SCORE.PLAYER,y
 16099 83CD B9 5A 9B			lda adr.SCORE.PLAYER+1,y
 16100 83D0 69 27			adc #$27
 16101 83D2 99 5A 9B			sta adr.SCORE.PLAYER+1,y
 16102 83D5 B9 5B 9B			lda adr.SCORE.PLAYER+2,y
 16103 83D8 69 00			adc #$00
 16104 83DA 99 5B 9B			sta adr.SCORE.PLAYER+2,y
 16105 83DD B9 5C 9B			lda adr.SCORE.PLAYER+3,y
 16106 83E0 69 00			adc #$00
 16107 83E2 99 5C 9B			sta adr.SCORE.PLAYER+3,y
 16108
 16109 				; optimize OK (service.pas), line = 2693
 16110
 16111 83E5 A9 00			lda #$00
 16112 83E7 8D 57 9B			sta REMAIN_BLK
 16113
 16114 				; optimize OK (service.pas), line = 2695
 16115
 16116 83EA AD 18 9B			lda VAUS.X
 16117 83ED 8D 91 A5			sta Z
 16118 83F0 A9 00			lda #$00
 16119 83F2 8D 92 A5			sta Z+1
 16120
 16121 				; optimize FAIL ('WAIT_VBL', service.pas), line = 2697
 16122
 16123 83F5 20 0D 2F			jsr WAIT_VBL
 16124
 16125 				; optimize FAIL ('REMOVE_VAUS', service.pas), line = 2698
 16126
 16127 83F8 20 6C 3D			jsr REMOVE_VAUS
 16128
 16129 				; optimize FAIL ('PLACE_VAUS', service.pas), line = 2699
 16130
 16131 83FB 20 57 3E			jsr PLACE_VAUS
 16132
 16133 				; optimize OK (service.pas), line = 2701
 16134
 16135 83FE AD 91 A5			lda Z
 16136 8401 8D 8D A5			sta X
 16137 8404 AD 92 A5			lda Z+1
 16138 8407 8D 8E A5			sta X+1
 16139 840A AD 91 A5			lda Z
 16140 840D 18 69 2C			add #$2C
 16141 8410 8D 23 84			sta @FORTMP_2FA8_0
 16142 8413 AD 92 A5			lda Z+1
 16143 8416 69 00			adc #$00
 16144 8418 8D 1C 84			sta @FORTMP_2FA8_1
 16145
 16146 841B			l_2FAB
 16147 				; --- ForToDoCondition
 16148 841B A9 00			lda @FORTMP_2FA8_1::#$00
 16149 841D CD 8E A5			cmp X+1
 16150 8420 D0 05			bne @+
 16151 8422 A9 00			lda @FORTMP_2FA8_0::#$00
 16152 8424 CD 8D A5			cmp X
 16153 				@
 16154 8427 B0 03 4C 18 85		jcc l_2FB7
 16155
 16156 				; optimize FAIL ('WAIT_VBL', service.pas), line = 2703
 16157
 16158 842C 20 0D 2F			jsr WAIT_VBL
 16159
 16160 				; optimize OK (service.pas), line = 2705
 16161
 16162 842F AD 18 9B			lda VAUS.X
 16163 8432 8D 1A 9B			sta VAUS.OLDX
 16164 8435 A9 00			lda #$00
 16165 8437 8D 1B 9B			sta VAUS.OLDX+1
 16166
 16167 				; optimize OK (service.pas), line = 2706
 16168
 16169 843A AD 8D A5			lda X
 16170 843D 8D 18 9B			sta VAUS.X
 16171
 16172 				; optimize FAIL ('REMOVE_VAUS', service.pas), line = 2707
 16173
 16174 8440 20 6C 3D			jsr REMOVE_VAUS
 16175
 16176 				; optimize FAIL ('CHECK_FLUX', service.pas), line = 2708
 16177
 16178 8443 20 FA 82			jsr CHECK_FLUX
 16179
 16180 				; optimize FAIL ('PLACE_VAUS', service.pas), line = 2709
 16181
 16182 8446 20 57 3E			jsr PLACE_VAUS
 16183
 16184 				; optimize OK (service.pas), line = 2711
 16185
 16186 8449 AD 19 9B			lda VAUS.Y
 16187 844C 8D 8F A5			sta Y
 16188 844F A9 00			lda #$00
 16189 8451 8D 90 A5			sta Y+1
 16190 8454 AD 19 9B			lda VAUS.Y
 16191 8457 18 6D 21 9B			add VAUS.HEIGHT
 16192 845B 8D 6D 84			sta @FORTMP_2FD6_0
 16193 845E A9 00			lda #$00
 16194 8460 69 00			adc #$00
 16195 8462 8D 66 84			sta @FORTMP_2FD6_1
 16196
 16197 8465			l_2FD9
 16198 				; --- ForToDoCondition
 16199 8465 A9 00			lda @FORTMP_2FD6_1::#$00
 16200 8467 CD 90 A5			cmp Y+1
 16201 846A D0 05			bne @+
 16202 846C A9 00			lda @FORTMP_2FD6_0::#$00
 16203 846E CD 8F A5			cmp Y
 16204 				@
 16205 8471 B0 03 4C 08 85		jcc l_2FE5
 16206
 16207 				; optimize OK (service.pas), line = 2713
 16208
 16209 8476 AD 90 A5			lda Y+1
 16210 8479 85 B1			sta :STACKORIGIN+STACKWIDTH+11
 16211 847B AD 8F A5			lda Y
 16212 847E 0A				asl @
 16213 847F 26 B1			rol :STACKORIGIN+STACKWIDTH+11
 16214 8481 18 6D DA 98			add ROW
 16215 8485 85 84			sta :bp2
 16216 8487 AD DB 98			lda ROW+1
 16217 848A 65 B1			adc :STACKORIGIN+STACKWIDTH+11
 16218 848C 85 85			sta :bp2+1
 16219 848E A0 00			ldy #$00
 16220 8490 A9 E1			lda #$E1
 16221 8492 18 71 84			add (:bp2),y
 16222 8495 8D AE A3			sta BLITROW.DST
 16223 8498 C8				iny
 16224 8499 A9 00			lda #$00
 16225 849B 71 84			adc (:bp2),y
 16226 849D 8D AF A3			sta BLITROW.DST+1
 16227 84A0 A9 00			lda #$00
 16228 84A2 69 00			adc #$00
 16229 84A4 8D B0 A3			sta BLITROW.DST+2
 16230 84A7 A9 00			lda #$00
 16231 84A9 69 00			adc #$00
 16232 84AB 8D B1 A3			sta BLITROW.DST+3
 16233 84AE AD A4 9A			lda PLAYSCREEN.OFS
 16234 84B1 18 69 E1			add #$E1
 16235 84B4 85 A1			sta :STACKORIGIN+11
 16236 84B6 AD A5 9A			lda PLAYSCREEN.OFS+1
 16237 84B9 69 00			adc #$00
 16238 84BB 85 B1			sta :STACKORIGIN+STACKWIDTH+11
 16239 84BD AD A6 9A			lda PLAYSCREEN.OFS+2
 16240 84C0 69 00			adc #$00
 16241 84C2 85 C1			sta :STACKORIGIN+STACKWIDTH*2+11
 16242 84C4 AD A7 9A			lda PLAYSCREEN.OFS+3
 16243 84C7 69 00			adc #$00
 16244 84C9 85 D1			sta :STACKORIGIN+STACKWIDTH*3+11
 16245 84CB A0 00			ldy #$00
 16246 84CD A5 A1			lda :STACKORIGIN+11
 16247 84CF 18 71 84			add (:bp2),y
 16248 84D2 8D AA A3			sta BLITROW.SRC
 16249 84D5 C8				iny
 16250 84D6 A5 B1			lda :STACKORIGIN+STACKWIDTH+11
 16251 84D8 71 84			adc (:bp2),y
 16252 84DA 8D AB A3			sta BLITROW.SRC+1
 16253 84DD A5 C1			lda :STACKORIGIN+STACKWIDTH*2+11
 16254 84DF 69 00			adc #$00
 16255 84E1 8D AC A3			sta BLITROW.SRC+2
 16256 84E4 A5 D1			lda :STACKORIGIN+STACKWIDTH*3+11
 16257 84E6 69 00			adc #$00
 16258 84E8 8D AD A3			sta BLITROW.SRC+3
 16259 84EB A9 28			lda #$28
 16260 84ED 8D B2 A3			sta BLITROW.SIZE
 16261 84F0 A9 00			lda #$00
 16262 84F2 8D B3 A3			sta BLITROW.SIZE+1
 16263 84F5 20 F4 25			jsr BLITROW
 16264
 16265 				; --- ForToDoEpilog
 16266 84F8 EE 8F A5			inc Y
 16267 84FB F0 03 4C 65 84		jne l_2FD9
 16268 8500 EE 90 A5			inc Y+1
 16269 8503 F0 03 4C 65 84		jne l_2FD9
 16270 8508			l_2FE5
 16271
 16272 				; --- ForToDoEpilog
 16273 8508 EE 8D A5			inc X
 16274 850B F0 03 4C 1B 84		jne l_2FAB
 16275 8510 EE 8E A5			inc X+1
 16276 8513 F0 03 4C 1B 84		jne l_2FAB
 16277 8518			l_2FB7
 16278
 16279 				; ------------------------------------------------------------
 16280
 16281 = A58D			X	= DATAORIGIN+$0BB6
 16282 = A58F			Y	= DATAORIGIN+$0BB8
 16283 = A591			Z	= DATAORIGIN+$0BBA
 16284
 16285 = A58D			@VarData	= X
 16286 = 0006			@VarDataSize	= 6
 16287
 16288 8518			@exit
 16289 					.ifdef @new
 16290 					lda <@VarData
 16291 					sta :ztmp
 16292 					lda >@VarData
 16293 					ldy #@VarDataSize-1
 16294 					jmp @FreeMem
 16295 					els
 16296 8518 60				rts						; ret
 16297 					eif
 16298 				.endl
 16299
 16300 8519			.local	CHECK_BONUS_TYPE				; PROCEDURE
 16301
 16302 				; optimize OK (service.pas), line = 2723
 16303
 16304 8519 AD 24 9B			lda VAUS.LETTER
 16305 851C 10 03 4C CF 85		jmi l_301F
 16306 8521 D0 03 4C CF 85		jeq l_301F
 16307
 16308 				; optimize OK (service.pas), line = 2725
 16309
 16310 8526 A0 00			ldy #$00
 16311 8528 AD 24 9B			lda VAUS.LETTER
 16312 852B 10 01			spl
 16313 852D 88				dey
 16314 852E 38 E9 01			sub #$01
 16315 8531 8D 8C 9B			sta LETT.LAST
 16316 8534 98				tya
 16317 8535 E9 00			sbc #$00
 16318 8537 8D 8D 9B			sta LETT.LAST+1
 16319
 16320 				; optimize OK (service.pas), line = 2726
 16321
 16322 853A AC 9B A5 84 84 AC + 	mwy B2 :bp2
 16323 8544 A0 17			ldy #B2.INPLAY-DATAORIGIN
 16324 8546 B1 84			lda (:bp2),y
 16325 8548 F0 0F			jeq l_3036
 16326 854A AD 9B A5			lda B2
 16327 854D 8D 1B A4			sta REMOVE_BALL.BALL
 16328 8550 AD 9C A5			lda B2+1
 16329 8553 8D 1C A4			sta REMOVE_BALL.BALL+1
 16330 8556 20 49 2E			jsr REMOVE_BALL
 16331 8559			l_3036
 16332
 16333 				; optimize OK (service.pas), line = 2727
 16334
 16335 8559 AC 9F A5 84 84 AC + 	mwy B3 :bp2
 16336 8563 A0 17			ldy #B3.INPLAY-DATAORIGIN
 16337 8565 B1 84			lda (:bp2),y
 16338 8567 F0 0F			jeq l_3048
 16339 8569 AD 9F A5			lda B3
 16340 856C 8D 1B A4			sta REMOVE_BALL.BALL
 16341 856F AD A0 A5			lda B3+1
 16342 8572 8D 1C A4			sta REMOVE_BALL.BALL+1
 16343 8575 20 49 2E			jsr REMOVE_BALL
 16344 8578			l_3048
 16345
 16346 				; optimize OK (service.pas), line = 2728
 16347
 16348 8578 AC 9B A5 84 84 AC + 	mwy B2 :bp2
 16349 8582 A0 17			ldy #B2.INPLAY-DATAORIGIN
 16350 8584 A9 00			lda #$00
 16351 8586 91 84			sta (:bp2),y
 16352
 16353 				; optimize OK (service.pas), line = 2729
 16354
 16355 8588 AC 9F A5 84 84 AC + 	mwy B3 :bp2
 16356 8592 A0 17			ldy #B3.INPLAY-DATAORIGIN
 16357 8594 91 84			sta (:bp2),y
 16358
 16359 				; optimize OK (service.pas), line = 2730
 16360
 16361 8596 8D 94 9B			sta SCRFLUX
 16362
 16363 				; optimize FAIL ('REMOVE_FLUX', service.pas), line = 2731
 16364
 16365 8599 20 3C 82			jsr REMOVE_FLUX
 16366
 16367 				; optimize OK (service.pas), line = 2733
 16368
 16369 859C AD 24 9B			lda VAUS.LETTER
 16370 859F C9 06			cmp #$06
 16371 85A1 F0 2C			jeq l_306D
 16372
 16373 				; optimize OK (service.pas), line = 2735
 16374
 16375 85A3 AC 97 A5 84 84 AC + 	mwy B1 :bp2
 16376 85AD A0 18			ldy #B1.LAUNCH-DATAORIGIN
 16377 85AF A9 00			lda #$00
 16378 85B1 91 84			sta (:bp2),y
 16379
 16380 				; optimize OK (service.pas), line = 2736
 16381
 16382 85B3 AC 9B A5 84 84 AC + 	mwy B2 :bp2
 16383 85BD A0 18			ldy #B2.LAUNCH-DATAORIGIN
 16384 85BF 91 84			sta (:bp2),y
 16385
 16386 				; optimize OK (service.pas), line = 2737
 16387
 16388 85C1 AC 9F A5 84 84 AC + 	mwy B3 :bp2
 16389 85CB A0 18			ldy #B3.LAUNCH-DATAORIGIN
 16390 85CD 91 84			sta (:bp2),y
 16391 85CF			l_306D
 16392 85CF			l_301F
 16393
 16394 				; optimize OK (service.pas), line = 2741
 16395
 16396 85CF AD 24 9B			lda VAUS.LETTER
 16397 85D2 8D A5 A5			sta @CASETMP_0009
 16398 85D5 C9 01			cmp #$01
 16399 85D7 D0 4D			jne l_3089
 16400 				@
 16401
 16402 				; optimize OK (service.pas), line = 2744
 16403
 16404 85D9 AD 90 9B			lda FIRE.SHOT
 16405 85DC F0 03			jeq l_3095
 16406 85DE 20 63 7F			jsr REMOVE_FIRE
 16407 85E1			l_3095
 16408
 16409 				; optimize OK (service.pas), line = 2745
 16410
 16411 85E1 AD C0 9A 8D A8 9A + 	:8 mva adr.LASERS+# adr.PLAYVAUS+#
 16412
 16413 				; optimize FAIL ('MODIFY_VAUS', service.pas), line = 2746
 16414
 16415 8611 20 A2 3C			jsr MODIFY_VAUS
 16416
 16417 				; optimize OK (service.pas), line = 2747
 16418
 16419 8614 A9 00			lda #$00
 16420 8616 8D 24 9B			sta VAUS.LETTER
 16421
 16422 				; optimize OK (service.pas), line = 2748
 16423
 16424 8619 A9 01			lda #$01
 16425 861B 8D 91 9B			sta FIRE.AVL
 16426
 16427 				; optimize OK (service.pas), line = 2749
 16428
 16429 861E A9 00			lda #$00
 16430 8620 8D 90 9B			sta FIRE.SHOT
 16431 8623 4C 54 88			jmp a_0009
 16432 8626			l_3089
 16433 8626 C9 02			cmp #$02
 16434 8628 D0 46			jne l_30AF
 16435
 16436 				; optimize OK (service.pas), line = 2753
 16437
 16438 862A AD 90 9B			lda FIRE.SHOT
 16439 862D F0 03			jeq l_30BB
 16440 862F 20 63 7F			jsr REMOVE_FIRE
 16441 8632			l_30BB
 16442
 16443 				; optimize OK (service.pas), line = 2754
 16444
 16445 8632 AD B8 9A 8D A8 9A + 	:8 mva adr.ENLARGED+# adr.PLAYVAUS+#
 16446
 16447 				; optimize FAIL ('MODIFY_VAUS', service.pas), line = 2755
 16448
 16449 8662 20 A2 3C			jsr MODIFY_VAUS
 16450
 16451 				; optimize OK (service.pas), line = 2756
 16452
 16453 8665 A9 00			lda #$00
 16454 8667 8D 24 9B			sta VAUS.LETTER
 16455
 16456 				; optimize OK (service.pas), line = 2757
 16457
 16458 866A 8D 91 9B			sta FIRE.AVL
 16459 866D 4C 54 88			jmp a_0009
 16460 8670			l_30AF
 16461 8670 C9 03			cmp #$03
 16462 8672 D0 4B			jne l_30D1
 16463
 16464 				; optimize OK (service.pas), line = 2761
 16465
 16466 8674 AD 90 9B			lda FIRE.SHOT
 16467 8677 F0 03			jeq l_30DD
 16468 8679 20 63 7F			jsr REMOVE_FIRE
 16469 867C			l_30DD
 16470
 16471 				; optimize OK (service.pas), line = 2762
 16472
 16473 867C AD B0 9A 8D A8 9A + 	:8 mva adr.NORMAL+# adr.PLAYVAUS+#
 16474
 16475 				; optimize FAIL ('MODIFY_VAUS', service.pas), line = 2763
 16476
 16477 86AC 20 A2 3C			jsr MODIFY_VAUS
 16478
 16479 				; optimize OK (service.pas), line = 2764
 16480
 16481 86AF A9 00			lda #$00
 16482 86B1 8D 24 9B			sta VAUS.LETTER
 16483
 16484 				; optimize OK (service.pas), line = 2765
 16485
 16486 86B4 8D 91 9B			sta FIRE.AVL
 16487
 16488 				; optimize OK (service.pas), line = 2766
 16489
 16490 86B7 A9 01			lda #$01
 16491 86B9 8D 94 9B			sta SCRFLUX
 16492 86BC 4C 54 88			jmp a_0009
 16493 86BF			l_30D1
 16494 86BF C9 04			cmp #$04
 16495 86C1 D0 3E			jne l_30F7
 16496
 16497 				; optimize OK (service.pas), line = 2770
 16498
 16499 86C3 AD 90 9B			lda FIRE.SHOT
 16500 86C6 F0 03			jeq l_3103
 16501 86C8 20 63 7F			jsr REMOVE_FIRE
 16502 86CB			l_3103
 16503
 16504 				; optimize OK (service.pas), line = 2771
 16505
 16506 86CB AD B0 9A 8D A8 9A + 	:8 mva adr.NORMAL+# adr.PLAYVAUS+#
 16507
 16508 				; optimize FAIL ('MODIFY_VAUS', service.pas), line = 2772
 16509
 16510 86FB 20 A2 3C			jsr MODIFY_VAUS
 16511 				; optimize OK (service.pas), line = 2773
 16512 86FE 4C 98 87			jmp s_3140
 16513 8701			l_30F7
 16514 8701 C9 05			cmp #$05
 16515 8703 F0 03 4C 9B 87		jne l_3115
 16516
 16517 				; optimize OK (service.pas), line = 2777
 16518
 16519 8708 AD 90 9B			lda FIRE.SHOT
 16520 870B F0 03			jeq l_3121
 16521 870D 20 63 7F			jsr REMOVE_FIRE
 16522 8710			l_3121
 16523
 16524 				; optimize OK (service.pas), line = 2778
 16525
 16526 8710 AD B0 9A 8D A8 9A + 	:8 mva adr.NORMAL+# adr.PLAYVAUS+#
 16527
 16528 				; optimize FAIL ('MODIFY_VAUS', service.pas), line = 2779
 16529
 16530 8740 20 A2 3C			jsr MODIFY_VAUS
 16531
 16532 				; optimize OK (service.pas), line = 2780
 16533
 16534 8743 A9 00			lda #$00
 16535 8745 8D 24 9B			sta VAUS.LETTER
 16536
 16537 				; optimize OK (service.pas), line = 2781
 16538
 16539 8748 AC 97 A5 84 84 AC + 	mwy B1 :bp2
 16540 8752 A0 0C			ldy #B1.SPEED-DATAORIGIN
 16541 8754 B1 84			lda (:bp2),y
 16542 8756 38 E9 F4			sub #$F4
 16543 8759 8D CC A3			sta MAX.A
 16544 875C C8				iny
 16545 875D B1 84			lda (:bp2),y
 16546 875F E9 01			sbc #$01
 16547 8761 8D CD A3			sta MAX.A+1
 16548 8764 A9 F4			lda #$F4
 16549 8766 8D CE A3			sta MAX.B
 16550 8769 A9 01			lda #$01
 16551 876B 8D CF A3			sta MAX.B+1
 16552 876E 20 C3 26			jsr MAX
 16553 8771 AD D0 A3			lda MAX.RESULT
 16554 8774 8D A3 A5			sta X
 16555 8777 AD D1 A3			lda MAX.RESULT+1
 16556 877A 8D A4 A5			sta X+1
 16557
 16558 				; optimize OK (service.pas), line = 2782
 16559
 16560 877D AD 97 A5			lda B1
 16561 8780 8D 26 A4			sta SET_BALL_SPEED.BALL
 16562 8783 AD 98 A5			lda B1+1
 16563 8786 8D 27 A4			sta SET_BALL_SPEED.BALL+1
 16564 8789 AD A3 A5			lda X
 16565 878C 8D 2A A4			sta SET_BALL_SPEED.SPEED
 16566 878F AD A4 A5			lda X+1
 16567 8792 8D 2B A4			sta SET_BALL_SPEED.SPEED+1
 16568 8795 20 F3 2F			jsr SET_BALL_SPEED
 16569 8798			s_3140
 16570 				; optimize OK (service.pas), line = 2783
 16571 8798 4C DA 87			jmp s_315E
 16572 879B			l_3115
 16573 879B C9 06			cmp #$06
 16574 879D D0 3E			jne l_3147
 16575
 16576 				; optimize OK (service.pas), line = 2787
 16577
 16578 879F AD 90 9B			lda FIRE.SHOT
 16579 87A2 F0 03			jeq l_3153
 16580 87A4 20 63 7F			jsr REMOVE_FIRE
 16581 87A7			l_3153
 16582
 16583 				; optimize OK (service.pas), line = 2788
 16584
 16585 87A7 AD B0 9A 8D A8 9A + 	:8 mva adr.NORMAL+# adr.PLAYVAUS+#
 16586
 16587 				; optimize FAIL ('MODIFY_VAUS', service.pas), line = 2789
 16588
 16589 87D7 20 A2 3C			jsr MODIFY_VAUS
 16590 87DA			s_315E
 16591 				; optimize OK (service.pas), line = 2790
 16592 87DA 4C 4F 88			jmp s_318E
 16593 87DD			l_3147
 16594 87DD C9 07			cmp #$07
 16595 87DF D0 73			jne l_3165
 16596
 16597 				; optimize OK (service.pas), line = 2794
 16598
 16599 87E1 AD 90 9B			lda FIRE.SHOT
 16600 87E4 F0 03			jeq l_3171
 16601 87E6 20 63 7F			jsr REMOVE_FIRE
 16602 87E9			l_3171
 16603
 16604 				; optimize OK (service.pas), line = 2795
 16605
 16606 87E9 AD B0 9A 8D A8 9A + 	:8 mva adr.NORMAL+# adr.PLAYVAUS+#
 16607
 16608 				; optimize FAIL ('MODIFY_VAUS', service.pas), line = 2796
 16609
 16610 8819 20 A2 3C			jsr MODIFY_VAUS
 16611
 16612 				; optimize OK (service.pas), line = 2797
 16613
 16614 881C A9 00			lda #$00
 16615 881E 8D 24 9B			sta VAUS.LETTER
 16616
 16617 				; optimize OK (service.pas), line = 2798
 16618
 16619 8821 AC 74 9B			ldy CUR_PLAYER
 16620 8824 B9 68 9B			lda adr.SCORE.LIVES,y
 16621 8827 18 69 01			add #$01
 16622 882A 99 68 9B			sta adr.SCORE.LIVES,y
 16623
 16624 				; optimize OK (service.pas), line = 2799
 16625
 16626 882D 8D 6B A5			sta PLOT_LIVES.LIVES
 16627 8830 A9 00			lda #$00
 16628 8832 8D 6C A5			sta PLOT_LIVES.LIVES+1
 16629 8835 20 A8 7B			jsr PLOT_LIVES
 16630
 16631 				; optimize OK (service.pas), line = 2800
 16632
 16633 8838 A9 D0			lda #$D0
 16634 883A 8D 86 9A			sta BALL_BLOCK_SOUND.A
 16635 883D A9 07			lda #$07
 16636 883F 8D 87 9A			sta BALL_BLOCK_SOUND.A+1
 16637 8842 A9 0A			lda #$0A
 16638 8844 8D 88 9A			sta BALL_BLOCK_SOUND.B
 16639 8847 A9 00			lda #$00
 16640 8849 8D 89 9A			sta BALL_BLOCK_SOUND.B+1
 16641 884C 20 CA 24			jsr BALL_BLOCK_SOUND
 16642 884F			s_318E
 16643
 16644 				; optimize OK (service.pas), line = 2801
 16645
 16646 884F A9 00			lda #$00
 16647 8851 8D 91 9B			sta FIRE.AVL
 16648 8854			l_3165
 16649 8854			a_0009
 16650
 16651 				; ------------------------------------------------------------
 16652
 16653 = A597			B1	= DATAORIGIN+$0BC0
 16654 = 99D7			B1.X	= DATAORIGIN+$0000
 16655 = 99D9			B1.Y	= DATAORIGIN+$0002
 16656 = 99DB			B1.FINEX	= DATAORIGIN+$0004
 16657 = 99DD			B1.FINEY	= DATAORIGIN+$0006
 16658 = 99DF			B1.OLDX	= DATAORIGIN+$0008
 16659 = 99E1			B1.OLDY	= DATAORIGIN+$000A
 16660 = 99E3			B1.SPEED	= DATAORIGIN+$000C
 16661 = 99E5			B1.FINESPEED	= DATAORIGIN+$000E
 16662 = 99E7			B1.SPEEDX	= DATAORIGIN+$0010
 16663 = 99E9			B1.SPEEDY	= DATAORIGIN+$0012
 16664 = 99EB			B1.SBD	= DATAORIGIN+$0014
 16665 = 99ED			B1.BRWHIT	= DATAORIGIN+$0016
 16666 = 99EE			B1.INPLAY	= DATAORIGIN+$0017
 16667 = 99EF			B1.LAUNCH	= DATAORIGIN+$0018
 16668 = 99F0			B1.ONVAUS	= DATAORIGIN+$0019
 16669 = 99F1			B1.STM	= DATAORIGIN+$001A
 16670 = A59B			B2	= DATAORIGIN+$0BC4
 16671 = 99D7			B2.X	= DATAORIGIN+$0000
 16672 = 99D9			B2.Y	= DATAORIGIN+$0002
 16673 = 99DB			B2.FINEX	= DATAORIGIN+$0004
 16674 = 99DD			B2.FINEY	= DATAORIGIN+$0006
 16675 = 99DF			B2.OLDX	= DATAORIGIN+$0008
 16676 = 99E1			B2.OLDY	= DATAORIGIN+$000A
 16677 = 99E3			B2.SPEED	= DATAORIGIN+$000C
 16678 = 99E5			B2.FINESPEED	= DATAORIGIN+$000E
 16679 = 99E7			B2.SPEEDX	= DATAORIGIN+$0010
 16680 = 99E9			B2.SPEEDY	= DATAORIGIN+$0012
 16681 = 99EB			B2.SBD	= DATAORIGIN+$0014
 16682 = 99ED			B2.BRWHIT	= DATAORIGIN+$0016
 16683 = 99EE			B2.INPLAY	= DATAORIGIN+$0017
 16684 = 99EF			B2.LAUNCH	= DATAORIGIN+$0018
 16685 = 99F0			B2.ONVAUS	= DATAORIGIN+$0019
 16686 = 99F1			B2.STM	= DATAORIGIN+$001A
 16687 = A59F			B3	= DATAORIGIN+$0BC8
 16688 = 99D7			B3.X	= DATAORIGIN+$0000
 16689 = 99D9			B3.Y	= DATAORIGIN+$0002
 16690 = 99DB			B3.FINEX	= DATAORIGIN+$0004
 16691 = 99DD			B3.FINEY	= DATAORIGIN+$0006
 16692 = 99DF			B3.OLDX	= DATAORIGIN+$0008
 16693 = 99E1			B3.OLDY	= DATAORIGIN+$000A
 16694 = 99E3			B3.SPEED	= DATAORIGIN+$000C
 16695 = 99E5			B3.FINESPEED	= DATAORIGIN+$000E
 16696 = 99E7			B3.SPEEDX	= DATAORIGIN+$0010
 16697 = 99E9			B3.SPEEDY	= DATAORIGIN+$0012
 16698 = 99EB			B3.SBD	= DATAORIGIN+$0014
 16699 = 99ED			B3.BRWHIT	= DATAORIGIN+$0016
 16700 = 99EE			B3.INPLAY	= DATAORIGIN+$0017
 16701 = 99EF			B3.LAUNCH	= DATAORIGIN+$0018
 16702 = 99F0			B3.ONVAUS	= DATAORIGIN+$0019
 16703 = 99F1			B3.STM	= DATAORIGIN+$001A
 16704 = A5A3			X	= DATAORIGIN+$0BCC
 16705 = A5A5			@CASETMP_0009	= DATAORIGIN+$0BCE
 16706
 16707 = A597			@VarData	= B1
 16708 = 0009			@VarDataSize	= 9
 16709
 16710 8854			@exit
 16711 					.ifdef @new
 16712 					lda <@VarData
 16713 					sta :ztmp
 16714 					lda >@VarData
 16715 					ldy #@VarDataSize-1
 16716 					jmp @FreeMem
 16717 					els
 16718 8854 60				rts						; ret
 16719 					eif
 16720 				.endl
 16721
 16722 8855			.local	DEVIATE_BALL					; PROCEDURE
 16723
 16724 				; --- RepeatUntilProlog
 16725 8855			l_319C
 16726
 16727 				; optimize OK (service.pas), line = 2814
 16728
 16729 8855 AD A6 A5			lda BALL
 16730 8858 8D 3E A4			sta GET_BALL_DIRECTION.BALL
 16731 885B AD A7 A5			lda BALL+1
 16732 885E 8D 3F A4			sta GET_BALL_DIRECTION.BALL+1
 16733 8861 20 8E 33			jsr GET_BALL_DIRECTION
 16734 8864 E8				inx
 16735 8865 AD 42 A4 95 96		mva GET_BALL_DIRECTION.RESULT :STACKORIGIN,x
 16736 886A AD 43 A4 95 A6		mva GET_BALL_DIRECTION.RESULT+1 :STACKORIGIN+STACKWIDTH,x
 16737 886F A9 1E			lda #$1E
 16738 8871 20 18 24			jsr SYSTEM.RANDOM.@010180000
 16739 8874 E8				inx
 16740 8875 AD 1C 9A 95 96		mva SYSTEM.RANDOM.@010180000.RESULT :STACKORIGIN,x
 16741 887A A9 00 95 A6			mva #$00 :STACKORIGIN+STACKWIDTH,x
 16742 887E 20 D3 10			jsr addAX_CX
 16743 8881 B5 95			lda :STACKORIGIN-1,x
 16744 8883 38 E9 0F			sub #$0F
 16745 8886 8D AA A5			sta TEMP
 16746 8889 B5 A5			lda :STACKORIGIN-1+STACKWIDTH,x
 16747 888B E9 00			sbc #$00
 16748 888D 8D AB A5			sta TEMP+1
 16749 8890 CA				dex
 16750 8891 CA				dex
 16751
 16752 				; optimize OK (service.pas), line = 2815
 16753
 16754 8892 A9 5A			lda #$5A
 16755 8894 85 8E			sta @SMALLINT.MOD.B
 16756 8896 A9 00			lda #$00
 16757 8898 85 8F			sta @SMALLINT.MOD.B+1
 16758 889A AD AA A5			lda TEMP
 16759 889D 85 86			sta @SMALLINT.MOD.A
 16760 889F AD AB A5			lda TEMP+1
 16761 88A2 85 87			sta @SMALLINT.MOD.A+1
 16762 88A4 20 6F 12			jsr @SMALLINT.MOD
 16763 88A7 A5 92			lda @SMALLINT.MOD.RESULT
 16764 88A9 C9 1F			cmp #$1F
 16765 88AB A5 93			lda @SMALLINT.MOD.RESULT+1
 16766 88AD E9 00			sbc #$00
 16767 88AF 50 02			svc
 16768 88B1 49 80			eor #$80
 16769 88B3 30 A0			jmi l_319C
 16770 88B5 A9 5A			lda #$5A
 16771 88B7 85 8E			sta @SMALLINT.MOD.B
 16772 88B9 A9 00			lda #$00
 16773 88BB 85 8F			sta @SMALLINT.MOD.B+1
 16774 88BD AD AA A5			lda TEMP
 16775 88C0 85 86			sta @SMALLINT.MOD.A
 16776 88C2 AD AB A5			lda TEMP+1
 16777 88C5 85 87			sta @SMALLINT.MOD.A+1
 16778 88C7 20 6F 12			jsr @SMALLINT.MOD
 16779 88CA A5 92			lda @SMALLINT.MOD.RESULT
 16780 88CC C9 3C			cmp #$3C
 16781 88CE A5 93			lda @SMALLINT.MOD.RESULT+1
 16782 88D0 E9 00			sbc #$00
 16783 88D2 50 02			svc
 16784 88D4 49 80			eor #$80
 16785 88D6 30 03 4C 55 88		jpl l_319C
 16786
 16787 				; optimize OK (service.pas), line = 2817
 16788
 16789 88DB AD A6 A5			lda BALL
 16790 88DE 8D 34 A4			sta SET_BALL_DIRECTION.BALL
 16791 88E1 AD A7 A5			lda BALL+1
 16792 88E4 8D 35 A4			sta SET_BALL_DIRECTION.BALL+1
 16793 88E7 AD AA A5			lda TEMP
 16794 88EA 8D 38 A4			sta SET_BALL_DIRECTION.ANGLE
 16795 88ED AD AB A5			lda TEMP+1
 16796 88F0 8D 39 A4			sta SET_BALL_DIRECTION.ANGLE+1
 16797 88F3 20 03 32			jsr SET_BALL_DIRECTION
 16798
 16799 				; optimize OK (service.pas), line = 2818
 16800
 16801 88F6 AC A6 A5 84 84 AC + 	mwy BALL :bp2
 16802 8900 A0 0C			ldy #BALL.SPEED-DATAORIGIN
 16803 8902 B1 84			lda (:bp2),y
 16804 8904 8D 2A A4			sta SET_BALL_SPEED.SPEED
 16805 8907 C8				iny
 16806 8908 B1 84			lda (:bp2),y
 16807 890A 8D 2B A4			sta SET_BALL_SPEED.SPEED+1
 16808 890D AD A6 A5			lda BALL
 16809 8910 8D 26 A4			sta SET_BALL_SPEED.BALL
 16810 8913 AD A7 A5			lda BALL+1
 16811 8916 8D 27 A4			sta SET_BALL_SPEED.BALL+1
 16812 8919 20 F3 2F			jsr SET_BALL_SPEED
 16813
 16814 				; optimize OK (service.pas), line = 2819
 16815
 16816 891C AC A6 A5 84 84 AC + 	mwy BALL :bp2
 16817 8926 A0 14			ldy #BALL.SBD-DATAORIGIN
 16818 8928 A9 00			lda #$00
 16819 892A 91 84			sta (:bp2),y
 16820 892C C8				iny
 16821 892D 91 84			sta (:bp2),y
 16822
 16823 				; ------------------------------------------------------------
 16824
 16825 = A5A6			BALL	= DATAORIGIN+$0BCF
 16826 = 99D7			BALL.X	= DATAORIGIN+$0000
 16827 = 99D9			BALL.Y	= DATAORIGIN+$0002
 16828 = 99DB			BALL.FINEX	= DATAORIGIN+$0004
 16829 = 99DD			BALL.FINEY	= DATAORIGIN+$0006
 16830 = 99DF			BALL.OLDX	= DATAORIGIN+$0008
 16831 = 99E1			BALL.OLDY	= DATAORIGIN+$000A
 16832 = 99E3			BALL.SPEED	= DATAORIGIN+$000C
 16833 = 99E5			BALL.FINESPEED	= DATAORIGIN+$000E
 16834 = 99E7			BALL.SPEEDX	= DATAORIGIN+$0010
 16835 = 99E9			BALL.SPEEDY	= DATAORIGIN+$0012
 16836 = 99EB			BALL.SBD	= DATAORIGIN+$0014
 16837 = 99ED			BALL.BRWHIT	= DATAORIGIN+$0016
 16838 = 99EE			BALL.INPLAY	= DATAORIGIN+$0017
 16839 = 99EF			BALL.LAUNCH	= DATAORIGIN+$0018
 16840 = 99F0			BALL.ONVAUS	= DATAORIGIN+$0019
 16841 = 99F1			BALL.STM	= DATAORIGIN+$001A
 16842 = A5AA			TEMP	= DATAORIGIN+$0BD3
 16843
 16844 = A5A6			@VarData	= BALL
 16845 = 0004			@VarDataSize	= 4
 16846
 16847 892F			@exit
 16848 					.ifdef @new
 16849 					lda <@VarData
 16850 					sta :ztmp
 16851 					lda >@VarData
 16852 					ldy #@VarDataSize-1
 16853 					jmp @FreeMem
 16854 					els
 16855 892F 60				rts						; ret
 16856 					eif
 16857 				.endl
 16858
 16859 8930			.local	BOUNCEBALL					; FUNCTION
 16860
 16861 8930 4C A5 8A			jmp l_31DC
 16862
 16863 8933			.local	CHECK_BALL					; PROCEDURE
 16864
 16865 				; optimize OK (service.pas), line = 2849
 16866
 16867 8933 AC 0B A6 84 84 AC + 	mwy BALL :bp2
 16868 893D A0 17			ldy #BALL.INPLAY-DATAORIGIN
 16869 893F B1 84			lda (:bp2),y
 16870 8941 F0 65			jeq l_31EB
 16871
 16872 				; optimize OK (service.pas), line = 2852
 16873
 16874 8943 A0 02			ldy #BALL.Y-DATAORIGIN
 16875 8945 B1 84			lda (:bp2),y
 16876 8947 C8				iny
 16877 8948 C9 16			cmp #$16
 16878 894A B1 84			lda (:bp2),y
 16879 894C E9 00			sbc #$00
 16880 894E 50 02			svc
 16881 8950 49 80			eor #$80
 16882 8952 30 20			jmi l_3208
 16883 8954 A0 02			ldy #BALL.Y-DATAORIGIN
 16884 8956 B1 84			lda (:bp2),y
 16885 8958 C8				iny
 16886 8959 C9 8E			cmp #$8E
 16887 895B B1 84			lda (:bp2),y
 16888 895D E9 00			sbc #$00
 16889 895F 50 02			svc
 16890 8961 49 80			eor #$80
 16891 8963 10 0F			jpl l_3208
 16892
 16893 				; optimize OK (service.pas), line = 2853
 16894
 16895 8965 AD 0B A6			lda BALL
 16896 8968 8D D5 A4			sta BALL_HIT_BLOCK.BALL
 16897 896B AD 0C A6			lda BALL+1
 16898 896E 8D D6 A4			sta BALL_HIT_BLOCK.BALL+1
 16899 8971 20 14 59			jsr BALL_HIT_BLOCK
 16900 8974			l_3208
 16901
 16902 				; optimize OK (service.pas), line = 2855
 16903
 16904 8974 AD 0B A6			lda BALL
 16905 8977 8D 22 A4			sta SET_BALL.BALL
 16906 897A AD 0C A6			lda BALL+1
 16907 897D 8D 23 A4			sta SET_BALL.BALL+1
 16908 8980 20 0E 2F			jsr SET_BALL
 16909
 16910 				; optimize FAIL ('BALL_SPEED', service.pas), line = 2856
 16911
 16912 8983 E8				inx
 16913 8984 AD 0B A6 95 96		mva BALL :STACKORIGIN,x
 16914 8989 AD 0C A6 95 A6		mva BALL+1 :STACKORIGIN+STACKWIDTH,x
 16915 898E 20 9B 35			jsr BALL_SPEED
 16916 8991 AC 0B A6 84 84 AC + 	mwy BALL :bp2
 16917 899B A0 0C			ldy #BALL.SPEED-DATAORIGIN
 16918 899D AD 65 A4			lda BALL_SPEED.RESULT
 16919 89A0 91 84			sta (:bp2),y
 16920 89A2 C8				iny
 16921 89A3 AD 66 A4			lda BALL_SPEED.RESULT+1
 16922 89A6 91 84			sta (:bp2),y
 16923 89A8			l_31EB
 16924
 16925 				; ------------------------------------------------------------
 16926
 16927 = A60B			BALL	= DATAORIGIN+$0C34
 16928 = 99D7			BALL.X	= DATAORIGIN+$0000
 16929 = 99D9			BALL.Y	= DATAORIGIN+$0002
 16930 = 99DB			BALL.FINEX	= DATAORIGIN+$0004
 16931 = 99DD			BALL.FINEY	= DATAORIGIN+$0006
 16932 = 99DF			BALL.OLDX	= DATAORIGIN+$0008
 16933 = 99E1			BALL.OLDY	= DATAORIGIN+$000A
 16934 = 99E3			BALL.SPEED	= DATAORIGIN+$000C
 16935 = 99E5			BALL.FINESPEED	= DATAORIGIN+$000E
 16936 = 99E7			BALL.SPEEDX	= DATAORIGIN+$0010
 16937 = 99E9			BALL.SPEEDY	= DATAORIGIN+$0012
 16938 = 99EB			BALL.SBD	= DATAORIGIN+$0014
 16939 = 99ED			BALL.BRWHIT	= DATAORIGIN+$0016
 16940 = 99EE			BALL.INPLAY	= DATAORIGIN+$0017
 16941 = 99EF			BALL.LAUNCH	= DATAORIGIN+$0018
 16942 = 99F0			BALL.ONVAUS	= DATAORIGIN+$0019
 16943 = 99F1			BALL.STM	= DATAORIGIN+$001A
 16944
 16945 = A60B			@VarData	= BALL
 16946 = 0002			@VarDataSize	= 2
 16947
 16948 89A8			@exit
 16949 					.ifdef @new
 16950 					lda <@VarData
 16951 					sta :ztmp
 16952 					lda >@VarData
 16953 					ldy #@VarDataSize-1
 16954 					jmp @FreeMem
 16955 					els
 16956 89A8 60				rts						; ret
 16957 					eif
 16958 				.endl
 16959
 16960 89A9			.local	TEST_BALL					; PROCEDURE
 16961
 16962 				; optimize OK (service.pas), line = 2864
 16963
 16964 89A9 AC 0F A6 84 84 AC + 	mwy BALL :bp2
 16965 89B3 A0 17			ldy #BALL.INPLAY-DATAORIGIN
 16966 89B5 B1 84			lda (:bp2),y
 16967 89B7 D0 03 4C A4 8A		jeq l_3229
 16968
 16969 				; optimize OK (service.pas), line = 2866
 16970
 16971 89BC A0 0E			ldy #BALL.FINESPEED-DATAORIGIN
 16972 89BE B1 84			lda (:bp2),y
 16973 89C0 18 69 01			add #$01
 16974 89C3 91 84			sta (:bp2),y
 16975 89C5 C8				iny
 16976 89C6 B1 84			lda (:bp2),y
 16977 89C8 69 00			adc #$00
 16978 89CA 91 84			sta (:bp2),y
 16979
 16980 				; optimize OK (service.pas), line = 2868
 16981
 16982 89CC A0 0E			ldy #BALL.FINESPEED-DATAORIGIN
 16983 89CE B1 84			lda (:bp2),y
 16984 89D0 85 9F			sta :STACKORIGIN+9
 16985 89D2 C8				iny
 16986 89D3 B1 84			lda (:bp2),y
 16987 89D5 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 16988 89D7 AD 7A 9B			lda LV
 16989 89DA 0A				asl @
 16990 89DB A8				tay
 16991 89DC B9 BF 10			lda adr.LEVEL,y
 16992 89DF 85 A0			sta :STACKORIGIN+10
 16993 89E1 B9 C0 10			lda adr.LEVEL+1,y
 16994 89E4 85 B0			sta :STACKORIGIN+STACKWIDTH+10
 16995 89E6 A0 00			ldy #$00
 16996 89E8 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 16997 89EA 10 01			spl
 16998 89EC 88				dey
 16999 89ED 85 AF			sta :STACKORIGIN+STACKWIDTH+9
 17000 89EF 84 BF			sty :STACKORIGIN+STACKWIDTH*2+9
 17001 89F1 84 CF			sty :STACKORIGIN+STACKWIDTH*3+9
 17002 89F3				.LOCAL
 17003 89F3 A5 CF			lda :STACKORIGIN+STACKWIDTH*3+9
 17004 89F5 38 E9 00			sub #$00
 17005 89F8 D0 1C			bne L4
 17006 89FA A5 BF			lda :STACKORIGIN+STACKWIDTH*2+9
 17007 89FC C9 00			cmp #$00
 17008 89FE D0 0A			bne L1
 17009 8A00 A5 AF			lda :STACKORIGIN+STACKWIDTH+9
 17010 8A02 C5 B0			cmp :STACKORIGIN+STACKWIDTH+10
 17011 8A04 D0 04			bne L1
 17012 8A06 A5 9F			lda :STACKORIGIN+9
 17013 8A08 C5 A0			cmp :STACKORIGIN+10
 17014 8A0A F0 10		L1	beq L5
 17015 8A0C B0 04			bcs L3
 17016 8A0E A9 FF			lda #$FF
 17017 8A10 D0 0A			bne L5
 17018 8A12 A9 01		L3	lda #$01
 17019 8A14 D0 06			bne L5
 17020 8A16 50 04		L4	bvc L5
 17021 8A18 49 FF			eor #$FF
 17022 8A1A 09 01			ora #$01
 17023 8A1C			L5
 17024 					.ENDL
 17025 8A1C 30 48			jmi l_323F
 17026 8A1E F0 46			jeq l_323F
 17027
 17028 				; optimize OK (service.pas), line = 2870
 17029
 17030 8A20 A0 0E			ldy #BALL.FINESPEED-DATAORIGIN
 17031 8A22 A9 00			lda #$00
 17032 8A24 91 84			sta (:bp2),y
 17033 8A26 C8				iny
 17034 8A27 91 84			sta (:bp2),y
 17035
 17036 				; optimize OK (service.pas), line = 2873
 17037
 17038 8A29 A0 0C			ldy #BALL.SPEED-DATAORIGIN
 17039 8A2B B1 84			lda (:bp2),y
 17040 8A2D C8				iny
 17041 8A2E C9 D0			cmp #$D0
 17042 8A30 B1 84			lda (:bp2),y
 17043 8A32 E9 07			sbc #$07
 17044 8A34 50 02			svc
 17045 8A36 49 80			eor #$80
 17046 8A38 10 2C			jpl l_3255
 17047
 17048 				; optimize OK (service.pas), line = 2875
 17049
 17050 8A3A A0 0C			ldy #BALL.SPEED-DATAORIGIN
 17051 8A3C B1 84			lda (:bp2),y
 17052 8A3E 18 69 0A			add #$0A
 17053 8A41 91 84			sta (:bp2),y
 17054 8A43 C8				iny
 17055 8A44 B1 84			lda (:bp2),y
 17056 8A46 69 00			adc #$00
 17057 8A48 91 84			sta (:bp2),y
 17058
 17059 				; optimize OK (service.pas), line = 2876
 17060
 17061 8A4A A0 0C			ldy #BALL.SPEED-DATAORIGIN
 17062 8A4C B1 84			lda (:bp2),y
 17063 8A4E 8D 2A A4			sta SET_BALL_SPEED.SPEED
 17064 8A51 C8				iny
 17065 8A52 B1 84			lda (:bp2),y
 17066 8A54 8D 2B A4			sta SET_BALL_SPEED.SPEED+1
 17067 8A57 AD 0F A6			lda BALL
 17068 8A5A 8D 26 A4			sta SET_BALL_SPEED.BALL
 17069 8A5D AD 10 A6			lda BALL+1
 17070 8A60 8D 27 A4			sta SET_BALL_SPEED.BALL+1
 17071 8A63 20 F3 2F			jsr SET_BALL_SPEED
 17072 8A66			l_3255
 17073 8A66			l_323F
 17074
 17075 				; optimize OK (service.pas), line = 2880
 17076
 17077 8A66 AC 0F A6 84 84 AC + 	mwy BALL :bp2
 17078 8A70 A0 14			ldy #BALL.SBD-DATAORIGIN
 17079 8A72 B1 84			lda (:bp2),y
 17080 8A74 18 69 01			add #$01
 17081 8A77 91 84			sta (:bp2),y
 17082 8A79 C8				iny
 17083 8A7A B1 84			lda (:bp2),y
 17084 8A7C 69 00			adc #$00
 17085 8A7E 91 84			sta (:bp2),y
 17086
 17087 				; optimize OK (service.pas), line = 2884
 17088
 17089 8A80 A0 15			ldy #BALL.SBD-DATAORIGIN+$01
 17090 8A82 B1 84			lda (:bp2),y
 17091 8A84 C9 02			cmp #$02
 17092 8A86 D0 05			bne @+
 17093 8A88 88				dey
 17094 8A89 B1 84			lda (:bp2),y
 17095 8A8B C9 58			cmp #$58
 17096 				@
 17097 8A8D 90 15			jcc l_327D
 17098 				@
 17099 8A8F A0 00			ldy #$00
 17100 8A91 B1 84			lda (:bp2),y
 17101 8A93 10 0F			jpl l_327D
 17102 				@
 17103
 17104 				; optimize OK (service.pas), line = 2885
 17105
 17106 8A95 AD 0F A6			lda BALL
 17107 8A98 8D A6 A5			sta DEVIATE_BALL.BALL
 17108 8A9B AD 10 A6			lda BALL+1
 17109 8A9E 8D A7 A5			sta DEVIATE_BALL.BALL+1
 17110 8AA1 20 55 88			jsr DEVIATE_BALL
 17111 8AA4			l_327D
 17112 8AA4			l_3229
 17113
 17114 				; ------------------------------------------------------------
 17115
 17116 = A60F			BALL	= DATAORIGIN+$0C38
 17117 = 99D7			BALL.X	= DATAORIGIN+$0000
 17118 = 99D9			BALL.Y	= DATAORIGIN+$0002
 17119 = 99DB			BALL.FINEX	= DATAORIGIN+$0004
 17120 = 99DD			BALL.FINEY	= DATAORIGIN+$0006
 17121 = 99DF			BALL.OLDX	= DATAORIGIN+$0008
 17122 = 99E1			BALL.OLDY	= DATAORIGIN+$000A
 17123 = 99E3			BALL.SPEED	= DATAORIGIN+$000C
 17124 = 99E5			BALL.FINESPEED	= DATAORIGIN+$000E
 17125 = 99E7			BALL.SPEEDX	= DATAORIGIN+$0010
 17126 = 99E9			BALL.SPEEDY	= DATAORIGIN+$0012
 17127 = 99EB			BALL.SBD	= DATAORIGIN+$0014
 17128 = 99ED			BALL.BRWHIT	= DATAORIGIN+$0016
 17129 = 99EE			BALL.INPLAY	= DATAORIGIN+$0017
 17130 = 99EF			BALL.LAUNCH	= DATAORIGIN+$0018
 17131 = 99F0			BALL.ONVAUS	= DATAORIGIN+$0019
 17132 = 99F1			BALL.STM	= DATAORIGIN+$001A
 17133
 17134 = A60F			@VarData	= BALL
 17135 = 0002			@VarDataSize	= 2
 17136
 17137 8AA4			@exit
 17138 					.ifdef @new
 17139 					lda <@VarData
 17140 					sta :ztmp
 17141 					lda >@VarData
 17142 					ldy #@VarDataSize-1
 17143 					jmp @FreeMem
 17144 					els
 17145 8AA4 60				rts						; ret
 17146 					eif
 17147 				.endl
 17148 8AA5			l_31DC
 17149
 17150 				; optimize OK (service.pas), line = 2893
 17151
 17152 8AA5 A9 00			lda #$00
 17153 8AA7 8D 95 9B			sta SCRFLUXCNT
 17154
 17155 				; optimize OK (service.pas), line = 2894
 17156
 17157 8AAA 8D 94 9B			sta SCRFLUX
 17158
 17159 				; optimize OK (service.pas), line = 2896
 17160
 17161 8AAD A9 01			lda #$01
 17162 8AAF 8D 93 9B			sta BALLS_IN_PLAY
 17163
 17164 				; optimize OK (service.pas), line = 2898
 17165
 17166 8AB2 A9 00			lda #$00
 17167 8AB4 8D 91 9B			sta FIRE.AVL
 17168
 17169 				; optimize OK (service.pas), line = 2899
 17170
 17171 8AB7 AD B0 9A 8D A8 9A + 	:8 mva adr.NORMAL+# adr.PLAYVAUS+#
 17172
 17173 				; optimize OK (service.pas), line = 2901
 17174
 17175 8AE7 A9 FF			lda #$FF
 17176 8AE9 8D 8C 9B			sta LETT.LAST
 17177 8AEC 8D 8D 9B			sta LETT.LAST+1
 17178
 17179 				; optimize OK (service.pas), line = 2902
 17180
 17181 8AEF A9 00			lda #$00
 17182 8AF1 8D 83 9B			sta LETT.ACTIVE
 17183
 17184 				; optimize OK (service.pas), line = 2905
 17185
 17186 8AF4 AD B4 98			lda PATTERN
 17187 8AF7 8D 17 A5			sta FILL_PICTURE_WITH_PATTERN.PATT
 17188 8AFA AD B5 98			lda PATTERN+1
 17189 8AFD 8D 18 A5			sta FILL_PICTURE_WITH_PATTERN.PATT+1
 17190 8B00 20 10 6D			jsr FILL_PICTURE_WITH_PATTERN
 17191
 17192 				; optimize FAIL ('SHOWBTMPICTURE', service.pas), line = 2908
 17193
 17194 8B03 E8				inx
 17195 8B04 AD 94 98 95 96		mva PLAYSCREEN :STACKORIGIN,x
 17196 8B09 AD 95 98 95 A6		mva PLAYSCREEN+1 :STACKORIGIN+STACKWIDTH,x
 17197 8B0E 20 1B 2D			jsr SHOWBTMPICTURE
 17198
 17199 				; optimize OK (service.pas), line = 2912
 17200
 17201 8B11 AC 74 9B			ldy CUR_PLAYER
 17202 8B14 B9 68 9B			lda adr.SCORE.LIVES,y
 17203 8B17 8D 6B A5			sta PLOT_LIVES.LIVES
 17204 8B1A A9 00			lda #$00
 17205 8B1C 8D 6C A5			sta PLOT_LIVES.LIVES+1
 17206 8B1F 20 A8 7B			jsr PLOT_LIVES
 17207
 17208 				; optimize OK (service.pas), line = 2915
 17209
 17210 8B22 AD 94 98			lda PLAYSCREEN
 17211 8B25 8D 10 A4			sta SETPALETTE.BTM
 17212 8B28 AD 95 98			lda PLAYSCREEN+1
 17213 8B2B 8D 11 A4			sta SETPALETTE.BTM+1
 17214 8B2E 20 7B 2D			jsr SETPALETTE
 17215
 17216 				; optimize OK (service.pas), line = 2918
 17217
 17218 8B31 AD 5D 9B			lda adr.SCORE.PLAYER+$04
 17219 8B34 8D 62 A5			sta WRITE_SCORE.SC
 17220 8B37 AD 5E 9B			lda adr.SCORE.PLAYER+1+$04
 17221 8B3A 8D 63 A5			sta WRITE_SCORE.SC+1
 17222 8B3D AD 5F 9B			lda adr.SCORE.PLAYER+2+$04
 17223 8B40 8D 64 A5			sta WRITE_SCORE.SC+2
 17224 8B43 AD 60 9B			lda adr.SCORE.PLAYER+3+$04
 17225 8B46 8D 65 A5			sta WRITE_SCORE.SC+3
 17226 8B49 A9 FD			lda #$FD
 17227 8B4B 8D 5E A5			sta WRITE_SCORE.PX
 17228 8B4E A9 00			lda #$00
 17229 8B50 8D 5F A5			sta WRITE_SCORE.PX+1
 17230 8B53 A9 3C			lda #$3C
 17231 8B55 8D 60 A5			sta WRITE_SCORE.PY
 17232 8B58 A9 00			lda #$00
 17233 8B5A 8D 61 A5			sta WRITE_SCORE.PY+1
 17234 8B5D 20 4A 78			jsr WRITE_SCORE
 17235
 17236 				; optimize OK (service.pas), line = 2919
 17237
 17238 8B60 AD 61 9B			lda adr.SCORE.PLAYER+$08
 17239 8B63 8D 62 A5			sta WRITE_SCORE.SC
 17240 8B66 AD 62 9B			lda adr.SCORE.PLAYER+1+$08
 17241 8B69 8D 63 A5			sta WRITE_SCORE.SC+1
 17242 8B6C AD 63 9B			lda adr.SCORE.PLAYER+2+$08
 17243 8B6F 8D 64 A5			sta WRITE_SCORE.SC+2
 17244 8B72 AD 64 9B			lda adr.SCORE.PLAYER+3+$08
 17245 8B75 8D 65 A5			sta WRITE_SCORE.SC+3
 17246 8B78 A9 FD			lda #$FD
 17247 8B7A 8D 5E A5			sta WRITE_SCORE.PX
 17248 8B7D A9 00			lda #$00
 17249 8B7F 8D 5F A5			sta WRITE_SCORE.PX+1
 17250 8B82 A9 5D			lda #$5D
 17251 8B84 8D 60 A5			sta WRITE_SCORE.PY
 17252 8B87 A9 00			lda #$00
 17253 8B89 8D 61 A5			sta WRITE_SCORE.PY+1
 17254 8B8C 20 4A 78			jsr WRITE_SCORE
 17255
 17256 				; optimize OK (service.pas), line = 2920
 17257
 17258 8B8F A9 FD			lda #$FD
 17259 8B91 8D 5E A5			sta WRITE_SCORE.PX
 17260 8B94 A9 00			lda #$00
 17261 8B96 8D 5F A5			sta WRITE_SCORE.PX+1
 17262 8B99 A9 80			lda #$80
 17263 8B9B 8D 60 A5			sta WRITE_SCORE.PY
 17264 8B9E A9 00			lda #$00
 17265 8BA0 8D 61 A5			sta WRITE_SCORE.PY+1
 17266 8BA3 AD 6B 9B			lda SCORE.HISCORE
 17267 8BA6 8D 62 A5			sta WRITE_SCORE.SC
 17268 8BA9 AD 6C 9B			lda SCORE.HISCORE+1
 17269 8BAC 8D 63 A5			sta WRITE_SCORE.SC+1
 17270 8BAF AD 6D 9B			lda SCORE.HISCORE+2
 17271 8BB2 8D 64 A5			sta WRITE_SCORE.SC+2
 17272 8BB5 AD 6E 9B			lda SCORE.HISCORE+3
 17273 8BB8 8D 65 A5			sta WRITE_SCORE.SC+3
 17274 8BBB 20 4A 78			jsr WRITE_SCORE
 17275
 17276 				; optimize FAIL ('PUT_WALL', service.pas), line = 2923
 17277
 17278 8BBE 20 0B 4C			jsr PUT_WALL
 17279
 17280 				; optimize FAIL ('MOUSERESET', service.pas), line = 2927
 17281
 17282 8BC1 20 CB 24			jsr MOUSERESET
 17283
 17284 				; optimize OK (service.pas), line = 2930
 17285
 17286 8BC4 A9 01			lda #$01
 17287 8BC6 8D D1 A5			sta BALL0.INPLAY
 17288
 17289 				; optimize OK (service.pas), line = 2931
 17290
 17291 8BC9 8D D2 A5			sta BALL0.LAUNCH
 17292
 17293 				; optimize OK (service.pas), line = 2934
 17294
 17295 8BCC A9 6F			lda #$6F
 17296 8BCE 8D BA A5			sta BALL0.X
 17297 8BD1 A9 00			lda #$00
 17298 8BD3 8D BB A5			sta BALL0.X+1
 17299
 17300 				; optimize OK (service.pas), line = 2935
 17301
 17302 8BD6 A9 B5			lda #$B5
 17303 8BD8 8D BC A5			sta BALL0.Y
 17304 8BDB A9 00			lda #$00
 17305 8BDD 8D BD A5			sta BALL0.Y+1
 17306
 17307 				; optimize OK (service.pas), line = 2938
 17308
 17309 8BE0 A9 FF			lda #$FF
 17310 8BE2 8D C2 A5			sta BALL0.OLDX
 17311 8BE5 8D C3 A5			sta BALL0.OLDX+1
 17312
 17313 				; optimize OK (service.pas), line = 2939
 17314
 17315 8BE8 8D C4 A5			sta BALL0.OLDY
 17316 8BEB 8D C5 A5			sta BALL0.OLDY+1
 17317
 17318 				; optimize OK (service.pas), line = 2942
 17319
 17320 8BEE A9 00			lda #$00
 17321 8BF0 8D CE A5			sta BALL0.SBD
 17322 8BF3 8D CF A5			sta BALL0.SBD+1
 17323
 17324 				; optimize OK (service.pas), line = 2946
 17325
 17326 8BF6 A9 10			lda #$10
 17327 8BF8 8D D3 A5			sta BALL0.ONVAUS
 17328
 17329 				; optimize OK (service.pas), line = 2951
 17330
 17331 8BFB A9 00			lda #$00
 17332 8BFD 8D D4 A5			sta BALL0.STM
 17333
 17334 				; optimize OK (service.pas), line = 2955
 17335
 17336 8C00 A9 E8			lda #$E8
 17337 8C02 8D 1D 9A			sta SYSTEM.RANDOM.@010184000.RANGE
 17338 8C05 A9 03			lda #$03
 17339 8C07 8D 1E 9A			sta SYSTEM.RANDOM.@010184000.RANGE+1
 17340 8C0A 20 2F 24			jsr SYSTEM.RANDOM.@010184000
 17341 8C0D AD 1F 9A			lda SYSTEM.RANDOM.@010184000.RESULT
 17342 8C10 8D 84 9B			sta LETT.INCOMING
 17343 8C13 AD 20 9A			lda SYSTEM.RANDOM.@010184000.RESULT+1
 17344 8C16 8D 85 9B			sta LETT.INCOMING+1
 17345
 17346 				; optimize FAIL ('CREATE_VAUS', service.pas), line = 2958
 17347
 17348 8C19 20 A1 72			jsr CREATE_VAUS
 17349
 17350 				; optimize FAIL ('WRITE_ROUND_LEVEL', service.pas), line = 2961
 17351
 17352 8C1C 20 F0 6E			jsr WRITE_ROUND_LEVEL
 17353
 17354 				; optimize FAIL ('SET_VAUS', service.pas), line = 2963
 17355
 17356 8C1F 20 BA 3C			jsr SET_VAUS
 17357
 17358 				; optimize FAIL ('START_VAUS', service.pas), line = 2964
 17359
 17360 8C22 20 F7 3C			jsr START_VAUS
 17361
 17362 				; optimize OK (service.pas), line = 2965
 17363
 17364 8C25 AD 18 9B			lda VAUS.X
 17365 8C28 8D 77 A4			sta MOVE_VAUS.X
 17366 8C2B A9 00			lda #$00
 17367 8C2D 8D 78 A4			sta MOVE_VAUS.X+1
 17368 8C30 A9 B8			lda #$B8
 17369 8C32 8D 79 A4			sta MOVE_VAUS.Y
 17370 8C35 A9 00			lda #$00
 17371 8C37 8D 7A A4			sta MOVE_VAUS.Y+1
 17372 8C3A 20 14 40			jsr MOVE_VAUS
 17373
 17374 				; optimize FAIL ('START_LEVEL', service.pas), line = 2966
 17375
 17376 8C3D 20 C8 24			jsr START_LEVEL
 17377
 17378 				; optimize FAIL ('START_VAUS', service.pas), line = 2967
 17379
 17380 8C40 20 F7 3C			jsr START_VAUS
 17381
 17382 				; optimize FAIL ('REMOVE_ROUND_LEVEL', service.pas), line = 2968
 17383
 17384 8C43 20 F1 6E			jsr REMOVE_ROUND_LEVEL
 17385
 17386 				; optimize OK (service.pas), line = 2969
 17387
 17388 8C46 AD 56 91			lda BALL0
 17389 8C49 8D 22 A4			sta SET_BALL.BALL
 17390 8C4C AD 57 91			lda BALL0+1
 17391 8C4F 8D 23 A4			sta SET_BALL.BALL+1
 17392 8C52 20 0E 2F			jsr SET_BALL
 17393
 17394 				; optimize OK (service.pas), line = 2976
 17395
 17396 8C55 A9 0F			lda #$0F
 17397 8C57 20 18 24			jsr SYSTEM.RANDOM.@010180000
 17398 8C5A E8				inx
 17399 8C5B E8				inx
 17400 8C5C AD 1C 9A			lda SYSTEM.RANDOM.@010180000.RESULT
 17401 8C5F 18 69 3C			add #$3C
 17402 8C62 95 95			sta :STACKORIGIN-1,x
 17403 8C64 A9 00			lda #$00
 17404 8C66 69 00			adc #$00
 17405 8C68 95 A5			sta :STACKORIGIN-1+STACKWIDTH,x
 17406 8C6A AD 56 91			lda BALL0
 17407 8C6D 8D 34 A4			sta SET_BALL_DIRECTION.BALL
 17408 8C70 AD 57 91			lda BALL0+1
 17409 8C73 8D 35 A4			sta SET_BALL_DIRECTION.BALL+1
 17410 8C76 CA				dex
 17411 8C77 B5 96			lda :STACKORIGIN,x
 17412 8C79 8D 38 A4			sta SET_BALL_DIRECTION.ANGLE
 17413 8C7C B5 A6			lda :STACKORIGIN+STACKWIDTH,x
 17414 8C7E 8D 39 A4			sta SET_BALL_DIRECTION.ANGLE+1
 17415 8C81 CA				dex
 17416 8C82 20 03 32			jsr SET_BALL_DIRECTION
 17417
 17418 				; optimize OK (service.pas), line = 2978
 17419
 17420 8C85 AD 56 91			lda BALL0
 17421 8C88 8D 26 A4			sta SET_BALL_SPEED.BALL
 17422 8C8B AD 57 91			lda BALL0+1
 17423 8C8E 8D 27 A4			sta SET_BALL_SPEED.BALL+1
 17424 8C91 A9 F4			lda #$F4
 17425 8C93 8D 2A A4			sta SET_BALL_SPEED.SPEED
 17426 8C96 A9 01			lda #$01
 17427 8C98 8D 2B A4			sta SET_BALL_SPEED.SPEED+1
 17428 8C9B 20 F3 2F			jsr SET_BALL_SPEED
 17429
 17430 				; optimize OK (service.pas), line = 2981
 17431
 17432 8C9E A9 00			lda #$00
 17433 8CA0 8D C8 A5			sta BALL0.FINESPEED
 17434 8CA3 8D C9 A5			sta BALL0.FINESPEED+1
 17435
 17436 				; optimize OK (service.pas), line = 2983
 17437
 17438 8CA6 8D EC A5			sta BALL1.INPLAY
 17439
 17440 				; optimize OK (service.pas), line = 2984
 17441
 17442 8CA9 8D 07 A6			sta BALL2.INPLAY
 17443
 17444 				; --- WhileProlog
 17445 8CAC 4C 34 91			jmp l_3313
 17446 8CAF			l_3314
 17447
 17448 				; optimize FAIL ('WAIT_VBL', service.pas), line = 2988
 17449
 17450 8CAF 20 0D 2F			jsr WAIT_VBL
 17451
 17452 				; optimize OK (service.pas), line = 2996
 17453
 17454 8CB2 AD BA A5			lda BALL0.X
 17455 8CB5 8D 7F 9A			sta MOUS.X
 17456 8CB8 AD BB A5			lda BALL0.X+1
 17457 8CBB 8D 80 9A			sta MOUS.X+1
 17458
 17459 				; optimize OK (service.pas), line = 2998
 17460
 17461 8CBE A9 AD			lda <X
 17462 8CC0 8D 8C 9A			sta MOUSECOORDS.X
 17463 8CC3 A9 A5			lda >X
 17464 8CC5 8D 8D 9A			sta MOUSECOORDS.X+1
 17465 8CC8 A9 AF			lda <Y
 17466 8CCA 8D 8E 9A			sta MOUSECOORDS.Y
 17467 8CCD A9 A5			lda >Y
 17468 8CCF 8D 8F 9A			sta MOUSECOORDS.Y+1
 17469 8CD2 20 E4 24			jsr MOUSECOORDS
 17470
 17471 				; optimize OK (service.pas), line = 3003
 17472
 17473 8CD5 AD 7C 9B			lda TRAINER
 17474 8CD8 D0 19			jne l_332F
 17475 8CDA AD AD A5			lda X
 17476 8CDD 8D 77 A4			sta MOVE_VAUS.X
 17477 8CE0 AD AE A5			lda X+1
 17478 8CE3 8D 78 A4			sta MOVE_VAUS.X+1
 17479 8CE6 A9 B8			lda #$B8
 17480 8CE8 8D 79 A4			sta MOVE_VAUS.Y
 17481 8CEB A9 00			lda #$00
 17482 8CED 8D 7A A4			sta MOVE_VAUS.Y+1
 17483 8CF0 4C 5C 8D			jmp l_333D
 17484 8CF3			l_332F
 17485
 17486 				; optimize OK (service.pas), line = 3009
 17487
 17488 8CF3 AD 7C 9B			lda TRAINER
 17489 8CF6 C9 01			cmp #$01
 17490 8CF8 D0 65			jne l_334F
 17491
 17492 				; optimize FAIL (1, service.pas), line = 3010
 17493
 17494 8CFA E8				inx
 17495 8CFB A9 B8 95 96			mva #$B8 :STACKORIGIN,x
 17496 8CFF A9 00 95 A6			mva #$00 :STACKORIGIN+STACKWIDTH,x
 17497 8D03 E8				inx
 17498 8D04 A9 0A 95 96			mva #$0A :STACKORIGIN,x
 17499 8D08 A9 00 95 A6			mva #$00 :STACKORIGIN+STACKWIDTH,x
 17500 8D0C AD BA A5			lda BALL0.X
 17501 8D0F 38 ED D3 A5			sub BALL0.ONVAUS
 17502 8D13 8D CC A3			sta MAX.A
 17503 8D16 AD BB A5			lda BALL0.X+1
 17504 8D19 E9 00			sbc #$00
 17505 8D1B 8D CD A3			sta MAX.A+1
 17506 8D1E B5 96			lda :STACKORIGIN,x
 17507 8D20 8D CE A3			sta MAX.B
 17508 8D23 B5 A6			lda :STACKORIGIN+STACKWIDTH,x
 17509 8D25 8D CF A3			sta MAX.B+1
 17510 8D28 CA				dex
 17511 8D29 20 C3 26			jsr MAX
 17512 8D2C A9 B8			lda #$B8
 17513 8D2E 8D D2 A3			sta MIN.A
 17514 8D31 A9 00			lda #$00
 17515 8D33 8D D3 A3			sta MIN.A+1
 17516 8D36 AD D0 A3			lda MAX.RESULT
 17517 8D39 8D D4 A3			sta MIN.B
 17518 8D3C AD D1 A3			lda MAX.RESULT+1
 17519 8D3F 8D D5 A3			sta MIN.B+1
 17520 8D42 20 EE 26			jsr MIN
 17521 8D45 AD D6 A3			lda MIN.RESULT
 17522 8D48 8D 77 A4			sta MOVE_VAUS.X
 17523 8D4B AD D7 A3			lda MIN.RESULT+1
 17524 8D4E 8D 78 A4			sta MOVE_VAUS.X+1
 17525 8D51 B5 96			lda :STACKORIGIN,x
 17526 8D53 8D 79 A4			sta MOVE_VAUS.Y
 17527 8D56 B5 A6			lda :STACKORIGIN+STACKWIDTH,x
 17528 8D58 8D 7A A4			sta MOVE_VAUS.Y+1
 17529 8D5B CA				dex
 17530 8D5C			l_333D
 17531 8D5C 20 14 40			jsr MOVE_VAUS
 17532 8D5F			l_334F
 17533
 17534 				; optimize OK (service.pas), line = 3015
 17535
 17536 8D5F AD D2 A5			lda BALL0.LAUNCH
 17537 8D62 C9 01			cmp #$01
 17538 8D64 D0 35			jne l_3372
 17539
 17540 				; optimize FAIL (0, service.pas), line = 3017
 17541
 17542 8D66 EE D4 A5			inc BALL0.STM
 17543
 17544 				; optimize OK (service.pas), line = 3022
 17545
 17546 8D69 AD D4 A5			lda BALL0.STM
 17547 8D6C C9 FA			cmp #$FA
 17548 8D6E D0 05			jne l_3389
 17549 8D70 A9 00			lda #$00
 17550 8D72 8D D2 A5			sta BALL0.LAUNCH
 17551 8D75			l_3389
 17552
 17553 				; optimize OK (service.pas), line = 3025
 17554
 17555 8D75 AD 56 91			lda BALL0
 17556 8D78 8D 46 A4			sta START_BALL.BALL
 17557 8D7B AD 57 91			lda BALL0+1
 17558 8D7E 8D 47 A4			sta START_BALL.BALL+1
 17559 8D81 20 49 35			jsr START_BALL
 17560
 17561 				; optimize FAIL ('MOUSECLICK', service.pas), line = 3028
 17562
 17563 8D84 20 CC 24			jsr MOUSECLICK
 17564 8D87 AD 8B 9A			lda MOUSECLICK.RESULT+1
 17565 8D8A D0 05			bne @+
 17566 8D8C AD 8A 9A			lda MOUSECLICK.RESULT
 17567 8D8F C9 01			cmp #$01
 17568 				@
 17569 8D91 D0 05			jne l_33A3
 17570 8D93 A9 00			lda #$00
 17571 8D95 8D D2 A5			sta BALL0.LAUNCH
 17572 8D98			l_33A3
 17573 8D98 4C AF 8D			jmp l_33B3
 17574 8D9B			l_3372
 17575
 17576 				; optimize OK (service.pas), line = 3036
 17577
 17578 8D9B AD D1 A5			lda BALL0.INPLAY
 17579 8D9E F0 0F			jeq l_33BF
 17580 8DA0 AD 56 91			lda BALL0
 17581 8DA3 8D 67 A4			sta MOVE_BALL.BALL
 17582 8DA6 AD 57 91			lda BALL0+1
 17583 8DA9 8D 68 A4			sta MOVE_BALL.BALL+1
 17584 8DAC 20 86 36			jsr MOVE_BALL
 17585 8DAF			l_33BF
 17586 8DAF			l_33B3
 17587
 17588 				; optimize OK (service.pas), line = 3037
 17589
 17590 8DAF AD EC A5			lda BALL1.INPLAY
 17591 8DB2 F0 0F			jeq l_33D1
 17592 8DB4 AD 58 91			lda BALL1
 17593 8DB7 8D 67 A4			sta MOVE_BALL.BALL
 17594 8DBA AD 59 91			lda BALL1+1
 17595 8DBD 8D 68 A4			sta MOVE_BALL.BALL+1
 17596 8DC0 20 86 36			jsr MOVE_BALL
 17597 8DC3			l_33D1
 17598
 17599 				; optimize OK (service.pas), line = 3038
 17600
 17601 8DC3 AD 07 A6			lda BALL2.INPLAY
 17602 8DC6 F0 0F			jeq l_33E3
 17603 8DC8 AD 5A 91			lda BALL2
 17604 8DCB 8D 67 A4			sta MOVE_BALL.BALL
 17605 8DCE AD 5B 91			lda BALL2+1
 17606 8DD1 8D 68 A4			sta MOVE_BALL.BALL+1
 17607 8DD4 20 86 36			jsr MOVE_BALL
 17608 8DD7			l_33E3
 17609
 17610 				; optimize OK (service.pas), line = 3044
 17611
 17612 8DD7 AD 56 91			lda BALL0
 17613 8DDA 8D 0B A6			sta CHECK_BALL.BALL
 17614 8DDD AD 57 91			lda BALL0+1
 17615 8DE0 8D 0C A6			sta CHECK_BALL.BALL+1
 17616 8DE3 20 33 89			jsr CHECK_BALL
 17617
 17618 				; optimize OK (service.pas), line = 3045
 17619
 17620 8DE6 AD 58 91			lda BALL1
 17621 8DE9 8D 0B A6			sta CHECK_BALL.BALL
 17622 8DEC AD 59 91			lda BALL1+1
 17623 8DEF 8D 0C A6			sta CHECK_BALL.BALL+1
 17624 8DF2 20 33 89			jsr CHECK_BALL
 17625
 17626 				; optimize OK (service.pas), line = 3046
 17627
 17628 8DF5 AD 5A 91			lda BALL2
 17629 8DF8 8D 0B A6			sta CHECK_BALL.BALL
 17630 8DFB AD 5B 91			lda BALL2+1
 17631 8DFE 8D 0C A6			sta CHECK_BALL.BALL+1
 17632 8E01 20 33 89			jsr CHECK_BALL
 17633
 17634 				; optimize FAIL ('CHECKSHINE', service.pas), line = 3061
 17635
 17636 8E04 20 65 29			jsr CHECKSHINE
 17637
 17638 				; optimize FAIL ('CHECK_LETTER', service.pas), line = 3062
 17639
 17640 8E07 20 E4 2B			jsr CHECK_LETTER
 17641
 17642 				; optimize OK (service.pas), line = 3063
 17643
 17644 8E0A AD 56 91			lda BALL0
 17645 8E0D 8D 97 A5			sta CHECK_BONUS_TYPE.B1
 17646 8E10 AD 57 91			lda BALL0+1
 17647 8E13 8D 98 A5			sta CHECK_BONUS_TYPE.B1+1
 17648 8E16 AD 58 91			lda BALL1
 17649 8E19 8D 9B A5			sta CHECK_BONUS_TYPE.B2
 17650 8E1C AD 59 91			lda BALL1+1
 17651 8E1F 8D 9C A5			sta CHECK_BONUS_TYPE.B2+1
 17652 8E22 AD 5A 91			lda BALL2
 17653 8E25 8D 9F A5			sta CHECK_BONUS_TYPE.B3
 17654 8E28 AD 5B 91			lda BALL2+1
 17655 8E2B 8D A0 A5			sta CHECK_BONUS_TYPE.B3+1
 17656 8E2E 20 19 85			jsr CHECK_BONUS_TYPE
 17657
 17658 				; optimize FAIL ('CHECK_FIRE', service.pas), line = 3064
 17659
 17660 8E31 20 31 80			jsr CHECK_FIRE
 17661
 17662 				; optimize FAIL ('CHECK_FLUX', service.pas), line = 3065
 17663
 17664 8E34 20 FA 82			jsr CHECK_FLUX
 17665
 17666 				; optimize OK (service.pas), line = 3067
 17667
 17668 8E37 AD 18 9B			lda VAUS.X
 17669 8E3A 18 6D 20 9B			add VAUS.WIDTH
 17670 8E3E 85 9F			sta :STACKORIGIN+9
 17671 8E40 A9 00			lda #$00
 17672 8E42 69 00			adc #$00
 17673 8E44 A0 01			ldy #1
 17674 8E46 C9 00			cmp #$00
 17675 8E48 D0 04			bne @+
 17676 8E4A A5 9F			lda :STACKORIGIN+9
 17677 8E4C C9 D7			cmp #$D7
 17678 				@
 17679 8E4E F0 01			beq @+
 17680 8E50 88				dey
 17681 				@
 17682 8E51 98				tya
 17683 8E52 2D 94 9B			and SCRFLUX
 17684 8E55 F0 03			jeq l_341B
 17685 8E57 20 BB 83			jsr VAUS_OUT
 17686 8E5A			l_341B
 17687
 17688 				; optimize OK (service.pas), line = 3069
 17689
 17690 8E5A AD 24 9B			lda VAUS.LETTER
 17691 8E5D C9 04			cmp #$04
 17692 8E5F F0 03 4C A4 8F		jne l_3431
 17693
 17694 				; optimize OK (service.pas), line = 3071
 17695
 17696 8E64 A9 03			lda #$03
 17697 8E66 8D 93 9B			sta BALLS_IN_PLAY
 17698
 17699 				; optimize OK (service.pas), line = 3073
 17700
 17701 8E69 AC 58 91 84 84 AC + 	mwy BALL1 :bp2
 17702 8E73 A0 1A			ldy #$1A
 17703 8E75 B9 BA A5 91 84 88 + 	mva:rpl adr.BALL0,y (:bp2),y-
 17704
 17705 				; optimize OK (service.pas), line = 3074
 17706
 17707 8E7D AC 5A 91 84 84 AC + 	mwy BALL2 :bp2
 17708 8E87 A0 1A			ldy #$1A
 17709 8E89 B9 BA A5 91 84 88 + 	mva:rpl adr.BALL0,y (:bp2),y-
 17710
 17711 				; optimize OK (service.pas), line = 3076
 17712
 17713 8E91 AD 56 91			lda BALL0
 17714 8E94 8D 3E A4			sta GET_BALL_DIRECTION.BALL
 17715 8E97 AD 57 91			lda BALL0+1
 17716 8E9A 8D 3F A4			sta GET_BALL_DIRECTION.BALL+1
 17717 8E9D 20 8E 33			jsr GET_BALL_DIRECTION
 17718 8EA0 E8				inx
 17719 8EA1 E8				inx
 17720 8EA2 A9 5A			lda #$5A
 17721 8EA4 85 8E			sta @SMALLINT.DIV.B
 17722 8EA6 A9 00			lda #$00
 17723 8EA8 85 8F			sta @SMALLINT.DIV.B+1
 17724 8EAA AD 42 A4			lda GET_BALL_DIRECTION.RESULT
 17725 8EAD 85 86			sta @SMALLINT.DIV.A
 17726 8EAF AD 43 A4			lda GET_BALL_DIRECTION.RESULT+1
 17727 8EB2 85 87			sta @SMALLINT.DIV.A+1
 17728 8EB4 20 52 12			jsr @SMALLINT.DIV
 17729 8EB7 CA				dex
 17730 8EB8 A5 86			lda :eax
 17731 8EBA 8D B3 A5			sta T1
 17732 8EBD A5 87			lda :eax+1
 17733 8EBF 8D B4 A5			sta T1+1
 17734 8EC2 CA				dex
 17735
 17736 				; optimize OK (service.pas), line = 3078
 17737
 17738 8EC3 AD C6 A5			lda BALL0.SPEED
 17739 8EC6 8D B5 A5			sta T2
 17740 8EC9 AD C7 A5			lda BALL0.SPEED+1
 17741 8ECC 8D B6 A5			sta T2+1
 17742
 17743 				; optimize OK (service.pas), line = 3085
 17744
 17745 8ECF A9 5A			lda #$5A
 17746 8ED1 85 8E			sta :ecx
 17747 8ED3 A9 00			lda #$00
 17748 8ED5 85 8F			sta :ecx+1
 17749 8ED7 AD B3 A5			lda T1
 17750 8EDA 85 86			sta :eax
 17751 8EDC AD B4 A5			lda T1+1
 17752 8EDF 85 87			sta :eax+1
 17753 					.ifdef fmulinit
 17754 					fmulu_16
 17755 					els
 17756 8EE1 20 2A 13			imulCX
 17757 					eif
 17758 8EE4 A5 86			lda :eax
 17759 8EE6 8D B7 A5			sta HLP
 17760 8EE9 A5 87			lda :eax+1
 17761 8EEB 8D B8 A5			sta HLP+1
 17762
 17763 				; optimize OK (service.pas), line = 3087
 17764
 17765 8EEE AD B7 A5			lda HLP
 17766 8EF1 18 69 1E			add #$1E
 17767 8EF4 8D 38 A4			sta SET_BALL_DIRECTION.ANGLE
 17768 8EF7 AD B8 A5			lda HLP+1
 17769 8EFA 69 00			adc #$00
 17770 8EFC 8D 39 A4			sta SET_BALL_DIRECTION.ANGLE+1
 17771 8EFF AD 56 91			lda BALL0
 17772 8F02 8D 34 A4			sta SET_BALL_DIRECTION.BALL
 17773 8F05 AD 57 91			lda BALL0+1
 17774 8F08 8D 35 A4			sta SET_BALL_DIRECTION.BALL+1
 17775 8F0B 20 03 32			jsr SET_BALL_DIRECTION
 17776
 17777 				; optimize OK (service.pas), line = 3088
 17778
 17779 8F0E AD B7 A5			lda HLP
 17780 8F11 18 69 2D			add #$2D
 17781 8F14 8D 38 A4			sta SET_BALL_DIRECTION.ANGLE
 17782 8F17 AD B8 A5			lda HLP+1
 17783 8F1A 69 00			adc #$00
 17784 8F1C 8D 39 A4			sta SET_BALL_DIRECTION.ANGLE+1
 17785 8F1F AD 58 91			lda BALL1
 17786 8F22 8D 34 A4			sta SET_BALL_DIRECTION.BALL
 17787 8F25 AD 59 91			lda BALL1+1
 17788 8F28 8D 35 A4			sta SET_BALL_DIRECTION.BALL+1
 17789 8F2B 20 03 32			jsr SET_BALL_DIRECTION
 17790
 17791 				; optimize OK (service.pas), line = 3089
 17792
 17793 8F2E AD B7 A5			lda HLP
 17794 8F31 18 69 3C			add #$3C
 17795 8F34 8D 38 A4			sta SET_BALL_DIRECTION.ANGLE
 17796 8F37 AD B8 A5			lda HLP+1
 17797 8F3A 69 00			adc #$00
 17798 8F3C 8D 39 A4			sta SET_BALL_DIRECTION.ANGLE+1
 17799 8F3F AD 5A 91			lda BALL2
 17800 8F42 8D 34 A4			sta SET_BALL_DIRECTION.BALL
 17801 8F45 AD 5B 91			lda BALL2+1
 17802 8F48 8D 35 A4			sta SET_BALL_DIRECTION.BALL+1
 17803 8F4B 20 03 32			jsr SET_BALL_DIRECTION
 17804
 17805 				; optimize OK (service.pas), line = 3093
 17806
 17807 8F4E AD 56 91			lda BALL0
 17808 8F51 8D 26 A4			sta SET_BALL_SPEED.BALL
 17809 8F54 AD 57 91			lda BALL0+1
 17810 8F57 8D 27 A4			sta SET_BALL_SPEED.BALL+1
 17811 8F5A AD B5 A5			lda T2
 17812 8F5D 8D 2A A4			sta SET_BALL_SPEED.SPEED
 17813 8F60 AD B6 A5			lda T2+1
 17814 8F63 8D 2B A4			sta SET_BALL_SPEED.SPEED+1
 17815 8F66 20 F3 2F			jsr SET_BALL_SPEED
 17816
 17817 				; optimize OK (service.pas), line = 3094
 17818
 17819 8F69 AD 58 91			lda BALL1
 17820 8F6C 8D 26 A4			sta SET_BALL_SPEED.BALL
 17821 8F6F AD 59 91			lda BALL1+1
 17822 8F72 8D 27 A4			sta SET_BALL_SPEED.BALL+1
 17823 8F75 AD B5 A5			lda T2
 17824 8F78 8D 2A A4			sta SET_BALL_SPEED.SPEED
 17825 8F7B AD B6 A5			lda T2+1
 17826 8F7E 8D 2B A4			sta SET_BALL_SPEED.SPEED+1
 17827 8F81 20 F3 2F			jsr SET_BALL_SPEED
 17828
 17829 				; optimize OK (service.pas), line = 3095
 17830
 17831 8F84 AD 5A 91			lda BALL2
 17832 8F87 8D 26 A4			sta SET_BALL_SPEED.BALL
 17833 8F8A AD 5B 91			lda BALL2+1
 17834 8F8D 8D 27 A4			sta SET_BALL_SPEED.BALL+1
 17835 8F90 AD B5 A5			lda T2
 17836 8F93 8D 2A A4			sta SET_BALL_SPEED.SPEED
 17837 8F96 AD B6 A5			lda T2+1
 17838 8F99 8D 2B A4			sta SET_BALL_SPEED.SPEED+1
 17839 8F9C 20 F3 2F			jsr SET_BALL_SPEED
 17840
 17841 				; optimize OK (service.pas), line = 3097
 17842
 17843 8F9F A9 00			lda #$00
 17844 8FA1 8D 24 9B			sta VAUS.LETTER
 17845 8FA4			l_3431
 17846
 17847 				; optimize OK (service.pas), line = 3101
 17848
 17849 8FA4 AD 93 9B			lda BALLS_IN_PLAY
 17850 8FA7 C9 02			cmp #$02
 17851 8FA9 90 08			jcc l_3494
 17852 8FAB A9 00			lda #$00
 17853 8FAD 8D 84 9B			sta LETT.INCOMING
 17854 8FB0 8D 85 9B			sta LETT.INCOMING+1
 17855 8FB3			l_3494
 17856
 17857 				; optimize OK (service.pas), line = 3104
 17858
 17859 8FB3 AD 74 9B			lda CUR_PLAYER
 17860 8FB6 0A				asl @
 17861 8FB7 0A				asl @
 17862 8FB8 A8				tay
 17863 8FB9 B9 59 9B			lda adr.SCORE.PLAYER,y
 17864 8FBC 8D 62 A5			sta WRITE_SCORE.SC
 17865 8FBF B9 5A 9B			lda adr.SCORE.PLAYER+1,y
 17866 8FC2 8D 63 A5			sta WRITE_SCORE.SC+1
 17867 8FC5 B9 5B 9B			lda adr.SCORE.PLAYER+2,y
 17868 8FC8 8D 64 A5			sta WRITE_SCORE.SC+2
 17869 8FCB B9 5C 9B			lda adr.SCORE.PLAYER+3,y
 17870 8FCE 8D 65 A5			sta WRITE_SCORE.SC+3
 17871 8FD1 AC 74 9B			ldy CUR_PLAYER
 17872 8FD4 B9 B0 10			lda adr.POS_DIGIT,y
 17873 8FD7 8D 60 A5			sta WRITE_SCORE.PY
 17874 8FDA A9 FD			lda #$FD
 17875 8FDC 8D 5E A5			sta WRITE_SCORE.PX
 17876 8FDF A9 00			lda #$00
 17877 8FE1 8D 5F A5			sta WRITE_SCORE.PX+1
 17878 8FE4 8D 61 A5			sta WRITE_SCORE.PY+1
 17879 8FE7 20 4A 78			jsr WRITE_SCORE
 17880
 17881 				; optimize OK (service.pas), line = 3107
 17882
 17883 8FEA AD 74 9B			lda CUR_PLAYER
 17884 8FED 0A				asl @
 17885 8FEE 0A				asl @
 17886 8FEF A8				tay
 17887 8FF0				.LOCAL
 17888 8FF0 B9 5C 9B			lda adr.SCORE.PLAYER+3,y
 17889 8FF3 38 ED 6E 9B			sub SCORE.HISCORE+3
 17890 8FF7 D0 22			bne L4
 17891 8FF9 B9 5B 9B			lda adr.SCORE.PLAYER+2,y
 17892 8FFC CD 6D 9B			cmp SCORE.HISCORE+2
 17893 8FFF D0 0E			bne L1
 17894 9001 B9 5A 9B			lda adr.SCORE.PLAYER+1,y
 17895 9004 CD 6C 9B			cmp SCORE.HISCORE+1
 17896 9007 D0 06			bne L1
 17897 9009 B9 59 9B			lda adr.SCORE.PLAYER,y
 17898 900C CD 6B 9B			cmp SCORE.HISCORE
 17899 900F F0 10		L1	beq L5
 17900 9011 B0 04			bcs L3
 17901 9013 A9 FF			lda #$FF
 17902 9015 D0 0A			bne L5
 17903 9017 A9 01		L3	lda #$01
 17904 9019 D0 06			bne L5
 17905 901B 50 04		L4	bvc L5
 17906 901D 49 FF			eor #$FF
 17907 901F 09 01			ora #$01
 17908 9021			L5
 17909 					.ENDL
 17910 9021 30 49			jmi l_34BA
 17911 9023 F0 47			jeq l_34BA
 17912
 17913 				; optimize OK (service.pas), line = 3110
 17914
 17915 9025 B9 59 9B			lda adr.SCORE.PLAYER,y
 17916 9028 8D 6B 9B			sta SCORE.HISCORE
 17917 902B B9 5A 9B			lda adr.SCORE.PLAYER+1,y
 17918 902E 8D 6C 9B			sta SCORE.HISCORE+1
 17919 9031 B9 5B 9B			lda adr.SCORE.PLAYER+2,y
 17920 9034 8D 6D 9B			sta SCORE.HISCORE+2
 17921 9037 B9 5C 9B			lda adr.SCORE.PLAYER+3,y
 17922 903A 8D 6E 9B			sta SCORE.HISCORE+3
 17923
 17924 				; optimize OK (service.pas), line = 3112
 17925
 17926 903D A9 FD			lda #$FD
 17927 903F 8D 5E A5			sta WRITE_SCORE.PX
 17928 9042 A9 00			lda #$00
 17929 9044 8D 5F A5			sta WRITE_SCORE.PX+1
 17930 9047 A9 80			lda #$80
 17931 9049 8D 60 A5			sta WRITE_SCORE.PY
 17932 904C A9 00			lda #$00
 17933 904E 8D 61 A5			sta WRITE_SCORE.PY+1
 17934 9051 AD 6B 9B			lda SCORE.HISCORE
 17935 9054 8D 62 A5			sta WRITE_SCORE.SC
 17936 9057 AD 6C 9B			lda SCORE.HISCORE+1
 17937 905A 8D 63 A5			sta WRITE_SCORE.SC+1
 17938 905D AD 6D 9B			lda SCORE.HISCORE+2
 17939 9060 8D 64 A5			sta WRITE_SCORE.SC+2
 17940 9063 AD 6E 9B			lda SCORE.HISCORE+3
 17941 9066 8D 65 A5			sta WRITE_SCORE.SC+3
 17942 9069 20 4A 78			jsr WRITE_SCORE
 17943 906C			l_34BA
 17944
 17945 				; optimize OK (service.pas), line = 3119
 17946
 17947 906C AD 56 91			lda BALL0
 17948 906F 8D 0F A6			sta TEST_BALL.BALL
 17949 9072 AD 57 91			lda BALL0+1
 17950 9075 8D 10 A6			sta TEST_BALL.BALL+1
 17951 9078 20 A9 89			jsr TEST_BALL
 17952
 17953 				; optimize OK (service.pas), line = 3120
 17954
 17955 907B AD 58 91			lda BALL1
 17956 907E 8D 0F A6			sta TEST_BALL.BALL
 17957 9081 AD 59 91			lda BALL1+1
 17958 9084 8D 10 A6			sta TEST_BALL.BALL+1
 17959 9087 20 A9 89			jsr TEST_BALL
 17960
 17961 				; optimize OK (service.pas), line = 3121
 17962
 17963 908A AD 5A 91			lda BALL2
 17964 908D 8D 0F A6			sta TEST_BALL.BALL
 17965 9090 AD 5B 91			lda BALL2+1
 17966 9093 8D 10 A6			sta TEST_BALL.BALL+1
 17967 9096 20 A9 89			jsr TEST_BALL
 17968
 17969 				; optimize OK (service.pas), line = 3162
 17970
 17971 9099 AD D1 A5			lda BALL0.INPLAY
 17972 909C D0 2B			jne l_34E0
 17973
 17974 				; optimize OK (service.pas), line = 3164
 17975
 17976 909E AC 56 91 84 84 AC + 	mwy BALL0 :bp2
 17977 90A8 A0 1A			ldy #$1A
 17978 90AA B9 D5 A5 91 84 88 + 	mva:rpl adr.BALL1,y (:bp2),y-
 17979
 17980 				; optimize OK (service.pas), line = 3165
 17981
 17982 90B2 AC 58 91 84 84 AC + 	mwy BALL1 :bp2
 17983 90BC A0 1A			ldy #$1A
 17984 90BE B9 F0 A5 91 84 88 + 	mva:rpl adr.BALL2,y (:bp2),y-
 17985
 17986 				; optimize OK (service.pas), line = 3166
 17987
 17988 90C6 8D 07 A6			sta BALL2.INPLAY
 17989 90C9			l_34E0
 17990
 17991 				; optimize OK (service.pas), line = 3169
 17992
 17993 90C9 A9 00			lda #$00
 17994 90CB 8D 93 9B			sta BALLS_IN_PLAY
 17995
 17996 				; optimize OK (service.pas), line = 3171
 17997
 17998 90CE AD D1 A5			lda BALL0.INPLAY
 17999 90D1 F0 03			jeq l_34FB
 18000 90D3 EE 93 9B			inc BALLS_IN_PLAY
 18001 90D6			l_34FB
 18002
 18003 				; optimize OK (service.pas), line = 3172
 18004
 18005 90D6 AD EC A5			lda BALL1.INPLAY
 18006 90D9 F0 03			jeq l_350E
 18007 90DB EE 93 9B			inc BALLS_IN_PLAY
 18008 90DE			l_350E
 18009
 18010 				; optimize OK (service.pas), line = 3173
 18011
 18012 90DE AD 07 A6			lda BALL2.INPLAY
 18013 90E1 F0 03			jeq l_3521
 18014 90E3 EE 93 9B			inc BALLS_IN_PLAY
 18015 90E6			l_3521
 18016
 18017 				; optimize OK (service.pas), line = 3176
 18018
 18019 90E6 AD D1 A5			lda BALL0.INPLAY
 18020 90E9 D0 49			jne l_3537
 18021
 18022 				; optimize OK (service.pas), line = 3178
 18023
 18024 90EB A9 01			lda #$01
 18025 90ED 8D D2 A5			sta BALL0.LAUNCH
 18026
 18027 				; optimize OK (service.pas), line = 3179
 18028
 18029 90F0 AD 56 91			lda BALL0
 18030 90F3 8D 1B A4			sta REMOVE_BALL.BALL
 18031 90F6 AD 57 91			lda BALL0+1
 18032 90F9 8D 1C A4			sta REMOVE_BALL.BALL+1
 18033 90FC 20 49 2E			jsr REMOVE_BALL
 18034
 18035 				; optimize FAIL ('DESTROY_VAUS', service.pas), line = 3180
 18036
 18037 90FF 20 A4 6F			jsr DESTROY_VAUS
 18038
 18039 				; optimize OK (service.pas), line = 3181
 18040
 18041 9102 AC 74 9B			ldy CUR_PLAYER
 18042 9105 B9 68 9B			lda adr.SCORE.LIVES,y
 18043 9108 38 E9 01			sub #$01
 18044 910B 99 68 9B			sta adr.SCORE.LIVES,y
 18045
 18046 				; optimize OK (service.pas), line = 3182
 18047
 18048 910E AD D2 98			lda WALL_P
 18049 9111 85 8E			sta @move.dst
 18050 9113 AD 74 9B			lda CUR_PLAYER
 18051 9116 18 6D D3 98			add WALL_P+1
 18052 911A 85 8F			sta @move.dst+1
 18053 911C AD D4 98			lda WALL
 18054 911F 85 8A			sta @move.src
 18055 9121 AD D5 98			lda WALL+1
 18056 9124 85 8B			sta @move.src+1
 18057 9126 A9 00			lda <256
 18058 9128 85 86			sta @move.cnt
 18059 912A A9 01			lda >256
 18060 912C 85 87			sta @move.cnt+1
 18061 912E 20 D5 11			jsr @move
 18062
 18063 				; optimize FAIL ('NOSOUND', service.pas), line = 3190
 18064
 18065 9131 20 C1 26			jsr NOSOUND
 18066 9134			l_3537
 18067 9134			l_3313
 18068
 18069 				; optimize OK (service.pas), line = 2986
 18070
 18071 9134 AD 57 9B			lda REMAIN_BLK
 18072 9137 F0 0D			jeq l_3314w
 18073 9139 AD D1 A5			lda BALL0.INPLAY
 18074 913C F0 08			jeq l_3314w
 18075 913E AD 73 9B			lda SCORE.ABORTPLAY
 18076 9141 D0 03 4C AF 8C		jeq l_3314
 18077 9146			l_3314w
 18078
 18079 				; optimize OK (service.pas), line = 3246
 18080
 18081 9146 A9 00			lda #$00
 18082 9148 8D AC A5			sta RESULT
 18083
 18084 				; optimize OK (service.pas), line = 3247
 18085
 18086 914B AD 57 9B			lda REMAIN_BLK
 18087 914E D0 05			jne l_3581
 18088 9150 A9 01			lda #$01
 18089 9152 8D AC A5			sta RESULT
 18090 9155			l_3581
 18091 9155			@exit
 18092
 18093 				; ------------------------------------------------------------
 18094
 18095 = A5AC			RESULT	= DATAORIGIN+$0BD5
 18096 = A5AD			X	= DATAORIGIN+$0BD6
 18097 = A5AF			Y	= DATAORIGIN+$0BD8
 18098 = A5B1			KEY	= DATAORIGIN+$0BDA
 18099 = A5B3			T1	= DATAORIGIN+$0BDC
 18100 = A5B5			T2	= DATAORIGIN+$0BDE
 18101 = A5B7			HLP	= DATAORIGIN+$0BE0
 18102 = A5B9			CN	= DATAORIGIN+$0BE2
 18103 = A5BA			adr.BALL0	= DATAORIGIN+$0BE3	; [27] RECORD
 18104 9155			.var BALL0	= adr.BALL0 .word
 18105 = A5BA			BALL0.X	= DATAORIGIN+$0BE3
 18106 = A5BC			BALL0.Y	= DATAORIGIN+$0BE5
 18107 = A5BE			BALL0.FINEX	= DATAORIGIN+$0BE7
 18108 = A5C0			BALL0.FINEY	= DATAORIGIN+$0BE9
 18109 = A5C2			BALL0.OLDX	= DATAORIGIN+$0BEB
 18110 = A5C4			BALL0.OLDY	= DATAORIGIN+$0BED
 18111 = A5C6			BALL0.SPEED	= DATAORIGIN+$0BEF
 18112 = A5C8			BALL0.FINESPEED	= DATAORIGIN+$0BF1
 18113 = A5CA			BALL0.SPEEDX	= DATAORIGIN+$0BF3
 18114 = A5CC			BALL0.SPEEDY	= DATAORIGIN+$0BF5
 18115 = A5CE			BALL0.SBD	= DATAORIGIN+$0BF7
 18116 = A5D0			BALL0.BRWHIT	= DATAORIGIN+$0BF9
 18117 = A5D1			BALL0.INPLAY	= DATAORIGIN+$0BFA
 18118 = A5D2			BALL0.LAUNCH	= DATAORIGIN+$0BFB
 18119 = A5D3			BALL0.ONVAUS	= DATAORIGIN+$0BFC
 18120 = A5D4			BALL0.STM	= DATAORIGIN+$0BFD
 18121 = A5D5			adr.BALL1	= DATAORIGIN+$0BFE	; [27] RECORD
 18122 9155			.var BALL1	= adr.BALL1 .word
 18123 = A5D5			BALL1.X	= DATAORIGIN+$0BFE
 18124 = A5D7			BALL1.Y	= DATAORIGIN+$0C00
 18125 = A5D9			BALL1.FINEX	= DATAORIGIN+$0C02
 18126 = A5DB			BALL1.FINEY	= DATAORIGIN+$0C04
 18127 = A5DD			BALL1.OLDX	= DATAORIGIN+$0C06
 18128 = A5DF			BALL1.OLDY	= DATAORIGIN+$0C08
 18129 = A5E1			BALL1.SPEED	= DATAORIGIN+$0C0A
 18130 = A5E3			BALL1.FINESPEED	= DATAORIGIN+$0C0C
 18131 = A5E5			BALL1.SPEEDX	= DATAORIGIN+$0C0E
 18132 = A5E7			BALL1.SPEEDY	= DATAORIGIN+$0C10
 18133 = A5E9			BALL1.SBD	= DATAORIGIN+$0C12
 18134 = A5EB			BALL1.BRWHIT	= DATAORIGIN+$0C14
 18135 = A5EC			BALL1.INPLAY	= DATAORIGIN+$0C15
 18136 = A5ED			BALL1.LAUNCH	= DATAORIGIN+$0C16
 18137 = A5EE			BALL1.ONVAUS	= DATAORIGIN+$0C17
 18138 = A5EF			BALL1.STM	= DATAORIGIN+$0C18
 18139 = A5F0			adr.BALL2	= DATAORIGIN+$0C19	; [27] RECORD
 18140 9155			.var BALL2	= adr.BALL2 .word
 18141 = A5F0			BALL2.X	= DATAORIGIN+$0C19
 18142 = A5F2			BALL2.Y	= DATAORIGIN+$0C1B
 18143 = A5F4			BALL2.FINEX	= DATAORIGIN+$0C1D
 18144 = A5F6			BALL2.FINEY	= DATAORIGIN+$0C1F
 18145 = A5F8			BALL2.OLDX	= DATAORIGIN+$0C21
 18146 = A5FA			BALL2.OLDY	= DATAORIGIN+$0C23
 18147 = A5FC			BALL2.SPEED	= DATAORIGIN+$0C25
 18148 = A5FE			BALL2.FINESPEED	= DATAORIGIN+$0C27
 18149 = A600			BALL2.SPEEDX	= DATAORIGIN+$0C29
 18150 = A602			BALL2.SPEEDY	= DATAORIGIN+$0C2B
 18151 = A604			BALL2.SBD	= DATAORIGIN+$0C2D
 18152 = A606			BALL2.BRWHIT	= DATAORIGIN+$0C2F
 18153 = A607			BALL2.INPLAY	= DATAORIGIN+$0C30
 18154 = A608			BALL2.LAUNCH	= DATAORIGIN+$0C31
 18155 = A609			BALL2.ONVAUS	= DATAORIGIN+$0C32
 18156 = A60A			BALL2.STM	= DATAORIGIN+$0C33
 18157
 18158 = A5AD			@VarData	= X
 18159 = 005E			@VarDataSize	= 94
 18160
 18161 9155 60				rts						; ret
 18162 = 9156 BA A5		BALL0
 18162 = 9158 D5 A5		BALL1
 18162 = 915A F0 A5		BALL2
 18162 				.endl
 18163
 18164 915C			.local	CHOOSE_START_WALL				; FUNCTION
 18165
 18166 				; optimize OK (service.pas), line = 3270
 18167
 18168 915C A9 01			lda #$01
 18169 915E 8D 19 A6			sta ST
 18170 9161 A9 00			lda #$00
 18171 9163 8D 1A A6			sta ST+1
 18172
 18173 				; optimize OK (service.pas), line = 3328
 18174
 18175 9166 AD 19 A6			lda ST
 18176 9169 8D 13 A6			sta RESULT
 18177 916C AD 1A A6			lda ST+1
 18178 916F 8D 14 A6			sta RESULT+1
 18179 9172			@exit
 18180
 18181 				; ------------------------------------------------------------
 18182
 18183 = A613			RESULT	= DATAORIGIN+$0C3C
 18184 = 0046			PX	= $46
 18185 = 0064			PY	= $64
 18186 = 0022			DX	= $22
 18187 = 0023			DY	= $23
 18188 = 0013			DDX	= $13
 18189 = 000E			DDY	= $0E
 18190 = A615			X	= DATAORIGIN+$0C3E
 18191 = A617			Y	= DATAORIGIN+$0C40
 18192 = A619			ST	= DATAORIGIN+$0C42
 18193 = A61B			OLDX	= DATAORIGIN+$0C44
 18194 = A61D			OLDY	= DATAORIGIN+$0C46
 18195 = A61F			NEWX	= DATAORIGIN+$0C48
 18196 = A621			NEWY	= DATAORIGIN+$0C4A
 18197 = A623			adr.SC	= [DATAORIGIN+$0C4C] .array [21]
 18198 9172			.var SC	= adr.SC .word
 18199
 18200 = A615			@VarData	= X
 18201 = 0023			@VarDataSize	= 35
 18202
 18203 9172 60				rts						; ret
 18204 = 9173 23 A6		SC
 18204 				.endl
 18205
 18206 9175			.local	SET_START_PARAMETERS				; PROCEDURE
 18207
 18208 				; optimize OK (service.pas), line = 3337
 18209
 18210 9175 A9 01			lda #$01
 18211 9177 8D 38 A6			sta X
 18212
 18213 917A			l_35A2
 18214 				; --- ForToDoCondition
 18215 917A AD 38 A6			lda X
 18216 917D C9 03			cmp #$03
 18217 917F 90 03 4C 0D 92		jcs l_35B0
 18218
 18219 				; optimize OK (service.pas), line = 3339
 18220
 18221 9184 0A				asl @
 18222 9185 0A				asl @
 18223 9186 A8				tay
 18224 9187 A9 00			lda #$00
 18225 9189 99 59 9B			sta adr.SCORE.PLAYER,y
 18226 918C 99 5A 9B			sta adr.SCORE.PLAYER+1,y
 18227 918F 99 5B 9B			sta adr.SCORE.PLAYER+2,y
 18228 9192 99 5C 9B			sta adr.SCORE.PLAYER+3,y
 18229
 18230 				; optimize OK (service.pas), line = 3340
 18231
 18232 9195 AC 38 A6			ldy X
 18233 9198 A9 05			lda #$05
 18234 919A 99 68 9B			sta adr.SCORE.LIVES,y
 18235
 18236 				; optimize OK (service.pas), line = 3341
 18237
 18238 919D A9 01			lda #$01
 18239 919F 99 65 9B			sta adr.SCORE.WALL_N,y
 18240
 18241 				; optimize FAIL (1, service.pas), line = 3342
 18242
 18243 91A2 E8				inx
 18244 91A3 AD 38 A6 95 96		mva X :STACKORIGIN,x
 18245 91A8 A9 00 95 A6			mva #$00 :STACKORIGIN+STACKWIDTH,x
 18246 91AC E8				inx
 18247 91AD A9 00 95 96			mva #$00 :STACKORIGIN,x
 18248 91B1 A9 01 95 A6			mva #$01 :STACKORIGIN+STACKWIDTH,x
 18249 91B5 20 17 13			jsr imulWORD
 18250 91B8 A5 86			lda :eax
 18251 91BA 95 95			sta :STACKORIGIN-1,x
 18252 91BC A5 87			lda :eax+1
 18253 91BE 95 A5			sta :STACKORIGIN-1+STACKWIDTH,x
 18254 91C0 A5 88			lda :eax+2
 18255 91C2 95 B5			sta :STACKORIGIN-1+STACKWIDTH*2,x
 18256 91C4 A5 89			lda :eax+3
 18257 91C6 95 C5			sta :STACKORIGIN-1+STACKWIDTH*3,x
 18258 91C8 A9 00 95 96			mva #$00 :STACKORIGIN,x
 18259 91CC 95 A6			sta :STACKORIGIN+STACKWIDTH,x
 18260 91CE E8				inx
 18261 91CF AD D6 98 95 96		mva ALL_WALLS :STACKORIGIN,x
 18262 91D4 AD D7 98 95 A6		mva ALL_WALLS+1 :STACKORIGIN+STACKWIDTH,x
 18263 91D9 AD D2 98			lda WALL_P
 18264 91DC 18 75 95			add :STACKORIGIN-1,x
 18265 91DF 85 8E			sta @move.dst
 18266 91E1 AD D3 98			lda WALL_P+1
 18267 91E4 75 A5			adc :STACKORIGIN-1+STACKWIDTH,x
 18268 91E6 85 8F			sta @move.dst+1
 18269 91E8 B5 96			lda :STACKORIGIN,x
 18270 91EA 85 8A			sta @move.src
 18271 91EC B5 A6			lda :STACKORIGIN+STACKWIDTH,x
 18272 91EE 85 8B			sta @move.src+1
 18273 91F0 CA				dex
 18274 91F1 CA				dex
 18275 91F2 A9 00			lda <256
 18276 91F4 85 86			sta @move.cnt
 18277 91F6 A9 01			lda >256
 18278 91F8 85 87			sta @move.cnt+1
 18279 91FA 20 D5 11			jsr @move
 18280
 18281 				; optimize OK (service.pas), line = 3344
 18282
 18283 91FD AC 38 A6			ldy X
 18284 9200 A9 00			lda #$00
 18285 9202 99 70 9B			sta adr.SCORE.ROUNDSEL,y
 18286
 18287 				; --- ForToDoEpilog
 18288 9205 EE 38 A6			inc X
 18289 9208 F0 03 4C 7A 91		jne l_35A2
 18290 920D			l_35B0
 18291
 18292 				; optimize OK (service.pas), line = 3347
 18293
 18294 920D A9 01			lda #$01
 18295 920F 8D 74 9B			sta CUR_PLAYER
 18296
 18297 				; ------------------------------------------------------------
 18298
 18299 = A638			X	= DATAORIGIN+$0C61
 18300
 18301 = A638			@VarData	= X
 18302 = 0001			@VarDataSize	= 1
 18303
 18304 9212			@exit
 18305 					.ifdef @new
 18306 					lda <@VarData
 18307 					sta :ztmp
 18308 					lda >@VarData
 18309 					ldy #@VarDataSize-1
 18310 					jmp @FreeMem
 18311 					els
 18312 9212 60				rts						; ret
 18313 					eif
 18314 				.endl
 18315
 18316 9213			.local	START_GAME					; PROCEDURE
 18317
 18318 				; optimize FAIL ('SET_START_PARAMETERS', service.pas), line = 3464
 18319
 18320 9213 20 75 91			jsr SET_START_PARAMETERS
 18321
 18322 				; optimize OK (service.pas), line = 3465
 18323
 18324 9216 AD 3A A6			lda PLAYERS+1
 18325 9219 D0 05			bne @+
 18326 921B AD 39 A6			lda PLAYERS
 18327 921E C9 01			cmp #$01
 18328 				@
 18329 9220 D0 05			jne l_35F5
 18330 9222 A9 00			lda #$00
 18331 9224 8D 6A 9B			sta adr.SCORE.LIVES+$02
 18332 9227			l_35F5
 18333
 18334 				; optimize OK (service.pas), line = 3468
 18335
 18336 9227 A9 00			lda #$00
 18337 9229 8D 7C 9B			sta TRAINER
 18338
 18339 				; optimize OK (service.pas), line = 3469
 18340
 18341 922C AD D4 98			lda WALL
 18342 922F 85 8E			sta @move.dst
 18343 9231 AD D5 98			lda WALL+1
 18344 9234 85 8F			sta @move.dst+1
 18345 9236 AD D2 98			lda WALL_P
 18346 9239 85 8A			sta @move.src
 18347 923B AD 74 9B			lda CUR_PLAYER
 18348 923E 18 6D D3 98			add WALL_P+1
 18349 9242 85 8B			sta @move.src+1
 18350 9244 A9 00			lda <256
 18351 9246 85 86			sta @move.cnt
 18352 9248 A9 01			lda >256
 18353 924A 85 87			sta @move.cnt+1
 18354 924C 20 D5 11			jsr @move
 18355
 18356 				; optimize FAIL ('SET_WALL', service.pas), line = 3471
 18357
 18358 924F 20 60 4C			jsr SET_WALL
 18359
 18360 				; optimize OK (service.pas), line = 3473
 18361
 18362 9252 AD B4 98			lda PATTERN
 18363 9255 8D 17 A5			sta FILL_PICTURE_WITH_PATTERN.PATT
 18364 9258 AD B5 98			lda PATTERN+1
 18365 925B 8D 18 A5			sta FILL_PICTURE_WITH_PATTERN.PATT+1
 18366 925E 20 10 6D			jsr FILL_PICTURE_WITH_PATTERN
 18367
 18368 				; optimize FAIL ('SHOWBTMPICTURE', service.pas), line = 3474
 18369
 18370 9261 E8				inx
 18371 9262 AD 94 98 95 96		mva PLAYSCREEN :STACKORIGIN,x
 18372 9267 AD 95 98 95 A6		mva PLAYSCREEN+1 :STACKORIGIN+STACKWIDTH,x
 18373 926C 20 1B 2D			jsr SHOWBTMPICTURE
 18374
 18375 				; optimize OK (service.pas), line = 3477
 18376
 18377 926F AD 94 98			lda PLAYSCREEN
 18378 9272 8D 10 A4			sta SETPALETTE.BTM
 18379 9275 AD 95 98			lda PLAYSCREEN+1
 18380 9278 8D 11 A4			sta SETPALETTE.BTM+1
 18381 927B 20 7B 2D			jsr SETPALETTE
 18382
 18383 				; optimize OK (service.pas), line = 3480
 18384
 18385 927E AD 5D 9B			lda adr.SCORE.PLAYER+$04
 18386 9281 8D 62 A5			sta WRITE_SCORE.SC
 18387 9284 AD 5E 9B			lda adr.SCORE.PLAYER+1+$04
 18388 9287 8D 63 A5			sta WRITE_SCORE.SC+1
 18389 928A AD 5F 9B			lda adr.SCORE.PLAYER+2+$04
 18390 928D 8D 64 A5			sta WRITE_SCORE.SC+2
 18391 9290 AD 60 9B			lda adr.SCORE.PLAYER+3+$04
 18392 9293 8D 65 A5			sta WRITE_SCORE.SC+3
 18393 9296 A9 FD			lda #$FD
 18394 9298 8D 5E A5			sta WRITE_SCORE.PX
 18395 929B A9 00			lda #$00
 18396 929D 8D 5F A5			sta WRITE_SCORE.PX+1
 18397 92A0 A9 3C			lda #$3C
 18398 92A2 8D 60 A5			sta WRITE_SCORE.PY
 18399 92A5 A9 00			lda #$00
 18400 92A7 8D 61 A5			sta WRITE_SCORE.PY+1
 18401 92AA 20 4A 78			jsr WRITE_SCORE
 18402
 18403 				; optimize OK (service.pas), line = 3481
 18404
 18405 92AD AD 61 9B			lda adr.SCORE.PLAYER+$08
 18406 92B0 8D 62 A5			sta WRITE_SCORE.SC
 18407 92B3 AD 62 9B			lda adr.SCORE.PLAYER+1+$08
 18408 92B6 8D 63 A5			sta WRITE_SCORE.SC+1
 18409 92B9 AD 63 9B			lda adr.SCORE.PLAYER+2+$08
 18410 92BC 8D 64 A5			sta WRITE_SCORE.SC+2
 18411 92BF AD 64 9B			lda adr.SCORE.PLAYER+3+$08
 18412 92C2 8D 65 A5			sta WRITE_SCORE.SC+3
 18413 92C5 A9 FD			lda #$FD
 18414 92C7 8D 5E A5			sta WRITE_SCORE.PX
 18415 92CA A9 00			lda #$00
 18416 92CC 8D 5F A5			sta WRITE_SCORE.PX+1
 18417 92CF A9 5D			lda #$5D
 18418 92D1 8D 60 A5			sta WRITE_SCORE.PY
 18419 92D4 A9 00			lda #$00
 18420 92D6 8D 61 A5			sta WRITE_SCORE.PY+1
 18421 92D9 20 4A 78			jsr WRITE_SCORE
 18422
 18423 				; optimize OK (service.pas), line = 3482
 18424
 18425 92DC A9 FD			lda #$FD
 18426 92DE 8D 5E A5			sta WRITE_SCORE.PX
 18427 92E1 A9 00			lda #$00
 18428 92E3 8D 5F A5			sta WRITE_SCORE.PX+1
 18429 92E6 A9 80			lda #$80
 18430 92E8 8D 60 A5			sta WRITE_SCORE.PY
 18431 92EB A9 00			lda #$00
 18432 92ED 8D 61 A5			sta WRITE_SCORE.PY+1
 18433 92F0 AD 6B 9B			lda SCORE.HISCORE
 18434 92F3 8D 62 A5			sta WRITE_SCORE.SC
 18435 92F6 AD 6C 9B			lda SCORE.HISCORE+1
 18436 92F9 8D 63 A5			sta WRITE_SCORE.SC+1
 18437 92FC AD 6D 9B			lda SCORE.HISCORE+2
 18438 92FF 8D 64 A5			sta WRITE_SCORE.SC+2
 18439 9302 AD 6E 9B			lda SCORE.HISCORE+3
 18440 9305 8D 65 A5			sta WRITE_SCORE.SC+3
 18441 9308 20 4A 78			jsr WRITE_SCORE
 18442
 18443 				; optimize FAIL ('PUT_WALL', service.pas), line = 3485
 18444
 18445 930B 20 0B 4C			jsr PUT_WALL
 18446
 18447 				; --- RepeatUntilProlog
 18448 930E			l_3624
 18449
 18450 				; --- RepeatUntilProlog
 18451 930E			l_3625
 18452
 18453 				; optimize OK (service.pas), line = 3492
 18454
 18455 930E AC 74 9B			ldy CUR_PLAYER
 18456 9311 B9 70 9B			lda adr.SCORE.ROUNDSEL,y
 18457 9314 F0 03 4C C4 93		jne l_3637
 18458
 18459 				; optimize FAIL (1, service.pas), line = 3494
 18460
 18461 9319 E8				inx
 18462 931A AD 74 9B 95 96		mva CUR_PLAYER :STACKORIGIN,x
 18463 931F A9 00 95 A6			mva #$00 :STACKORIGIN+STACKWIDTH,x
 18464 9323 20 5C 91			jsr CHOOSE_START_WALL
 18465 9326 E8				inx
 18466 9327 AD 13 A6 95 96		mva CHOOSE_START_WALL.RESULT :STACKORIGIN,x
 18467 932C AD 14 A6 95 A6		mva CHOOSE_START_WALL.RESULT+1 :STACKORIGIN+STACKWIDTH,x
 18468 9331 B4 95			ldy :STACKORIGIN-1,x
 18469 9333 B5 96			lda :STACKORIGIN,x
 18470 9335 99 65 9B			sta adr.SCORE.WALL_N,y
 18471 9338 CA				dex
 18472
 18473 				; optimize FAIL (1, service.pas), line = 3498
 18474
 18475 9339 AD 74 9B 95 96		mva CUR_PLAYER :STACKORIGIN,x
 18476 933E A9 00 95 A6			mva #$00 :STACKORIGIN+STACKWIDTH,x
 18477 9342 E8				inx
 18478 9343 A9 00 95 96			mva #$00 :STACKORIGIN,x
 18479 9347 A9 01 95 A6			mva #$01 :STACKORIGIN+STACKWIDTH,x
 18480 934B 20 17 13			jsr imulWORD
 18481 934E A5 86			lda :eax
 18482 9350 95 95			sta :STACKORIGIN-1,x
 18483 9352 A5 87			lda :eax+1
 18484 9354 95 A5			sta :STACKORIGIN-1+STACKWIDTH,x
 18485 9356 A5 88			lda :eax+2
 18486 9358 95 B5			sta :STACKORIGIN-1+STACKWIDTH*2,x
 18487 935A A5 89			lda :eax+3
 18488 935C 95 C5			sta :STACKORIGIN-1+STACKWIDTH*3,x
 18489 935E CA				dex
 18490 935F 20 5C 91			jsr CHOOSE_START_WALL
 18491 9362 E8				inx
 18492 9363 E8				inx
 18493 9364 AD 13 A6			lda CHOOSE_START_WALL.RESULT
 18494 9367 38 E9 01			sub #$01
 18495 936A 95 95			sta :STACKORIGIN-1,x
 18496 936C AD 14 A6			lda CHOOSE_START_WALL.RESULT+1
 18497 936F E9 00			sbc #$00
 18498 9371 95 A5			sta :STACKORIGIN-1+STACKWIDTH,x
 18499 9373 A9 00 95 96			mva #$00 :STACKORIGIN,x
 18500 9377 A9 01 95 A6			mva #$01 :STACKORIGIN+STACKWIDTH,x
 18501 937B 20 17 13			jsr imulWORD
 18502 937E A5 86			lda :eax
 18503 9380 95 95			sta :STACKORIGIN-1,x
 18504 9382 A5 87			lda :eax+1
 18505 9384 95 A5			sta :STACKORIGIN-1+STACKWIDTH,x
 18506 9386 A5 88			lda :eax+2
 18507 9388 95 B5			sta :STACKORIGIN-1+STACKWIDTH*2,x
 18508 938A A5 89			lda :eax+3
 18509 938C 95 C5			sta :STACKORIGIN-1+STACKWIDTH*3,x
 18510 938E AD D6 98 95 96		mva ALL_WALLS :STACKORIGIN,x
 18511 9393 AD D7 98 95 A6		mva ALL_WALLS+1 :STACKORIGIN+STACKWIDTH,x
 18512 9398 AD D2 98			lda WALL_P
 18513 939B 18 75 95			add :STACKORIGIN-1,x
 18514 939E 85 8E			sta @move.dst
 18515 93A0 AD D3 98			lda WALL_P+1
 18516 93A3 75 A5			adc :STACKORIGIN-1+STACKWIDTH,x
 18517 93A5 85 8F			sta @move.dst+1
 18518 93A7 B5 96			lda :STACKORIGIN,x
 18519 93A9 85 8A			sta @move.src
 18520 93AB B5 A6			lda :STACKORIGIN+STACKWIDTH,x
 18521 93AD 85 8B			sta @move.src+1
 18522 93AF CA				dex
 18523 93B0 CA				dex
 18524 93B1 A9 00			lda <256
 18525 93B3 85 86			sta @move.cnt
 18526 93B5 A9 01			lda >256
 18527 93B7 85 87			sta @move.cnt+1
 18528 93B9 20 D5 11			jsr @move
 18529
 18530 				; optimize OK (service.pas), line = 3501
 18531
 18532 93BC AC 74 9B			ldy CUR_PLAYER
 18533 93BF A9 01			lda #$01
 18534 93C1 99 70 9B			sta adr.SCORE.ROUNDSEL,y
 18535 93C4			l_3637
 18536
 18537 				; optimize OK (service.pas), line = 3505
 18538
 18539 93C4 AD D4 98			lda WALL
 18540 93C7 85 8E			sta @move.dst
 18541 93C9 AD D5 98			lda WALL+1
 18542 93CC 85 8F			sta @move.dst+1
 18543 93CE AD D2 98			lda WALL_P
 18544 93D1 85 8A			sta @move.src
 18545 93D3 AD 74 9B			lda CUR_PLAYER
 18546 93D6 18 6D D3 98			add WALL_P+1
 18547 93DA 85 8B			sta @move.src+1
 18548 93DC A9 00			lda <256
 18549 93DE 85 86			sta @move.cnt
 18550 93E0 A9 01			lda >256
 18551 93E2 85 87			sta @move.cnt+1
 18552 93E4 20 D5 11			jsr @move
 18553
 18554 				; optimize FAIL ('SET_WALL', service.pas), line = 3506
 18555
 18556 93E7 20 60 4C			jsr SET_WALL
 18557
 18558 				; optimize FAIL ('BOUNCEBALL', service.pas), line = 3511
 18559
 18560 93EA 20 30 89			jsr BOUNCEBALL
 18561 93ED AD AC A5			lda BOUNCEBALL.RESULT
 18562 93F0 8D 3B A6			sta NWALL
 18563
 18564 				; optimize OK (service.pas), line = 3515
 18565
 18566 93F3 D0 03 4C 9B 94		jeq l_3674
 18567
 18568 				; optimize OK (service.pas), line = 3518
 18569
 18570 93F8 AC 74 9B			ldy CUR_PLAYER
 18571 93FB B9 65 9B			lda adr.SCORE.WALL_N,y
 18572 93FE 18 69 01			add #$01
 18573 9401 99 65 9B			sta adr.SCORE.WALL_N,y
 18574
 18575 				; optimize OK (service.pas), line = 3521
 18576
 18577 9404 AD 58 9B			lda TOTALWALL
 18578 9407 D9 65 9B			cmp adr.SCORE.WALL_N,y
 18579 940A B0 05			jcs l_3690
 18580
 18581 				; optimize OK (service.pas), line = 3522
 18582
 18583 940C A9 01			lda #$01
 18584 940E 99 65 9B			sta adr.SCORE.WALL_N,y
 18585 9411			l_3690
 18586
 18587 				; optimize FAIL (1, service.pas), line = 3525
 18588
 18589 9411 E8				inx
 18590 9412 AD 74 9B 95 96		mva CUR_PLAYER :STACKORIGIN,x
 18591 9417 A9 00 95 A6			mva #$00 :STACKORIGIN+STACKWIDTH,x
 18592 941B E8				inx
 18593 941C A9 00 95 96			mva #$00 :STACKORIGIN,x
 18594 9420 A9 01 95 A6			mva #$01 :STACKORIGIN+STACKWIDTH,x
 18595 9424 20 17 13			jsr imulWORD
 18596 9427 A5 86			lda :eax
 18597 9429 95 95			sta :STACKORIGIN-1,x
 18598 942B A5 87			lda :eax+1
 18599 942D 95 A5			sta :STACKORIGIN-1+STACKWIDTH,x
 18600 942F A5 88			lda :eax+2
 18601 9431 95 B5			sta :STACKORIGIN-1+STACKWIDTH*2,x
 18602 9433 A5 89			lda :eax+3
 18603 9435 95 C5			sta :STACKORIGIN-1+STACKWIDTH*3,x
 18604 9437 AC 74 9B			ldy CUR_PLAYER
 18605 943A B9 65 9B			lda adr.SCORE.WALL_N,y
 18606 943D 95 96			sta :STACKORIGIN,x
 18607 943F A9 00 95 A6			mva #$00 :STACKORIGIN+STACKWIDTH,x
 18608 9443 E8				inx
 18609 9444 A9 01 95 96			mva #$01 :STACKORIGIN,x
 18610 9448 A9 00 95 A6			mva #$00 :STACKORIGIN+STACKWIDTH,x
 18611 944C 20 EA 10			jsr subAX_CX
 18612 944F A9 00 95 96			mva #$00 :STACKORIGIN,x
 18613 9453 A9 01 95 A6			mva #$01 :STACKORIGIN+STACKWIDTH,x
 18614 9457 20 17 13			jsr imulWORD
 18615 945A A5 86			lda :eax
 18616 945C 95 95			sta :STACKORIGIN-1,x
 18617 945E A5 87			lda :eax+1
 18618 9460 95 A5			sta :STACKORIGIN-1+STACKWIDTH,x
 18619 9462 A5 88			lda :eax+2
 18620 9464 95 B5			sta :STACKORIGIN-1+STACKWIDTH*2,x
 18621 9466 A5 89			lda :eax+3
 18622 9468 95 C5			sta :STACKORIGIN-1+STACKWIDTH*3,x
 18623 946A AD D6 98 95 96		mva ALL_WALLS :STACKORIGIN,x
 18624 946F AD D7 98 95 A6		mva ALL_WALLS+1 :STACKORIGIN+STACKWIDTH,x
 18625 9474 AD D2 98			lda WALL_P
 18626 9477 18 75 95			add :STACKORIGIN-1,x
 18627 947A 85 8E			sta @move.dst
 18628 947C AD D3 98			lda WALL_P+1
 18629 947F 75 A5			adc :STACKORIGIN-1+STACKWIDTH,x
 18630 9481 85 8F			sta @move.dst+1
 18631 9483 B5 96			lda :STACKORIGIN,x
 18632 9485 85 8A			sta @move.src
 18633 9487 B5 A6			lda :STACKORIGIN+STACKWIDTH,x
 18634 9489 85 8B			sta @move.src+1
 18635 948B CA				dex
 18636 948C CA				dex
 18637 948D A9 00			lda <256
 18638 948F 85 86			sta @move.cnt
 18639 9491 A9 01			lda >256
 18640 9493 85 87			sta @move.cnt+1
 18641 9495 20 D5 11			jsr @move
 18642 9498 4C A6 94			jmp l_36BA
 18643 949B			l_3674
 18644
 18645 				; optimize OK (service.pas), line = 3531
 18646
 18647 949B AC 74 9B			ldy CUR_PLAYER
 18648 949E B9 68 9B			lda adr.SCORE.LIVES,y
 18649 94A1 D0 03			jne l_36CF
 18650 94A3 20 A1 6F			jsr GAME_OVER
 18651 94A6			l_36BA
 18652 94A6			l_36CF
 18653
 18654 				; optimize OK (service.pas), line = 3536
 18655
 18656 94A6 AD 3B A6			lda NWALL
 18657 94A9 F0 03 4C 0E 93		jne l_3625
 18658
 18659 				; optimize FAIL (0, service.pas), line = 3539
 18660
 18661 94AE EE 74 9B			inc CUR_PLAYER
 18662
 18663 				; optimize OK (service.pas), line = 3540
 18664
 18665 94B1 AD 39 A6			lda PLAYERS
 18666 94B4 CD 74 9B			cmp CUR_PLAYER
 18667 94B7 AD 3A A6			lda PLAYERS+1
 18668 94BA E9 00			sbc #$00
 18669 94BC 50 02			svc
 18670 94BE 49 80			eor #$80
 18671 94C0 10 05			jpl l_36F7
 18672 94C2 A9 01			lda #$01
 18673 94C4 8D 74 9B			sta CUR_PLAYER
 18674 94C7			l_36F7
 18675
 18676 				; optimize OK (service.pas), line = 3546
 18677
 18678 94C7 AC 74 9B			ldy CUR_PLAYER
 18679 94CA B9 68 9B			lda adr.SCORE.LIVES,y
 18680 94CD D0 09			jne l_3713
 18681 94CF A9 03			lda #$03
 18682 94D1 38 ED 74 9B			sub CUR_PLAYER
 18683 94D5 8D 74 9B			sta CUR_PLAYER
 18684 94D8			l_3713
 18685
 18686 				; optimize OK (service.pas), line = 3551
 18687
 18688 94D8 A0 01			ldy #1
 18689 94DA AD 69 9B			lda adr.SCORE.LIVES+$01
 18690 94DD F0 01			beq @+
 18691 94DF 88				dey
 18692 				@
 18693 94E0 84 9F			sty :STACKORIGIN+9
 18694 94E2 A0 01			ldy #1
 18695 94E4 AD 6A 9B			lda adr.SCORE.LIVES+$02
 18696 94E7 F0 01			beq @+
 18697 94E9 88				dey
 18698 				@
 18699 94EA 98				tya
 18700 94EB 25 9F			and :STACKORIGIN+9
 18701 94ED 0D 73 9B			ora SCORE.ABORTPLAY
 18702 94F0 D0 03 4C 0E 93		jeq l_3624
 18703
 18704 				; ------------------------------------------------------------
 18705
 18706 = A639			PLAYERS	= DATAORIGIN+$0C62
 18707 = A63B			NWALL	= DATAORIGIN+$0C64
 18708
 18709 = A639			@VarData	= PLAYERS
 18710 = 0003			@VarDataSize	= 3
 18711
 18712 94F5			@exit
 18713 					.ifdef @new
 18714 					lda <@VarData
 18715 					sta :ztmp
 18716 					lda >@VarData
 18717 					ldy #@VarDataSize-1
 18718 					jmp @FreeMem
 18719 					els
 18720 94F5 60				rts						; ret
 18721 					eif
 18722 				.endl
 18723
 18724 94F6			.local	INIT_GAME					; PROCEDURE
 18725
 18726 				; optimize FAIL ('INITSVGA', arkanoid_vbxe.pas), line = 150
 18727
 18728 94F6 20 93 27			jsr INITSVGA
 18729
 18730 				; optimize FAIL ('INITROWARRAY', arkanoid_vbxe.pas), line = 151
 18731
 18732 94F9 20 20 27			jsr INITROWARRAY
 18733
 18734 				; optimize OK (btm.inc), line = 1
 18735
 18736 94FC A9 00			lda #$00
 18737 94FE 8D A4 9A			sta PLAYSCREEN.OFS
 18738 9501 A9 4A			lda #$4A
 18739 9503 8D A5 9A			sta PLAYSCREEN.OFS+1
 18740 9506 A9 01			lda #$01
 18741 9508 8D A6 9A			sta PLAYSCREEN.OFS+2
 18742 950B A9 00			lda #$00
 18743 950D 8D A7 9A			sta PLAYSCREEN.OFS+3
 18744
 18745 				; optimize OK (btm.inc), line = 2
 18746
 18747 9510 A9 40			lda #$40
 18748 9512 8D A0 9A			sta PLAYSCREEN.WIDTH
 18749 9515 A9 01			lda #$01
 18750 9517 8D A1 9A			sta PLAYSCREEN.WIDTH+1
 18751
 18752 				; optimize OK (btm.inc), line = 3
 18753
 18754 951A A9 C8			lda #$C8
 18755 951C 8D A2 9A			sta PLAYSCREEN.HEIGHT
 18756 951F A9 00			lda #$00
 18757 9521 8D A3 9A			sta PLAYSCREEN.HEIGHT+1
 18758
 18759 				; optimize OK (btm.inc), line = 5
 18760
 18761 9524 8D DC 9A			sta PRESENTS.OFS
 18762 9527 A9 44			lda #$44
 18763 9529 8D DD 9A			sta PRESENTS.OFS+1
 18764 952C A9 02			lda #$02
 18765 952E 8D DE 9A			sta PRESENTS.OFS+2
 18766 9531 A9 00			lda #$00
 18767 9533 8D DF 9A			sta PRESENTS.OFS+3
 18768
 18769 				; optimize OK (btm.inc), line = 6
 18770
 18771 9536 A9 40			lda #$40
 18772 9538 8D D8 9A			sta PRESENTS.WIDTH
 18773 953B A9 01			lda #$01
 18774 953D 8D D9 9A			sta PRESENTS.WIDTH+1
 18775
 18776 				; optimize OK (btm.inc), line = 7
 18777
 18778 9540 A9 C8			lda #$C8
 18779 9542 8D DA 9A			sta PRESENTS.HEIGHT
 18780 9545 A9 00			lda #$00
 18781 9547 8D DB 9A			sta PRESENTS.HEIGHT+1
 18782
 18783 				; optimize OK (btm.inc), line = 9
 18784
 18785 954A 8D CC 9A			sta EXPLOSION.OFS
 18786 954D A9 3E			lda #$3E
 18787 954F 8D CD 9A			sta EXPLOSION.OFS+1
 18788 9552 A9 03			lda #$03
 18789 9554 8D CE 9A			sta EXPLOSION.OFS+2
 18790 9557 A9 00			lda #$00
 18791 9559 8D CF 9A			sta EXPLOSION.OFS+3
 18792
 18793 				; optimize OK (btm.inc), line = 10
 18794
 18795 955C A9 2A			lda #$2A
 18796 955E 8D C8 9A			sta EXPLOSION.WIDTH
 18797 9561 A9 00			lda #$00
 18798 9563 8D C9 9A			sta EXPLOSION.WIDTH+1
 18799
 18800 				; optimize OK (btm.inc), line = 11
 18801
 18802 9566 A9 72			lda #$72
 18803 9568 8D CA 9A			sta EXPLOSION.HEIGHT
 18804 956B A9 00			lda #$00
 18805 956D 8D CB 9A			sta EXPLOSION.HEIGHT+1
 18806
 18807 				; optimize OK (btm.inc), line = 13
 18808
 18809 9570 A9 B4			lda #$B4
 18810 9572 8D D4 9A			sta NEWVAUS.OFS
 18811 9575 A9 50			lda #$50
 18812 9577 8D D5 9A			sta NEWVAUS.OFS+1
 18813 957A A9 03			lda #$03
 18814 957C 8D D6 9A			sta NEWVAUS.OFS+2
 18815 957F A9 00			lda #$00
 18816 9581 8D D7 9A			sta NEWVAUS.OFS+3
 18817
 18818 				; optimize OK (btm.inc), line = 14
 18819
 18820 9584 A9 29			lda #$29
 18821 9586 8D D0 9A			sta NEWVAUS.WIDTH
 18822 9589 A9 00			lda #$00
 18823 958B 8D D1 9A			sta NEWVAUS.WIDTH+1
 18824
 18825 				; optimize OK (btm.inc), line = 15
 18826
 18827 958E A9 C1			lda #$C1
 18828 9590 8D D2 9A			sta NEWVAUS.HEIGHT
 18829 9593 A9 00			lda #$00
 18830 9595 8D D3 9A			sta NEWVAUS.HEIGHT+1
 18831
 18832 				; optimize OK (btm.inc), line = 17
 18833
 18834 9598 A9 9D			lda #$9D
 18835 959A 8D E4 9A			sta SOUNDFX.OFS
 18836 959D A9 6F			lda #$6F
 18837 959F 8D E5 9A			sta SOUNDFX.OFS+1
 18838 95A2 A9 03			lda #$03
 18839 95A4 8D E6 9A			sta SOUNDFX.OFS+2
 18840 95A7 A9 00			lda #$00
 18841 95A9 8D E7 9A			sta SOUNDFX.OFS+3
 18842
 18843 				; optimize OK (btm.inc), line = 18
 18844
 18845 95AC A9 15			lda #$15
 18846 95AE 8D E0 9A			sta SOUNDFX.WIDTH
 18847 95B1 A9 00			lda #$00
 18848 95B3 8D E1 9A			sta SOUNDFX.WIDTH+1
 18849
 18850 				; optimize OK (btm.inc), line = 19
 18851
 18852 95B6 A9 26			lda #$26
 18853 95B8 8D E2 9A			sta SOUNDFX.HEIGHT
 18854 95BB A9 00			lda #$00
 18855 95BD 8D E3 9A			sta SOUNDFX.HEIGHT+1
 18856
 18857 				; optimize OK (btm.inc), line = 21
 18858
 18859 95C0 A9 BB			lda #$BB
 18860 95C2 8D EC 9A			sta SHINEWALL.OFS
 18861 95C5 A9 72			lda #$72
 18862 95C7 8D ED 9A			sta SHINEWALL.OFS+1
 18863 95CA A9 03			lda #$03
 18864 95CC 8D EE 9A			sta SHINEWALL.OFS+2
 18865 95CF A9 00			lda #$00
 18866 95D1 8D EF 9A			sta SHINEWALL.OFS+3
 18867
 18868 				; optimize OK (btm.inc), line = 22
 18869
 18870 95D4 A9 10			lda #$10
 18871 95D6 8D E8 9A			sta SHINEWALL.WIDTH
 18872 95D9 A9 00			lda #$00
 18873 95DB 8D E9 9A			sta SHINEWALL.WIDTH+1
 18874
 18875 				; optimize OK (btm.inc), line = 23
 18876
 18877 95DE A9 50			lda #$50
 18878 95E0 8D EA 9A			sta SHINEWALL.HEIGHT
 18879 95E3 A9 00			lda #$00
 18880 95E5 8D EB 9A			sta SHINEWALL.HEIGHT+1
 18881
 18882 				; optimize OK (btm.inc), line = 25
 18883
 18884 95E8 A9 BB			lda #$BB
 18885 95EA 8D F4 9A			sta MINIVAUS.OFS
 18886 95ED A9 77			lda #$77
 18887 95EF 8D F5 9A			sta MINIVAUS.OFS+1
 18888 95F2 A9 03			lda #$03
 18889 95F4 8D F6 9A			sta MINIVAUS.OFS+2
 18890 95F7 A9 00			lda #$00
 18891 95F9 8D F7 9A			sta MINIVAUS.OFS+3
 18892
 18893 				; optimize OK (btm.inc), line = 26
 18894
 18895 95FC A9 14			lda #$14
 18896 95FE 8D F0 9A			sta MINIVAUS.WIDTH
 18897 9601 A9 00			lda #$00
 18898 9603 8D F1 9A			sta MINIVAUS.WIDTH+1
 18899
 18900 				; optimize OK (btm.inc), line = 27
 18901
 18902 9606 A9 05			lda #$05
 18903 9608 8D F2 9A			sta MINIVAUS.HEIGHT
 18904 960B A9 00			lda #$00
 18905 960D 8D F3 9A			sta MINIVAUS.HEIGHT+1
 18906
 18907 				; optimize OK (btm.inc), line = 29
 18908
 18909 9610 A9 1F			lda #$1F
 18910 9612 8D FC 9A			sta LEVELSEL.OFS
 18911 9615 A9 78			lda #$78
 18912 9617 8D FD 9A			sta LEVELSEL.OFS+1
 18913 961A A9 03			lda #$03
 18914 961C 8D FE 9A			sta LEVELSEL.OFS+2
 18915 961F A9 00			lda #$00
 18916 9621 8D FF 9A			sta LEVELSEL.OFS+3
 18917
 18918 				; optimize OK (btm.inc), line = 30
 18919
 18920 9624 A9 15			lda #$15
 18921 9626 8D F8 9A			sta LEVELSEL.WIDTH
 18922 9629 A9 00			lda #$00
 18923 962B 8D F9 9A			sta LEVELSEL.WIDTH+1
 18924
 18925 				; optimize OK (btm.inc), line = 31
 18926
 18927 962E A9 5F			lda #$5F
 18928 9630 8D FA 9A			sta LEVELSEL.HEIGHT
 18929 9633 A9 00			lda #$00
 18930 9635 8D FB 9A			sta LEVELSEL.HEIGHT+1
 18931
 18932 				; optimize OK (btm.inc), line = 33
 18933
 18934 9638 A9 EA			lda #$EA
 18935 963A 8D 04 9B			sta LETTERS.OFS
 18936 963D A9 7F			lda #$7F
 18937 963F 8D 05 9B			sta LETTERS.OFS+1
 18938 9642 A9 03			lda #$03
 18939 9644 8D 06 9B			sta LETTERS.OFS+2
 18940 9647 A9 00			lda #$00
 18941 9649 8D 07 9B			sta LETTERS.OFS+3
 18942
 18943 				; optimize OK (btm.inc), line = 34
 18944
 18945 964C A9 80			lda #$80
 18946 964E 8D 00 9B			sta LETTERS.WIDTH
 18947 9651 A9 00			lda #$00
 18948 9653 8D 01 9B			sta LETTERS.WIDTH+1
 18949
 18950 				; optimize OK (btm.inc), line = 35
 18951
 18952 9656 A9 38			lda #$38
 18953 9658 8D 02 9B			sta LETTERS.HEIGHT
 18954 965B A9 00			lda #$00
 18955 965D 8D 03 9B			sta LETTERS.HEIGHT+1
 18956
 18957 				; optimize OK (btm.inc), line = 37
 18958
 18959 9660 A9 EA			lda #$EA
 18960 9662 8D B4 9A			sta NORMAL.OFS
 18961 9665 A9 9B			lda #$9B
 18962 9667 8D B5 9A			sta NORMAL.OFS+1
 18963 966A A9 03			lda #$03
 18964 966C 8D B6 9A			sta NORMAL.OFS+2
 18965 966F A9 00			lda #$00
 18966 9671 8D B7 9A			sta NORMAL.OFS+3
 18967
 18968 				; optimize OK (btm.inc), line = 38
 18969
 18970 9674 A9 20			lda #$20
 18971 9676 8D B0 9A			sta NORMAL.WIDTH
 18972 9679 A9 00			lda #$00
 18973 967B 8D B1 9A			sta NORMAL.WIDTH+1
 18974
 18975 				; optimize OK (btm.inc), line = 39
 18976
 18977 967E A9 07			lda #$07
 18978 9680 8D B2 9A			sta NORMAL.HEIGHT
 18979 9683 A9 00			lda #$00
 18980 9685 8D B3 9A			sta NORMAL.HEIGHT+1
 18981
 18982 				; optimize OK (btm.inc), line = 41
 18983
 18984 9688 A9 CA			lda #$CA
 18985 968A 8D C4 9A			sta LASERS.OFS
 18986 968D A9 9C			lda #$9C
 18987 968F 8D C5 9A			sta LASERS.OFS+1
 18988 9692 A9 03			lda #$03
 18989 9694 8D C6 9A			sta LASERS.OFS+2
 18990 9697 A9 00			lda #$00
 18991 9699 8D C7 9A			sta LASERS.OFS+3
 18992
 18993 				; optimize OK (btm.inc), line = 42
 18994
 18995 969C A9 20			lda #$20
 18996 969E 8D C0 9A			sta LASERS.WIDTH
 18997 96A1 A9 00			lda #$00
 18998 96A3 8D C1 9A			sta LASERS.WIDTH+1
 18999
 19000 				; optimize OK (btm.inc), line = 43
 19001
 19002 96A6 A9 07			lda #$07
 19003 96A8 8D C2 9A			sta LASERS.HEIGHT
 19004 96AB A9 00			lda #$00
 19005 96AD 8D C3 9A			sta LASERS.HEIGHT+1
 19006
 19007 				; optimize OK (btm.inc), line = 45
 19008
 19009 96B0 A9 AA			lda #$AA
 19010 96B2 8D BC 9A			sta ENLARGED.OFS
 19011 96B5 A9 9D			lda #$9D
 19012 96B7 8D BD 9A			sta ENLARGED.OFS+1
 19013 96BA A9 03			lda #$03
 19014 96BC 8D BE 9A			sta ENLARGED.OFS+2
 19015 96BF A9 00			lda #$00
 19016 96C1 8D BF 9A			sta ENLARGED.OFS+3
 19017
 19018 				; optimize OK (btm.inc), line = 46
 19019
 19020 96C4 A9 40			lda #$40
 19021 96C6 8D B8 9A			sta ENLARGED.WIDTH
 19022 96C9 A9 00			lda #$00
 19023 96CB 8D B9 9A			sta ENLARGED.WIDTH+1
 19024
 19025 				; optimize OK (btm.inc), line = 47
 19026
 19027 96CE A9 07			lda #$07
 19028 96D0 8D BA 9A			sta ENLARGED.HEIGHT
 19029 96D3 A9 00			lda #$00
 19030 96D5 8D BB 9A			sta ENLARGED.HEIGHT+1
 19031
 19032 				; optimize OK (btm.inc), line = 49
 19033
 19034 96D8 A9 6A			lda #$6A
 19035 96DA 8D 0C 9B			sta SHOOTS.OFS
 19036 96DD A9 9F			lda #$9F
 19037 96DF 8D 0D 9B			sta SHOOTS.OFS+1
 19038 96E2 A9 03			lda #$03
 19039 96E4 8D 0E 9B			sta SHOOTS.OFS+2
 19040 96E7 A9 00			lda #$00
 19041 96E9 8D 0F 9B			sta SHOOTS.OFS+3
 19042
 19043 				; optimize OK (btm.inc), line = 50
 19044
 19045 96EC A9 0D			lda #$0D
 19046 96EE 8D 08 9B			sta SHOOTS.WIDTH
 19047 96F1 A9 00			lda #$00
 19048 96F3 8D 09 9B			sta SHOOTS.WIDTH+1
 19049
 19050 				; optimize OK (btm.inc), line = 51
 19051
 19052 96F6 A9 08			lda #$08
 19053 96F8 8D 0A 9B			sta SHOOTS.HEIGHT
 19054 96FB A9 00			lda #$00
 19055 96FD 8D 0B 9B			sta SHOOTS.HEIGHT+1
 19056
 19057 				; optimize OK (btm.inc), line = 53
 19058
 19059 9700 A9 D2			lda #$D2
 19060 9702 8D 14 9B			sta FLUX.OFS
 19061 9705 A9 9F			lda #$9F
 19062 9707 8D 15 9B			sta FLUX.OFS+1
 19063 970A A9 03			lda #$03
 19064 970C 8D 16 9B			sta FLUX.OFS+2
 19065 970F A9 00			lda #$00
 19066 9711 8D 17 9B			sta FLUX.OFS+3
 19067
 19068 				; optimize OK (btm.inc), line = 54
 19069
 19070 9714 A9 08			lda #$08
 19071 9716 8D 10 9B			sta FLUX.WIDTH
 19072 9719 A9 00			lda #$00
 19073 971B 8D 11 9B			sta FLUX.WIDTH+1
 19074
 19075 				; optimize OK (btm.inc), line = 55
 19076
 19077 971E A9 29			lda #$29
 19078 9720 8D 12 9B			sta FLUX.HEIGHT
 19079 9723 A9 00			lda #$00
 19080 9725 8D 13 9B			sta FLUX.HEIGHT+1
 19081
 19082 				; optimize OK (btm.inc), line = 57
 19083
 19084 9728 A9 1A			lda #$1A
 19085 972A 8D 9C 9A			sta BALLDATA.OFS
 19086 972D A9 A1			lda #$A1
 19087 972F 8D 9D 9A			sta BALLDATA.OFS+1
 19088 9732 A9 03			lda #$03
 19089 9734 8D 9E 9A			sta BALLDATA.OFS+2
 19090 9737 A9 00			lda #$00
 19091 9739 8D 9F 9A			sta BALLDATA.OFS+3
 19092
 19093 				; optimize OK (btm.inc), line = 58
 19094
 19095 973C A9 05			lda #$05
 19096 973E 8D 98 9A			sta BALLDATA.WIDTH
 19097 9741 A9 00			lda #$00
 19098 9743 8D 99 9A			sta BALLDATA.WIDTH+1
 19099
 19100 				; optimize OK (btm.inc), line = 59
 19101
 19102 9746 A9 05			lda #$05
 19103 9748 8D 9A 9A			sta BALLDATA.HEIGHT
 19104 974B A9 00			lda #$00
 19105 974D 8D 9B 9A			sta BALLDATA.HEIGHT+1
 19106
 19107 				; optimize OK (btm.inc), line = 61
 19108
 19109 9750 A9 33			lda #$33
 19110 9752 8D 29 9B			sta PATTERN.OFS
 19111 9755 A9 A1			lda #$A1
 19112 9757 8D 2A 9B			sta PATTERN.OFS+1
 19113 975A A9 03			lda #$03
 19114 975C 8D 2B 9B			sta PATTERN.OFS+2
 19115 975F A9 00			lda #$00
 19116 9761 8D 2C 9B			sta PATTERN.OFS+3
 19117
 19118 				; optimize OK (btm.inc), line = 62
 19119
 19120 9764 A9 1A			lda #$1A
 19121 9766 8D 25 9B			sta PATTERN.WIDTH
 19122 9769 A9 00			lda #$00
 19123 976B 8D 26 9B			sta PATTERN.WIDTH+1
 19124
 19125 				; optimize OK (btm.inc), line = 63
 19126
 19127 976E A9 18			lda #$18
 19128 9770 8D 27 9B			sta PATTERN.HEIGHT
 19129 9773 A9 00			lda #$00
 19130 9775 8D 28 9B			sta PATTERN.HEIGHT+1
 19131
 19132 				; optimize OK (btm.inc), line = 65
 19133
 19134 9778 A9 A3			lda #$A3
 19135 977A 8D 31 9B			sta PATTERN0.OFS
 19136 977D 8D 32 9B			sta PATTERN0.OFS+1
 19137 9780 A9 03			lda #$03
 19138 9782 8D 33 9B			sta PATTERN0.OFS+2
 19139 9785 A9 00			lda #$00
 19140 9787 8D 34 9B			sta PATTERN0.OFS+3
 19141
 19142 				; optimize OK (btm.inc), line = 66
 19143
 19144 978A A9 1A			lda #$1A
 19145 978C 8D 2D 9B			sta PATTERN0.WIDTH
 19146 978F A9 00			lda #$00
 19147 9791 8D 2E 9B			sta PATTERN0.WIDTH+1
 19148
 19149 				; optimize OK (btm.inc), line = 67
 19150
 19151 9794 A9 18			lda #$18
 19152 9796 8D 2F 9B			sta PATTERN0.HEIGHT
 19153 9799 A9 00			lda #$00
 19154 979B 8D 30 9B			sta PATTERN0.HEIGHT+1
 19155
 19156 				; optimize OK (btm.inc), line = 69
 19157
 19158 979E A9 13			lda #$13
 19159 97A0 8D 39 9B			sta PATTERN1.OFS
 19160 97A3 A9 A6			lda #$A6
 19161 97A5 8D 3A 9B			sta PATTERN1.OFS+1
 19162 97A8 A9 03			lda #$03
 19163 97AA 8D 3B 9B			sta PATTERN1.OFS+2
 19164 97AD A9 00			lda #$00
 19165 97AF 8D 3C 9B			sta PATTERN1.OFS+3
 19166
 19167 				; optimize OK (btm.inc), line = 70
 19168
 19169 97B2 A9 0E			lda #$0E
 19170 97B4 8D 35 9B			sta PATTERN1.WIDTH
 19171 97B7 A9 00			lda #$00
 19172 97B9 8D 36 9B			sta PATTERN1.WIDTH+1
 19173
 19174 				; optimize OK (btm.inc), line = 71
 19175
 19176 97BC A9 0E			lda #$0E
 19177 97BE 8D 37 9B			sta PATTERN1.HEIGHT
 19178 97C1 A9 00			lda #$00
 19179 97C3 8D 38 9B			sta PATTERN1.HEIGHT+1
 19180
 19181 				; optimize OK (btm.inc), line = 73
 19182
 19183 97C6 A9 D7			lda #$D7
 19184 97C8 8D 41 9B			sta PATTERN2.OFS
 19185 97CB A9 A6			lda #$A6
 19186 97CD 8D 42 9B			sta PATTERN2.OFS+1
 19187 97D0 A9 03			lda #$03
 19188 97D2 8D 43 9B			sta PATTERN2.OFS+2
 19189 97D5 A9 00			lda #$00
 19190 97D7 8D 44 9B			sta PATTERN2.OFS+3
 19191
 19192 				; optimize OK (btm.inc), line = 74
 19193
 19194 97DA A9 26			lda #$26
 19195 97DC 8D 3D 9B			sta PATTERN2.WIDTH
 19196 97DF A9 00			lda #$00
 19197 97E1 8D 3E 9B			sta PATTERN2.WIDTH+1
 19198
 19199 				; optimize OK (btm.inc), line = 75
 19200
 19201 97E4 A9 23			lda #$23
 19202 97E6 8D 3F 9B			sta PATTERN2.HEIGHT
 19203 97E9 A9 00			lda #$00
 19204 97EB 8D 40 9B			sta PATTERN2.HEIGHT+1
 19205
 19206 				; optimize OK (btm.inc), line = 77
 19207
 19208 97EE A9 09			lda #$09
 19209 97F0 8D 49 9B			sta PATTERN3.OFS
 19210 97F3 A9 AC			lda #$AC
 19211 97F5 8D 4A 9B			sta PATTERN3.OFS+1
 19212 97F8 A9 03			lda #$03
 19213 97FA 8D 4B 9B			sta PATTERN3.OFS+2
 19214 97FD A9 00			lda #$00
 19215 97FF 8D 4C 9B			sta PATTERN3.OFS+3
 19216
 19217 				; optimize OK (btm.inc), line = 78
 19218
 19219 9802 A9 1C			lda #$1C
 19220 9804 8D 45 9B			sta PATTERN3.WIDTH
 19221 9807 A9 00			lda #$00
 19222 9809 8D 46 9B			sta PATTERN3.WIDTH+1
 19223
 19224 				; optimize OK (btm.inc), line = 79
 19225
 19226 980C A9 1D			lda #$1D
 19227 980E 8D 47 9B			sta PATTERN3.HEIGHT
 19228 9811 A9 00			lda #$00
 19229 9813 8D 48 9B			sta PATTERN3.HEIGHT+1
 19230
 19231 				; optimize OK (btm.inc), line = 81
 19232
 19233 9816 A9 35			lda #$35
 19234 9818 8D 51 9B			sta PATTERN4.OFS
 19235 981B A9 AF			lda #$AF
 19236 981D 8D 52 9B			sta PATTERN4.OFS+1
 19237 9820 A9 03			lda #$03
 19238 9822 8D 53 9B			sta PATTERN4.OFS+2
 19239 9825 A9 00			lda #$00
 19240 9827 8D 54 9B			sta PATTERN4.OFS+3
 19241
 19242 				; optimize OK (btm.inc), line = 82
 19243
 19244 982A A9 1E			lda #$1E
 19245 982C 8D 4D 9B			sta PATTERN4.WIDTH
 19246 982F A9 00			lda #$00
 19247 9831 8D 4E 9B			sta PATTERN4.WIDTH+1
 19248
 19249 				; optimize OK (btm.inc), line = 83
 19250
 19251 9834 A9 1E			lda #$1E
 19252 9836 8D 4F 9B			sta PATTERN4.HEIGHT
 19253 9839 A9 00			lda #$00
 19254 983B 8D 50 9B			sta PATTERN4.HEIGHT+1
 19255
 19256 				; optimize OK (arkanoid_vbxe.pas), line = 158
 19257
 19258 983E A9 50			lda #$50
 19259 9840 8D 6B 9B			sta SCORE.HISCORE
 19260 9843 A9 C3			lda #$C3
 19261 9845 8D 6C 9B			sta SCORE.HISCORE+1
 19262 9848 A9 00			lda #$00
 19263 984A 8D 6D 9B			sta SCORE.HISCORE+2
 19264 984D 8D 6E 9B			sta SCORE.HISCORE+3
 19265
 19266 				; optimize OK (arkanoid_vbxe.pas), line = 161
 19267
 19268 9850 A9 01			lda #$01
 19269 9852 8D 96 9B			sta SOUND_ON
 19270
 19271 				; optimize OK (arkanoid_vbxe.pas), line = 162
 19272
 19273 9855 A9 03			lda #$03
 19274 9857 8D 7A 9B			sta LV
 19275 985A A9 00			lda #$00
 19276 985C 8D 7B 9B			sta LV+1
 19277
 19278 				; --- RepeatUntilProlog
 19279 985F			l_3850
 19280
 19281 				; optimize FAIL ('MOUSERESET', arkanoid_vbxe.pas), line = 166
 19282
 19283 985F 20 CB 24			jsr MOUSERESET
 19284
 19285 				; optimize OK (arkanoid_vbxe.pas), line = 170
 19286
 19287 9862 A9 01			lda #$01
 19288 9864 8D 39 A6			sta START_GAME.PLAYERS
 19289 9867 A9 00			lda #$00
 19290 9869 8D 3A A6			sta START_GAME.PLAYERS+1
 19291 986C 20 13 92			jsr START_GAME
 19292
 19293 				; optimize OK (arkanoid_vbxe.pas), line = 172
 19294
 19295 986F AD 6F 9B			lda SCORE.PL_NUMB
 19296 9872 C9 01			cmp #$01
 19297 9874 B0 E9			jcs l_3850
 19298
 19299 9876			@exit
 19300 					.ifdef @new
 19301 					lda <@VarData
 19302 					sta :ztmp
 19303 					lda >@VarData
 19304 					ldy #@VarDataSize-1
 19305 					jmp @FreeMem
 19306 					els
 19307 9876 60				rts						; ret
 19308 					eif
 19309 				.endl
 19310 9877			l_0010
 19311
 19312 				; optimize FAIL ('INIT_GAME', arkanoid_vbxe.pas), line = 180
 19313
 19314 9877 20 F6 94			jsr INIT_GAME
 19315
 19316 				; ------------------------------------------------------------
 19317
 19318 = 9A7F			adr.MOUS	= DATAORIGIN+$00A8	; [5] RECORD
 19319 987A			.var MOUS	= adr.MOUS .word
 19320 = 9A7F			MOUS.X	= DATAORIGIN+$00A8
 19321 = 9A81			MOUS.Y	= DATAORIGIN+$00AA
 19322 = 9A83			MOUS.FIRE	= DATAORIGIN+$00AC
 19323 = 5000			VBXE_OVRADR	= $5000
 19324 = 014A00			VBXE_DATA	= $14A00
 19325 = 0000			VRAM	= $00
 19326 = 0001			ERR1	= $01
 19327 = 0002			ERR2	= $02
 19328 = 0003			ERR3	= $03
 19329 = 0004			ERR4	= $04
 19330 = 000A			SCRMIN	= $0A
 19331 = 00D8			SCRMAX	= $D8
 19332 = 000C			SCRTOP	= $0C
 19333 = 00C8			SCRBOT	= $C8
 19334 = 0022			VAUS_W	= $22
 19335 = 0004			VAUS_H	= $04
 19336 = 00B8			VAUS_LINE	= $B8
 19337 = 00FF			EMP	= $FF
 19338 = 0005			BALLDIM	= $05
 19339 = 0003			BALLSPOT	= $03
 19340 = 001E			BALLDEV	= $1E
 19341 = 000A			SPEEDFLASH	= $0A
 19342 = 107C			adr.FLASH	= CODEORIGIN+$007C
 19343 987A			.var FLASH	= adr.FLASH .word
 19344 = 1087			adr.SCORE_WALL	= CODEORIGIN+$0087
 19345 987A			.var SCORE_WALL	= adr.SCORE_WALL .word
 19346 = 109D			adr.EMERG_DEV	= CODEORIGIN+$009D
 19347 987A			.var EMERG_DEV	= adr.EMERG_DEV .word
 19348 = 10A6			adr.COLORBLOCK	= CODEORIGIN+$00A6
 19349 987A			.var COLORBLOCK	= adr.COLORBLOCK .word
 19350 = 0001			GRAYDOWN	= $01
 19351 = 0001			STARTWALL	= $01
 19352 = 01F4			BALLSPEED	= $01F4
 19353 = 07D0			MAXSPEED	= $07D0
 19354 = 0064			MAXBRWHIT	= $64
 19355 = 0004			PATNUMBER	= $04
 19356 = 10B0			adr.POS_DIGIT	= CODEORIGIN+$00B0
 19357 987A			.var POS_DIGIT	= adr.POS_DIGIT .word
 19358 = 10B4			adr.DIGITS	= CODEORIGIN+$00B4
 19359 987A			.var DIGITS	= adr.DIGITS .word
 19360 = 10BF			adr.LEVEL	= CODEORIGIN+$00BF
 19361 987A			.var LEVEL	= adr.LEVEL .word
 19362 = 0258			SBDIR	= $0258
 19363 = 0003			DEFLEVEL	= $03
 19364 = 012C			LETTER_PROB	= $012C
 19365 = 03E8			LETTER_DROP	= $03E8
 19366 = 0008			LETTER_NUMB	= $08
 19367 = 0008			LETTER_FRM	= $08
 19368 = 0005			LETTER_SBF	= $05
 19369 = 10CB			adr.LETTER_DIS	= CODEORIGIN+$00CB
 19370 987A			.var LETTER_DIS	= adr.LETTER_DIS .word
 19371 = 00B0			FLUXLEVEL	= $B0
 19372 = 9A98			adr.BALLDATA	= DATAORIGIN+$00C1	; [8] RECORD
 19373 987A			.var BALLDATA	= adr.BALLDATA .word
 19374 = 9A98			BALLDATA.WIDTH	= DATAORIGIN+$00C1
 19375 = 9A9A			BALLDATA.HEIGHT	= DATAORIGIN+$00C3
 19376 = 9A9C			BALLDATA.OFS	= DATAORIGIN+$00C5
 19377 = 9AA0			adr.PLAYSCREEN	= DATAORIGIN+$00C9	; [8] RECORD
 19378 987A			.var PLAYSCREEN	= adr.PLAYSCREEN .word
 19379 = 9AA0			PLAYSCREEN.WIDTH	= DATAORIGIN+$00C9
 19380 = 9AA2			PLAYSCREEN.HEIGHT	= DATAORIGIN+$00CB
 19381 = 9AA4			PLAYSCREEN.OFS	= DATAORIGIN+$00CD
 19382 = 9AA8			adr.PLAYVAUS	= DATAORIGIN+$00D1	; [8] RECORD
 19383 987A			.var PLAYVAUS	= adr.PLAYVAUS .word
 19384 = 9AA8			PLAYVAUS.WIDTH	= DATAORIGIN+$00D1
 19385 = 9AAA			PLAYVAUS.HEIGHT	= DATAORIGIN+$00D3
 19386 = 9AAC			PLAYVAUS.OFS	= DATAORIGIN+$00D5
 19387 = 9AB0			adr.NORMAL	= DATAORIGIN+$00D9	; [8] RECORD
 19388 987A			.var NORMAL	= adr.NORMAL .word
 19389 = 9AB0			NORMAL.WIDTH	= DATAORIGIN+$00D9
 19390 = 9AB2			NORMAL.HEIGHT	= DATAORIGIN+$00DB
 19391 = 9AB4			NORMAL.OFS	= DATAORIGIN+$00DD
 19392 = 9AB8			adr.ENLARGED	= DATAORIGIN+$00E1	; [8] RECORD
 19393 987A			.var ENLARGED	= adr.ENLARGED .word
 19394 = 9AB8			ENLARGED.WIDTH	= DATAORIGIN+$00E1
 19395 = 9ABA			ENLARGED.HEIGHT	= DATAORIGIN+$00E3
 19396 = 9ABC			ENLARGED.OFS	= DATAORIGIN+$00E5
 19397 = 9AC0			adr.LASERS	= DATAORIGIN+$00E9	; [8] RECORD
 19398 987A			.var LASERS	= adr.LASERS .word
 19399 = 9AC0			LASERS.WIDTH	= DATAORIGIN+$00E9
 19400 = 9AC2			LASERS.HEIGHT	= DATAORIGIN+$00EB
 19401 = 9AC4			LASERS.OFS	= DATAORIGIN+$00ED
 19402 = 9AC8			adr.EXPLOSION	= DATAORIGIN+$00F1	; [8] RECORD
 19403 987A			.var EXPLOSION	= adr.EXPLOSION .word
 19404 = 9AC8			EXPLOSION.WIDTH	= DATAORIGIN+$00F1
 19405 = 9ACA			EXPLOSION.HEIGHT	= DATAORIGIN+$00F3
 19406 = 9ACC			EXPLOSION.OFS	= DATAORIGIN+$00F5
 19407 = 9AD0			adr.NEWVAUS	= DATAORIGIN+$00F9	; [8] RECORD
 19408 987A			.var NEWVAUS	= adr.NEWVAUS .word
 19409 = 9AD0			NEWVAUS.WIDTH	= DATAORIGIN+$00F9
 19410 = 9AD2			NEWVAUS.HEIGHT	= DATAORIGIN+$00FB
 19411 = 9AD4			NEWVAUS.OFS	= DATAORIGIN+$00FD
 19412 = 9AD8			adr.PRESENTS	= DATAORIGIN+$0101	; [8] RECORD
 19413 987A			.var PRESENTS	= adr.PRESENTS .word
 19414 = 9AD8			PRESENTS.WIDTH	= DATAORIGIN+$0101
 19415 = 9ADA			PRESENTS.HEIGHT	= DATAORIGIN+$0103
 19416 = 9ADC			PRESENTS.OFS	= DATAORIGIN+$0105
 19417 = 9AE0			adr.SOUNDFX	= DATAORIGIN+$0109	; [8] RECORD
 19418 987A			.var SOUNDFX	= adr.SOUNDFX .word
 19419 = 9AE0			SOUNDFX.WIDTH	= DATAORIGIN+$0109
 19420 = 9AE2			SOUNDFX.HEIGHT	= DATAORIGIN+$010B
 19421 = 9AE4			SOUNDFX.OFS	= DATAORIGIN+$010D
 19422 = 9AE8			adr.SHINEWALL	= DATAORIGIN+$0111	; [8] RECORD
 19423 987A			.var SHINEWALL	= adr.SHINEWALL .word
 19424 = 9AE8			SHINEWALL.WIDTH	= DATAORIGIN+$0111
 19425 = 9AEA			SHINEWALL.HEIGHT	= DATAORIGIN+$0113
 19426 = 9AEC			SHINEWALL.OFS	= DATAORIGIN+$0115
 19427 = 9AF0			adr.MINIVAUS	= DATAORIGIN+$0119	; [8] RECORD
 19428 987A			.var MINIVAUS	= adr.MINIVAUS .word
 19429 = 9AF0			MINIVAUS.WIDTH	= DATAORIGIN+$0119
 19430 = 9AF2			MINIVAUS.HEIGHT	= DATAORIGIN+$011B
 19431 = 9AF4			MINIVAUS.OFS	= DATAORIGIN+$011D
 19432 = 9AF8			adr.LEVELSEL	= DATAORIGIN+$0121	; [8] RECORD
 19433 987A			.var LEVELSEL	= adr.LEVELSEL .word
 19434 = 9AF8			LEVELSEL.WIDTH	= DATAORIGIN+$0121
 19435 = 9AFA			LEVELSEL.HEIGHT	= DATAORIGIN+$0123
 19436 = 9AFC			LEVELSEL.OFS	= DATAORIGIN+$0125
 19437 = 9B00			adr.LETTERS	= DATAORIGIN+$0129	; [8] RECORD
 19438 987A			.var LETTERS	= adr.LETTERS .word
 19439 = 9B00			LETTERS.WIDTH	= DATAORIGIN+$0129
 19440 = 9B02			LETTERS.HEIGHT	= DATAORIGIN+$012B
 19441 = 9B04			LETTERS.OFS	= DATAORIGIN+$012D
 19442 = 9B08			adr.SHOOTS	= DATAORIGIN+$0131	; [8] RECORD
 19443 987A			.var SHOOTS	= adr.SHOOTS .word
 19444 = 9B08			SHOOTS.WIDTH	= DATAORIGIN+$0131
 19445 = 9B0A			SHOOTS.HEIGHT	= DATAORIGIN+$0133
 19446 = 9B0C			SHOOTS.OFS	= DATAORIGIN+$0135
 19447 = 9B10			adr.FLUX	= DATAORIGIN+$0139	; [8] RECORD
 19448 987A			.var FLUX	= adr.FLUX .word
 19449 = 9B10			FLUX.WIDTH	= DATAORIGIN+$0139
 19450 = 9B12			FLUX.HEIGHT	= DATAORIGIN+$013B
 19451 = 9B14			FLUX.OFS	= DATAORIGIN+$013D
 19452 = 9B18			adr.VAUS	= DATAORIGIN+$0141	; [13] RECORD
 19453 987A			.var VAUS	= adr.VAUS .word
 19454 = 9B18			VAUS.X	= DATAORIGIN+$0141
 19455 = 9B19			VAUS.Y	= DATAORIGIN+$0142
 19456 = 9B1A			VAUS.OLDX	= DATAORIGIN+$0143
 19457 = 9B1C			VAUS.OLDY	= DATAORIGIN+$0145
 19458 = 9B1E			VAUS.OLDLEN	= DATAORIGIN+$0147
 19459 = 9B20			VAUS.WIDTH	= DATAORIGIN+$0149
 19460 = 9B21			VAUS.HEIGHT	= DATAORIGIN+$014A
 19461 = 9B22			VAUS.FLASH	= DATAORIGIN+$014B
 19462 = 9B23			VAUS.IFLASH	= DATAORIGIN+$014C
 19463 = 9B24			VAUS.LETTER	= DATAORIGIN+$014D
 19464 = 9B25			adr.PATTERN	= DATAORIGIN+$014E	; [8] RECORD
 19465 987A			.var PATTERN	= adr.PATTERN .word
 19466 = 9B25			PATTERN.WIDTH	= DATAORIGIN+$014E
 19467 = 9B27			PATTERN.HEIGHT	= DATAORIGIN+$0150
 19468 = 9B29			PATTERN.OFS	= DATAORIGIN+$0152
 19469 = 9B2D			adr.PATTERN0	= DATAORIGIN+$0156	; [8] RECORD
 19470 987A			.var PATTERN0	= adr.PATTERN0 .word
 19471 = 9B2D			PATTERN0.WIDTH	= DATAORIGIN+$0156
 19472 = 9B2F			PATTERN0.HEIGHT	= DATAORIGIN+$0158
 19473 = 9B31			PATTERN0.OFS	= DATAORIGIN+$015A
 19474 = 9B35			adr.PATTERN1	= DATAORIGIN+$015E	; [8] RECORD
 19475 987A			.var PATTERN1	= adr.PATTERN1 .word
 19476 = 9B35			PATTERN1.WIDTH	= DATAORIGIN+$015E
 19477 = 9B37			PATTERN1.HEIGHT	= DATAORIGIN+$0160
 19478 = 9B39			PATTERN1.OFS	= DATAORIGIN+$0162
 19479 = 9B3D			adr.PATTERN2	= DATAORIGIN+$0166	; [8] RECORD
 19480 987A			.var PATTERN2	= adr.PATTERN2 .word
 19481 = 9B3D			PATTERN2.WIDTH	= DATAORIGIN+$0166
 19482 = 9B3F			PATTERN2.HEIGHT	= DATAORIGIN+$0168
 19483 = 9B41			PATTERN2.OFS	= DATAORIGIN+$016A
 19484 = 9B45			adr.PATTERN3	= DATAORIGIN+$016E	; [8] RECORD
 19485 987A			.var PATTERN3	= adr.PATTERN3 .word
 19486 = 9B45			PATTERN3.WIDTH	= DATAORIGIN+$016E
 19487 = 9B47			PATTERN3.HEIGHT	= DATAORIGIN+$0170
 19488 = 9B49			PATTERN3.OFS	= DATAORIGIN+$0172
 19489 = 9B4D			adr.PATTERN4	= DATAORIGIN+$0176	; [8] RECORD
 19490 987A			.var PATTERN4	= adr.PATTERN4 .word
 19491 = 9B4D			PATTERN4.WIDTH	= DATAORIGIN+$0176
 19492 = 9B4F			PATTERN4.HEIGHT	= DATAORIGIN+$0178
 19493 = 9B51			PATTERN4.OFS	= DATAORIGIN+$017A
 19494 = 9B55			STATUS	= DATAORIGIN+$017E
 19495 = 9B56			SUCCESS	= DATAORIGIN+$017F
 19496 = 9B57			REMAIN_BLK	= DATAORIGIN+$0180
 19497 = 9B58			TOTALWALL	= DATAORIGIN+$0181
 19498 = 9B59			adr.SCORE	= DATAORIGIN+$0182	; [27] RECORD
 19499 987A			.var SCORE	= adr.SCORE .word
 19500 = 9B59			adr.SCORE.PLAYER	= [DATAORIGIN+$0182] .array [3] .dword
 19501 987A			.var SCORE.PLAYER	= adr.SCORE.PLAYER .word
 19502 = 9B65			adr.SCORE.WALL_N	= [DATAORIGIN+$018E] .array [3]
 19503 987A			.var SCORE.WALL_N	= adr.SCORE.WALL_N .word
 19504 = 9B68			adr.SCORE.LIVES	= [DATAORIGIN+$0191] .array [3]
 19505 987A			.var SCORE.LIVES	= adr.SCORE.LIVES .word
 19506 = 9B6B			SCORE.HISCORE	= DATAORIGIN+$0194
 19507 = 9B6F			SCORE.PL_NUMB	= DATAORIGIN+$0198
 19508 = 9B70			adr.SCORE.ROUNDSEL	= [DATAORIGIN+$0199] .array [3]
 19509 987A			.var SCORE.ROUNDSEL	= adr.SCORE.ROUNDSEL .word
 19510 = 9B73			SCORE.ABORTPLAY	= DATAORIGIN+$019C
 19511 = 9B74			CUR_PLAYER	= DATAORIGIN+$019D
 19512 = 9B75			adr.SHINEREC	= DATAORIGIN+$019E	; [5] RECORD
 19513 987A			.var SHINEREC	= adr.SHINEREC .word
 19514 = 9B75			SHINEREC.XB	= DATAORIGIN+$019E
 19515 = 9B76			SHINEREC.YB	= DATAORIGIN+$019F
 19516 = 9B77			SHINEREC.FRAME	= DATAORIGIN+$01A0
 19517 = 9B78			SHINEREC.BLOCK	= DATAORIGIN+$01A1
 19518 = 9B79			SHINEREC.ACTIVE	= DATAORIGIN+$01A2
 19519 = 9B7A			LV	= DATAORIGIN+$01A3
 19520 = 9B7C			TRAINER	= DATAORIGIN+$01A5
 19521 = 9B7D			adr.LETT	= DATAORIGIN+$01A6	; [17] RECORD
 19522 987A			.var LETT	= adr.LETT .word
 19523 = 9B7D			LETT.X	= DATAORIGIN+$01A6
 19524 = 9B7E			LETT.Y	= DATAORIGIN+$01A7
 19525 = 9B7F			LETT.TYP	= DATAORIGIN+$01A8
 19526 = 9B81			LETT.FRAME	= DATAORIGIN+$01AA
 19527 = 9B82			LETT.SUBFRAME	= DATAORIGIN+$01AB
 19528 = 9B83			LETT.ACTIVE	= DATAORIGIN+$01AC
 19529 = 9B84			LETT.INCOMING	= DATAORIGIN+$01AD
 19530 = 9B86			LETT.NEXTX	= DATAORIGIN+$01AF
 19531 = 9B88			LETT.NEXTY	= DATAORIGIN+$01B1
 19532 = 9B8A			LETT.NEXTTYPE	= DATAORIGIN+$01B3
 19533 = 9B8C			LETT.LAST	= DATAORIGIN+$01B5
 19534 = 9B8E			adr.FIRE	= DATAORIGIN+$01B7	; [5] RECORD
 19535 987A			.var FIRE	= adr.FIRE .word
 19536 = 9B8E			FIRE.X	= DATAORIGIN+$01B7
 19537 = 9B8F			FIRE.Y	= DATAORIGIN+$01B8
 19538 = 9B90			FIRE.SHOT	= DATAORIGIN+$01B9
 19539 = 9B91			FIRE.AVL	= DATAORIGIN+$01BA
 19540 = 9B92			FIRE.NW	= DATAORIGIN+$01BB
 19541 = 9B93			BALLS_IN_PLAY	= DATAORIGIN+$01BC
 19542 = 9B94			SCRFLUX	= DATAORIGIN+$01BD
 19543 = 9B95			SCRFLUXCNT	= DATAORIGIN+$01BE
 19544 = 9B96			SOUND_ON	= DATAORIGIN+$01BF
 19545 = 9B97			adr.DEF_PAL	= [DATAORIGIN+$01C0] .array [768]
 19546 987A			.var DEF_PAL	= adr.DEF_PAL .word
 19547 = D800			adr.WALL_P	= $D800
 19548 987A			.var WALL_P	= adr.WALL_P .word
 19549 = DB00			adr.WALL	= $DB00
 19550 987A			.var WALL	= adr.WALL .word
 19551 = DC00			adr.ALL_WALLS	= $DC00
 19552 987A			.var ALL_WALLS	= adr.ALL_WALLS .word
 19553 = 9E97			adr.TMP	= [DATAORIGIN+$04C0] .array [256]
 19554 987A			.var TMP	= adr.TMP .word
 19555 = 9F97			adr.ROW	= [DATAORIGIN+$05C0] .array [251] .word
 19556 987A			.var ROW	= adr.ROW .word
 19557 = A18D			adr.MODX	= [DATAORIGIN+$07B6] .array [320]
 19558 987A			.var MODX	= adr.MODX .word
 19559 = A2CD			adr.MODY	= [DATAORIGIN+$08F6] .array [200]
 19560 987A			.var MODY	= adr.MODY .word
 19561 = A395			adr.SCREEN	= [DATAORIGIN+$09BE] .array [1]
 19562 987A			.var SCREEN	= adr.SCREEN .word
 19563 987A			@exit
 19564
 19565 987A A2 00		@halt	ldx #$00
 19566 987C 9A				txs
 19567
 19568 					.ifdef MAIN.@DEFINES.ROMOFF
 19569 					inc portb
 19570 					.fi
 19571
 19572 987D A0 01			ldy #$01
 19573
 19574 987F 60				rts
 19575
 19576 				; ------------------------------------------------------------
 19577
 19578 9880			.local	@DEFINES
 19579 9880			ATARI
 19580 9880			CPU_6502
 19581 				.endl
 19582
 19583 9880			.local	@RESOURCE
 19584 				.endl
 19585
 19586 = 9880 7F 9A		MOUS
 19586 = 9882 7C 10		FLASH
 19586 = 9884 87 10		SCORE_WALL
 19586 = 9886 9D 10		EMERG_DEV
 19586 = 9888 A6 10		COLORBLOCK
 19586 = 988A B0 10		POS_DIGIT
 19586 = 988C B4 10		DIGITS
 19586 = 988E BF 10		LEVEL
 19586 = 9890 CB 10		LETTER_DIS
 19586 = 9892 98 9A		BALLDATA
 19586 = 9894 A0 9A		PLAYSCREEN
 19586 = 9896 A8 9A		PLAYVAUS
 19586 = 9898 B0 9A		NORMAL
 19586 = 989A B8 9A		ENLARGED
 19586 = 989C C0 9A		LASERS
 19586 = 989E C8 9A		EXPLOSION
 19586 = 98A0 D0 9A		NEWVAUS
 19586 = 98A2 D8 9A		PRESENTS
 19586 = 98A4 E0 9A		SOUNDFX
 19586 = 98A6 E8 9A		SHINEWALL
 19586 = 98A8 F0 9A		MINIVAUS
 19586 = 98AA F8 9A		LEVELSEL
 19586 = 98AC 00 9B		LETTERS
 19586 = 98AE 08 9B		SHOOTS
 19586 = 98B0 10 9B		FLUX
 19586 = 98B2 18 9B		VAUS
 19586 = 98B4 25 9B		PATTERN
 19586 = 98B6 2D 9B		PATTERN0
 19586 = 98B8 35 9B		PATTERN1
 19586 = 98BA 3D 9B		PATTERN2
 19586 = 98BC 45 9B		PATTERN3
 19586 = 98BE 4D 9B		PATTERN4
 19586 = 98C0 59 9B		SCORE
 19586 = 98C2 59 9B		SCORE.PLAYER
 19586 = 98C4 65 9B		SCORE.WALL_N
 19586 = 98C6 68 9B		SCORE.LIVES
 19586 = 98C8 70 9B		SCORE.ROUNDSEL
 19586 = 98CA 75 9B		SHINEREC
 19586 = 98CC 7D 9B		LETT
 19586 = 98CE 8E 9B		FIRE
 19586 = 98D0 97 9B		DEF_PAL
 19586 = 98D2 00 D8		WALL_P
 19586 = 98D4 00 DB		WALL
 19586 = 98D6 00 DC		ALL_WALLS
 19586 = 98D8 97 9E		TMP
 19586 = 98DA 97 9F		ROW
 19586 = 98DC 8D A1		MODX
 19586 = 98DE CD A2		MODY
 19586 = 98E0 95 A3		SCREEN
 19586 				.endl							; MAIN
 19587
 19588 				; ------------------------------------------------------------
 19589 				; ------------------------------------------------------------
 19590
 19591 				.macro	UNITINITIALIZATION
 19592 				
 19593 					.ifdef MAIN.SYSTEM.@UnitInit
 19594 					jsr MAIN.SYSTEM.@UnitInit
 19595 					.fi
 19596 				
 19597 					.ifdef MAIN.ATARI.@UnitInit
 19598 					jsr MAIN.ATARI.@UnitInit
 19599 					.fi
 19600 				
 19601 					.ifdef MAIN.CRT.@UnitInit
 19602 					jsr MAIN.CRT.@UnitInit
 19603 					.fi
 19604 				
 19605 					.ifdef MAIN.TYPES.@UnitInit
 19606 					jsr MAIN.TYPES.@UnitInit
 19607 					.fi
 19608 				
 19609 					.ifdef MAIN.GRAPH.@UnitInit
 19610 					jsr MAIN.GRAPH.@UnitInit
 19611 					.fi
 19612 				
 19613 					.ifdef MAIN.VBXE.@UnitInit
 19614 					jsr MAIN.VBXE.@UnitInit
 19615 					.fi
 19616 				.endm
 19617
 19618 				; ------------------------------------------------------------
 19619
 19620 					ift .SIZEOF(MAIN.SYSTEM) > 0
 19621 					.print 'SYSTEM: ',MAIN.SYSTEM,'..',MAIN.SYSTEM+.SIZEOF(MAIN.SYSTEM)-1
 19621 				SYSTEM: $1B9D..$24AB
 19622 					eif
 19623
 19624 					ift .SIZEOF(MAIN.ATARI) > 0
 19625 					.print 'ATARI: ',MAIN.ATARI,'..',MAIN.ATARI+.SIZEOF(MAIN.ATARI)-1
 19626 					eif
 19627
 19628 					ift .SIZEOF(MAIN.CRT) > 0
 19629 					.print 'CRT: ',MAIN.CRT,'..',MAIN.CRT+.SIZEOF(MAIN.CRT)-1
 19630 					eif
 19631
 19632 					ift .SIZEOF(MAIN.TYPES) > 0
 19633 					.print 'TYPES: ',MAIN.TYPES,'..',MAIN.TYPES+.SIZEOF(MAIN.TYPES)-1
 19634 					eif
 19635
 19636 					ift .SIZEOF(MAIN.GRAPH) > 0
 19637 					.print 'GRAPH: ',MAIN.GRAPH,'..',MAIN.GRAPH+.SIZEOF(MAIN.GRAPH)-1
 19637 				GRAPH: $24AC..$24AD
 19638 					eif
 19639
 19640 					ift .SIZEOF(MAIN.VBXE) > 0
 19641 					.print 'VBXE: ',MAIN.VBXE,'..',MAIN.VBXE+.SIZEOF(MAIN.VBXE)-1
 19641 				VBXE: $24AE..$24C7
 19642 					eif
 19643
 19644 				.nowarn	.print 'CODE: ',CODEORIGIN,'..',MAIN.@RESOURCE-1
 19644 				CODE: $1000..$987F
 19645
 19646 					ift .SIZEOF(MAIN.@RESOURCE)>0
 19647 				.nowarn	.print 'RESOURCE: ',MAIN.@RESOURCE,'..',MAIN.@RESOURCE+.SIZEOF(MAIN.@RESOURCE)-1
 19648 					eif
 19649
 19650 98E2			@end
 19651
 19652 				.nowarn	.print 'VARS: ',MAIN.@RESOURCE+.SIZEOF(MAIN.@RESOURCE),'..',@end-1
 19652 				VARS: $9880..$98E1
 19653
 19654 				; ------------------------------------------------------------
 19655
 19656 = 98E2				?adr = *
 19657 					ift (?adr < ?old_adr) && (?old_adr - ?adr < $120)
 19658 = 99D7				?adr = ?old_adr
 19659 					eif
 19660
 19661 					org ?adr
 19662 = 99D7				?old_adr = *
 19663
 19664 99D7			DATAORIGIN
 19665 99D7-9A38> 2D 0C 00 00 + .by  $2D $0C $00 $00 $00 $28 $00 $18  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 19666 99EF 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 19667 9A07 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 19668 9A1F 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $27 $00 $00
 19669 9A37 00 17		.by  $00 $17
 19670
 19671 = 0062			VARINITSIZE	= *-DATAORIGIN
 19672 = 0C65			VARDATASIZE	= 3173
 19673
 19674 = A63C			PROGRAMSTACK	= DATAORIGIN+VARDATASIZE
 19675
 19676 					.print 'DATA: ',DATAORIGIN,'..',PROGRAMSTACK
 19676 				DATA: $99D7..$A63C
 19677
 19678 					ert DATAORIGIN<@end,'DATA memory overlap'
 19679
 19680 02E0-02E1> 63 1B			run START
 19681
 19682 				; ------------------------------------------------------------
 19683
 19684 				.macro	STATICDATA
 19685 				.by  $0B $47 $61 $6D $65 $20 $50 $61  $75 $73 $65 $64 $03 $02 $02 $01  $01 $02 $02 $03 $03 $03 $03 $03
 19686 				.by  $03 $03 $02 $03 $28 $14 $14 $28  $50 $50 $A0 $A0 $40 $50 $50 $50  $28 $28 $A0 $A0 $18 $18 $0C $18
 19687 				.by  $30 $30 $60 $60 $C0 $C0 $C0 $C0  $18 $0C $C0 $C0 $00 $00 $00 $00  $00 $00 $AA $00 $00 $AA $00 $00
 19688 				.by  $00 $55 $AA $00 $AA $00 $00 $00  $AA $00 $AA $00 $AA $AA $00 $00  $AA $AA $AA $00 $55 $55 $55 $00
 19689 				.by  $55 $55 $FF $00 $55 $FF $55 $00  $55 $FF $FF $00 $FF $55 $55 $00  $FF $55 $FF $00 $FF $FF $55 $00
 19690 				.by  $FF $FF $FF $00 $FF $D4 $D3 $D2  $D1 $D0 $CF $CE $CD $CC $CB $00  $00 $0A $00 $14 $00 $1E $00 $28
 19691 				.by  $00 $32 $00 $64 $00 $C8 $00 $FA  $00 $F4 $01 $E8 $03 $00 $02 $13  $24 $35 $12 $23 $34 $45 $D4 $D3
 19692 				.by  $D2 $D1 $D0 $CF $CE $CD $CC $CB  $00 $3C $5D $80 $7D $60 $37 $67  $6A $4F $5F $61 $7F $6F $00 $00
 19693 				.by  $00 $E8 $03 $2C $01 $64 $00 $3C  $00 $23 $00 $00 $10 $14 $03 $12  $14 $14 $03
 19694 				.endm
 19695
 19696 					end
